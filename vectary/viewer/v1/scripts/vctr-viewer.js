/*!
 * Copyright (c) 2020 by Vectary. All rights reserved.
 * Rev 0d4e5962b0c3f604eefef7a69e1ad668618f36b3
 * @copyright
 */
var Vectary = (function (e) {
  var t = {};
  function n(i) {
    if (t[i]) return t[i].exports;
    var r = (t[i] = { i: i, l: !1, exports: {} });
    return e[i].call(r.exports, r, r.exports, n), (r.l = !0), r.exports;
  }
  return (
    (n.m = e),
    (n.c = t),
    (n.d = function (e, t, i) {
      n.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: i });
    }),
    (n.r = function (e) {
      'undefined' !== typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }),
        Object.defineProperty(e, '__esModule', { value: !0 });
    }),
    (n.t = function (e, t) {
      if ((1 & t && (e = n(e)), 8 & t)) return e;
      if (4 & t && 'object' === typeof e && e && e.__esModule) return e;
      var i = Object.create(null);
      if (
        (n.r(i),
        Object.defineProperty(i, 'default', { enumerable: !0, value: e }),
        2 & t && 'string' != typeof e)
      )
        for (var r in e)
          n.d(
            i,
            r,
            function (t) {
              return e[t];
            }.bind(null, r)
          );
      return i;
    }),
    (n.n = function (e) {
      var t =
        e && e.__esModule
          ? function t() {
              return e['default'];
            }
          : function t() {
              return e;
            };
      return n.d(t, 'a', t), t;
    }),
    (n.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }),
    (n.p = '/'),
    n((n.s = './src/viewer/scripts/index.ts'))
  );
})({
  '../../../node_modules/base64-js/index.js': function (e, t, n) {
    'use strict';
    (t.byteLength = l), (t.toByteArray = h), (t.fromByteArray = f);
    for (
      var i = [],
        r = [],
        a = 'undefined' !== typeof Uint8Array ? Uint8Array : Array,
        o = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
        s = 0,
        c = o.length;
      s < c;
      ++s
    )
      (i[s] = o[s]), (r[o.charCodeAt(s)] = s);
    function u(e) {
      var t = e.length;
      if (t % 4 > 0)
        throw new Error('Invalid string. Length must be a multiple of 4');
      var n = e.indexOf('=');
      -1 === n && (n = t);
      var i = n === t ? 0 : 4 - (n % 4);
      return [n, i];
    }
    function l(e) {
      var t = u(e),
        n = t[0],
        i = t[1];
      return (3 * (n + i)) / 4 - i;
    }
    function d(e, t, n) {
      return (3 * (t + n)) / 4 - n;
    }
    function h(e) {
      var t,
        n,
        i = u(e),
        o = i[0],
        s = i[1],
        c = new a(d(e, o, s)),
        l = 0,
        h = s > 0 ? o - 4 : o;
      for (n = 0; n < h; n += 4)
        (t =
          (r[e.charCodeAt(n)] << 18) |
          (r[e.charCodeAt(n + 1)] << 12) |
          (r[e.charCodeAt(n + 2)] << 6) |
          r[e.charCodeAt(n + 3)]),
          (c[l++] = (t >> 16) & 255),
          (c[l++] = (t >> 8) & 255),
          (c[l++] = 255 & t);
      return (
        2 === s &&
          ((t = (r[e.charCodeAt(n)] << 2) | (r[e.charCodeAt(n + 1)] >> 4)),
          (c[l++] = 255 & t)),
        1 === s &&
          ((t =
            (r[e.charCodeAt(n)] << 10) |
            (r[e.charCodeAt(n + 1)] << 4) |
            (r[e.charCodeAt(n + 2)] >> 2)),
          (c[l++] = (t >> 8) & 255),
          (c[l++] = 255 & t)),
        c
      );
    }
    function p(e) {
      return (
        i[(e >> 18) & 63] + i[(e >> 12) & 63] + i[(e >> 6) & 63] + i[63 & e]
      );
    }
    function m(e, t, n) {
      for (var i, r = [], a = t; a < n; a += 3)
        (i =
          ((e[a] << 16) & 16711680) +
          ((e[a + 1] << 8) & 65280) +
          (255 & e[a + 2])),
          r.push(p(i));
      return r.join('');
    }
    function f(e) {
      for (
        var t, n = e.length, r = n % 3, a = [], o = 16383, s = 0, c = n - r;
        s < c;
        s += o
      )
        a.push(m(e, s, s + o > c ? c : s + o));
      return (
        1 === r
          ? ((t = e[n - 1]), a.push(i[t >> 2] + i[(t << 4) & 63] + '=='))
          : 2 === r &&
            ((t = (e[n - 2] << 8) + e[n - 1]),
            a.push(i[t >> 10] + i[(t >> 4) & 63] + i[(t << 2) & 63] + '=')),
        a.join('')
      );
    }
    (r['-'.charCodeAt(0)] = 62), (r['_'.charCodeAt(0)] = 63);
  },
  '../../../node_modules/core-util-is/lib/util.js': function (e, t, n) {
    (function (e) {
      function n(e) {
        return Array.isArray ? Array.isArray(e) : '[object Array]' === _(e);
      }
      function i(e) {
        return 'boolean' === typeof e;
      }
      function r(e) {
        return null === e;
      }
      function a(e) {
        return null == e;
      }
      function o(e) {
        return 'number' === typeof e;
      }
      function s(e) {
        return 'string' === typeof e;
      }
      function c(e) {
        return 'symbol' === typeof e;
      }
      function u(e) {
        return void 0 === e;
      }
      function l(e) {
        return '[object RegExp]' === _(e);
      }
      function d(e) {
        return 'object' === typeof e && null !== e;
      }
      function h(e) {
        return '[object Date]' === _(e);
      }
      function p(e) {
        return '[object Error]' === _(e) || e instanceof Error;
      }
      function m(e) {
        return 'function' === typeof e;
      }
      function f(e) {
        return (
          null === e ||
          'boolean' === typeof e ||
          'number' === typeof e ||
          'string' === typeof e ||
          'symbol' === typeof e ||
          'undefined' === typeof e
        );
      }
      function _(e) {
        return Object.prototype.toString.call(e);
      }
      (t.isArray = n),
        (t.isBoolean = i),
        (t.isNull = r),
        (t.isNullOrUndefined = a),
        (t.isNumber = o),
        (t.isString = s),
        (t.isSymbol = c),
        (t.isUndefined = u),
        (t.isRegExp = l),
        (t.isObject = d),
        (t.isDate = h),
        (t.isError = p),
        (t.isFunction = m),
        (t.isPrimitive = f),
        (t.isBuffer = e.isBuffer);
    }.call(
      this,
      n('../../../node_modules/node-libs-browser/node_modules/buffer/index.js')
        .Buffer
    ));
  },
  '../../../node_modules/dijkstrajs/dijkstra.js': function (e, t, n) {
    'use strict';
    var i = {
      single_source_shortest_paths: function (e, t, n) {
        var r = {},
          a = {};
        a[t] = 0;
        var o,
          s,
          c,
          u,
          l,
          d,
          h,
          p,
          m,
          f = i.PriorityQueue.make();
        f.push(t, 0);
        while (!f.empty())
          for (c in ((o = f.pop()),
          (s = o.value),
          (u = o.cost),
          (l = e[s] || {}),
          l))
            l.hasOwnProperty(c) &&
              ((d = l[c]),
              (h = u + d),
              (p = a[c]),
              (m = 'undefined' === typeof a[c]),
              (m || p > h) && ((a[c] = h), f.push(c, h), (r[c] = s)));
        if ('undefined' !== typeof n && 'undefined' === typeof a[n]) {
          var _ = ['Could not find a path from ', t, ' to ', n, '.'].join('');
          throw new Error(_);
        }
        return r;
      },
      extract_shortest_path_from_predecessor_list: function (e, t) {
        var n = [],
          i = t;
        while (i) n.push(i), e[i], (i = e[i]);
        return n.reverse(), n;
      },
      find_path: function (e, t, n) {
        var r = i.single_source_shortest_paths(e, t, n);
        return i.extract_shortest_path_from_predecessor_list(r, n);
      },
      PriorityQueue: {
        make: function (e) {
          var t,
            n = i.PriorityQueue,
            r = {};
          for (t in ((e = e || {}), n)) n.hasOwnProperty(t) && (r[t] = n[t]);
          return (r.queue = []), (r.sorter = e.sorter || n.default_sorter), r;
        },
        default_sorter: function (e, t) {
          return e.cost - t.cost;
        },
        push: function (e, t) {
          var n = { value: e, cost: t };
          this.queue.push(n), this.queue.sort(this.sorter);
        },
        pop: function () {
          return this.queue.shift();
        },
        empty: function () {
          return 0 === this.queue.length;
        },
      },
    };
    1 && (e.exports = i);
  },
  '../../../node_modules/events/events.js': function (e, t, n) {
    'use strict';
    var i,
      r = 'object' === typeof Reflect ? Reflect : null,
      a =
        r && 'function' === typeof r.apply
          ? r.apply
          : function e(t, n, i) {
              return Function.prototype.apply.call(t, n, i);
            };
    function o(e) {
      console && console.warn && void 0;
    }
    i =
      r && 'function' === typeof r.ownKeys
        ? r.ownKeys
        : Object.getOwnPropertySymbols
        ? function e(t) {
            return Object.getOwnPropertyNames(t).concat(
              Object.getOwnPropertySymbols(t)
            );
          }
        : function e(t) {
            return Object.getOwnPropertyNames(t);
          };
    var s =
      Number.isNaN ||
      function e(t) {
        return t !== t;
      };
    function c() {
      c.init.call(this);
    }
    (e.exports = c),
      (e.exports.once = y),
      (c.EventEmitter = c),
      (c.prototype._events = void 0),
      (c.prototype._eventsCount = 0),
      (c.prototype._maxListeners = void 0);
    var u = 10;
    function l(e) {
      if ('function' !== typeof e)
        throw new TypeError(
          'The "listener" argument must be of type Function. Received type ' +
            typeof e
        );
    }
    function d(e) {
      return void 0 === e._maxListeners
        ? c.defaultMaxListeners
        : e._maxListeners;
    }
    function h(e, t, n, i) {
      var r, a, s;
      if (
        (l(n),
        (a = e._events),
        void 0 === a
          ? ((a = e._events = Object.create(null)), (e._eventsCount = 0))
          : (void 0 !== a.newListener &&
              (e.emit('newListener', t, n.listener ? n.listener : n),
              (a = e._events)),
            (s = a[t])),
        void 0 === s)
      )
        (s = a[t] = n), ++e._eventsCount;
      else if (
        ('function' === typeof s
          ? (s = a[t] = i ? [n, s] : [s, n])
          : i
          ? s.unshift(n)
          : s.push(n),
        (r = d(e)),
        r > 0 && s.length > r && !s.warned)
      ) {
        s.warned = !0;
        var c = new Error(
          'Possible EventEmitter memory leak detected. ' +
            s.length +
            ' ' +
            String(t) +
            ' listeners ' +
            'added. Use emitter.setMaxListeners() to ' +
            'increase limit'
        );
        (c.name = 'MaxListenersExceededWarning'),
          (c.emitter = e),
          (c.type = t),
          (c.count = s.length),
          o(c);
      }
      return e;
    }
    function p() {
      if (!this.fired)
        return (
          this.target.removeListener(this.type, this.wrapFn),
          (this.fired = !0),
          0 === arguments.length
            ? this.listener.call(this.target)
            : this.listener.apply(this.target, arguments)
        );
    }
    function m(e, t, n) {
      var i = { fired: !1, wrapFn: void 0, target: e, type: t, listener: n },
        r = p.bind(i);
      return (r.listener = n), (i.wrapFn = r), r;
    }
    function f(e, t, n) {
      var i = e._events;
      if (void 0 === i) return [];
      var r = i[t];
      return void 0 === r
        ? []
        : 'function' === typeof r
        ? n
          ? [r.listener || r]
          : [r]
        : n
        ? g(r)
        : M(r, r.length);
    }
    function _(e) {
      var t = this._events;
      if (void 0 !== t) {
        var n = t[e];
        if ('function' === typeof n) return 1;
        if (void 0 !== n) return n.length;
      }
      return 0;
    }
    function M(e, t) {
      for (var n = new Array(t), i = 0; i < t; ++i) n[i] = e[i];
      return n;
    }
    function v(e, t) {
      for (; t + 1 < e.length; t++) e[t] = e[t + 1];
      e.pop();
    }
    function g(e) {
      for (var t = new Array(e.length), n = 0; n < t.length; ++n)
        t[n] = e[n].listener || e[n];
      return t;
    }
    function y(e, t) {
      return new Promise(function (n, i) {
        function r() {
          void 0 !== a && e.removeListener('error', a),
            n([].slice.call(arguments));
        }
        var a;
        'error' !== t &&
          ((a = function n(a) {
            e.removeListener(t, r), i(a);
          }),
          e.once('error', a)),
          e.once(t, r);
      });
    }
    Object.defineProperty(c, 'defaultMaxListeners', {
      enumerable: !0,
      get: function () {
        return u;
      },
      set: function (e) {
        if ('number' !== typeof e || e < 0 || s(e))
          throw new RangeError(
            'The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' +
              e +
              '.'
          );
        u = e;
      },
    }),
      (c.init = function () {
        (void 0 !== this._events &&
          this._events !== Object.getPrototypeOf(this)._events) ||
          ((this._events = Object.create(null)), (this._eventsCount = 0)),
          (this._maxListeners = this._maxListeners || void 0);
      }),
      (c.prototype.setMaxListeners = function e(t) {
        if ('number' !== typeof t || t < 0 || s(t))
          throw new RangeError(
            'The value of "n" is out of range. It must be a non-negative number. Received ' +
              t +
              '.'
          );
        return (this._maxListeners = t), this;
      }),
      (c.prototype.getMaxListeners = function e() {
        return d(this);
      }),
      (c.prototype.emit = function e(t) {
        for (var n = [], i = 1; i < arguments.length; i++) n.push(arguments[i]);
        var r = 'error' === t,
          o = this._events;
        if (void 0 !== o) r = r && void 0 === o.error;
        else if (!r) return !1;
        if (r) {
          var s;
          if ((n.length > 0 && (s = n[0]), s instanceof Error)) throw s;
          var c = new Error(
            'Unhandled error.' + (s ? ' (' + s.message + ')' : '')
          );
          throw ((c.context = s), c);
        }
        var u = o[t];
        if (void 0 === u) return !1;
        if ('function' === typeof u) a(u, this, n);
        else {
          var l = u.length,
            d = M(u, l);
          for (i = 0; i < l; ++i) a(d[i], this, n);
        }
        return !0;
      }),
      (c.prototype.addListener = function e(t, n) {
        return h(this, t, n, !1);
      }),
      (c.prototype.on = c.prototype.addListener),
      (c.prototype.prependListener = function e(t, n) {
        return h(this, t, n, !0);
      }),
      (c.prototype.once = function e(t, n) {
        return l(n), this.on(t, m(this, t, n)), this;
      }),
      (c.prototype.prependOnceListener = function e(t, n) {
        return l(n), this.prependListener(t, m(this, t, n)), this;
      }),
      (c.prototype.removeListener = function e(t, n) {
        var i, r, a, o, s;
        if ((l(n), (r = this._events), void 0 === r)) return this;
        if (((i = r[t]), void 0 === i)) return this;
        if (i === n || i.listener === n)
          0 === --this._eventsCount
            ? (this._events = Object.create(null))
            : (delete r[t],
              r.removeListener &&
                this.emit('removeListener', t, i.listener || n));
        else if ('function' !== typeof i) {
          for (a = -1, o = i.length - 1; o >= 0; o--)
            if (i[o] === n || i[o].listener === n) {
              (s = i[o].listener), (a = o);
              break;
            }
          if (a < 0) return this;
          0 === a ? i.shift() : v(i, a),
            1 === i.length && (r[t] = i[0]),
            void 0 !== r.removeListener &&
              this.emit('removeListener', t, s || n);
        }
        return this;
      }),
      (c.prototype.off = c.prototype.removeListener),
      (c.prototype.removeAllListeners = function e(t) {
        var n, i, r;
        if (((i = this._events), void 0 === i)) return this;
        if (void 0 === i.removeListener)
          return (
            0 === arguments.length
              ? ((this._events = Object.create(null)), (this._eventsCount = 0))
              : void 0 !== i[t] &&
                (0 === --this._eventsCount
                  ? (this._events = Object.create(null))
                  : delete i[t]),
            this
          );
        if (0 === arguments.length) {
          var a,
            o = Object.keys(i);
          for (r = 0; r < o.length; ++r)
            (a = o[r]), 'removeListener' !== a && this.removeAllListeners(a);
          return (
            this.removeAllListeners('removeListener'),
            (this._events = Object.create(null)),
            (this._eventsCount = 0),
            this
          );
        }
        if (((n = i[t]), 'function' === typeof n)) this.removeListener(t, n);
        else if (void 0 !== n)
          for (r = n.length - 1; r >= 0; r--) this.removeListener(t, n[r]);
        return this;
      }),
      (c.prototype.listeners = function e(t) {
        return f(this, t, !0);
      }),
      (c.prototype.rawListeners = function e(t) {
        return f(this, t, !1);
      }),
      (c.listenerCount = function (e, t) {
        return 'function' === typeof e.listenerCount
          ? e.listenerCount(t)
          : _.call(e, t);
      }),
      (c.prototype.listenerCount = _),
      (c.prototype.eventNames = function e() {
        return this._eventsCount > 0 ? i(this._events) : [];
      });
  },
  '../../../node_modules/gsap/index.js': function (e, t, n) {
    'use strict';
    function i(e) {
      if (void 0 === e)
        throw new ReferenceError(
          "this hasn't been initialised - super() hasn't been called"
        );
      return e;
    }
    function r(e, t) {
      (e.prototype = Object.create(t.prototype)),
        (e.prototype.constructor = e),
        (e.__proto__ = t);
    }
    n.d(t, 'b', function () {
      return Ei;
    }),
      n.d(t, 'a', function () {
        return Ei;
      });
    var a,
      o,
      s,
      c,
      u,
      l,
      d,
      h,
      p = {
        autoSleep: 120,
        force3D: 'auto',
        nullTargetWarn: 1,
        units: { lineHeight: '' },
      },
      m = { duration: 0.5, overwrite: !1, delay: 0 },
      f = 1e8,
      _ = 1 / f,
      M = 2 * Math.PI,
      v = M / 4,
      g = 0,
      y = Math.sqrt,
      b = Math.cos,
      w = Math.sin,
      A = function e(t) {
        return 'string' === typeof t;
      },
      x = function e(t) {
        return 'function' === typeof t;
      },
      L = function e(t) {
        return 'number' === typeof t;
      },
      T = function e(t) {
        return 'undefined' === typeof t;
      },
      z = function e(t) {
        return 'object' === typeof t;
      },
      S = function e(t) {
        return !1 !== t;
      },
      O = function e() {
        return 'undefined' !== typeof window;
      },
      E = function e(t) {
        return x(t) || A(t);
      },
      k =
        ('function' === typeof ArrayBuffer && ArrayBuffer.isView) ||
        function () {},
      C = Array.isArray,
      D = /(?:-?\.?\d|\.)+/gi,
      N = /[-+=.]*\d+[.e\-+]*\d*[e\-\+]*\d*/g,
      P = /[-+=.]*\d+[.e-]*\d*[a-z%]*/g,
      j = /[-+=.]*\d+(?:\.|e-|e)*\d*/gi,
      Y = /[+-]=-?[\.\d]+/,
      R = /[#\-+.]*\b[a-z\d-=+%.]+/gi,
      B = {},
      W = {},
      I = function e(t) {
        return (W = pe(t, B)) && mn;
      },
      q = function e(t, n) {},
      H = function e(t, n) {
        return !n && void 0;
      },
      F = function e(t, n) {
        return (t && (B[t] = n) && W && (W[t] = n)) || B;
      },
      U = function e() {
        return 0;
      },
      X = {},
      V = [],
      G = {},
      J = {},
      Z = {},
      K = 30,
      Q = [],
      $ = '',
      ee = function e(t) {
        var n,
          i,
          r = t[0];
        if ((z(r) || x(r) || (t = [t]), !(n = (r._gsap || {}).harness))) {
          i = Q.length;
          while (i-- && !Q[i].targetTest(r));
          n = Q[i];
        }
        i = t.length;
        while (i--)
          (t[i] && (t[i]._gsap || (t[i]._gsap = new Pt(t[i], n)))) ||
            t.splice(i, 1);
        return t;
      },
      te = function e(t) {
        return t._gsap || ee(Xe(t))[0]._gsap;
      },
      ne = function e(t, n, i) {
        return (i = t[n]) && x(i)
          ? t[n]()
          : (T(i) && t.getAttribute && t.getAttribute(n)) || i;
      },
      ie = function e(t, n) {
        return (t = t.split(',')).forEach(n) || t;
      },
      re = function e(t) {
        return Math.round(1e5 * t) / 1e5 || 0;
      },
      ae = function e(t, n) {
        for (var i = n.length, r = 0; t.indexOf(n[r]) < 0 && ++r < i; );
        return r < i;
      },
      oe = function e(t, n, i) {
        var r,
          a = L(t[1]),
          o = (a ? 2 : 1) + (n < 2 ? 0 : 1),
          s = t[o];
        if ((a && (s.duration = t[1]), (s.parent = i), n)) {
          r = s;
          while (i && !('immediateRender' in r))
            (r = i.vars.defaults || {}), (i = S(i.vars.inherit) && i.parent);
          (s.immediateRender = S(r.immediateRender)),
            n < 2 ? (s.runBackwards = 1) : (s.startAt = t[o - 1]);
        }
        return s;
      },
      se = function e() {
        var t,
          n,
          i = V.length,
          r = V.slice(0);
        for (G = {}, V.length = 0, t = 0; t < i; t++)
          (n = r[t]),
            n && n._lazy && (n.render(n._lazy[0], n._lazy[1], !0)._lazy = 0);
      },
      ce = function e(t, n, i, r) {
        V.length && se(), t.render(n, i, r), V.length && se();
      },
      ue = function e(t) {
        var n = parseFloat(t);
        return (n || 0 === n) && (t + '').match(R).length < 2
          ? n
          : A(t)
          ? t.trim()
          : t;
      },
      le = function e(t) {
        return t;
      },
      de = function e(t, n) {
        for (var i in n) i in t || (t[i] = n[i]);
        return t;
      },
      he = function e(t, n) {
        for (var i in n)
          i in t || 'duration' === i || 'ease' === i || (t[i] = n[i]);
      },
      pe = function e(t, n) {
        for (var i in n) t[i] = n[i];
        return t;
      },
      me = function e(t, n) {
        for (var i in n) t[i] = z(n[i]) ? e(t[i] || (t[i] = {}), n[i]) : n[i];
        return t;
      },
      fe = function e(t, n) {
        var i,
          r = {};
        for (i in t) i in n || (r[i] = t[i]);
        return r;
      },
      _e = function e(t) {
        var n = t.parent || a,
          i = t.keyframes ? he : de;
        if (S(t.inherit))
          while (n) i(t, n.vars.defaults), (n = n.parent || n._dp);
        return t;
      },
      Me = function e(t, n) {
        var i = t.length,
          r = i === n.length;
        while (r && i-- && t[i] === n[i]);
        return i < 0;
      },
      ve = function e(t, n, i, r, a) {
        void 0 === i && (i = '_first'), void 0 === r && (r = '_last');
        var o,
          s = t[r];
        if (a) {
          o = n[a];
          while (s && s[a] > o) s = s._prev;
        }
        return (
          s
            ? ((n._next = s._next), (s._next = n))
            : ((n._next = t[i]), (t[i] = n)),
          n._next ? (n._next._prev = n) : (t[r] = n),
          (n._prev = s),
          (n.parent = n._dp = t),
          n
        );
      },
      ge = function e(t, n, i, r) {
        void 0 === i && (i = '_first'), void 0 === r && (r = '_last');
        var a = n._prev,
          o = n._next;
        a ? (a._next = o) : t[i] === n && (t[i] = o),
          o ? (o._prev = a) : t[r] === n && (t[r] = a),
          (n._next = n._prev = n.parent = null);
      },
      ye = function e(t, n) {
        t.parent && (!n || t.parent.autoRemoveChildren) && t.parent.remove(t),
          (t._act = 0);
      },
      be = function e(t, n) {
        if (t && (!n || n._end > t._dur || n._start < 0)) {
          var i = t;
          while (i) (i._dirty = 1), (i = i.parent);
        }
        return t;
      },
      we = function e(t) {
        var n = t.parent;
        while (n && n.parent) (n._dirty = 1), n.totalDuration(), (n = n.parent);
        return t;
      },
      Ae = function e(t) {
        return !t || (t._ts && e(t.parent));
      },
      xe = function e(t) {
        return t._repeat ? Le(t._tTime, (t = t.duration() + t._rDelay)) * t : 0;
      },
      Le = function e(t, n) {
        return (t /= n) && ~~t === t ? ~~t - 1 : ~~t;
      },
      Te = function e(t, n) {
        return (
          (t - n._start) * n._ts +
          (n._ts >= 0 ? 0 : n._dirty ? n.totalDuration() : n._tDur)
        );
      },
      ze = function e(t) {
        return (t._end = re(
          t._start + (t._tDur / Math.abs(t._ts || t._rts || _) || 0)
        ));
      },
      Se = function e(t, n) {
        var i = t._dp;
        return (
          i &&
            i.smoothChildTiming &&
            t._ts &&
            ((t._start = re(
              t._dp._time -
                (t._ts > 0
                  ? n / t._ts
                  : ((t._dirty ? t.totalDuration() : t._tDur) - n) / -t._ts)
            )),
            ze(t),
            i._dirty || be(i, t)),
          t
        );
      },
      Oe = function e(t, n) {
        var i;
        if (
          ((n._time || (n._initted && !n._dur)) &&
            ((i = Te(t.rawTime(), n)),
            (!n._dur || We(0, n.totalDuration(), i) - n._tTime > _) &&
              n.render(i, !0)),
          be(t, n)._dp && t._initted && t._time >= t._dur && t._ts)
        ) {
          if (t._dur < t.duration()) {
            i = t;
            while (i._dp)
              i.rawTime() >= 0 && i.totalTime(i._tTime), (i = i._dp);
          }
          t._zTime = -_;
        }
      },
      Ee = function e(t, n, i, r) {
        return (
          n.parent && ye(n),
          (n._start = re(i + n._delay)),
          (n._end = re(
            n._start + (n.totalDuration() / Math.abs(n.timeScale()) || 0)
          )),
          ve(t, n, '_first', '_last', t._sort ? '_start' : 0),
          (t._recent = n),
          r || Oe(t, n),
          t
        );
      },
      ke = function e(t, n) {
        return (
          (B.ScrollTrigger || q('scrollTrigger', n)) &&
          B.ScrollTrigger.create(n, t)
        );
      },
      Ce = function e(t, n, i, r) {
        return (
          Ht(t, n),
          t._initted
            ? !i &&
              t._pt &&
              ((t._dur && !1 !== t.vars.lazy) || (!t._dur && t.vars.lazy)) &&
              l !== yt.frame
              ? (V.push(t), (t._lazy = [n, r]), 1)
              : void 0
            : 1
        );
      },
      De = function e(t, n, i, r) {
        var a,
          o,
          s,
          c = t.ratio,
          u =
            n < 0 ||
            (!n && c && !t._start && t._zTime > _ && !t._dp._lock) ||
            ((t._ts < 0 || t._dp._ts < 0) &&
              'isFromStart' !== t.data &&
              'isStart' !== t.data)
              ? 0
              : 1,
          l = t._rDelay,
          d = 0;
        if (
          (l &&
            t._repeat &&
            ((d = We(0, t._tDur, n)),
            (o = Le(d, l)),
            (s = Le(t._tTime, l)),
            o !== s &&
              ((c = 1 - u),
              t.vars.repeatRefresh && t._initted && t.invalidate())),
          u !== c || r || t._zTime === _ || (!n && t._zTime))
        ) {
          if (!t._initted && Ce(t, n, r, i)) return;
          (s = t._zTime),
            (t._zTime = n || (i ? _ : 0)),
            i || (i = n && !s),
            (t.ratio = u),
            t._from && (u = 1 - u),
            (t._time = 0),
            (t._tTime = d),
            i || ct(t, 'onStart'),
            (a = t._pt);
          while (a) a.r(u, a.d), (a = a._next);
          t._startAt && n < 0 && t._startAt.render(n, !0, !0),
            t._onUpdate && !i && ct(t, 'onUpdate'),
            d && t._repeat && !i && t.parent && ct(t, 'onRepeat'),
            (n >= t._tDur || n < 0) &&
              t.ratio === u &&
              (u && ye(t, 1),
              i ||
                (ct(t, u ? 'onComplete' : 'onReverseComplete', !0),
                t._prom && t._prom()));
        } else t._zTime || (t._zTime = n);
      },
      Ne = function e(t, n, i) {
        var r;
        if (i > n) {
          r = t._first;
          while (r && r._start <= i) {
            if (!r._dur && 'isPause' === r.data && r._start > n) return r;
            r = r._next;
          }
        } else {
          r = t._last;
          while (r && r._start >= i) {
            if (!r._dur && 'isPause' === r.data && r._start < n) return r;
            r = r._prev;
          }
        }
      },
      Pe = function e(t, n, i, r) {
        var a = t._repeat,
          o = re(n) || 0,
          s = t._tTime / t._tDur;
        return (
          s && !r && (t._time *= o / t._dur),
          (t._dur = o),
          (t._tDur = a ? (a < 0 ? 1e10 : re(o * (a + 1) + t._rDelay * a)) : o),
          s && !r ? Se(t, (t._tTime = t._tDur * s)) : t.parent && ze(t),
          i || be(t.parent, t),
          t
        );
      },
      je = function e(t) {
        return t instanceof Yt ? be(t) : Pe(t, t._dur);
      },
      Ye = { _start: 0, endTime: U },
      Re = function e(t, n) {
        var i,
          r,
          a = t.labels,
          o = t._recent || Ye,
          s = t.duration() >= f ? o.endTime(!1) : t._dur;
        return A(n) && (isNaN(n) || n in a)
          ? ((i = n.charAt(0)),
            '<' === i || '>' === i
              ? ('<' === i ? o._start : o.endTime(o._repeat >= 0)) +
                (parseFloat(n.substr(1)) || 0)
              : ((i = n.indexOf('=')),
                i < 0
                  ? (n in a || (a[n] = s), a[n])
                  : ((r = +(n.charAt(i - 1) + n.substr(i + 1))),
                    i > 1 ? e(t, n.substr(0, i - 1)) + r : s + r)))
          : null == n
          ? s
          : +n;
      },
      Be = function e(t, n) {
        return t || 0 === t ? n(t) : n;
      },
      We = function e(t, n, i) {
        return i < t ? t : i > n ? n : i;
      },
      Ie = function e(t) {
        return (t = (t + '').substr((parseFloat(t) + '').length)) && isNaN(t)
          ? t
          : '';
      },
      qe = function e(t, n, i) {
        return Be(i, function (e) {
          return We(t, n, e);
        });
      },
      He = [].slice,
      Fe = function e(t, n) {
        return (
          t &&
          z(t) &&
          'length' in t &&
          ((!n && !t.length) || (t.length - 1 in t && z(t[0]))) &&
          !t.nodeType &&
          t !== o
        );
      },
      Ue = function e(t, n, i) {
        return (
          void 0 === i && (i = []),
          t.forEach(function (e) {
            var t;
            return (A(e) && !n) || Fe(e, 1)
              ? (t = i).push.apply(t, Xe(e))
              : i.push(e);
          }) || i
        );
      },
      Xe = function e(t, n) {
        return !A(t) || n || (!s && bt())
          ? C(t)
            ? Ue(t, n)
            : Fe(t)
            ? He.call(t, 0)
            : t
            ? [t]
            : []
          : He.call(c.querySelectorAll(t), 0);
      },
      Ve = function e(t) {
        return t.sort(function () {
          return 0.5 - Math.random();
        });
      },
      Ge = function e(t) {
        if (x(t)) return t;
        var n = z(t) ? t : { each: t },
          i = Et(n.ease),
          r = n.from || 0,
          a = parseFloat(n.base) || 0,
          o = {},
          s = r > 0 && r < 1,
          c = isNaN(r) || s,
          u = n.axis,
          l = r,
          d = r;
        return (
          A(r)
            ? (l = d = { center: 0.5, edges: 0.5, end: 1 }[r] || 0)
            : !s && c && ((l = r[0]), (d = r[1])),
          function (e, t, s) {
            var h,
              p,
              m,
              _,
              M,
              v,
              g,
              b,
              w,
              A = (s || n).length,
              x = o[A];
            if (!x) {
              if (((w = 'auto' === n.grid ? 0 : (n.grid || [1, f])[1]), !w)) {
                g = -f;
                while (g < (g = s[w++].getBoundingClientRect().left) && w < A);
                w--;
              }
              for (
                x = o[A] = [],
                  h = c ? Math.min(w, A) * l - 0.5 : r % w,
                  p = c ? (A * d) / w - 0.5 : (r / w) | 0,
                  g = 0,
                  b = f,
                  v = 0;
                v < A;
                v++
              )
                (m = (v % w) - h),
                  (_ = p - ((v / w) | 0)),
                  (x[v] = M = u
                    ? Math.abs('y' === u ? _ : m)
                    : y(m * m + _ * _)),
                  M > g && (g = M),
                  M < b && (b = M);
              'random' === r && Ve(x),
                (x.max = g - b),
                (x.min = b),
                (x.v = A =
                  (parseFloat(n.amount) ||
                    parseFloat(n.each) *
                      (w > A
                        ? A - 1
                        : u
                        ? 'y' === u
                          ? A / w
                          : w
                        : Math.max(w, A / w)) ||
                    0) * ('edges' === r ? -1 : 1)),
                (x.b = A < 0 ? a - A : a),
                (x.u = Ie(n.amount || n.each) || 0),
                (i = i && A < 0 ? St(i) : i);
            }
            return (
              (A = (x[e] - x.min) / x.max || 0),
              re(x.b + (i ? i(A) : A) * x.v) + x.u
            );
          }
        );
      },
      Je = function e(t) {
        var n = t < 1 ? Math.pow(10, (t + '').length - 2) : 1;
        return function (e) {
          return (
            Math.floor(Math.round(parseFloat(e) / t) * t * n) / n +
            (L(e) ? 0 : Ie(e))
          );
        };
      },
      Ze = function e(t, n) {
        var i,
          r,
          a = C(t);
        return (
          !a &&
            z(t) &&
            ((i = a = t.radius || f),
            t.values
              ? ((t = Xe(t.values)), (r = !L(t[0])) && (i *= i))
              : (t = Je(t.increment))),
          Be(
            n,
            a
              ? x(t)
                ? function (e) {
                    return (r = t(e)), Math.abs(r - e) <= i ? r : e;
                  }
                : function (e) {
                    var n,
                      a,
                      o = parseFloat(r ? e.x : e),
                      s = parseFloat(r ? e.y : 0),
                      c = f,
                      u = 0,
                      l = t.length;
                    while (l--)
                      r
                        ? ((n = t[l].x - o),
                          (a = t[l].y - s),
                          (n = n * n + a * a))
                        : (n = Math.abs(t[l] - o)),
                        n < c && ((c = n), (u = l));
                    return (
                      (u = !i || c <= i ? t[u] : e),
                      r || u === e || L(e) ? u : u + Ie(e)
                    );
                  }
              : Je(t)
          )
        );
      },
      Ke = function e(t, n, i, r) {
        return Be(C(t) ? !n : !0 === i ? !!(i = 0) : !r, function () {
          return C(t)
            ? t[~~(Math.random() * t.length)]
            : (i = i || 1e-5) &&
                (r = i < 1 ? Math.pow(10, (i + '').length - 2) : 1) &&
                Math.floor(
                  Math.round((t + Math.random() * (n - t)) / i) * i * r
                ) / r;
        });
      },
      Qe = function e() {
        for (var t = arguments.length, n = new Array(t), i = 0; i < t; i++)
          n[i] = arguments[i];
        return function (e) {
          return n.reduce(function (e, t) {
            return t(e);
          }, e);
        };
      },
      $e = function e(t, n) {
        return function (e) {
          return t(parseFloat(e)) + (n || Ie(e));
        };
      },
      et = function e(t, n, i) {
        return at(t, n, 0, 1, i);
      },
      tt = function e(t, n, i) {
        return Be(i, function (e) {
          return t[~~n(e)];
        });
      },
      nt = function e(t, n, i) {
        var r = n - t;
        return C(t)
          ? tt(t, e(0, t.length), n)
          : Be(i, function (e) {
              return ((r + ((e - t) % r)) % r) + t;
            });
      },
      it = function e(t, n, i) {
        var r = n - t,
          a = 2 * r;
        return C(t)
          ? tt(t, e(0, t.length - 1), n)
          : Be(i, function (e) {
              return (
                (e = (a + ((e - t) % a)) % a || 0), t + (e > r ? a - e : e)
              );
            });
      },
      rt = function e(t) {
        var n,
          i,
          r,
          a,
          o = 0,
          s = '';
        while (~(n = t.indexOf('random(', o)))
          (r = t.indexOf(')', n)),
            (a = '[' === t.charAt(n + 7)),
            (i = t.substr(n + 7, r - n - 7).match(a ? R : D)),
            (s +=
              t.substr(o, n - o) +
              Ke(a ? i : +i[0], a ? 0 : +i[1], +i[2] || 1e-5)),
            (o = r + 1);
        return s + t.substr(o, t.length - o);
      },
      at = function e(t, n, i, r, a) {
        var o = n - t,
          s = r - i;
        return Be(a, function (e) {
          return i + (((e - t) / o) * s || 0);
        });
      },
      ot = function e(t, n, i, r) {
        var a = isNaN(t + n)
          ? 0
          : function (e) {
              return (1 - e) * t + e * n;
            };
        if (!a) {
          var o,
            s,
            c,
            u,
            l,
            d = A(t),
            h = {};
          if ((!0 === i && (r = 1) && (i = null), d))
            (t = { p: t }), (n = { p: n });
          else if (C(t) && !C(n)) {
            for (c = [], u = t.length, l = u - 2, s = 1; s < u; s++)
              c.push(e(t[s - 1], t[s]));
            u--,
              (a = function e(t) {
                t *= u;
                var n = Math.min(l, ~~t);
                return c[n](t - n);
              }),
              (i = n);
          } else r || (t = pe(C(t) ? [] : {}, t));
          if (!c) {
            for (o in n) Wt.call(h, t, o, 'get', n[o]);
            a = function e(n) {
              return rn(n, h) || (d ? t.p : t);
            };
          }
        }
        return Be(i, a);
      },
      st = function e(t, n, i) {
        var r,
          a,
          o,
          s = t.labels,
          c = f;
        for (r in s)
          (a = s[r] - n),
            a < 0 === !!i && a && c > (a = Math.abs(a)) && ((o = r), (c = a));
        return o;
      },
      ct = function e(t, n, i) {
        var r,
          a,
          o = t.vars,
          s = o[n];
        if (s)
          return (
            (r = o[n + 'Params']),
            (a = o.callbackScope || t),
            i && V.length && se(),
            r ? s.apply(a, r) : s.call(a)
          );
      },
      ut = function e(t) {
        return ye(t), t.progress() < 1 && ct(t, 'onInterrupt'), t;
      },
      lt = function e(t) {
        t = (!t.name && t['default']) || t;
        var n = t.name,
          i = x(t),
          r =
            n && !i && t.init
              ? function () {
                  this._props = [];
                }
              : t,
          a = {
            init: U,
            render: rn,
            add: Wt,
            kill: on,
            modifier: an,
            rawVars: 0,
          },
          o = {
            targetTest: 0,
            get: 0,
            getSetter: $t,
            aliases: {},
            register: 0,
          };
        if ((bt(), t !== r)) {
          if (J[n]) return;
          de(r, de(fe(t, a), o)),
            pe(r.prototype, pe(a, fe(t, o))),
            (J[(r.prop = n)] = r),
            t.targetTest && (Q.push(r), (X[n] = 1)),
            (n =
              ('css' === n ? 'CSS' : n.charAt(0).toUpperCase() + n.substr(1)) +
              'Plugin');
        }
        F(n, r), t.register && t.register(mn, r, un);
      },
      dt = 255,
      ht = {
        aqua: [0, dt, dt],
        lime: [0, dt, 0],
        silver: [192, 192, 192],
        black: [0, 0, 0],
        maroon: [128, 0, 0],
        teal: [0, 128, 128],
        blue: [0, 0, dt],
        navy: [0, 0, 128],
        white: [dt, dt, dt],
        olive: [128, 128, 0],
        yellow: [dt, dt, 0],
        orange: [dt, 165, 0],
        gray: [128, 128, 128],
        purple: [128, 0, 128],
        green: [0, 128, 0],
        red: [dt, 0, 0],
        pink: [dt, 192, 203],
        cyan: [0, dt, dt],
        transparent: [dt, dt, dt, 0],
      },
      pt = function e(t, n, i) {
        return (
          (t = t < 0 ? t + 1 : t > 1 ? t - 1 : t),
          ((6 * t < 1
            ? n + (i - n) * t * 6
            : t < 0.5
            ? i
            : 3 * t < 2
            ? n + (i - n) * (2 / 3 - t) * 6
            : n) *
            dt +
            0.5) |
            0
        );
      },
      mt = function e(t, n, i) {
        var r,
          a,
          o,
          s,
          c,
          u,
          l,
          d,
          h,
          p,
          m = t ? (L(t) ? [t >> 16, (t >> 8) & dt, t & dt] : 0) : ht.black;
        if (!m) {
          if ((',' === t.substr(-1) && (t = t.substr(0, t.length - 1)), ht[t]))
            m = ht[t];
          else if ('#' === t.charAt(0))
            4 === t.length &&
              ((r = t.charAt(1)),
              (a = t.charAt(2)),
              (o = t.charAt(3)),
              (t = '#' + r + r + a + a + o + o)),
              (t = parseInt(t.substr(1), 16)),
              (m = [t >> 16, (t >> 8) & dt, t & dt]);
          else if ('hsl' === t.substr(0, 3))
            if (((m = p = t.match(D)), n)) {
              if (~t.indexOf('='))
                return (m = t.match(N)), i && m.length < 4 && (m[3] = 1), m;
            } else
              (s = (+m[0] % 360) / 360),
                (c = +m[1] / 100),
                (u = +m[2] / 100),
                (a = u <= 0.5 ? u * (c + 1) : u + c - u * c),
                (r = 2 * u - a),
                m.length > 3 && (m[3] *= 1),
                (m[0] = pt(s + 1 / 3, r, a)),
                (m[1] = pt(s, r, a)),
                (m[2] = pt(s - 1 / 3, r, a));
          else m = t.match(D) || ht.transparent;
          m = m.map(Number);
        }
        return (
          n &&
            !p &&
            ((r = m[0] / dt),
            (a = m[1] / dt),
            (o = m[2] / dt),
            (l = Math.max(r, a, o)),
            (d = Math.min(r, a, o)),
            (u = (l + d) / 2),
            l === d
              ? (s = c = 0)
              : ((h = l - d),
                (c = u > 0.5 ? h / (2 - l - d) : h / (l + d)),
                (s =
                  l === r
                    ? (a - o) / h + (a < o ? 6 : 0)
                    : l === a
                    ? (o - r) / h + 2
                    : (r - a) / h + 4),
                (s *= 60)),
            (m[0] = ~~(s + 0.5)),
            (m[1] = ~~(100 * c + 0.5)),
            (m[2] = ~~(100 * u + 0.5))),
          i && m.length < 4 && (m[3] = 1),
          m
        );
      },
      ft = function e(t) {
        var n = [],
          i = [],
          r = -1;
        return (
          t.split(Mt).forEach(function (e) {
            var t = e.match(P) || [];
            n.push.apply(n, t), i.push((r += t.length + 1));
          }),
          (n.c = i),
          n
        );
      },
      _t = function e(t, n, i) {
        var r,
          a,
          o,
          s,
          c = '',
          u = (t + c).match(Mt),
          l = n ? 'hsla(' : 'rgba(',
          d = 0;
        if (!u) return t;
        if (
          ((u = u.map(function (e) {
            return (
              (e = mt(e, n, 1)) &&
              l +
                (n
                  ? e[0] + ',' + e[1] + '%,' + e[2] + '%,' + e[3]
                  : e.join(',')) +
                ')'
            );
          })),
          i && ((o = ft(t)), (r = i.c), r.join(c) !== o.c.join(c)))
        )
          for (a = t.replace(Mt, '1').split(P), s = a.length - 1; d < s; d++)
            c +=
              a[d] +
              (~r.indexOf(d)
                ? u.shift() || l + '0,0,0,0)'
                : (o.length ? o : u.length ? u : i).shift());
        if (!a)
          for (a = t.split(Mt), s = a.length - 1; d < s; d++) c += a[d] + u[d];
        return c + a[s];
      },
      Mt = (function () {
        var e,
          t =
            '(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b';
        for (e in ht) t += '|' + e + '\\b';
        return new RegExp(t + ')', 'gi');
      })(),
      vt = /hsl[a]?\(/,
      gt = function e(t) {
        var n,
          i = t.join(' ');
        if (((Mt.lastIndex = 0), Mt.test(i)))
          return (
            (n = vt.test(i)),
            (t[1] = _t(t[1], n)),
            (t[0] = _t(t[0], n, ft(t[1]))),
            !0
          );
      },
      yt = (function () {
        var e,
          t,
          n,
          i,
          r,
          a,
          l = Date.now,
          d = 500,
          p = 33,
          m = l(),
          f = m,
          M = 1e3 / 240,
          v = M,
          g = [],
          y = function n(o) {
            var s,
              c,
              u,
              h,
              _ = l() - f,
              y = !0 === o;
            if (
              (_ > d && (m += _ - p),
              (f += _),
              (u = f - m),
              (s = u - v),
              (s > 0 || y) &&
                ((h = ++i.frame),
                (r = u - 1e3 * i.time),
                (i.time = u /= 1e3),
                (v += s + (s >= M ? 4 : M - s)),
                (c = 1)),
              y || (e = t(n)),
              c)
            )
              for (a = 0; a < g.length; a++) g[a](u, r, h, o);
          };
        return (
          (i = {
            time: 0,
            frame: 0,
            tick: function e() {
              y(!0);
            },
            deltaRatio: function e(t) {
              return r / (1e3 / (t || 60));
            },
            wake: function r() {
              u &&
                (!s &&
                  O() &&
                  ((o = s = window),
                  (c = o.document || {}),
                  (B.gsap = mn),
                  (o.gsapVersions || (o.gsapVersions = [])).push(mn.version),
                  I(W || o.GreenSockGlobals || (!o.gsap && o) || {}),
                  (n = o.requestAnimationFrame)),
                e && i.sleep(),
                (t =
                  n ||
                  function (e) {
                    return setTimeout(e, (v - 1e3 * i.time + 1) | 0);
                  }),
                (h = 1),
                y(2));
            },
            sleep: function i() {
              (n ? o.cancelAnimationFrame : clearTimeout)(e), (h = 0), (t = U);
            },
            lagSmoothing: function e(t, n) {
              (d = t || 1 / _), (p = Math.min(n, d, 0));
            },
            fps: function e(t) {
              (M = 1e3 / (t || 240)), (v = 1e3 * i.time + M);
            },
            add: function e(t) {
              g.indexOf(t) < 0 && g.push(t), bt();
            },
            remove: function e(t) {
              var n;
              ~(n = g.indexOf(t)) && g.splice(n, 1) && a >= n && a--;
            },
            _listeners: g,
          }),
          i
        );
      })(),
      bt = function e() {
        return !h && yt.wake();
      },
      wt = {},
      At = /^[\d.\-M][\d.\-,\s]/,
      xt = /["']/g,
      Lt = function e(t) {
        for (
          var n,
            i,
            r,
            a = {},
            o = t.substr(1, t.length - 3).split(':'),
            s = o[0],
            c = 1,
            u = o.length;
          c < u;
          c++
        )
          (i = o[c]),
            (n = c !== u - 1 ? i.lastIndexOf(',') : i.length),
            (r = i.substr(0, n)),
            (a[s] = isNaN(r) ? r.replace(xt, '').trim() : +r),
            (s = i.substr(n + 1).trim());
        return a;
      },
      Tt = function e(t) {
        var n = t.indexOf('(') + 1,
          i = t.indexOf(')'),
          r = t.indexOf('(', n);
        return t.substring(n, ~r && r < i ? t.indexOf(')', i + 1) : i);
      },
      zt = function e(t) {
        var n = (t + '').split('('),
          i = wt[n[0]];
        return i && n.length > 1 && i.config
          ? i.config.apply(
              null,
              ~t.indexOf('{') ? [Lt(n[1])] : Tt(t).split(',').map(ue)
            )
          : wt._CE && At.test(t)
          ? wt._CE('', t)
          : i;
      },
      St = function e(t) {
        return function (e) {
          return 1 - t(1 - e);
        };
      },
      Ot = function e(t, n) {
        var i,
          r = t._first;
        while (r)
          r instanceof Yt
            ? e(r, n)
            : !r.vars.yoyoEase ||
              (r._yoyo && r._repeat) ||
              r._yoyo === n ||
              (r.timeline
                ? e(r.timeline, n)
                : ((i = r._ease),
                  (r._ease = r._yEase),
                  (r._yEase = i),
                  (r._yoyo = n))),
            (r = r._next);
      },
      Et = function e(t, n) {
        return (t && (x(t) ? t : wt[t] || zt(t))) || n;
      },
      kt = function e(t, n, i, r) {
        void 0 === i &&
          (i = function e(t) {
            return 1 - n(1 - t);
          }),
          void 0 === r &&
            (r = function e(t) {
              return t < 0.5 ? n(2 * t) / 2 : 1 - n(2 * (1 - t)) / 2;
            });
        var a,
          o = { easeIn: n, easeOut: i, easeInOut: r };
        return (
          ie(t, function (e) {
            for (var t in ((wt[e] = B[e] = o),
            (wt[(a = e.toLowerCase())] = i),
            o))
              wt[
                a +
                  ('easeIn' === t ? '.in' : 'easeOut' === t ? '.out' : '.inOut')
              ] = wt[e + '.' + t] = o[t];
          }),
          o
        );
      },
      Ct = function e(t) {
        return function (e) {
          return e < 0.5 ? (1 - t(1 - 2 * e)) / 2 : 0.5 + t(2 * (e - 0.5)) / 2;
        };
      },
      Dt = function e(t, n, i) {
        var r = n >= 1 ? n : 1,
          a = (i || (t ? 0.3 : 0.45)) / (n < 1 ? n : 1),
          o = (a / M) * (Math.asin(1 / r) || 0),
          s = function e(t) {
            return 1 === t ? 1 : r * Math.pow(2, -10 * t) * w((t - o) * a) + 1;
          },
          c =
            'out' === t
              ? s
              : 'in' === t
              ? function (e) {
                  return 1 - s(1 - e);
                }
              : Ct(s);
        return (
          (a = M / a),
          (c.config = function (n, i) {
            return e(t, n, i);
          }),
          c
        );
      },
      Nt = function e(t, n) {
        void 0 === n && (n = 1.70158);
        var i = function e(t) {
            return t ? --t * t * ((n + 1) * t + n) + 1 : 0;
          },
          r =
            'out' === t
              ? i
              : 'in' === t
              ? function (e) {
                  return 1 - i(1 - e);
                }
              : Ct(i);
        return (
          (r.config = function (n) {
            return e(t, n);
          }),
          r
        );
      };
    ie('Linear,Quad,Cubic,Quart,Quint,Strong', function (e, t) {
      var n = t < 5 ? t + 1 : t;
      kt(
        e + ',Power' + (n - 1),
        t
          ? function (e) {
              return Math.pow(e, n);
            }
          : function (e) {
              return e;
            },
        function (e) {
          return 1 - Math.pow(1 - e, n);
        },
        function (e) {
          return e < 0.5
            ? Math.pow(2 * e, n) / 2
            : 1 - Math.pow(2 * (1 - e), n) / 2;
        }
      );
    }),
      (wt.Linear.easeNone = wt.none = wt.Linear.easeIn),
      kt('Elastic', Dt('in'), Dt('out'), Dt()),
      (function (e, t) {
        var n = 1 / t,
          i = 2 * n,
          r = 2.5 * n,
          a = function a(o) {
            return o < n
              ? e * o * o
              : o < i
              ? e * Math.pow(o - 1.5 / t, 2) + 0.75
              : o < r
              ? e * (o -= 2.25 / t) * o + 0.9375
              : e * Math.pow(o - 2.625 / t, 2) + 0.984375;
          };
        kt(
          'Bounce',
          function (e) {
            return 1 - a(1 - e);
          },
          a
        );
      })(7.5625, 2.75),
      kt('Expo', function (e) {
        return e ? Math.pow(2, 10 * (e - 1)) : 0;
      }),
      kt('Circ', function (e) {
        return -(y(1 - e * e) - 1);
      }),
      kt('Sine', function (e) {
        return 1 === e ? 1 : -b(e * v) + 1;
      }),
      kt('Back', Nt('in'), Nt('out'), Nt()),
      (wt.SteppedEase = wt.steps = B.SteppedEase = {
        config: function e(t, n) {
          void 0 === t && (t = 1);
          var i = 1 / t,
            r = t + (n ? 0 : 1),
            a = n ? 1 : 0,
            o = 1 - _;
          return function (e) {
            return (((r * We(0, o, e)) | 0) + a) * i;
          };
        },
      }),
      (m.ease = wt['quad.out']),
      ie(
        'onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt',
        function (e) {
          return ($ += e + ',' + e + 'Params,');
        }
      );
    var Pt = function e(t, n) {
        (this.id = g++),
          (t._gsap = this),
          (this.target = t),
          (this.harness = n),
          (this.get = n ? n.get : ne),
          (this.set = n ? n.getSetter : $t);
      },
      jt = (function () {
        function e(e, t) {
          var n = e.parent || a;
          (this.vars = e),
            (this._delay = +e.delay || 0),
            (this._repeat = e.repeat || 0) &&
              ((this._rDelay = e.repeatDelay || 0),
              (this._yoyo = !!e.yoyo || !!e.yoyoEase)),
            (this._ts = 1),
            Pe(this, +e.duration, 1, 1),
            (this.data = e.data),
            h || yt.wake(),
            n && Ee(n, this, t || 0 === t ? t : n._time, 1),
            e.reversed && this.reverse(),
            e.paused && this.paused(!0);
        }
        var t = e.prototype;
        return (
          (t.delay = function e(t) {
            return t || 0 === t
              ? (this.parent &&
                  this.parent.smoothChildTiming &&
                  this.startTime(this._start + t - this._delay),
                (this._delay = t),
                this)
              : this._delay;
          }),
          (t.duration = function e(t) {
            return arguments.length
              ? this.totalDuration(
                  this._repeat > 0 ? t + (t + this._rDelay) * this._repeat : t
                )
              : this.totalDuration() && this._dur;
          }),
          (t.totalDuration = function e(t) {
            return arguments.length
              ? ((this._dirty = 0),
                Pe(
                  this,
                  this._repeat < 0
                    ? t
                    : (t - this._repeat * this._rDelay) / (this._repeat + 1)
                ))
              : this._tDur;
          }),
          (t.totalTime = function e(t, n) {
            if ((bt(), !arguments.length)) return this._tTime;
            var i = this._dp;
            if (i && i.smoothChildTiming && this._ts) {
              Se(this, t);
              while (i.parent)
                i.parent._time !==
                  i._start +
                    (i._ts >= 0
                      ? i._tTime / i._ts
                      : (i.totalDuration() - i._tTime) / -i._ts) &&
                  i.totalTime(i._tTime, !0),
                  (i = i.parent);
              !this.parent &&
                this._dp.autoRemoveChildren &&
                ((this._ts > 0 && t < this._tDur) ||
                  (this._ts < 0 && t > 0) ||
                  (!this._tDur && !t)) &&
                Ee(this._dp, this, this._start - this._delay);
            }
            return (
              (this._tTime !== t ||
                (!this._dur && !n) ||
                (this._initted && Math.abs(this._zTime) === _) ||
                (!t && !this._initted && (this.add || this._ptLookup))) &&
                (this._ts || (this._pTime = t), ce(this, t, n)),
              this
            );
          }),
          (t.time = function e(t, n) {
            return arguments.length
              ? this.totalTime(
                  Math.min(this.totalDuration(), t + xe(this)) % this._dur ||
                    (t ? this._dur : 0),
                  n
                )
              : this._time;
          }),
          (t.totalProgress = function e(t, n) {
            return arguments.length
              ? this.totalTime(this.totalDuration() * t, n)
              : this.totalDuration()
              ? Math.min(1, this._tTime / this._tDur)
              : this.ratio;
          }),
          (t.progress = function e(t, n) {
            return arguments.length
              ? this.totalTime(
                  this.duration() *
                    (!this._yoyo || 1 & this.iteration() ? t : 1 - t) +
                    xe(this),
                  n
                )
              : this.duration()
              ? Math.min(1, this._time / this._dur)
              : this.ratio;
          }),
          (t.iteration = function e(t, n) {
            var i = this.duration() + this._rDelay;
            return arguments.length
              ? this.totalTime(this._time + (t - 1) * i, n)
              : this._repeat
              ? Le(this._tTime, i) + 1
              : 1;
          }),
          (t.timeScale = function e(t) {
            if (!arguments.length) return this._rts === -_ ? 0 : this._rts;
            if (this._rts === t) return this;
            var n =
              this.parent && this._ts
                ? Te(this.parent._time, this)
                : this._tTime;
            return (
              (this._rts = +t || 0),
              (this._ts = this._ps || t === -_ ? 0 : this._rts),
              we(this.totalTime(We(-this._delay, this._tDur, n), !0))
            );
          }),
          (t.paused = function e(t) {
            return arguments.length
              ? (this._ps !== t &&
                  ((this._ps = t),
                  t
                    ? ((this._pTime =
                        this._tTime || Math.max(-this._delay, this.rawTime())),
                      (this._ts = this._act = 0))
                    : (bt(),
                      (this._ts = this._rts),
                      this.totalTime(
                        this.parent && !this.parent.smoothChildTiming
                          ? this.rawTime()
                          : this._tTime || this._pTime,
                        1 === this.progress() &&
                          (this._tTime -= _) &&
                          Math.abs(this._zTime) !== _
                      ))),
                this)
              : this._ps;
          }),
          (t.startTime = function e(t) {
            if (arguments.length) {
              this._start = t;
              var n = this.parent || this._dp;
              return (
                n && (n._sort || !this.parent) && Ee(n, this, t - this._delay),
                this
              );
            }
            return this._start;
          }),
          (t.endTime = function e(t) {
            return (
              this._start +
              (S(t) ? this.totalDuration() : this.duration()) /
                Math.abs(this._ts)
            );
          }),
          (t.rawTime = function e(t) {
            var n = this.parent || this._dp;
            return n
              ? t &&
                (!this._ts ||
                  (this._repeat && this._time && this.totalProgress() < 1))
                ? this._tTime % (this._dur + this._rDelay)
                : this._ts
                ? Te(n.rawTime(t), this)
                : this._tTime
              : this._tTime;
          }),
          (t.globalTime = function e(t) {
            var n = this,
              i = arguments.length ? t : n.rawTime();
            while (n) (i = n._start + i / (n._ts || 1)), (n = n._dp);
            return i;
          }),
          (t.repeat = function e(t) {
            return arguments.length
              ? ((this._repeat = t), je(this))
              : this._repeat;
          }),
          (t.repeatDelay = function e(t) {
            return arguments.length
              ? ((this._rDelay = t), je(this))
              : this._rDelay;
          }),
          (t.yoyo = function e(t) {
            return arguments.length ? ((this._yoyo = t), this) : this._yoyo;
          }),
          (t.seek = function e(t, n) {
            return this.totalTime(Re(this, t), S(n));
          }),
          (t.restart = function e(t, n) {
            return this.play().totalTime(t ? -this._delay : 0, S(n));
          }),
          (t.play = function e(t, n) {
            return null != t && this.seek(t, n), this.reversed(!1).paused(!1);
          }),
          (t.reverse = function e(t, n) {
            return (
              null != t && this.seek(t || this.totalDuration(), n),
              this.reversed(!0).paused(!1)
            );
          }),
          (t.pause = function e(t, n) {
            return null != t && this.seek(t, n), this.paused(!0);
          }),
          (t.resume = function e() {
            return this.paused(!1);
          }),
          (t.reversed = function e(t) {
            return arguments.length
              ? (!!t !== this.reversed() &&
                  this.timeScale(-this._rts || (t ? -_ : 0)),
                this)
              : this._rts < 0;
          }),
          (t.invalidate = function e() {
            return (this._initted = 0), (this._zTime = -_), this;
          }),
          (t.isActive = function e() {
            var t,
              n = this.parent || this._dp,
              i = this._start;
            return !(
              n &&
              !(
                this._ts &&
                this._initted &&
                n.isActive() &&
                (t = n.rawTime(!0)) >= i &&
                t < this.endTime(!0) - _
              )
            );
          }),
          (t.eventCallback = function e(t, n, i) {
            var r = this.vars;
            return arguments.length > 1
              ? (n
                  ? ((r[t] = n),
                    i && (r[t + 'Params'] = i),
                    'onUpdate' === t && (this._onUpdate = n))
                  : delete r[t],
                this)
              : r[t];
          }),
          (t.then = function e(t) {
            var n = this;
            return new Promise(function (e) {
              var i = x(t) ? t : le,
                r = function t() {
                  var r = n.then;
                  (n.then = null),
                    x(i) && (i = i(n)) && (i.then || i === n) && (n.then = r),
                    e(i),
                    (n.then = r);
                };
              (n._initted && 1 === n.totalProgress() && n._ts >= 0) ||
              (!n._tTime && n._ts < 0)
                ? r()
                : (n._prom = r);
            });
          }),
          (t.kill = function e() {
            ut(this);
          }),
          e
        );
      })();
    de(jt.prototype, {
      _time: 0,
      _start: 0,
      _end: 0,
      _tTime: 0,
      _tDur: 0,
      _dirty: 0,
      _repeat: 0,
      _yoyo: !1,
      parent: null,
      _initted: !1,
      _rDelay: 0,
      _ts: 1,
      _dp: 0,
      ratio: 0,
      _zTime: -_,
      _prom: 0,
      _ps: !1,
      _rts: 1,
    });
    var Yt = (function (e) {
      function t(t, n) {
        var r;
        return (
          void 0 === t && (t = {}),
          (r = e.call(this, t, n) || this),
          (r.labels = {}),
          (r.smoothChildTiming = !!t.smoothChildTiming),
          (r.autoRemoveChildren = !!t.autoRemoveChildren),
          (r._sort = S(t.sortChildren)),
          r.parent && Oe(r.parent, i(r)),
          t.scrollTrigger && ke(i(r), t.scrollTrigger),
          r
        );
      }
      r(t, e);
      var n = t.prototype;
      return (
        (n.to = function e(t, n, i) {
          return (
            new Gt(
              t,
              oe(arguments, 0, this),
              Re(this, L(n) ? arguments[3] : i)
            ),
            this
          );
        }),
        (n.from = function e(t, n, i) {
          return (
            new Gt(
              t,
              oe(arguments, 1, this),
              Re(this, L(n) ? arguments[3] : i)
            ),
            this
          );
        }),
        (n.fromTo = function e(t, n, i, r) {
          return (
            new Gt(
              t,
              oe(arguments, 2, this),
              Re(this, L(n) ? arguments[4] : r)
            ),
            this
          );
        }),
        (n.set = function e(t, n, i) {
          return (
            (n.duration = 0),
            (n.parent = this),
            _e(n).repeatDelay || (n.repeat = 0),
            (n.immediateRender = !!n.immediateRender),
            new Gt(t, n, Re(this, i), 1),
            this
          );
        }),
        (n.call = function e(t, n, i) {
          return Ee(this, Gt.delayedCall(0, t, n), Re(this, i));
        }),
        (n.staggerTo = function e(t, n, i, r, a, o, s) {
          return (
            (i.duration = n),
            (i.stagger = i.stagger || r),
            (i.onComplete = o),
            (i.onCompleteParams = s),
            (i.parent = this),
            new Gt(t, i, Re(this, a)),
            this
          );
        }),
        (n.staggerFrom = function e(t, n, i, r, a, o, s) {
          return (
            (i.runBackwards = 1),
            (_e(i).immediateRender = S(i.immediateRender)),
            this.staggerTo(t, n, i, r, a, o, s)
          );
        }),
        (n.staggerFromTo = function e(t, n, i, r, a, o, s, c) {
          return (
            (r.startAt = i),
            (_e(r).immediateRender = S(r.immediateRender)),
            this.staggerTo(t, n, r, a, o, s, c)
          );
        }),
        (n.render = function e(t, n, i) {
          var r,
            o,
            s,
            c,
            u,
            l,
            d,
            h,
            p,
            m,
            f,
            M,
            v = this._time,
            g = this._dirty ? this.totalDuration() : this._tDur,
            y = this._dur,
            b = this !== a && t > g - _ && t >= 0 ? g : t < _ ? 0 : t,
            w = this._zTime < 0 !== t < 0 && (this._initted || !y);
          if (b !== this._tTime || i || w) {
            if (
              (v !== this._time &&
                y &&
                ((b += this._time - v), (t += this._time - v)),
              (r = b),
              (p = this._start),
              (h = this._ts),
              (l = !h),
              w && (y || (v = this._zTime), (t || !n) && (this._zTime = t)),
              this._repeat &&
                ((f = this._yoyo),
                (u = y + this._rDelay),
                (r = re(b % u)),
                b === g
                  ? ((c = this._repeat), (r = y))
                  : ((c = ~~(b / u)),
                    c && c === b / u && ((r = y), c--),
                    r > y && (r = y)),
                (m = Le(this._tTime, u)),
                !v && this._tTime && m !== c && (m = c),
                f && 1 & c && ((r = y - r), (M = 1)),
                c !== m && !this._lock))
            ) {
              var A = f && 1 & m,
                x = A === (f && 1 & c);
              if (
                (c < m && (A = !A),
                (v = A ? 0 : y),
                (this._lock = 1),
                (this.render(v || (M ? 0 : re(c * u)), n, !y)._lock = 0),
                !n && this.parent && ct(this, 'onRepeat'),
                this.vars.repeatRefresh && !M && (this.invalidate()._lock = 1),
                v !== this._time || l !== !this._ts)
              )
                return this;
              if (
                ((y = this._dur),
                (g = this._tDur),
                x &&
                  ((this._lock = 2),
                  (v = A ? y : -1e-4),
                  this.render(v, !0),
                  this.vars.repeatRefresh && !M && this.invalidate()),
                (this._lock = 0),
                !this._ts && !l)
              )
                return this;
              Ot(this, M);
            }
            if (
              (this._hasPause &&
                !this._forcing &&
                this._lock < 2 &&
                ((d = Ne(this, re(v), re(r))), d && (b -= r - (r = d._start))),
              (this._tTime = b),
              (this._time = r),
              (this._act = !h),
              this._initted ||
                ((this._onUpdate = this.vars.onUpdate),
                (this._initted = 1),
                (this._zTime = t)),
              !v && r && !n && ct(this, 'onStart'),
              r >= v && t >= 0)
            ) {
              o = this._first;
              while (o) {
                if (
                  ((s = o._next), (o._act || r >= o._start) && o._ts && d !== o)
                ) {
                  if (o.parent !== this) return this.render(t, n, i);
                  if (
                    (o.render(
                      o._ts > 0
                        ? (r - o._start) * o._ts
                        : (o._dirty ? o.totalDuration() : o._tDur) +
                            (r - o._start) * o._ts,
                      n,
                      i
                    ),
                    r !== this._time || (!this._ts && !l))
                  ) {
                    (d = 0), s && (b += this._zTime = -_);
                    break;
                  }
                }
                o = s;
              }
            } else {
              o = this._last;
              var L = t < 0 ? t : r;
              while (o) {
                if (
                  ((s = o._prev), (o._act || L <= o._end) && o._ts && d !== o)
                ) {
                  if (o.parent !== this) return this.render(t, n, i);
                  if (
                    (o.render(
                      o._ts > 0
                        ? (L - o._start) * o._ts
                        : (o._dirty ? o.totalDuration() : o._tDur) +
                            (L - o._start) * o._ts,
                      n,
                      i
                    ),
                    r !== this._time || (!this._ts && !l))
                  ) {
                    (d = 0), s && (b += this._zTime = L ? -_ : _);
                    break;
                  }
                }
                o = s;
              }
            }
            if (
              d &&
              !n &&
              (this.pause(),
              (d.render(r >= v ? 0 : -_)._zTime = r >= v ? 1 : -1),
              this._ts)
            )
              return (this._start = p), ze(this), this.render(t, n, i);
            this._onUpdate && !n && ct(this, 'onUpdate', !0),
              ((b === g && g >= this.totalDuration()) || (!b && v)) &&
                ((p !== this._start && Math.abs(h) === Math.abs(this._ts)) ||
                  this._lock ||
                  ((t || !y) &&
                    ((b === g && this._ts > 0) || (!b && this._ts < 0)) &&
                    ye(this, 1),
                  n ||
                    (t < 0 && !v) ||
                    (!b && !v) ||
                    (ct(this, b === g ? 'onComplete' : 'onReverseComplete', !0),
                    this._prom &&
                      !(b < g && this.timeScale() > 0) &&
                      this._prom())));
          }
          return this;
        }),
        (n.add = function e(t, n) {
          var i = this;
          if ((L(n) || (n = Re(this, n)), !(t instanceof jt))) {
            if (C(t))
              return (
                t.forEach(function (e) {
                  return i.add(e, n);
                }),
                this
              );
            if (A(t)) return this.addLabel(t, n);
            if (!x(t)) return this;
            t = Gt.delayedCall(0, t);
          }
          return this !== t ? Ee(this, t, n) : this;
        }),
        (n.getChildren = function e(t, n, i, r) {
          void 0 === t && (t = !0),
            void 0 === n && (n = !0),
            void 0 === i && (i = !0),
            void 0 === r && (r = -f);
          var a = [],
            o = this._first;
          while (o)
            o._start >= r &&
              (o instanceof Gt
                ? n && a.push(o)
                : (i && a.push(o),
                  t && a.push.apply(a, o.getChildren(!0, n, i)))),
              (o = o._next);
          return a;
        }),
        (n.getById = function e(t) {
          var n = this.getChildren(1, 1, 1),
            i = n.length;
          while (i--) if (n[i].vars.id === t) return n[i];
        }),
        (n.remove = function e(t) {
          return A(t)
            ? this.removeLabel(t)
            : x(t)
            ? this.killTweensOf(t)
            : (ge(this, t),
              t === this._recent && (this._recent = this._last),
              be(this));
        }),
        (n.totalTime = function t(n, i) {
          return arguments.length
            ? ((this._forcing = 1),
              !this._dp &&
                this._ts &&
                (this._start = re(
                  yt.time -
                    (this._ts > 0
                      ? n / this._ts
                      : (this.totalDuration() - n) / -this._ts)
                )),
              e.prototype.totalTime.call(this, n, i),
              (this._forcing = 0),
              this)
            : this._tTime;
        }),
        (n.addLabel = function e(t, n) {
          return (this.labels[t] = Re(this, n)), this;
        }),
        (n.removeLabel = function e(t) {
          return delete this.labels[t], this;
        }),
        (n.addPause = function e(t, n, i) {
          var r = Gt.delayedCall(0, n || U, i);
          return (
            (r.data = 'isPause'), (this._hasPause = 1), Ee(this, r, Re(this, t))
          );
        }),
        (n.removePause = function e(t) {
          var n = this._first;
          t = Re(this, t);
          while (n)
            n._start === t && 'isPause' === n.data && ye(n), (n = n._next);
        }),
        (n.killTweensOf = function e(t, n, i) {
          var r = this.getTweensOf(t, i),
            a = r.length;
          while (a--) Rt !== r[a] && r[a].kill(t, n);
          return this;
        }),
        (n.getTweensOf = function e(t, n) {
          var i,
            r = [],
            a = Xe(t),
            o = this._first,
            s = L(n);
          while (o)
            o instanceof Gt
              ? ae(o._targets, a) &&
                (s
                  ? (!Rt || (o._initted && o._ts)) &&
                    o.globalTime(0) <= n &&
                    o.globalTime(o.totalDuration()) > n
                  : !n || o.isActive()) &&
                r.push(o)
              : (i = o.getTweensOf(a, n)).length && r.push.apply(r, i),
              (o = o._next);
          return r;
        }),
        (n.tweenTo = function e(t, n) {
          n = n || {};
          var i = this,
            r = Re(i, t),
            a = n,
            o = a.startAt,
            s = a.onStart,
            c = a.onStartParams,
            u = Gt.to(
              i,
              de(n, {
                ease: 'none',
                lazy: !1,
                time: r,
                overwrite: 'auto',
                duration:
                  n.duration ||
                  Math.abs(
                    (r - (o && 'time' in o ? o.time : i._time)) / i.timeScale()
                  ) ||
                  _,
                onStart: function e() {
                  i.pause();
                  var t = n.duration || Math.abs((r - i._time) / i.timeScale());
                  u._dur !== t && Pe(u, t, 0, 1).render(u._time, !0, !0),
                    s && s.apply(u, c || []);
                },
              })
            );
          return u;
        }),
        (n.tweenFromTo = function e(t, n, i) {
          return this.tweenTo(n, de({ startAt: { time: Re(this, t) } }, i));
        }),
        (n.recent = function e() {
          return this._recent;
        }),
        (n.nextLabel = function e(t) {
          return void 0 === t && (t = this._time), st(this, Re(this, t));
        }),
        (n.previousLabel = function e(t) {
          return void 0 === t && (t = this._time), st(this, Re(this, t), 1);
        }),
        (n.currentLabel = function e(t) {
          return arguments.length
            ? this.seek(t, !0)
            : this.previousLabel(this._time + _);
        }),
        (n.shiftChildren = function e(t, n, i) {
          void 0 === i && (i = 0);
          var r,
            a = this._first,
            o = this.labels;
          while (a)
            a._start >= i && ((a._start += t), (a._end += t)), (a = a._next);
          if (n) for (r in o) o[r] >= i && (o[r] += t);
          return be(this);
        }),
        (n.invalidate = function t() {
          var n = this._first;
          this._lock = 0;
          while (n) n.invalidate(), (n = n._next);
          return e.prototype.invalidate.call(this);
        }),
        (n.clear = function e(t) {
          void 0 === t && (t = !0);
          var n,
            i = this._first;
          while (i) (n = i._next), this.remove(i), (i = n);
          return (
            (this._time = this._tTime = this._pTime = 0),
            t && (this.labels = {}),
            be(this)
          );
        }),
        (n.totalDuration = function e(t) {
          var n,
            i,
            r,
            o = 0,
            s = this,
            c = s._last,
            u = f;
          if (arguments.length)
            return s.timeScale(
              (s._repeat < 0 ? s.duration() : s.totalDuration()) /
                (s.reversed() ? -t : t)
            );
          if (s._dirty) {
            r = s.parent;
            while (c)
              (n = c._prev),
                c._dirty && c.totalDuration(),
                (i = c._start),
                i > u && s._sort && c._ts && !s._lock
                  ? ((s._lock = 1), (Ee(s, c, i - c._delay, 1)._lock = 0))
                  : (u = i),
                i < 0 &&
                  c._ts &&
                  ((o -= i),
                  ((!r && !s._dp) || (r && r.smoothChildTiming)) &&
                    ((s._start += i / s._ts), (s._time -= i), (s._tTime -= i)),
                  s.shiftChildren(-i, !1, -Infinity),
                  (u = 0)),
                c._end > o && c._ts && (o = c._end),
                (c = n);
            Pe(s, s === a && s._time > o ? s._time : o, 1, 1), (s._dirty = 0);
          }
          return s._tDur;
        }),
        (t.updateRoot = function e(t) {
          if ((a._ts && (ce(a, Te(t, a)), (l = yt.frame)), yt.frame >= K)) {
            K += p.autoSleep || 120;
            var n = a._first;
            if ((!n || !n._ts) && p.autoSleep && yt._listeners.length < 2) {
              while (n && !n._ts) n = n._next;
              n || yt.sleep();
            }
          }
        }),
        t
      );
    })(jt);
    de(Yt.prototype, { _lock: 0, _hasPause: 0, _forcing: 0 });
    var Rt,
      Bt = function e(t, n, i, r, a, o, s) {
        var c,
          u,
          l,
          d,
          h,
          p,
          m,
          f,
          _ = new un(this._pt, t, n, 0, 1, nn, null, a),
          M = 0,
          v = 0;
        (_.b = i),
          (_.e = r),
          (i += ''),
          (r += ''),
          (m = ~r.indexOf('random(')) && (r = rt(r)),
          o && ((f = [i, r]), o(f, t, n), (i = f[0]), (r = f[1])),
          (u = i.match(j) || []);
        while ((c = j.exec(r)))
          (d = c[0]),
            (h = r.substring(M, c.index)),
            l ? (l = (l + 1) % 5) : 'rgba(' === h.substr(-5) && (l = 1),
            d !== u[v++] &&
              ((p = parseFloat(u[v - 1]) || 0),
              (_._pt = {
                _next: _._pt,
                p: h || 1 === v ? h : ',',
                s: p,
                c:
                  '=' === d.charAt(1)
                    ? parseFloat(d.substr(2)) * ('-' === d.charAt(0) ? -1 : 1)
                    : parseFloat(d) - p,
                m: l && l < 4 ? Math.round : 0,
              }),
              (M = j.lastIndex));
        return (
          (_.c = M < r.length ? r.substring(M, r.length) : ''),
          (_.fp = s),
          (Y.test(r) || m) && (_.e = 0),
          (this._pt = _),
          _
        );
      },
      Wt = function e(t, n, i, r, a, o, s, c, u) {
        x(r) && (r = r(a || 0, t, o));
        var l,
          d = t[n],
          h =
            'get' !== i
              ? i
              : x(d)
              ? u
                ? t[
                    n.indexOf('set') || !x(t['get' + n.substr(3)])
                      ? n
                      : 'get' + n.substr(3)
                  ](u)
                : t[n]()
              : d,
          m = x(d) ? (u ? Kt : Zt) : Jt;
        if (
          (A(r) &&
            (~r.indexOf('random(') && (r = rt(r)),
            '=' === r.charAt(1) &&
              (r =
                parseFloat(h) +
                parseFloat(r.substr(2)) * ('-' === r.charAt(0) ? -1 : 1) +
                (Ie(h) || 0))),
          h !== r)
        )
          return isNaN(h * r)
            ? (!d && !(n in t) && q(n, r),
              Bt.call(this, t, n, h, r, m, c || p.stringFilter, u))
            : ((l = new un(
                this._pt,
                t,
                n,
                +h || 0,
                r - (h || 0),
                'boolean' === typeof d ? tn : en,
                0,
                m
              )),
              u && (l.fp = u),
              s && l.modifier(s, this, t),
              (this._pt = l));
      },
      It = function e(t, n, i, r, a) {
        if (
          (x(t) && (t = Ut(t, a, n, i, r)),
          !z(t) || (t.style && t.nodeType) || C(t) || k(t))
        )
          return A(t) ? Ut(t, a, n, i, r) : t;
        var o,
          s = {};
        for (o in t) s[o] = Ut(t[o], a, n, i, r);
        return s;
      },
      qt = function e(t, n, i, r, a, o) {
        var s, c, u, l;
        if (
          J[t] &&
          !1 !==
            (s = new J[t]()).init(
              a,
              s.rawVars ? n[t] : It(n[t], r, a, o, i),
              i,
              r,
              o
            ) &&
          ((i._pt = c = new un(i._pt, a, t, 0, 1, s.render, s, 0, s.priority)),
          i !== d)
        ) {
          (u = i._ptLookup[i._targets.indexOf(a)]), (l = s._props.length);
          while (l--) u[s._props[l]] = c;
        }
        return s;
      },
      Ht = function e(t, n) {
        var i,
          r,
          o,
          s,
          c,
          u,
          l,
          d,
          h,
          p,
          f,
          M,
          v,
          g = t.vars,
          y = g.ease,
          b = g.startAt,
          w = g.immediateRender,
          A = g.lazy,
          x = g.onUpdate,
          L = g.onUpdateParams,
          T = g.callbackScope,
          z = g.runBackwards,
          O = g.yoyoEase,
          E = g.keyframes,
          k = g.autoRevert,
          C = t._dur,
          D = t._startAt,
          N = t._targets,
          P = t.parent,
          j = P && 'nested' === P.data ? P.parent._targets : N,
          Y = 'auto' === t._overwrite,
          R = t.timeline;
        if (
          (R && (!E || !y) && (y = 'none'),
          (t._ease = Et(y, m.ease)),
          (t._yEase = O ? St(Et(!0 === O ? y : O, m.ease)) : 0),
          O &&
            t._yoyo &&
            !t._repeat &&
            ((O = t._yEase), (t._yEase = t._ease), (t._ease = O)),
          !R)
        ) {
          if (
            ((d = N[0] ? te(N[0]).harness : 0),
            (M = d && g[d.prop]),
            (i = fe(g, X)),
            D && D.render(-1, !0).kill(),
            b)
          ) {
            if (
              (ye(
                (t._startAt = Gt.set(
                  N,
                  de(
                    {
                      data: 'isStart',
                      overwrite: !1,
                      parent: P,
                      immediateRender: !0,
                      lazy: S(A),
                      startAt: null,
                      delay: 0,
                      onUpdate: x,
                      onUpdateParams: L,
                      callbackScope: T,
                      stagger: 0,
                    },
                    b
                  )
                ))
              ),
              w)
            )
              if (n > 0) k || (t._startAt = 0);
              else if (C && !(n < 0 && D)) return n && (t._zTime = n), void 0;
          } else if (z && C)
            if (D) !k && (t._startAt = 0);
            else if (
              (n && (w = !1),
              (o = de(
                {
                  overwrite: !1,
                  data: 'isFromStart',
                  lazy: w && S(A),
                  immediateRender: w,
                  stagger: 0,
                  parent: P,
                },
                i
              )),
              M && (o[d.prop] = M),
              ye((t._startAt = Gt.set(N, o))),
              w)
            ) {
              if (!n) return;
            } else e(t._startAt, _);
          for (
            t._pt = 0, A = (C && S(A)) || (A && !C), r = 0;
            r < N.length;
            r++
          ) {
            if (
              ((c = N[r]),
              (l = c._gsap || ee(N)[r]._gsap),
              (t._ptLookup[r] = p = {}),
              G[l.id] && V.length && se(),
              (f = j === N ? r : j.indexOf(c)),
              d &&
                !1 !== (h = new d()).init(c, M || i, t, f, j) &&
                ((t._pt = s = new un(
                  t._pt,
                  c,
                  h.name,
                  0,
                  1,
                  h.render,
                  h,
                  0,
                  h.priority
                )),
                h._props.forEach(function (e) {
                  p[e] = s;
                }),
                h.priority && (u = 1)),
              !d || M)
            )
              for (o in i)
                J[o] && (h = qt(o, i, t, f, c, j))
                  ? h.priority && (u = 1)
                  : (p[o] = s = Wt.call(
                      t,
                      c,
                      o,
                      'get',
                      i[o],
                      f,
                      j,
                      0,
                      g.stringFilter
                    ));
            t._op && t._op[r] && t.kill(c, t._op[r]),
              Y &&
                t._pt &&
                ((Rt = t),
                a.killTweensOf(c, p, t.globalTime(0)),
                (v = !t.parent),
                (Rt = 0)),
              t._pt && A && (G[l.id] = 1);
          }
          u && cn(t), t._onInit && t._onInit(t);
        }
        (t._from = !R && !!g.runBackwards),
          (t._onUpdate = x),
          (t._initted = (!t._op || t._pt) && !v);
      },
      Ft = function e(t, n) {
        var i,
          r,
          a,
          o,
          s = t[0] ? te(t[0]).harness : 0,
          c = s && s.aliases;
        if (!c) return n;
        for (r in ((i = pe({}, n)), c))
          if (r in i) {
            (o = c[r].split(',')), (a = o.length);
            while (a--) i[o[a]] = i[r];
          }
        return i;
      },
      Ut = function e(t, n, i, r, a) {
        return x(t)
          ? t.call(n, i, r, a)
          : A(t) && ~t.indexOf('random(')
          ? rt(t)
          : t;
      },
      Xt = $ + 'repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase',
      Vt = (Xt + ',id,stagger,delay,duration,paused,scrollTrigger').split(','),
      Gt = (function (e) {
        function t(t, n, r, o) {
          var s;
          'number' === typeof n && ((r.duration = n), (n = r), (r = null)),
            (s = e.call(this, o ? n : _e(n), r) || this);
          var c,
            u,
            l,
            d,
            h,
            m,
            f,
            M,
            v = s.vars,
            g = v.duration,
            y = v.delay,
            b = v.immediateRender,
            w = v.stagger,
            A = v.overwrite,
            x = v.keyframes,
            T = v.defaults,
            O = v.scrollTrigger,
            D = v.yoyoEase,
            N = s.parent,
            P = (C(t) || k(t) ? L(t[0]) : 'length' in n) ? [t] : Xe(t);
          if (
            ((s._targets = P.length
              ? ee(P)
              : H(
                  'GSAP target ' + t + ' not found. https://greensock.com',
                  !p.nullTargetWarn
                ) || []),
            (s._ptLookup = []),
            (s._overwrite = A),
            x || w || E(g) || E(y))
          ) {
            if (
              ((n = s.vars),
              (c = s.timeline = new Yt({ data: 'nested', defaults: T || {} })),
              c.kill(),
              (c.parent = i(s)),
              x)
            )
              de(c.vars.defaults, { ease: 'none' }),
                x.forEach(function (e) {
                  return c.to(P, e, '>');
                });
            else {
              if (((d = P.length), (f = w ? Ge(w) : U), z(w)))
                for (h in w) ~Xt.indexOf(h) && (M || (M = {}), (M[h] = w[h]));
              for (u = 0; u < d; u++) {
                for (h in ((l = {}), n)) Vt.indexOf(h) < 0 && (l[h] = n[h]);
                (l.stagger = 0),
                  D && (l.yoyoEase = D),
                  M && pe(l, M),
                  (m = P[u]),
                  (l.duration = +Ut(g, i(s), u, m, P)),
                  (l.delay = (+Ut(y, i(s), u, m, P) || 0) - s._delay),
                  !w &&
                    1 === d &&
                    l.delay &&
                    ((s._delay = y = l.delay), (s._start += y), (l.delay = 0)),
                  c.to(m, l, f(u, m, P));
              }
              c.duration() ? (g = y = 0) : (s.timeline = 0);
            }
            g || s.duration((g = c.duration()));
          } else s.timeline = 0;
          return (
            !0 === A && ((Rt = i(s)), a.killTweensOf(P), (Rt = 0)),
            N && Oe(N, i(s)),
            (b ||
              (!g &&
                !x &&
                s._start === re(N._time) &&
                S(b) &&
                Ae(i(s)) &&
                'nested' !== N.data)) &&
              ((s._tTime = -_), s.render(Math.max(0, -y))),
            O && ke(i(s), O),
            s
          );
        }
        r(t, e);
        var n = t.prototype;
        return (
          (n.render = function e(t, n, i) {
            var r,
              a,
              o,
              s,
              c,
              u,
              l,
              d,
              h,
              p = this._time,
              m = this._tDur,
              f = this._dur,
              M = t > m - _ && t >= 0 ? m : t < _ ? 0 : t;
            if (f) {
              if (
                M !== this._tTime ||
                !t ||
                i ||
                (this._startAt && this._zTime < 0 !== t < 0)
              ) {
                if (((r = M), (d = this.timeline), this._repeat)) {
                  if (
                    ((s = f + this._rDelay),
                    (r = re(M % s)),
                    M === m
                      ? ((o = this._repeat), (r = f))
                      : ((o = ~~(M / s)),
                        o && o === M / s && ((r = f), o--),
                        r > f && (r = f)),
                    (u = this._yoyo && 1 & o),
                    u && ((h = this._yEase), (r = f - r)),
                    (c = Le(this._tTime, s)),
                    r === p && !i && this._initted)
                  )
                    return this;
                  o !== c &&
                    (d && this._yEase && Ot(d, u),
                    !this.vars.repeatRefresh ||
                      u ||
                      this._lock ||
                      ((this._lock = i = 1),
                      (this.render(re(s * o), !0).invalidate()._lock = 0)));
                }
                if (!this._initted) {
                  if (Ce(this, t < 0 ? t : r, i, n))
                    return (this._tTime = 0), this;
                  if (f !== this._dur) return this.render(t, n, i);
                }
                (this._tTime = M),
                  (this._time = r),
                  !this._act && this._ts && ((this._act = 1), (this._lazy = 0)),
                  (this.ratio = l = (h || this._ease)(r / f)),
                  this._from && (this.ratio = l = 1 - l),
                  r && !p && !n && ct(this, 'onStart'),
                  (a = this._pt);
                while (a) a.r(l, a.d), (a = a._next);
                (d && d.render(t < 0 ? t : !r && u ? -_ : d._dur * l, n, i)) ||
                  (this._startAt && (this._zTime = t)),
                  this._onUpdate &&
                    !n &&
                    (t < 0 && this._startAt && this._startAt.render(t, !0, i),
                    ct(this, 'onUpdate')),
                  this._repeat &&
                    o !== c &&
                    this.vars.onRepeat &&
                    !n &&
                    this.parent &&
                    ct(this, 'onRepeat'),
                  (M !== this._tDur && M) ||
                    this._tTime !== M ||
                    (t < 0 &&
                      this._startAt &&
                      !this._onUpdate &&
                      this._startAt.render(t, !0, !0),
                    (t || !f) &&
                      ((M === this._tDur && this._ts > 0) ||
                        (!M && this._ts < 0)) &&
                      ye(this, 1),
                    n ||
                      (t < 0 && !p) ||
                      (!M && !p) ||
                      (ct(
                        this,
                        M === m ? 'onComplete' : 'onReverseComplete',
                        !0
                      ),
                      this._prom &&
                        !(M < m && this.timeScale() > 0) &&
                        this._prom()));
              }
            } else De(this, t, n, i);
            return this;
          }),
          (n.targets = function e() {
            return this._targets;
          }),
          (n.invalidate = function t() {
            return (
              (this._pt = this._op = this._startAt = this._onUpdate = this._act = this._lazy = 0),
              (this._ptLookup = []),
              this.timeline && this.timeline.invalidate(),
              e.prototype.invalidate.call(this)
            );
          }),
          (n.kill = function e(t, n) {
            if (
              (void 0 === n && (n = 'all'),
              !t && (!n || 'all' === n) && ((this._lazy = 0), this.parent))
            )
              return ut(this);
            if (this.timeline) {
              var i = this.timeline.totalDuration();
              return (
                this.timeline.killTweensOf(t, n, Rt && !0 !== Rt.vars.overwrite)
                  ._first || ut(this),
                this.parent &&
                  i !== this.timeline.totalDuration() &&
                  Pe(this, (this._dur * this.timeline._tDur) / i, 0, 1),
                this
              );
            }
            var r,
              a,
              o,
              s,
              c,
              u,
              l,
              d = this._targets,
              h = t ? Xe(t) : d,
              p = this._ptLookup,
              m = this._pt;
            if ((!n || 'all' === n) && Me(d, h))
              return 'all' === n && (this._pt = 0), ut(this);
            (r = this._op = this._op || []),
              'all' !== n &&
                (A(n) &&
                  ((c = {}),
                  ie(n, function (e) {
                    return (c[e] = 1);
                  }),
                  (n = c)),
                (n = Ft(d, n))),
              (l = d.length);
            while (l--)
              if (~h.indexOf(d[l]))
                for (c in ((a = p[l]),
                'all' === n
                  ? ((r[l] = n), (s = a), (o = {}))
                  : ((o = r[l] = r[l] || {}), (s = n)),
                s))
                  (u = a && a[c]),
                    u &&
                      (('kill' in u.d && !0 !== u.d.kill(c)) ||
                        ge(this, u, '_pt'),
                      delete a[c]),
                    'all' !== o && (o[c] = 1);
            return this._initted && !this._pt && m && ut(this), this;
          }),
          (t.to = function e(n, i) {
            return new t(n, i, arguments[2]);
          }),
          (t.from = function e(n, i) {
            return new t(n, oe(arguments, 1));
          }),
          (t.delayedCall = function e(n, i, r, a) {
            return new t(i, 0, {
              immediateRender: !1,
              lazy: !1,
              overwrite: !1,
              delay: n,
              onComplete: i,
              onReverseComplete: i,
              onCompleteParams: r,
              onReverseCompleteParams: r,
              callbackScope: a,
            });
          }),
          (t.fromTo = function e(n, i, r) {
            return new t(n, oe(arguments, 2));
          }),
          (t.set = function e(n, i) {
            return (
              (i.duration = 0), i.repeatDelay || (i.repeat = 0), new t(n, i)
            );
          }),
          (t.killTweensOf = function e(t, n, i) {
            return a.killTweensOf(t, n, i);
          }),
          t
        );
      })(jt);
    de(Gt.prototype, {
      _targets: [],
      _lazy: 0,
      _startAt: 0,
      _op: 0,
      _onInit: 0,
    }),
      ie('staggerTo,staggerFrom,staggerFromTo', function (e) {
        Gt[e] = function () {
          var t = new Yt(),
            n = He.call(arguments, 0);
          return (
            n.splice('staggerFromTo' === e ? 5 : 4, 0, 0), t[e].apply(t, n)
          );
        };
      });
    var Jt = function e(t, n, i) {
        return (t[n] = i);
      },
      Zt = function e(t, n, i) {
        return t[n](i);
      },
      Kt = function e(t, n, i, r) {
        return t[n](r.fp, i);
      },
      Qt = function e(t, n, i) {
        return t.setAttribute(n, i);
      },
      $t = function e(t, n) {
        return x(t[n]) ? Zt : T(t[n]) && t.setAttribute ? Qt : Jt;
      },
      en = function e(t, n) {
        return n.set(n.t, n.p, Math.round(1e4 * (n.s + n.c * t)) / 1e4, n);
      },
      tn = function e(t, n) {
        return n.set(n.t, n.p, !!(n.s + n.c * t), n);
      },
      nn = function e(t, n) {
        var i = n._pt,
          r = '';
        if (!t && n.b) r = n.b;
        else if (1 === t && n.e) r = n.e;
        else {
          while (i)
            (r =
              i.p +
              (i.m
                ? i.m(i.s + i.c * t)
                : Math.round(1e4 * (i.s + i.c * t)) / 1e4) +
              r),
              (i = i._next);
          r += n.c;
        }
        n.set(n.t, n.p, r, n);
      },
      rn = function e(t, n) {
        var i = n._pt;
        while (i) i.r(t, i.d), (i = i._next);
      },
      an = function e(t, n, i, r) {
        var a,
          o = this._pt;
        while (o) (a = o._next), o.p === r && o.modifier(t, n, i), (o = a);
      },
      on = function e(t) {
        var n,
          i,
          r = this._pt;
        while (r)
          (i = r._next),
            (r.p === t && !r.op) || r.op === t
              ? ge(this, r, '_pt')
              : r.dep || (n = 1),
            (r = i);
        return !n;
      },
      sn = function e(t, n, i, r) {
        r.mSet(t, n, r.m.call(r.tween, i, r.mt), r);
      },
      cn = function e(t) {
        var n,
          i,
          r,
          a,
          o = t._pt;
        while (o) {
          (n = o._next), (i = r);
          while (i && i.pr > o.pr) i = i._next;
          (o._prev = i ? i._prev : a) ? (o._prev._next = o) : (r = o),
            (o._next = i) ? (i._prev = o) : (a = o),
            (o = n);
        }
        t._pt = r;
      },
      un = (function () {
        function e(e, t, n, i, r, a, o, s, c) {
          (this.t = t),
            (this.s = i),
            (this.c = r),
            (this.p = n),
            (this.r = a || en),
            (this.d = o || this),
            (this.set = s || Jt),
            (this.pr = c || 0),
            (this._next = e),
            e && (e._prev = this);
        }
        var t = e.prototype;
        return (
          (t.modifier = function e(t, n, i) {
            (this.mSet = this.mSet || this.set),
              (this.set = sn),
              (this.m = t),
              (this.mt = i),
              (this.tween = n);
          }),
          e
        );
      })();
    ie(
      $ +
        'parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger',
      function (e) {
        return (X[e] = 1);
      }
    ),
      (B.TweenMax = B.TweenLite = Gt),
      (B.TimelineLite = B.TimelineMax = Yt),
      (a = new Yt({
        sortChildren: !1,
        defaults: m,
        autoRemoveChildren: !0,
        id: 'root',
        smoothChildTiming: !0,
      })),
      (p.stringFilter = gt);
    var ln = {
      registerPlugin: function e() {
        for (var t = arguments.length, n = new Array(t), i = 0; i < t; i++)
          n[i] = arguments[i];
        n.forEach(function (e) {
          return lt(e);
        });
      },
      timeline: function e(t) {
        return new Yt(t);
      },
      getTweensOf: function e(t, n) {
        return a.getTweensOf(t, n);
      },
      getProperty: function e(t, n, i, r) {
        A(t) && (t = Xe(t)[0]);
        var a = te(t || {}).get,
          o = i ? le : ue;
        return (
          'native' === i && (i = ''),
          t
            ? n
              ? o(((J[n] && J[n].get) || a)(t, n, i, r))
              : function (e, n, i) {
                  return o(((J[e] && J[e].get) || a)(t, e, n, i));
                }
            : t
        );
      },
      quickSetter: function e(t, n, i) {
        if (((t = Xe(t)), t.length > 1)) {
          var r = t.map(function (e) {
              return mn.quickSetter(e, n, i);
            }),
            a = r.length;
          return function (e) {
            var t = a;
            while (t--) r[t](e);
          };
        }
        t = t[0] || {};
        var o = J[n],
          s = te(t),
          c = (s.harness && (s.harness.aliases || {})[n]) || n,
          u = o
            ? function (e) {
                var n = new o();
                (d._pt = 0),
                  n.init(t, i ? e + i : e, d, 0, [t]),
                  n.render(1, n),
                  d._pt && rn(1, d);
              }
            : s.set(t, c);
        return o
          ? u
          : function (e) {
              return u(t, c, i ? e + i : e, s, 1);
            };
      },
      isTweening: function e(t) {
        return a.getTweensOf(t, !0).length > 0;
      },
      defaults: function e(t) {
        return t && t.ease && (t.ease = Et(t.ease, m.ease)), me(m, t || {});
      },
      config: function e(t) {
        return me(p, t || {});
      },
      registerEffect: function e(t) {
        var n = t.name,
          i = t.effect,
          r = t.plugins,
          a = t.defaults,
          o = t.extendTimeline;
        (r || '').split(',').forEach(function (e) {
          return (
            e && !J[e] && !B[e] && H(n + ' effect requires ' + e + ' plugin.')
          );
        }),
          (Z[n] = function (e, t, n) {
            return i(Xe(e), de(t || {}, a), n);
          }),
          o &&
            (Yt.prototype[n] = function (e, t, i) {
              return this.add(Z[n](e, z(t) ? t : (i = t) && {}, this), i);
            });
      },
      registerEase: function e(t, n) {
        wt[t] = Et(n);
      },
      parseEase: function e(t, n) {
        return arguments.length ? Et(t, n) : wt;
      },
      getById: function e(t) {
        return a.getById(t);
      },
      exportRoot: function e(t, n) {
        void 0 === t && (t = {});
        var i,
          r,
          o = new Yt(t);
        (o.smoothChildTiming = S(t.smoothChildTiming)),
          a.remove(o),
          (o._dp = 0),
          (o._time = o._tTime = a._time),
          (i = a._first);
        while (i)
          (r = i._next),
            (!n &&
              !i._dur &&
              i instanceof Gt &&
              i.vars.onComplete === i._targets[0]) ||
              Ee(o, i, i._start - i._delay),
            (i = r);
        return Ee(a, o, 0), o;
      },
      utils: {
        wrap: nt,
        wrapYoyo: it,
        distribute: Ge,
        random: Ke,
        snap: Ze,
        normalize: et,
        getUnit: Ie,
        clamp: qe,
        splitColor: mt,
        toArray: Xe,
        mapRange: at,
        pipe: Qe,
        unitize: $e,
        interpolate: ot,
        shuffle: Ve,
      },
      install: I,
      effects: Z,
      ticker: yt,
      updateRoot: Yt.updateRoot,
      plugins: J,
      globalTimeline: a,
      core: {
        PropTween: un,
        globals: F,
        Tween: Gt,
        Timeline: Yt,
        Animation: jt,
        getCache: te,
        _removeLinkedListItem: ge,
      },
    };
    ie('to,from,fromTo,delayedCall,set,killTweensOf', function (e) {
      return (ln[e] = Gt[e]);
    }),
      yt.add(Yt.updateRoot),
      (d = ln.to({}, { duration: 0 }));
    var dn = function e(t, n) {
        var i = t._pt;
        while (i && i.p !== n && i.op !== n && i.fp !== n) i = i._next;
        return i;
      },
      hn = function e(t, n) {
        var i,
          r,
          a,
          o = t._targets;
        for (i in n) {
          r = o.length;
          while (r--)
            (a = t._ptLookup[r][i]),
              a &&
                (a = a.d) &&
                (a._pt && (a = dn(a, i)),
                a && a.modifier && a.modifier(n[i], t, o[r], i));
        }
      },
      pn = function e(t, n) {
        return {
          name: t,
          rawVars: 1,
          init: function e(t, i, r) {
            r._onInit = function (e) {
              var t, r;
              if (
                (A(i) &&
                  ((t = {}),
                  ie(i, function (e) {
                    return (t[e] = 1);
                  }),
                  (i = t)),
                n)
              ) {
                for (r in ((t = {}), i)) t[r] = n(i[r]);
                i = t;
              }
              hn(e, i);
            };
          },
        };
      },
      mn =
        ln.registerPlugin(
          {
            name: 'attr',
            init: function e(t, n, i, r, a) {
              var o, s;
              for (o in n)
                (s = this.add(
                  t,
                  'setAttribute',
                  (t.getAttribute(o) || 0) + '',
                  n[o],
                  r,
                  a,
                  0,
                  0,
                  o
                )),
                  s && (s.op = o),
                  this._props.push(o);
            },
          },
          {
            name: 'endArray',
            init: function e(t, n) {
              var i = n.length;
              while (i--) this.add(t, i, t[i] || 0, n[i]);
            },
          },
          pn('roundProps', Je),
          pn('modifiers'),
          pn('snap', Ze)
        ) || ln;
    (Gt.version = Yt.version = mn.version = '3.5.1'), (u = 1), O() && bt();
    wt.Power0,
      wt.Power1,
      wt.Power2,
      wt.Power3,
      wt.Power4,
      wt.Linear,
      wt.Quad,
      wt.Cubic,
      wt.Quart,
      wt.Quint,
      wt.Strong,
      wt.Elastic,
      wt.Back,
      wt.SteppedEase,
      wt.Bounce,
      wt.Sine,
      wt.Expo,
      wt.Circ;
    var fn,
      _n,
      Mn,
      vn,
      gn,
      yn,
      bn,
      wn,
      An = function e() {
        return 'undefined' !== typeof window;
      },
      xn = {},
      Ln = 180 / Math.PI,
      Tn = Math.PI / 180,
      zn = Math.atan2,
      Sn = 1e8,
      On = /([A-Z])/g,
      En = /(?:left|right|width|margin|padding|x)/i,
      kn = /[\s,\(]\S/,
      Cn = {
        autoAlpha: 'opacity,visibility',
        scale: 'scaleX,scaleY',
        alpha: 'opacity',
      },
      Dn = function e(t, n) {
        return n.set(
          n.t,
          n.p,
          Math.round(1e4 * (n.s + n.c * t)) / 1e4 + n.u,
          n
        );
      },
      Nn = function e(t, n) {
        return n.set(
          n.t,
          n.p,
          1 === t ? n.e : Math.round(1e4 * (n.s + n.c * t)) / 1e4 + n.u,
          n
        );
      },
      Pn = function e(t, n) {
        return n.set(
          n.t,
          n.p,
          t ? Math.round(1e4 * (n.s + n.c * t)) / 1e4 + n.u : n.b,
          n
        );
      },
      jn = function e(t, n) {
        var i = n.s + n.c * t;
        n.set(n.t, n.p, ~~(i + (i < 0 ? -0.5 : 0.5)) + n.u, n);
      },
      Yn = function e(t, n) {
        return n.set(n.t, n.p, t ? n.e : n.b, n);
      },
      Rn = function e(t, n) {
        return n.set(n.t, n.p, 1 !== t ? n.b : n.e, n);
      },
      Bn = function e(t, n, i) {
        return (t.style[n] = i);
      },
      Wn = function e(t, n, i) {
        return t.style.setProperty(n, i);
      },
      In = function e(t, n, i) {
        return (t._gsap[n] = i);
      },
      qn = function e(t, n, i) {
        return (t._gsap.scaleX = t._gsap.scaleY = i);
      },
      Hn = function e(t, n, i, r, a) {
        var o = t._gsap;
        (o.scaleX = o.scaleY = i), o.renderTransform(a, o);
      },
      Fn = function e(t, n, i, r, a) {
        var o = t._gsap;
        (o[n] = i), o.renderTransform(a, o);
      },
      Un = 'transform',
      Xn = Un + 'Origin',
      Vn = function e(t, n) {
        var i = _n.createElementNS
          ? _n.createElementNS(
              (n || 'http://www.w3.org/1999/xhtml').replace(/^https/, 'http'),
              t
            )
          : _n.createElement(t);
        return i.style ? i : _n.createElement(t);
      },
      Gn = function e(t, n, i) {
        var r = getComputedStyle(t);
        return (
          r[n] ||
          r.getPropertyValue(n.replace(On, '-$1').toLowerCase()) ||
          r.getPropertyValue(n) ||
          (!i && e(t, Zn(n) || n, 1)) ||
          ''
        );
      },
      Jn = 'O,Moz,ms,Ms,Webkit'.split(','),
      Zn = function e(t, n, i) {
        var r = n || gn,
          a = r.style,
          o = 5;
        if (t in a && !i) return t;
        t = t.charAt(0).toUpperCase() + t.substr(1);
        while (o-- && !(Jn[o] + t in a));
        return o < 0 ? null : (3 === o ? 'ms' : o >= 0 ? Jn[o] : '') + t;
      },
      Kn = function e() {
        An() &&
          window.document &&
          ((fn = window),
          (_n = fn.document),
          (Mn = _n.documentElement),
          (gn = Vn('div') || { style: {} }),
          (yn = Vn('div')),
          (Un = Zn(Un)),
          (Xn = Un + 'Origin'),
          (gn.style.cssText =
            'border-width:0;line-height:0;position:absolute;padding:0'),
          (wn = !!Zn('perspective')),
          (vn = 1));
      },
      Qn = function e(t) {
        var n,
          i = Vn(
            'svg',
            (this.ownerSVGElement &&
              this.ownerSVGElement.getAttribute('xmlns')) ||
              'http://www.w3.org/2000/svg'
          ),
          r = this.parentNode,
          a = this.nextSibling,
          o = this.style.cssText;
        if (
          (Mn.appendChild(i),
          i.appendChild(this),
          (this.style.display = 'block'),
          t)
        )
          try {
            (n = this.getBBox()),
              (this._gsapBBox = this.getBBox),
              (this.getBBox = e);
          } catch (e) {}
        else this._gsapBBox && (n = this._gsapBBox());
        return (
          r && (a ? r.insertBefore(this, a) : r.appendChild(this)),
          Mn.removeChild(i),
          (this.style.cssText = o),
          n
        );
      },
      $n = function e(t, n) {
        var i = n.length;
        while (i--) if (t.hasAttribute(n[i])) return t.getAttribute(n[i]);
      },
      ei = function e(t) {
        var n;
        try {
          n = t.getBBox();
        } catch (e) {
          n = Qn.call(t, !0);
        }
        return (
          (n && (n.width || n.height)) ||
            t.getBBox === Qn ||
            (n = Qn.call(t, !0)),
          !n || n.width || n.x || n.y
            ? n
            : {
                x: +$n(t, ['x', 'cx', 'x1']) || 0,
                y: +$n(t, ['y', 'cy', 'y1']) || 0,
                width: 0,
                height: 0,
              }
        );
      },
      ti = function e(t) {
        return !(!t.getCTM || (t.parentNode && !t.ownerSVGElement) || !ei(t));
      },
      ni = function e(t, n) {
        if (n) {
          var i = t.style;
          n in xn && n !== Xn && (n = Un),
            i.removeProperty
              ? (('ms' !== n.substr(0, 2) && 'webkit' !== n.substr(0, 6)) ||
                  (n = '-' + n),
                i.removeProperty(n.replace(On, '-$1').toLowerCase()))
              : i.removeAttribute(n);
        }
      },
      ii = function e(t, n, i, r, a, o) {
        var s = new un(t._pt, n, i, 0, 1, o ? Rn : Yn);
        return (t._pt = s), (s.b = r), (s.e = a), t._props.push(i), s;
      },
      ri = { deg: 1, rad: 1, turn: 1 },
      ai = function e(t, n, i, r) {
        var a,
          o,
          s,
          c,
          u = parseFloat(i) || 0,
          l = (i + '').trim().substr((u + '').length) || 'px',
          d = gn.style,
          h = En.test(n),
          p = 'svg' === t.tagName.toLowerCase(),
          m = (p ? 'client' : 'offset') + (h ? 'Width' : 'Height'),
          f = 100,
          _ = 'px' === r,
          M = '%' === r;
        return r === l || !u || ri[r] || ri[l]
          ? u
          : ('px' !== l && !_ && (u = e(t, n, i, 'px')),
            (c = t.getCTM && ti(t)),
            M && (xn[n] || ~n.indexOf('adius'))
              ? re((u / (c ? t.getBBox()[h ? 'width' : 'height'] : t[m])) * f)
              : ((d[h ? 'width' : 'height'] = f + (_ ? l : r)),
                (o =
                  ~n.indexOf('adius') || ('em' === r && t.appendChild && !p)
                    ? t
                    : t.parentNode),
                c && (o = (t.ownerSVGElement || {}).parentNode),
                (o && o !== _n && o.appendChild) || (o = _n.body),
                (s = o._gsap),
                s && M && s.width && h && s.time === yt.time
                  ? re((u / s.width) * f)
                  : ((M || '%' === l) && (d.position = Gn(t, 'position')),
                    o === t && (d.position = 'static'),
                    o.appendChild(gn),
                    (a = gn[m]),
                    o.removeChild(gn),
                    (d.position = 'absolute'),
                    h &&
                      M &&
                      ((s = te(o)), (s.time = yt.time), (s.width = o[m])),
                    re(_ ? (a * u) / f : a && u ? (f / a) * u : 0))));
      },
      oi = function e(t, n, i, r) {
        var a;
        return (
          vn || Kn(),
          n in Cn &&
            'transform' !== n &&
            ((n = Cn[n]), ~n.indexOf(',') && (n = n.split(',')[0])),
          xn[n] && 'transform' !== n
            ? ((a = vi(t, r)),
              (a =
                'transformOrigin' !== n
                  ? a[n]
                  : gi(Gn(t, Xn)) + ' ' + a.zOrigin + 'px'))
            : ((a = t.style[n]),
              (!a || 'auto' === a || r || ~(a + '').indexOf('calc(')) &&
                (a =
                  (di[n] && di[n](t, n, i)) ||
                  Gn(t, n) ||
                  ne(t, n) ||
                  ('opacity' === n ? 1 : 0))),
          i && !~(a + '').indexOf(' ') ? ai(t, n, a, i) + i : a
        );
      },
      si = function e(t, n, i, r) {
        if (!i || 'none' === i) {
          var a = Zn(n, t, 1),
            o = a && Gn(t, a, 1);
          o && o !== i
            ? ((n = a), (i = o))
            : 'borderColor' === n && (i = Gn(t, 'borderTopColor'));
        }
        var s,
          c,
          u,
          l,
          d,
          h,
          m,
          f,
          _,
          M,
          v,
          g,
          y,
          b = new un(this._pt, t.style, n, 0, 1, nn),
          w = 0,
          A = 0;
        if (
          ((b.b = i),
          (b.e = r),
          (i += ''),
          (r += ''),
          'auto' === r &&
            ((t.style[n] = r), (r = Gn(t, n) || r), (t.style[n] = i)),
          (s = [i, r]),
          gt(s),
          (i = s[0]),
          (r = s[1]),
          (u = i.match(P) || []),
          (y = r.match(P) || []),
          y.length)
        ) {
          while ((c = P.exec(r)))
            (m = c[0]),
              (_ = r.substring(w, c.index)),
              d
                ? (d = (d + 1) % 5)
                : ('rgba(' !== _.substr(-5) && 'hsla(' !== _.substr(-5)) ||
                  (d = 1),
              m !== (h = u[A++] || '') &&
                ((l = parseFloat(h) || 0),
                (v = h.substr((l + '').length)),
                (g = '=' === m.charAt(1) ? +(m.charAt(0) + '1') : 0),
                g && (m = m.substr(2)),
                (f = parseFloat(m)),
                (M = m.substr((f + '').length)),
                (w = P.lastIndex - M.length),
                M ||
                  ((M = M || p.units[n] || v),
                  w === r.length && ((r += M), (b.e += M))),
                v !== M && (l = ai(t, n, h, M) || 0),
                (b._pt = {
                  _next: b._pt,
                  p: _ || 1 === A ? _ : ',',
                  s: l,
                  c: g ? g * f : f - l,
                  m: d && d < 4 ? Math.round : 0,
                }));
          b.c = w < r.length ? r.substring(w, r.length) : '';
        } else b.r = 'display' === n && 'none' === r ? Rn : Yn;
        return Y.test(r) && (b.e = 0), (this._pt = b), b;
      },
      ci = {
        top: '0%',
        bottom: '100%',
        left: '0%',
        right: '100%',
        center: '50%',
      },
      ui = function e(t) {
        var n = t.split(' '),
          i = n[0],
          r = n[1] || '50%';
        return (
          ('top' !== i && 'bottom' !== i && 'left' !== r && 'right' !== r) ||
            ((t = i), (i = r), (r = t)),
          (n[0] = ci[i] || i),
          (n[1] = ci[r] || r),
          n.join(' ')
        );
      },
      li = function e(t, n) {
        if (n.tween && n.tween._time === n.tween._dur) {
          var i,
            r,
            a,
            o = n.t,
            s = o.style,
            c = n.u,
            u = o._gsap;
          if ('all' === c || !0 === c) (s.cssText = ''), (r = 1);
          else {
            (c = c.split(',')), (a = c.length);
            while (--a > -1)
              (i = c[a]),
                xn[i] && ((r = 1), (i = 'transformOrigin' === i ? Xn : Un)),
                ni(o, i);
          }
          r &&
            (ni(o, Un),
            u &&
              (u.svg && o.removeAttribute('transform'),
              vi(o, 1),
              (u.uncache = 1)));
        }
      },
      di = {
        clearProps: function e(t, n, i, r, a) {
          if ('isFromStart' !== a.data) {
            var o = (t._pt = new un(t._pt, n, i, 0, 0, li));
            return (o.u = r), (o.pr = -10), (o.tween = a), t._props.push(i), 1;
          }
        },
      },
      hi = [1, 0, 0, 1, 0, 0],
      pi = {},
      mi = function e(t) {
        return 'matrix(1, 0, 0, 1, 0, 0)' === t || 'none' === t || !t;
      },
      fi = function e(t) {
        var n = Gn(t, Un);
        return mi(n) ? hi : n.substr(7).match(N).map(re);
      },
      _i = function e(t, n) {
        var i,
          r,
          a,
          o,
          s = t._gsap || te(t),
          c = t.style,
          u = fi(t);
        return s.svg && t.getAttribute('transform')
          ? ((a = t.transform.baseVal.consolidate().matrix),
            (u = [a.a, a.b, a.c, a.d, a.e, a.f]),
            '1,0,0,1,0,0' === u.join(',') ? hi : u)
          : (u !== hi ||
              t.offsetParent ||
              t === Mn ||
              s.svg ||
              ((a = c.display),
              (c.display = 'block'),
              (i = t.parentNode),
              (i && t.offsetParent) ||
                ((o = 1), (r = t.nextSibling), Mn.appendChild(t)),
              (u = fi(t)),
              a ? (c.display = a) : ni(t, 'display'),
              o &&
                (r
                  ? i.insertBefore(t, r)
                  : i
                  ? i.appendChild(t)
                  : Mn.removeChild(t))),
            n && u.length > 6 ? [u[0], u[1], u[4], u[5], u[12], u[13]] : u);
      },
      Mi = function e(t, n, i, r, a, o) {
        var s,
          c,
          u,
          l,
          d = t._gsap,
          h = a || _i(t, !0),
          p = d.xOrigin || 0,
          m = d.yOrigin || 0,
          f = d.xOffset || 0,
          _ = d.yOffset || 0,
          M = h[0],
          v = h[1],
          g = h[2],
          y = h[3],
          b = h[4],
          w = h[5],
          A = n.split(' '),
          x = parseFloat(A[0]) || 0,
          L = parseFloat(A[1]) || 0;
        i
          ? h !== hi &&
            (c = M * y - v * g) &&
            ((u = x * (y / c) + L * (-g / c) + (g * w - y * b) / c),
            (l = x * (-v / c) + L * (M / c) - (M * w - v * b) / c),
            (x = u),
            (L = l))
          : ((s = ei(t)),
            (x = s.x + (~A[0].indexOf('%') ? (x / 100) * s.width : x)),
            (L =
              s.y + (~(A[1] || A[0]).indexOf('%') ? (L / 100) * s.height : L))),
          r || (!1 !== r && d.smooth)
            ? ((b = x - p),
              (w = L - m),
              (d.xOffset = f + (b * M + w * g) - b),
              (d.yOffset = _ + (b * v + w * y) - w))
            : (d.xOffset = d.yOffset = 0),
          (d.xOrigin = x),
          (d.yOrigin = L),
          (d.smooth = !!r),
          (d.origin = n),
          (d.originIsAbsolute = !!i),
          (t.style[Xn] = '0px 0px'),
          o &&
            (ii(o, d, 'xOrigin', p, x),
            ii(o, d, 'yOrigin', m, L),
            ii(o, d, 'xOffset', f, d.xOffset),
            ii(o, d, 'yOffset', _, d.yOffset)),
          t.setAttribute('data-svg-origin', x + ' ' + L);
      },
      vi = function e(t, n) {
        var i = t._gsap || new Pt(t);
        if ('x' in i && !n && !i.uncache) return i;
        var r,
          a,
          o,
          s,
          c,
          u,
          l,
          d,
          h,
          m,
          f,
          _,
          M,
          v,
          g,
          y,
          b,
          w,
          A,
          x,
          L,
          T,
          z,
          S,
          O,
          E,
          k,
          C,
          D,
          N,
          P,
          j,
          Y = t.style,
          R = i.scaleX < 0,
          B = 'px',
          W = 'deg',
          I = Gn(t, Xn) || '0';
        return (
          (r = a = o = u = l = d = h = m = f = 0),
          (s = c = 1),
          (i.svg = !(!t.getCTM || !ti(t))),
          (v = _i(t, i.svg)),
          i.svg &&
            ((S = !i.uncache && t.getAttribute('data-svg-origin')),
            Mi(t, S || I, !!S || i.originIsAbsolute, !1 !== i.smooth, v)),
          (_ = i.xOrigin || 0),
          (M = i.yOrigin || 0),
          v !== hi &&
            ((w = v[0]),
            (A = v[1]),
            (x = v[2]),
            (L = v[3]),
            (r = T = v[4]),
            (a = z = v[5]),
            6 === v.length
              ? ((s = Math.sqrt(w * w + A * A)),
                (c = Math.sqrt(L * L + x * x)),
                (u = w || A ? zn(A, w) * Ln : 0),
                (h = x || L ? zn(x, L) * Ln + u : 0),
                h && (c *= Math.cos(h * Tn)),
                i.svg &&
                  ((r -= _ - (_ * w + M * x)), (a -= M - (_ * A + M * L))))
              : ((j = v[6]),
                (N = v[7]),
                (k = v[8]),
                (C = v[9]),
                (D = v[10]),
                (P = v[11]),
                (r = v[12]),
                (a = v[13]),
                (o = v[14]),
                (g = zn(j, D)),
                (l = g * Ln),
                g &&
                  ((y = Math.cos(-g)),
                  (b = Math.sin(-g)),
                  (S = T * y + k * b),
                  (O = z * y + C * b),
                  (E = j * y + D * b),
                  (k = T * -b + k * y),
                  (C = z * -b + C * y),
                  (D = j * -b + D * y),
                  (P = N * -b + P * y),
                  (T = S),
                  (z = O),
                  (j = E)),
                (g = zn(-x, D)),
                (d = g * Ln),
                g &&
                  ((y = Math.cos(-g)),
                  (b = Math.sin(-g)),
                  (S = w * y - k * b),
                  (O = A * y - C * b),
                  (E = x * y - D * b),
                  (P = L * b + P * y),
                  (w = S),
                  (A = O),
                  (x = E)),
                (g = zn(A, w)),
                (u = g * Ln),
                g &&
                  ((y = Math.cos(g)),
                  (b = Math.sin(g)),
                  (S = w * y + A * b),
                  (O = T * y + z * b),
                  (A = A * y - w * b),
                  (z = z * y - T * b),
                  (w = S),
                  (T = O)),
                l &&
                  Math.abs(l) + Math.abs(u) > 359.9 &&
                  ((l = u = 0), (d = 180 - d)),
                (s = re(Math.sqrt(w * w + A * A + x * x))),
                (c = re(Math.sqrt(z * z + j * j))),
                (g = zn(T, z)),
                (h = Math.abs(g) > 2e-4 ? g * Ln : 0),
                (f = P ? 1 / (P < 0 ? -P : P) : 0)),
            i.svg &&
              ((S = t.getAttribute('transform')),
              (i.forceCSS = t.setAttribute('transform', '') || !mi(Gn(t, Un))),
              S && t.setAttribute('transform', S))),
          Math.abs(h) > 90 &&
            Math.abs(h) < 270 &&
            (R
              ? ((s *= -1),
                (h += u <= 0 ? 180 : -180),
                (u += u <= 0 ? 180 : -180))
              : ((c *= -1), (h += h <= 0 ? 180 : -180))),
          (i.x =
            ((i.xPercent =
              r && Math.round(t.offsetWidth / 2) === Math.round(-r) ? -50 : 0)
              ? 0
              : r) + B),
          (i.y =
            ((i.yPercent =
              a && Math.round(t.offsetHeight / 2) === Math.round(-a) ? -50 : 0)
              ? 0
              : a) + B),
          (i.z = o + B),
          (i.scaleX = re(s)),
          (i.scaleY = re(c)),
          (i.rotation = re(u) + W),
          (i.rotationX = re(l) + W),
          (i.rotationY = re(d) + W),
          (i.skewX = h + W),
          (i.skewY = m + W),
          (i.transformPerspective = f + B),
          (i.zOrigin = parseFloat(I.split(' ')[2]) || 0) && (Y[Xn] = gi(I)),
          (i.xOffset = i.yOffset = 0),
          (i.force3D = p.force3D),
          (i.renderTransform = i.svg ? Ti : wn ? Li : bi),
          (i.uncache = 0),
          i
        );
      },
      gi = function e(t) {
        return (t = t.split(' '))[0] + ' ' + t[1];
      },
      yi = function e(t, n, i) {
        var r = Ie(n);
        return re(parseFloat(n) + parseFloat(ai(t, 'x', i + 'px', r))) + r;
      },
      bi = function e(t, n) {
        (n.z = '0px'),
          (n.rotationY = n.rotationX = '0deg'),
          (n.force3D = 0),
          Li(t, n);
      },
      wi = '0deg',
      Ai = '0px',
      xi = ') ',
      Li = function e(t, n) {
        var i = n || this,
          r = i.xPercent,
          a = i.yPercent,
          o = i.x,
          s = i.y,
          c = i.z,
          u = i.rotation,
          l = i.rotationY,
          d = i.rotationX,
          h = i.skewX,
          p = i.skewY,
          m = i.scaleX,
          f = i.scaleY,
          _ = i.transformPerspective,
          M = i.force3D,
          v = i.target,
          g = i.zOrigin,
          y = '',
          b = ('auto' === M && t && 1 !== t) || !0 === M;
        if (g && (d !== wi || l !== wi)) {
          var w,
            A = parseFloat(l) * Tn,
            x = Math.sin(A),
            L = Math.cos(A);
          (A = parseFloat(d) * Tn),
            (w = Math.cos(A)),
            (o = yi(v, o, x * w * -g)),
            (s = yi(v, s, -Math.sin(A) * -g)),
            (c = yi(v, c, L * w * -g + g));
        }
        _ !== Ai && (y += 'perspective(' + _ + xi),
          (r || a) && (y += 'translate(' + r + '%, ' + a + '%) '),
          (b || o !== Ai || s !== Ai || c !== Ai) &&
            (y +=
              c !== Ai || b
                ? 'translate3d(' + o + ', ' + s + ', ' + c + ') '
                : 'translate(' + o + ', ' + s + xi),
          u !== wi && (y += 'rotate(' + u + xi),
          l !== wi && (y += 'rotateY(' + l + xi),
          d !== wi && (y += 'rotateX(' + d + xi),
          (h === wi && p === wi) || (y += 'skew(' + h + ', ' + p + xi),
          (1 === m && 1 === f) || (y += 'scale(' + m + ', ' + f + xi),
          (v.style[Un] = y || 'translate(0, 0)');
      },
      Ti = function e(t, n) {
        var i,
          r,
          a,
          o,
          s,
          c = n || this,
          u = c.xPercent,
          l = c.yPercent,
          d = c.x,
          h = c.y,
          p = c.rotation,
          m = c.skewX,
          f = c.skewY,
          _ = c.scaleX,
          M = c.scaleY,
          v = c.target,
          g = c.xOrigin,
          y = c.yOrigin,
          b = c.xOffset,
          w = c.yOffset,
          A = c.forceCSS,
          x = parseFloat(d),
          L = parseFloat(h);
        (p = parseFloat(p)),
          (m = parseFloat(m)),
          (f = parseFloat(f)),
          f && ((f = parseFloat(f)), (m += f), (p += f)),
          p || m
            ? ((p *= Tn),
              (m *= Tn),
              (i = Math.cos(p) * _),
              (r = Math.sin(p) * _),
              (a = Math.sin(p - m) * -M),
              (o = Math.cos(p - m) * M),
              m &&
                ((f *= Tn),
                (s = Math.tan(m - f)),
                (s = Math.sqrt(1 + s * s)),
                (a *= s),
                (o *= s),
                f &&
                  ((s = Math.tan(f)),
                  (s = Math.sqrt(1 + s * s)),
                  (i *= s),
                  (r *= s))),
              (i = re(i)),
              (r = re(r)),
              (a = re(a)),
              (o = re(o)))
            : ((i = _), (o = M), (r = a = 0)),
          ((x && !~(d + '').indexOf('px')) ||
            (L && !~(h + '').indexOf('px'))) &&
            ((x = ai(v, 'x', d, 'px')), (L = ai(v, 'y', h, 'px'))),
          (g || y || b || w) &&
            ((x = re(x + g - (g * i + y * a) + b)),
            (L = re(L + y - (g * r + y * o) + w))),
          (u || l) &&
            ((s = v.getBBox()),
            (x = re(x + (u / 100) * s.width)),
            (L = re(L + (l / 100) * s.height))),
          (s =
            'matrix(' +
            i +
            ',' +
            r +
            ',' +
            a +
            ',' +
            o +
            ',' +
            x +
            ',' +
            L +
            ')'),
          v.setAttribute('transform', s),
          A && (v.style[Un] = s);
      },
      zi = function e(t, n, i, r, a, o) {
        var s,
          c,
          u = 360,
          l = A(a),
          d = parseFloat(a) * (l && ~a.indexOf('rad') ? Ln : 1),
          h = o ? d * o : d - r,
          p = r + h + 'deg';
        return (
          l &&
            ((s = a.split('_')[1]),
            'short' === s &&
              ((h %= u), h !== h % (u / 2) && (h += h < 0 ? u : -u)),
            'cw' === s && h < 0
              ? (h = ((h + u * Sn) % u) - ~~(h / u) * u)
              : 'ccw' === s &&
                h > 0 &&
                (h = ((h - u * Sn) % u) - ~~(h / u) * u)),
          (t._pt = c = new un(t._pt, n, i, r, h, Nn)),
          (c.e = p),
          (c.u = 'deg'),
          t._props.push(i),
          c
        );
      },
      Si = function e(t, n, i) {
        var r,
          a,
          o,
          s,
          c,
          u,
          l,
          d,
          h = yn.style,
          p = i._gsap,
          m = 'perspective,force3D,transformOrigin,svgOrigin';
        for (a in ((h.cssText =
          getComputedStyle(i).cssText + ';position:absolute;display:block;'),
        (h[Un] = n),
        _n.body.appendChild(yn),
        (r = vi(yn, 1)),
        xn))
          (o = p[a]),
            (s = r[a]),
            o !== s &&
              m.indexOf(a) < 0 &&
              ((l = Ie(o)),
              (d = Ie(s)),
              (c = l !== d ? ai(i, a, o, d) : parseFloat(o)),
              (u = parseFloat(s)),
              (t._pt = new un(t._pt, p, a, c, u - c, Dn)),
              (t._pt.u = d || 0),
              t._props.push(a));
        _n.body.removeChild(yn);
      };
    ie('padding,margin,Width,Radius', function (e, t) {
      var n = 'Top',
        i = 'Right',
        r = 'Bottom',
        a = 'Left',
        o = (t < 3 ? [n, i, r, a] : [n + a, n + i, r + i, r + a]).map(function (
          n
        ) {
          return t < 2 ? e + n : 'border' + n + e;
        });
      di[t > 1 ? 'border' + e : e] = function (e, t, n, i, r) {
        var a, s;
        if (arguments.length < 4)
          return (
            (a = o.map(function (t) {
              return oi(e, t, n);
            })),
            (s = a.join(' ')),
            5 === s.split(a[0]).length ? a[0] : s
          );
        (a = (i + '').split(' ')),
          (s = {}),
          o.forEach(function (e, t) {
            return (s[e] = a[t] = a[t] || a[((t - 1) / 2) | 0]);
          }),
          e.init(t, s, r);
      };
    });
    var Oi = {
      name: 'css',
      register: Kn,
      targetTest: function e(t) {
        return t.style && t.nodeType;
      },
      init: function e(t, n, i, r, a) {
        var o,
          s,
          c,
          u,
          l,
          d,
          h,
          m,
          f,
          _,
          M,
          v,
          g,
          y,
          b,
          w = this._props,
          A = t.style;
        for (h in (vn || Kn(), n))
          if ('autoRound' !== h && ((s = n[h]), !J[h] || !qt(h, n, i, r, t, a)))
            if (
              ((l = typeof s),
              (d = di[h]),
              'function' === l && ((s = s.call(i, r, t, a)), (l = typeof s)),
              'string' === l && ~s.indexOf('random(') && (s = rt(s)),
              d)
            )
              d(this, t, h, s, i) && (b = 1);
            else if ('--' === h.substr(0, 2))
              this.add(
                A,
                'setProperty',
                getComputedStyle(t).getPropertyValue(h) + '',
                s + '',
                r,
                a,
                0,
                0,
                h
              );
            else if ('undefined' !== l) {
              if (
                ((o = oi(t, h)),
                (u = parseFloat(o)),
                (_ =
                  'string' === l && '=' === s.charAt(1)
                    ? +(s.charAt(0) + '1')
                    : 0),
                _ && (s = s.substr(2)),
                (c = parseFloat(s)),
                h in Cn &&
                  ('autoAlpha' === h &&
                    (1 === u &&
                      'hidden' === oi(t, 'visibility') &&
                      c &&
                      (u = 0),
                    ii(
                      this,
                      A,
                      'visibility',
                      u ? 'inherit' : 'hidden',
                      c ? 'inherit' : 'hidden',
                      !c
                    )),
                  'scale' !== h &&
                    'transform' !== h &&
                    ((h = Cn[h]), ~h.indexOf(',') && (h = h.split(',')[0]))),
                (M = h in xn),
                M)
              )
                if (
                  (v ||
                    ((g = t._gsap),
                    g.renderTransform || vi(t),
                    (y = !1 !== n.smoothOrigin && g.smooth),
                    (v = this._pt = new un(
                      this._pt,
                      A,
                      Un,
                      0,
                      1,
                      g.renderTransform,
                      g,
                      0,
                      -1
                    )),
                    (v.dep = 1)),
                  'scale' === h)
                )
                  (this._pt = new un(
                    this._pt,
                    g,
                    'scaleY',
                    g.scaleY,
                    _ ? _ * c : c - g.scaleY
                  )),
                    w.push('scaleY', h),
                    (h += 'X');
                else {
                  if ('transformOrigin' === h) {
                    (s = ui(s)),
                      g.svg
                        ? Mi(t, s, 0, y, 0, this)
                        : ((f = parseFloat(s.split(' ')[2]) || 0),
                          f !== g.zOrigin &&
                            ii(this, g, 'zOrigin', g.zOrigin, f),
                          ii(this, A, h, gi(o), gi(s)));
                    continue;
                  }
                  if ('svgOrigin' === h) {
                    Mi(t, s, 1, y, 0, this);
                    continue;
                  }
                  if (h in pi) {
                    zi(this, g, h, u, s, _);
                    continue;
                  }
                  if ('smoothOrigin' === h) {
                    ii(this, g, 'smooth', g.smooth, s);
                    continue;
                  }
                  if ('force3D' === h) {
                    g[h] = s;
                    continue;
                  }
                  if ('transform' === h) {
                    Si(this, s, t);
                    continue;
                  }
                }
              else h in A || (h = Zn(h) || h);
              if (
                M ||
                ((c || 0 === c) && (u || 0 === u) && !kn.test(s) && h in A)
              )
                (m = (o + '').substr((u + '').length)),
                  c || (c = 0),
                  (f = Ie(s) || (h in p.units ? p.units[h] : m)),
                  m !== f && (u = ai(t, h, o, f)),
                  (this._pt = new un(
                    this._pt,
                    M ? g : A,
                    h,
                    u,
                    _ ? _ * c : c - u,
                    'px' !== f || !1 === n.autoRound || M ? Dn : jn
                  )),
                  (this._pt.u = f || 0),
                  m !== f && ((this._pt.b = o), (this._pt.r = Pn));
              else if (h in A) si.call(this, t, h, o, s);
              else {
                if (!(h in t)) {
                  q(h, s);
                  continue;
                }
                this.add(t, h, t[h], s, r, a);
              }
              w.push(h);
            }
        b && cn(this);
      },
      get: oi,
      aliases: Cn,
      getSetter: function e(t, n, i) {
        var r = Cn[n];
        return (
          r && r.indexOf(',') < 0 && (n = r),
          n in xn && n !== Xn && (t._gsap.x || oi(t, 'x'))
            ? i && bn === i
              ? 'scale' === n
                ? qn
                : In
              : (bn = i || {}) && ('scale' === n ? Hn : Fn)
            : t.style && !T(t.style[n])
            ? Bn
            : ~n.indexOf('-')
            ? Wn
            : $t(t, n)
        );
      },
      core: { _removeProperty: ni, _getMatrix: _i },
    };
    (mn.utils.checkPrefix = Zn),
      (function (e, t, n, i) {
        var r = ie(e + ',' + t + ',' + n, function (e) {
          xn[e] = 1;
        });
        ie(t, function (e) {
          (p.units[e] = 'deg'), (pi[e] = 1);
        }),
          (Cn[r[13]] = e + ',' + t),
          ie(i, function (e) {
            var t = e.split(':');
            Cn[t[1]] = r[t[0]];
          });
      })(
        'x,y,z,scale,scaleX,scaleY,xPercent,yPercent',
        'rotation,rotationX,rotationY,skewX,skewY',
        'transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective',
        '0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY'
      ),
      ie(
        'x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective',
        function (e) {
          p.units[e] = 'px';
        }
      ),
      mn.registerPlugin(Oi);
    var Ei = mn.registerPlugin(Oi) || mn;
    Ei.core.Tween;
  },
  '../../../node_modules/ieee754/index.js': function (e, t) {
    (t.read = function (e, t, n, i, r) {
      var a,
        o,
        s = 8 * r - i - 1,
        c = (1 << s) - 1,
        u = c >> 1,
        l = -7,
        d = n ? r - 1 : 0,
        h = n ? -1 : 1,
        p = e[t + d];
      for (
        d += h, a = p & ((1 << -l) - 1), p >>= -l, l += s;
        l > 0;
        a = 256 * a + e[t + d], d += h, l -= 8
      );
      for (
        o = a & ((1 << -l) - 1), a >>= -l, l += i;
        l > 0;
        o = 256 * o + e[t + d], d += h, l -= 8
      );
      if (0 === a) a = 1 - u;
      else {
        if (a === c) return o ? NaN : (p ? -1 : 1) * (1 / 0);
        (o += Math.pow(2, i)), (a -= u);
      }
      return (p ? -1 : 1) * o * Math.pow(2, a - i);
    }),
      (t.write = function (e, t, n, i, r, a) {
        var o,
          s,
          c,
          u = 8 * a - r - 1,
          l = (1 << u) - 1,
          d = l >> 1,
          h = 23 === r ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
          p = i ? 0 : a - 1,
          m = i ? 1 : -1,
          f = t < 0 || (0 === t && 1 / t < 0) ? 1 : 0;
        for (
          t = Math.abs(t),
            isNaN(t) || t === 1 / 0
              ? ((s = isNaN(t) ? 1 : 0), (o = l))
              : ((o = Math.floor(Math.log(t) / Math.LN2)),
                t * (c = Math.pow(2, -o)) < 1 && (o--, (c *= 2)),
                (t += o + d >= 1 ? h / c : h * Math.pow(2, 1 - d)),
                t * c >= 2 && (o++, (c /= 2)),
                o + d >= l
                  ? ((s = 0), (o = l))
                  : o + d >= 1
                  ? ((s = (t * c - 1) * Math.pow(2, r)), (o += d))
                  : ((s = t * Math.pow(2, d - 1) * Math.pow(2, r)), (o = 0)));
          r >= 8;
          e[n + p] = 255 & s, p += m, s /= 256, r -= 8
        );
        for (
          o = (o << r) | s, u += r;
          u > 0;
          e[n + p] = 255 & o, p += m, o /= 256, u -= 8
        );
        e[n + p - m] |= 128 * f;
      });
  },
  '../../../node_modules/immediate/lib/browser.js': function (e, t, n) {
    'use strict';
    (function (t) {
      var n,
        i,
        r = t.MutationObserver || t.WebKitMutationObserver;
      if (r) {
        var a = 0,
          o = new r(l),
          s = t.document.createTextNode('');
        o.observe(s, { characterData: !0 }),
          (n = function () {
            s.data = a = ++a % 2;
          });
      } else if (t.setImmediate || 'undefined' === typeof t.MessageChannel)
        n =
          'document' in t &&
          'onreadystatechange' in t.document.createElement('script')
            ? function () {
                var e = t.document.createElement('script');
                (e.onreadystatechange = function () {
                  l(),
                    (e.onreadystatechange = null),
                    e.parentNode.removeChild(e),
                    (e = null);
                }),
                  t.document.documentElement.appendChild(e);
              }
            : function () {
                setTimeout(l, 0);
              };
      else {
        var c = new t.MessageChannel();
        (c.port1.onmessage = l),
          (n = function () {
            c.port2.postMessage(0);
          });
      }
      var u = [];
      function l() {
        var e, t;
        i = !0;
        var n = u.length;
        while (n) {
          (t = u), (u = []), (e = -1);
          while (++e < n) t[e]();
          n = u.length;
        }
        i = !1;
      }
      function d(e) {
        1 !== u.push(e) || i || n();
      }
      e.exports = d;
    }.call(this, n('../../../node_modules/webpack/buildin/global.js')));
  },
  '../../../node_modules/inherits/inherits_browser.js': function (e, t) {
    'function' === typeof Object.create
      ? (e.exports = function e(t, n) {
          n &&
            ((t.super_ = n),
            (t.prototype = Object.create(n.prototype, {
              constructor: {
                value: t,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })));
        })
      : (e.exports = function e(t, n) {
          if (n) {
            t.super_ = n;
            var i = function () {};
            (i.prototype = n.prototype),
              (t.prototype = new i()),
              (t.prototype.constructor = t);
          }
        });
  },
  '../../../node_modules/isarray/index.js': function (e, t) {
    var n = {}.toString;
    e.exports =
      Array.isArray ||
      function (e) {
        return '[object Array]' == n.call(e);
      };
  },
  '../../../node_modules/lie/lib/browser.js': function (e, t, n) {
    'use strict';
    var i = n('../../../node_modules/immediate/lib/browser.js');
    function r() {}
    var a = {},
      o = ['REJECTED'],
      s = ['FULFILLED'],
      c = ['PENDING'];
    function u(e) {
      if ('function' !== typeof e)
        throw new TypeError('resolver must be a function');
      (this.state = c),
        (this.queue = []),
        (this.outcome = void 0),
        e !== r && p(this, e);
    }
    function l(e, t, n) {
      (this.promise = e),
        'function' === typeof t &&
          ((this.onFulfilled = t),
          (this.callFulfilled = this.otherCallFulfilled)),
        'function' === typeof n &&
          ((this.onRejected = n), (this.callRejected = this.otherCallRejected));
    }
    function d(e, t, n) {
      i(function () {
        var i;
        try {
          i = t(n);
        } catch (t) {
          return a.reject(e, t);
        }
        i === e
          ? a.reject(e, new TypeError('Cannot resolve promise with itself'))
          : a.resolve(e, i);
      });
    }
    function h(e) {
      var t = e && e.then;
      if (
        e &&
        ('object' === typeof e || 'function' === typeof e) &&
        'function' === typeof t
      )
        return function n() {
          t.apply(e, arguments);
        };
    }
    function p(e, t) {
      var n = !1;
      function i(t) {
        n || ((n = !0), a.reject(e, t));
      }
      function r(t) {
        n || ((n = !0), a.resolve(e, t));
      }
      function o() {
        t(r, i);
      }
      var s = m(o);
      'error' === s.status && i(s.value);
    }
    function m(e, t) {
      var n = {};
      try {
        (n.value = e(t)), (n.status = 'success');
      } catch (e) {
        (n.status = 'error'), (n.value = e);
      }
      return n;
    }
    function f(e) {
      return e instanceof this ? e : a.resolve(new this(r), e);
    }
    function _(e) {
      var t = new this(r);
      return a.reject(t, e);
    }
    function M(e) {
      var t = this;
      if ('[object Array]' !== Object.prototype.toString.call(e))
        return this.reject(new TypeError('must be an array'));
      var n = e.length,
        i = !1;
      if (!n) return this.resolve([]);
      var o = new Array(n),
        s = 0,
        c = -1,
        u = new this(r);
      while (++c < n) l(e[c], c);
      return u;
      function l(e, r) {
        function c(e) {
          (o[r] = e), ++s !== n || i || ((i = !0), a.resolve(u, o));
        }
        t.resolve(e).then(c, function (e) {
          i || ((i = !0), a.reject(u, e));
        });
      }
    }
    function v(e) {
      var t = this;
      if ('[object Array]' !== Object.prototype.toString.call(e))
        return this.reject(new TypeError('must be an array'));
      var n = e.length,
        i = !1;
      if (!n) return this.resolve([]);
      var o = -1,
        s = new this(r);
      while (++o < n) c(e[o]);
      return s;
      function c(e) {
        t.resolve(e).then(
          function (e) {
            i || ((i = !0), a.resolve(s, e));
          },
          function (e) {
            i || ((i = !0), a.reject(s, e));
          }
        );
      }
    }
    (e.exports = u),
      (u.prototype['finally'] = function (e) {
        if ('function' !== typeof e) return this;
        var t = this.constructor;
        return this.then(n, i);
        function n(n) {
          function i() {
            return n;
          }
          return t.resolve(e()).then(i);
        }
        function i(n) {
          function i() {
            throw n;
          }
          return t.resolve(e()).then(i);
        }
      }),
      (u.prototype['catch'] = function (e) {
        return this.then(null, e);
      }),
      (u.prototype.then = function (e, t) {
        if (
          ('function' !== typeof e && this.state === s) ||
          ('function' !== typeof t && this.state === o)
        )
          return this;
        var n = new this.constructor(r);
        if (this.state !== c) {
          var i = this.state === s ? e : t;
          d(n, i, this.outcome);
        } else this.queue.push(new l(n, e, t));
        return n;
      }),
      (l.prototype.callFulfilled = function (e) {
        a.resolve(this.promise, e);
      }),
      (l.prototype.otherCallFulfilled = function (e) {
        d(this.promise, this.onFulfilled, e);
      }),
      (l.prototype.callRejected = function (e) {
        a.reject(this.promise, e);
      }),
      (l.prototype.otherCallRejected = function (e) {
        d(this.promise, this.onRejected, e);
      }),
      (a.resolve = function (e, t) {
        var n = m(h, t);
        if ('error' === n.status) return a.reject(e, n.value);
        var i = n.value;
        if (i) p(e, i);
        else {
          (e.state = s), (e.outcome = t);
          var r = -1,
            o = e.queue.length;
          while (++r < o) e.queue[r].callFulfilled(t);
        }
        return e;
      }),
      (a.reject = function (e, t) {
        (e.state = o), (e.outcome = t);
        var n = -1,
          i = e.queue.length;
        while (++n < i) e.queue[n].callRejected(t);
        return e;
      }),
      (u.resolve = f),
      (u.reject = _),
      (u.all = M),
      (u.race = v);
  },
  '../../../node_modules/moment-timezone/data/packed/latest.json': function (
    e
  ) {
    e.exports = JSON.parse(
      '{"version":"2020a","zones":["Africa/Abidjan|LMT GMT|g.8 0|01|-2ldXH.Q|48e5","Africa/Accra|LMT GMT +0020|.Q 0 -k|012121212121212121212121212121212121212121212121|-26BbX.8 6tzX.8 MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE|41e5","Africa/Nairobi|LMT EAT +0230 +0245|-2r.g -30 -2u -2J|01231|-1F3Cr.g 3Dzr.g okMu MFXJ|47e5","Africa/Algiers|PMT WET WEST CET CEST|-9.l 0 -10 -10 -20|0121212121212121343431312123431213|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 DA0 Imo0 rd0 De0 9Xz0 1fb0 1ap0 16K0 2yo0 mEp0 hwL0 jxA0 11A0 dDd0 17b0 11B0 1cN0 2Dy0 1cN0 1fB0 1cL0|26e5","Africa/Lagos|LMT WAT|-d.A -10|01|-22y0d.A|17e6","Africa/Bissau|LMT -01 GMT|12.k 10 0|012|-2ldX0 2xoo0|39e4","Africa/Maputo|LMT CAT|-2a.k -20|01|-2GJea.k|26e5","Africa/Cairo|EET EEST|-20 -30|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1bIO0 vb0 1ip0 11z0 1iN0 1nz0 12p0 1pz0 10N0 1pz0 16p0 1jz0 s3d0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1WL0 rd0 1Rz0 wp0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1qL0 Xd0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1ny0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 WL0 1qN0 Rb0 1wp0 On0 1zd0 Lz0 1EN0 Fb0 c10 8n0 8Nd0 gL0 e10 mn0|15e6","Africa/Casablanca|LMT +00 +01|u.k 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-2gMnt.E 130Lt.E rb0 Dd0 dVb0 b6p0 TX0 EoB0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4mn0 SyN0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0|32e5","Africa/Ceuta|WET WEST CET CEST|0 -10 -10 -20|010101010101010101010232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-25KN0 11z0 drd0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1y7o0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4VB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|85e3","Africa/El_Aaiun|LMT -01 +00 +01|Q.M 10 0 -10|012323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1rDz7.c 1GVA7.c 6L0 AL0 1Nd0 XX0 1Cp0 pz0 1cBB0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0|20e4","Africa/Johannesburg|SAST SAST SAST|-1u -20 -30|012121|-2GJdu 1Ajdu 1cL0 1cN0 1cL0|84e5","Africa/Juba|LMT CAT CAST EAT|-26.s -20 -30 -30|01212121212121212121212121212121213|-1yW26.s 1zK06.s 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0|","Africa/Khartoum|LMT CAT CAST EAT|-2a.8 -20 -30 -30|012121212121212121212121212121212131|-1yW2a.8 1zK0a.8 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0 HjL0|51e5","Africa/Monrovia|MMT MMT GMT|H.8 I.u 0|012|-23Lzg.Q 28G01.m|11e5","Africa/Ndjamena|LMT WAT WAST|-10.c -10 -20|0121|-2le10.c 2J3c0.c Wn0|13e5","Africa/Sao_Tome|LMT GMT WAT|A.J 0 -10|0121|-2le00 4i6N0 2q00|","Africa/Tripoli|LMT CET CEST EET|-Q.I -10 -20 -20|012121213121212121212121213123123|-21JcQ.I 1hnBQ.I vx0 4iP0 xx0 4eN0 Bb0 7ip0 U0n0 A10 1db0 1cN0 1db0 1dd0 1db0 1eN0 1bb0 1e10 1cL0 1c10 1db0 1dd0 1db0 1cN0 1db0 1q10 fAn0 1ep0 1db0 AKq0 TA0 1o00|11e5","Africa/Tunis|PMT CET CEST|-9.l -10 -20|0121212121212121212121212121212121|-2nco9.l 18pa9.l 1qM0 DA0 3Tc0 11B0 1ze0 WM0 7z0 3d0 14L0 1cN0 1f90 1ar0 16J0 1gXB0 WM0 1rA0 11c0 nwo0 Ko0 1cM0 1cM0 1rA0 10M0 zuM0 10N0 1aN0 1qM0 WM0 1qM0 11A0 1o00|20e5","Africa/Windhoek|+0130 SAST SAST CAT WAT|-1u -20 -30 -20 -10|01213434343434343434343434343434343434343434343434343|-2GJdu 1Ajdu 1cL0 1SqL0 9Io0 16P0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0|32e4","America/Adak|NST NWT NPT BST BDT AHST HST HDT|b0 a0 a0 b0 a0 a0 a0 90|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|326","America/Anchorage|AST AWT APT AHST AHDT YST AKST AKDT|a0 90 90 a0 90 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T00 8wX0 iA0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|30e4","America/Port_of_Spain|LMT AST|46.4 40|01|-2kNvR.U|43e3","America/Araguaina|LMT -03 -02|3c.M 30 20|0121212121212121212121212121212121212121212121212121|-2glwL.c HdKL.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 ny10 Lz0|14e4","America/Argentina/Buenos_Aires|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 A4p0 uL0 1qN0 WL0|","America/Argentina/Catamarca|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323132321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 7B0 8zb0 uL0|","America/Argentina/Cordoba|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323132323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0 1qN0 WL0|","America/Argentina/Jujuy|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323121323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1ze0 TX0 1ld0 WK0 1wp0 TX0 A4p0 uL0|","America/Argentina/La_Rioja|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL0|","America/Argentina/Mendoza|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232312121321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1u20 SL0 1vd0 Tb0 1wp0 TW0 ri10 Op0 7TX0 uL0|","America/Argentina/Rio_Gallegos|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL0|","America/Argentina/Salta|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0|","America/Argentina/San_Juan|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rld0 m10 8lb0 uL0|","America/Argentina/San_Luis|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323121212321212|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 XX0 1q20 SL0 AN0 vDb0 m10 8lb0 8L0 jd0 1qN0 WL0 1qN0|","America/Argentina/Tucuman|CMT -04 -03 -02|4g.M 40 30 20|0121212121212121212121212121212121212121212323232313232123232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 4N0 8BX0 uL0 1qN0 WL0|","America/Argentina/Ushuaia|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rkN0 8p0 8zb0 uL0|","America/Curacao|LMT -0430 AST|4z.L 4u 40|012|-2kV7o.d 28KLS.d|15e4","America/Asuncion|AMT -04 -03|3O.E 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-1x589.k 1DKM9.k 3CL0 3Dd0 10L0 1pB0 10n0 1pB0 10n0 1pB0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1lB0 14n0 1dd0 1cL0 1fd0 WL0 1rd0 1aL0 1dB0 Xz0 1qp0 Xb0 1qN0 10L0 1rB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 WN0 1qL0 11B0 1nX0 1ip0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 TX0 1tB0 19X0 1a10 1fz0 1a10 1fz0 1cN0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0|28e5","America/Atikokan|CST CDT CWT CPT EST|60 50 50 50 50|0101234|-25TQ0 1in0 Rnb0 3je0 8x30 iw0|28e2","America/Bahia_Banderas|LMT MST CST PST MDT CDT|71 70 60 80 60 50|0121212131414141414141414141414141414152525252525252525252525252525252525252525252525252525252|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nW0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|84e3","America/Bahia|LMT -03 -02|2y.4 30 20|01212121212121212121212121212121212121212121212121212121212121|-2glxp.U HdLp.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 l5B0 Rb0|27e5","America/Barbados|LMT BMT AST ADT|3W.t 3W.t 40 30|01232323232|-1Q0I1.v jsM0 1ODC1.v IL0 1ip0 17b0 1ip0 17b0 1ld0 13b0|28e4","America/Belem|LMT -03 -02|3d.U 30 20|012121212121212121212121212121|-2glwK.4 HdKK.4 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|20e5","America/Belize|LMT CST -0530 CDT|5Q.M 60 5u 50|01212121212121212121212121212121212121212121212121213131|-2kBu7.c fPA7.c Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1f0Mu qn0 lxB0 mn0|57e3","America/Blanc-Sablon|AST ADT AWT APT|40 30 30 30|010230|-25TS0 1in0 UGp0 8x50 iu0|11e2","America/Boa_Vista|LMT -04 -03|42.E 40 30|0121212121212121212121212121212121|-2glvV.k HdKV.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 smp0 WL0 1tB0 2L0|62e2","America/Bogota|BMT -05 -04|4U.g 50 40|0121|-2eb73.I 38yo3.I 2en0|90e5","America/Boise|PST PDT MST MWT MPT MDT|80 70 70 60 60 60|0101023425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-261q0 1nX0 11B0 1nX0 8C10 JCL0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 Dd0 1Kn0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e4","America/Cambridge_Bay|-00 MST MWT MPT MDDT MDT CST CDT EST|0 70 60 60 50 60 60 50 50|0123141515151515151515151515151515151515151515678651515151515151515151515151515151515151515151515151515151515151515151515151|-21Jc0 RO90 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11A0 1nX0 2K0 WQ0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e2","America/Campo_Grande|LMT -04 -03|3C.s 40 30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwl.w HdLl.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|77e4","America/Cancun|LMT CST EST EDT CDT|5L.4 60 50 40 50|0123232341414141414141414141414141414141412|-1UQG0 2q2o0 yLB0 1lb0 14p0 1lb0 14p0 Lz0 xB0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 Dd0|63e4","America/Caracas|CMT -0430 -04|4r.E 4u 40|01212|-2kV7w.k 28KM2.k 1IwOu kqo0|29e5","America/Cayenne|LMT -04 -03|3t.k 40 30|012|-2mrwu.E 2gWou.E|58e3","America/Panama|CMT EST|5j.A 50|01|-2uduE.o|15e5","America/Chicago|CST CDT EST CWT CPT|60 50 50 50 50|01010101010101010101010101010101010102010101010103401010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 1wp0 TX0 WN0 1qL0 1cN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 11B0 1Hz0 14p0 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|92e5","America/Chihuahua|LMT MST CST CDT MDT|74.k 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|81e4","America/Costa_Rica|SJMT CST CDT|5A.d 60 50|0121212121|-1Xd6n.L 2lu0n.L Db0 1Kp0 Db0 pRB0 15b0 1kp0 mL0|12e5","America/Creston|MST PST|70 80|010|-29DR0 43B0|53e2","America/Cuiaba|LMT -04 -03|3I.k 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwf.E HdLf.E 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 4a10 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|54e4","America/Danmarkshavn|LMT -03 -02 GMT|1e.E 30 20 0|01212121212121212121212121212121213|-2a5WJ.k 2z5fJ.k 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 DC0|8","America/Dawson_Creek|PST PDT PWT PPT MST|80 70 70 70 70|0102301010101010101010101010101010101010101010101010101014|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 ML0|12e3","America/Dawson|YST YDT YWT YPT YDDT PST PDT MST|90 80 80 80 70 80 70 70|01010230405656565656565656565656565656565656565656565656565656565656565656565656565656565657|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 jrA0 fNd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0|13e2","America/Denver|MST MDT MWT MPT|70 60 60 60|01010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 11B0 1qL0 WN0 mn0 Ord0 8x20 ix0 LCN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e5","America/Detroit|LMT CST EST EWT EPT EDT|5w.b 60 50 40 40 40|0123425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2Cgir.N peqr.N 156L0 8x40 iv0 6fd0 11z0 JxX1 SMX 1cN0 1cL0 aW10 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e5","America/Edmonton|LMT MST MDT MWT MPT|7x.Q 70 60 60 60|0121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2yd4q.8 shdq.8 1in0 17d0 hz0 2dB0 1fz0 1a10 11z0 1qN0 WL0 1qN0 11z0 IGN0 8x20 ix0 3NB0 11z0 XQp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|10e5","America/Eirunepe|LMT -05 -04|4D.s 50 40|0121212121212121212121212121212121|-2glvk.w HdLk.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0 yTd0 d5X0|31e3","America/El_Salvador|LMT CST CDT|5U.M 60 50|012121|-1XiG3.c 2Fvc3.c WL0 1qN0 WL0|11e5","America/Tijuana|LMT MST PST PDT PWT PPT|7M.4 70 80 70 70 70|012123245232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQE0 4PX0 8mM0 8lc0 SN0 1cL0 pHB0 83r0 zI0 5O10 1Rz0 cOO0 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 BUp0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|20e5","America/Fort_Nelson|PST PDT PWT PPT MST|80 70 70 70 70|01023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010104|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0|39e2","America/Fort_Wayne|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010101023010101010101010101040454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 QI10 Db0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 5Tz0 1o10 qLb0 1cL0 1cN0 1cL0 1qhd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Fortaleza|LMT -03 -02|2y 30 20|0121212121212121212121212121212121212121|-2glxq HdLq 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 5z0 2mN0 On0|34e5","America/Glace_Bay|LMT AST ADT AWT APT|3X.M 40 30 30 30|012134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsI0.c CwO0.c 1in0 UGp0 8x50 iu0 iq10 11z0 Jg10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|19e3","America/Godthab|LMT -03 -02|3q.U 30 20|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5Ux.4 2z5dx.4 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e3","America/Goose_Bay|NST NDT NST NDT NWT NPT AST ADT ADDT|3u.Q 2u.Q 3u 2u 2u 2u 40 30 20|010232323232323245232323232323232323232323232323232323232326767676767676767676767676767676767676767676768676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-25TSt.8 1in0 DXb0 2HbX.8 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 S10 g0u 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|76e2","America/Grand_Turk|KMT EST EDT AST|57.a 50 40 40|01212121212121212121212121212121212121212121212121212121212121212121212121232121212121212121212121212121212121212121|-2l1uQ.O 2HHBQ.O 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 5Ip0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e2","America/Guatemala|LMT CST CDT|62.4 60 50|0121212121|-24KhV.U 2efXV.U An0 mtd0 Nz0 ifB0 17b0 zDB0 11z0|13e5","America/Guayaquil|QMT -05 -04|5e 50 40|0121|-1yVSK 2uILK rz0|27e5","America/Guyana|LMT -0345 -03 -04|3Q.E 3J 30 40|0123|-2dvU7.k 2r6LQ.k Bxbf|80e4","America/Halifax|LMT AST ADT AWT APT|4e.o 40 30 30 30|0121212121212121212121212121212121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsHJ.A xzzJ.A 1db0 3I30 1in0 3HX0 IL0 1E10 ML0 1yN0 Pb0 1Bd0 Mn0 1Bd0 Rz0 1w10 Xb0 1w10 LX0 1w10 Xb0 1w10 Lz0 1C10 Jz0 1E10 OL0 1yN0 Un0 1qp0 Xb0 1qp0 11X0 1w10 Lz0 1HB0 LX0 1C10 FX0 1w10 Xb0 1qp0 Xb0 1BB0 LX0 1td0 Xb0 1qp0 Xb0 Rf0 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 6i10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|39e4","America/Havana|HMT CST CDT|5t.A 50 40|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Meuu.o 72zu.o ML0 sld0 An0 1Nd0 Db0 1Nd0 An0 6Ep0 An0 1Nd0 An0 JDd0 Mn0 1Ap0 On0 1fd0 11X0 1qN0 WL0 1wp0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 14n0 1ld0 14L0 1kN0 15b0 1kp0 1cL0 1cN0 1fz0 1a10 1fz0 1fB0 11z0 14p0 1nX0 11B0 1nX0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 1a10 1in0 1a10 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 17c0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 11A0 6i00 Rc0 1wo0 U00 1tA0 Rc0 1wo0 U00 1wo0 U00 1zc0 U00 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0|21e5","America/Hermosillo|LMT MST CST PST MDT|7n.Q 70 60 80 60|0121212131414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0|64e4","America/Indiana/Knox|CST CDT CWT CPT EST|60 50 50 50 50|0101023010101010101010101010101010101040101010101010101010101010101010101010101010101010141010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 3Cn0 8wp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 z8o0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Indiana/Marengo|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010104545454545414545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 dyN0 11z0 6fd0 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1e6p0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Indiana/Petersburg|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010104010101010101010101010141014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 3Fb0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 19co0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Indiana/Tell_City|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010401054541010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 8wn0 1cN0 1cL0 1cN0 1cK0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Indiana/Vevay|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010102304545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 kPB0 Awn0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1lnd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Indiana/Vincennes|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010454541014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 g0p0 11z0 1o10 11z0 1qL0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 caL0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Indiana/Winamac|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010101010454541054545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1za0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Inuvik|-00 PST PDDT MST MDT|0 80 60 70 60|0121343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-FnA0 tWU0 1fA0 wPe0 2pz0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|35e2","America/Iqaluit|-00 EWT EPT EST EDDT EDT CST CDT|0 40 40 50 30 40 60 50|01234353535353535353535353535353535353535353567353535353535353535353535353535353535353535353535353535353535353535353535353|-16K00 7nX0 iv0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|67e2","America/Jamaica|KMT EST EDT|57.a 50 40|0121212121212121212121|-2l1uQ.O 2uM1Q.O 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0|94e4","America/Juneau|PST PWT PPT PDT YDT YST AKST AKDT|80 70 70 70 80 90 90 80|01203030303030303030303030403030356767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cM0 1cM0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|33e3","America/Kentucky/Louisville|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101010102301010101010101010101010101454545454545414545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 3Fd0 Nb0 LPd0 11z0 RB0 8x30 iw0 1nX1 e0X 9vd0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 xz0 gso0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Kentucky/Monticello|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 SWp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/La_Paz|CMT BST -04|4w.A 3w.A 40|012|-1x37r.o 13b0|19e5","America/Lima|LMT -05 -04|58.A 50 40|0121212121212121|-2tyGP.o 1bDzP.o zX0 1aN0 1cL0 1cN0 1cL0 1PrB0 zX0 1O10 zX0 6Gp0 zX0 98p0 zX0|11e6","America/Los_Angeles|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 5Wp1 1VaX 3dA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e6","America/Maceio|LMT -03 -02|2m.Q 30 20|012121212121212121212121212121212121212121|-2glxB.8 HdLB.8 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 8Q10 WL0 1tB0 5z0 2mN0 On0|93e4","America/Managua|MMT CST EST CDT|5J.c 60 50 50|0121313121213131|-1quie.M 1yAMe.M 4mn0 9Up0 Dz0 1K10 Dz0 s3F0 1KH0 DB0 9In0 k8p0 19X0 1o30 11y0|22e5","America/Manaus|LMT -04 -03|40.4 40 30|01212121212121212121212121212121|-2glvX.U HdKX.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0|19e5","America/Martinique|FFMT AST ADT|44.k 40 30|0121|-2mPTT.E 2LPbT.E 19X0|39e4","America/Matamoros|LMT CST CDT|6E 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|45e4","America/Mazatlan|LMT MST CST PST MDT|75.E 70 60 80 60|0121212131414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|44e4","America/Menominee|CST CDT CWT CPT EST|60 50 50 50 50|01010230101041010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 LCN0 1fz0 6410 9Jb0 1cM0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|85e2","America/Merida|LMT CST EST CDT|5W.s 60 50 50|0121313131313131313131313131313131313131313131313131313131313131313131313131313131313131|-1UQG0 2q2o0 2hz0 wu30 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|11e5","America/Metlakatla|PST PWT PPT PDT AKST AKDT|80 70 70 70 90 80|01203030303030303030303030303030304545450454545454545454545454545454545454545454|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1hU10 Rd0 1zb0 Op0 1zb0 Op0 1zb0 uM0 jB0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2","America/Mexico_City|LMT MST CST CDT CWT|6A.A 70 60 50 50|012121232324232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 gEn0 TX0 3xd0 Jb0 6zB0 SL0 e5d0 17b0 1Pff0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|20e6","America/Miquelon|LMT AST -03 -02|3I.E 40 30 20|012323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2mKkf.k 2LTAf.k gQ10 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|61e2","America/Moncton|EST AST ADT AWT APT|50 40 30 30 30|012121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsH0 CwN0 1in0 zAo0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1K10 Lz0 1zB0 NX0 1u10 Wn0 S20 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14n1 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 ReX 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|64e3","America/Monterrey|LMT CST CDT|6F.g 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|41e5","America/Montevideo|LMT MMT -04 -03 -0330 -0230 -02 -0130|3I.P 3I.P 40 30 3u 2u 20 1u|012343434343434343434343435353636353636375363636363636363636363636363636363636363636363|-2tRUf.9 sVc0 8jcf.9 1db0 1dcu 1cLu 1dcu 1cLu ircu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu WLu 1fAu 1cLu 1o0u 11zu NAu 3jXu zXu Dq0u 19Xu pcu jz0 cm10 19X0 6tB0 1fbu 3o0u jX0 4vB0 xz0 3Cp0 mmu 1a10 IMu Db0 4c10 uL0 1Nd0 An0 1SN0 uL0 mp0 28L0 iPB0 un0 1SN0 xz0 1zd0 Lz0 1zd0 Rb0 1zd0 On0 1wp0 Rb0 s8p0 1fB0 1ip0 11z0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 11z0|17e5","America/Toronto|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101012301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 11Wu 1nzu 1fD0 WJ0 1wr0 Nb0 1Ap0 On0 1zd0 On0 1wp0 TX0 1tB0 TX0 1tB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 4kM0 8x40 iv0 1o10 11z0 1nX0 11z0 1o10 11z0 1o10 1qL0 11D0 1nX0 11B0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e5","America/Nassau|LMT EST EDT|59.u 50 40|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2kNuO.u 26XdO.u 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|24e4","America/New_York|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 11B0 1qL0 1a10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x40 iv0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e6","America/Nipigon|EST EDT EWT EPT|50 40 40 40|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 Rnb0 3je0 8x40 iv0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|16e2","America/Nome|NST NWT NPT BST BDT YST AKST AKDT|b0 a0 a0 b0 a0 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cl0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|38e2","America/Noronha|LMT -02 -01|29.E 20 10|0121212121212121212121212121212121212121|-2glxO.k HdKO.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0|30e2","America/North_Dakota/Beulah|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/North_Dakota/Center|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/North_Dakota/New_Salem|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","America/Ojinaga|LMT MST CST CDT MDT|6V.E 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e3","America/Pangnirtung|-00 AST AWT APT ADDT ADT EDT EST CST CDT|0 40 30 30 20 30 40 50 60 50|012314151515151515151515151515151515167676767689767676767676767676767676767676767676767676767676767676767676767676767676767|-1XiM0 PnG0 8x50 iu0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1o00 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2","America/Paramaribo|LMT PMT PMT -0330 -03|3E.E 3E.Q 3E.A 3u 30|01234|-2nDUj.k Wqo0.c qanX.I 1yVXN.o|24e4","America/Phoenix|MST MDT MWT|70 60 60|01010202010|-261r0 1nX0 11B0 1nX0 SgN0 4Al1 Ap0 1db0 SWqX 1cL0|42e5","America/Port-au-Prince|PPMT EST EDT|4N 50 40|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-28RHb 2FnMb 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14q0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 i6n0 1nX0 11B0 1nX0 d430 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 3iN0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5","America/Rio_Branco|LMT -05 -04|4v.c 50 40|01212121212121212121212121212121|-2glvs.M HdLs.M 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0 d5X0|31e4","America/Porto_Velho|LMT -04 -03|4f.A 40 30|012121212121212121212121212121|-2glvI.o HdKI.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|37e4","America/Puerto_Rico|AST AWT APT|40 30 30|0120|-17lU0 7XT0 iu0|24e5","America/Punta_Arenas|SMT -05 -04 -03|4G.K 50 40 30|0102021212121212121232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-2q2jh.e fJAh.e 5knG.K 1Vzh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 blz0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0|","America/Rainy_River|CST CDT CWT CPT|60 50 50 50|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TQ0 1in0 Rnb0 3je0 8x30 iw0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|842","America/Rankin_Inlet|-00 CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313131313131313131313131313131313131313131313131313131313131313131|-vDc0 keu0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e2","America/Recife|LMT -03 -02|2j.A 30 20|0121212121212121212121212121212121212121|-2glxE.o HdLE.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0|33e5","America/Regina|LMT MST MDT MWT MPT CST|6W.A 70 60 60 60 60|012121212121212121212121341212121212121212121212121215|-2AD51.o uHe1.o 1in0 s2L0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 66N0 1cL0 1cN0 19X0 1fB0 1cL0 1fB0 1cL0 1cN0 1cL0 M30 8x20 ix0 1ip0 1cL0 1ip0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 3NB0 1cL0 1cN0|19e4","America/Resolute|-00 CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313431313131313131313131313131313131313131313131313131313131313131|-SnA0 GWS0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|229","America/Santarem|LMT -04 -03|3C.M 40 30|0121212121212121212121212121212|-2glwl.c HdLl.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0|21e4","America/Santiago|SMT -05 -04 -03|4G.K 50 40 30|010202121212121212321232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-2q2jh.e fJAh.e 5knG.K 1Vzh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 9Bz0 jb0 1oN0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0|62e5","America/Santo_Domingo|SDMT EST EDT -0430 AST|4E 50 40 4u 40|01213131313131414|-1ttjk 1lJMk Mn0 6sp0 Lbu 1Cou yLu 1RAu wLu 1QMu xzu 1Q0u xXu 1PAu 13jB0 e00|29e5","America/Sao_Paulo|LMT -03 -02|36.s 30 20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwR.w HdKR.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 pTd0 PX0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|20e6","America/Scoresbysund|LMT -02 -01 +00|1r.Q 20 10 0|0121323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2a5Ww.8 2z5ew.8 1a00 1cK0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|452","America/Sitka|PST PWT PPT PDT YST AKST AKDT|80 70 70 70 90 90 80|01203030303030303030303030303030345656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|90e2","America/St_Johns|NST NDT NST NDT NWT NPT NDDT|3u.Q 2u.Q 3u 2u 2u 2u 1u|01010101010101010101010101010101010102323232323232324523232323232323232323232323232323232323232323232323232323232323232323232323232323232326232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-28oit.8 14L0 1nB0 1in0 1gm0 Dz0 1JB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1fB0 19X0 1fB0 19X0 10O0 eKX.8 19X0 1iq0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4","America/Swift_Current|LMT MST MDT MWT MPT CST|7b.k 70 60 60 60 60|012134121212121212121215|-2AD4M.E uHdM.E 1in0 UGp0 8x20 ix0 1o10 17b0 1ip0 11z0 1o10 11z0 1o10 11z0 isN0 1cL0 3Cp0 1cL0 1cN0 11z0 1qN0 WL0 pMp0|16e3","America/Tegucigalpa|LMT CST CDT|5M.Q 60 50|01212121|-1WGGb.8 2ETcb.8 WL0 1qN0 WL0 GRd0 AL0|11e5","America/Thule|LMT AST ADT|4z.8 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5To.Q 31NBo.Q 1cL0 1cN0 1cL0 1fB0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|656","America/Thunder_Bay|CST EST EWT EPT EDT|60 50 40 40 40|0123141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-2q5S0 1iaN0 8x40 iv0 XNB0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4","America/Vancouver|PST PDT PWT PPT|80 70 70 70|0102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TO0 1in0 UGp0 8x10 iy0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5","America/Whitehorse|YST YDT YWT YPT YDDT PST PDT MST|90 80 80 80 70 80 70 70|01010230405656565656565656565656565656565656565656565656565656565656565656565656565656565657|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 3NA0 vrd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0|23e3","America/Winnipeg|CST CDT CWT CPT|60 50 50 50|010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aIi0 WL0 3ND0 1in0 Jap0 Rb0 aCN0 8x30 iw0 1tB0 11z0 1ip0 11z0 1o10 11z0 1o10 11z0 1rd0 10L0 1op0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 1cL0 1cN0 11z0 6i10 WL0 6i10 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|66e4","America/Yakutat|YST YWT YPT YDT AKST AKDT|90 80 80 80 90 80|01203030303030303030303030303030304545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-17T10 8x00 iz0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cn0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|642","America/Yellowknife|-00 MST MWT MPT MDDT MDT|0 70 60 60 50 60|012314151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151|-1pdA0 hix0 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|19e3","Antarctica/Casey|-00 +08 +11|0 -80 -b0|01212121|-2q00 1DjS0 T90 40P0 KL0 blz0 3m10|10","Antarctica/Davis|-00 +07 +05|0 -70 -50|01012121|-vyo0 iXt0 alj0 1D7v0 VB0 3Wn0 KN0|70","Antarctica/DumontDUrville|-00 +10|0 -a0|0101|-U0o0 cfq0 bFm0|80","Antarctica/Macquarie|AEST AEDT -00 +11|-a0 -b0 0 -b0|0102010101010101010101010101010101010101010101010101010101010101010101010101010101010101013|-29E80 19X0 4SL0 1ayy0 Lvs0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0|1","Antarctica/Mawson|-00 +06 +05|0 -60 -50|012|-CEo0 2fyk0|60","Pacific/Auckland|NZMT NZST NZST NZDT|-bu -cu -c0 -d0|01020202020202020202020202023232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1GCVu Lz0 1tB0 11zu 1o0u 11zu 1o0u 11zu 1o0u 14nu 1lcu 14nu 1lcu 1lbu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1qLu WMu 1qLu 11Au 1n1bu IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|14e5","Antarctica/Palmer|-00 -03 -04 -02|0 30 40 20|0121212121213121212121212121212121212121212121212121212121212121212121212121212121|-cao0 nD0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 jsN0 14N0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0|40","Antarctica/Rothera|-00 -03|0 30|01|gOo0|130","Antarctica/Syowa|-00 +03|0 -30|01|-vs00|20","Antarctica/Troll|-00 +00 +02|0 0 -20|01212121212121212121212121212121212121212121212121212121212121212121|1puo0 hd0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|40","Antarctica/Vostok|-00 +06|0 -60|01|-tjA0|25","Europe/Oslo|CET CEST|-10 -20|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2awM0 Qm0 W6o0 5pf0 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 wJc0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1qM0 WM0 zpc0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|62e4","Asia/Riyadh|LMT +03|-36.Q -30|01|-TvD6.Q|57e5","Asia/Almaty|LMT +05 +06 +07|-57.M -50 -60 -70|012323232323232323232321232323232323232323232323232|-1Pc57.M eUo7.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0|15e5","Asia/Amman|LMT EET EEST|-2n.I -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1yW2n.I 1HiMn.I KL0 1oN0 11b0 1oN0 11b0 1pd0 1dz0 1cp0 11b0 1op0 11b0 fO10 1db0 1e10 1cL0 1cN0 1cL0 1cN0 1fz0 1pd0 10n0 1ld0 14n0 1hB0 15b0 1ip0 19X0 1cN0 1cL0 1cN0 17b0 1ld0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1So0 y00 1fc0 1dc0 1co0 1dc0 1cM0 1cM0 1cM0 1o00 11A0 1lc0 17c0 1cM0 1cM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 4bX0 Dd0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|25e5","Asia/Anadyr|LMT +12 +13 +14 +11|-bN.U -c0 -d0 -e0 -b0|01232121212121212121214121212121212121212121212121212121212141|-1PcbN.U eUnN.U 23CL0 1db0 2q10 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|13e3","Asia/Aqtau|LMT +04 +05 +06|-3l.4 -40 -50 -60|012323232323232323232123232312121212121212121212|-1Pc3l.4 eUnl.4 24PX0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|15e4","Asia/Aqtobe|LMT +04 +05 +06|-3M.E -40 -50 -60|0123232323232323232321232323232323232323232323232|-1Pc3M.E eUnM.E 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0|27e4","Asia/Ashgabat|LMT +04 +05 +06|-3R.w -40 -50 -60|0123232323232323232323212|-1Pc3R.w eUnR.w 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0|41e4","Asia/Atyrau|LMT +03 +05 +06 +04|-3r.I -30 -50 -60 -40|01232323232323232323242323232323232324242424242|-1Pc3r.I eUor.I 24PW0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 2sp0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|","Asia/Baghdad|BMT +03 +04|-2V.A -30 -40|012121212121212121212121212121212121212121212121212121|-26BeV.A 2ACnV.A 11b0 1cp0 1dz0 1dd0 1db0 1cN0 1cp0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1de0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0|66e5","Asia/Qatar|LMT +04 +03|-3q.8 -40 -30|012|-21Jfq.8 27BXq.8|96e4","Asia/Baku|LMT +03 +04 +05|-3j.o -30 -40 -50|01232323232323232323232123232323232323232323232323232323232323232|-1Pc3j.o 1jUoj.o WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 9Je0 1o00 11z0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|27e5","Asia/Bangkok|BMT +07|-6G.4 -70|01|-218SG.4|15e6","Asia/Barnaul|LMT +06 +07 +08|-5z -60 -70 -80|0123232323232323232323212323232321212121212121212121212121212121212|-21S5z pCnz 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 p90 LE0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|","Asia/Beirut|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-21aq0 1on0 1410 1db0 19B0 1in0 1ip0 WL0 1lQp0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 q6N0 En0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1op0 11b0 dA10 17b0 1iN0 17b0 1iN0 17b0 1iN0 17b0 1vB0 SL0 1mp0 13z0 1iN0 17b0 1iN0 17b0 1jd0 12n0 1a10 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0|22e5","Asia/Bishkek|LMT +05 +06 +07|-4W.o -50 -60 -70|012323232323232323232321212121212121212121212121212|-1Pc4W.o eUnW.o 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2e00 1tX0 17b0 1ip0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1cPu 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0|87e4","Asia/Brunei|LMT +0730 +08|-7D.E -7u -80|012|-1KITD.E gDc9.E|42e4","Asia/Kolkata|MMT IST +0630|-5l.a -5u -6u|012121|-2zOtl.a 1r2LP.a 1un0 HB0 7zX0|15e6","Asia/Chita|LMT +08 +09 +10|-7x.Q -80 -90 -a0|012323232323232323232321232323232323232323232323232323232323232312|-21Q7x.Q pAnx.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3re0|33e4","Asia/Choibalsan|LMT +07 +08 +10 +09|-7C -70 -80 -a0 -90|0123434343434343434343434343434343434343434343424242|-2APHC 2UkoC cKn0 1da0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 3Db0 h1f0 1cJ0 1cP0 1cJ0|38e3","Asia/Shanghai|CST CDT|-80 -90|01010101010101010101010101010|-23uw0 18n0 OjB0 Rz0 11d0 1wL0 A10 8HX0 1G10 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 aL0 1tU30 Rb0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0|23e6","Asia/Colombo|MMT +0530 +06 +0630|-5j.w -5u -60 -6u|01231321|-2zOtj.w 1rFbN.w 1zzu 7Apu 23dz0 11zu n3cu|22e5","Asia/Dhaka|HMT +0630 +0530 +06 +07|-5R.k -6u -5u -60 -70|0121343|-18LFR.k 1unn.k HB0 m6n0 2kxbu 1i00|16e6","Asia/Damascus|LMT EET EEST|-2p.c -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-21Jep.c Hep.c 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1xRB0 11X0 1oN0 10L0 1pB0 11b0 1oN0 10L0 1mp0 13X0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 Nb0 1AN0 Nb0 bcp0 19X0 1gp0 19X0 3ld0 1xX0 Vd0 1Bz0 Sp0 1vX0 10p0 1dz0 1cN0 1cL0 1db0 1db0 1g10 1an0 1ap0 1db0 1fd0 1db0 1cN0 1db0 1dd0 1db0 1cp0 1dz0 1c10 1dX0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 19z0 1fB0 1qL0 11B0 1on0 Wp0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0|26e5","Asia/Dili|LMT +08 +09|-8m.k -80 -90|01212|-2le8m.k 1dnXm.k 1nfA0 Xld0|19e4","Asia/Dubai|LMT +04|-3F.c -40|01|-21JfF.c|39e5","Asia/Dushanbe|LMT +05 +06 +07|-4z.c -50 -60 -70|012323232323232323232321|-1Pc4z.c eUnz.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2hB0|76e4","Asia/Famagusta|LMT EET EEST +03|-2f.M -20 -30 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212312121212121212121212121212121212121212121|-1Vc2f.M 2a3cf.M 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 15U0 2Ks0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|","Asia/Gaza|EET EEST IST IDT|-20 -30 -20 -30|0101010101010101010101010101010123232323232323232323232323232320101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1c2q0 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 pBd0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXd0 gM0 8Q00 IM0 1wM0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 11z0 1o10 14o0 1lA1 SKX 1xd1 MKX 1AN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nz0 1220 1qL0 WN0 1qL0 WN0 1qL0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0|18e5","Asia/Hebron|EET EEST IST IDT|-20 -30 -20 -30|010101010101010101010101010101012323232323232323232323232323232010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1c2q0 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 pBd0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXd0 gM0 8Q00 IM0 1wM0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 12L0 1mN0 14o0 1lc0 Tb0 1xd1 MKX bB0 cn0 1cN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nz0 1220 1qL0 WN0 1qL0 WN0 1qL0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0|25e4","Asia/Ho_Chi_Minh|LMT PLMT +07 +08 +09|-76.E -76.u -70 -80 -90|0123423232|-2yC76.E bK00.a 1h7b6.u 5lz0 18o0 3Oq0 k5b0 aW00 BAM0|90e5","Asia/Hong_Kong|LMT HKT HKST HKWT JST|-7A.G -80 -90 -8u -90|0123412121212121212121212121212121212121212121212121212121212121212121|-2CFH0 1taO0 Hc0 xUu 9tBu 11z0 1tDu Rc0 1wo0 11A0 1cM0 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1nX0 U10 1tz0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|73e5","Asia/Hovd|LMT +06 +07 +08|-66.A -60 -70 -80|012323232323232323232323232323232323232323232323232|-2APG6.A 2Uko6.A cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|81e3","Asia/Irkutsk|IMT +07 +08 +09|-6V.5 -70 -80 -90|01232323232323232323232123232323232323232323232323232323232323232|-21zGV.5 pjXV.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4","Europe/Istanbul|IMT EET EEST +03 +04|-1U.U -20 -30 -30 -40|0121212121212121212121212121212121212121212121234312121212121212121212121212121212121212121212121212121212121212123|-2ogNU.U dzzU.U 11b0 8tB0 1on0 1410 1db0 19B0 1in0 3Rd0 Un0 1oN0 11b0 zSN0 CL0 mp0 1Vz0 1gN0 8yn0 1yp0 ML0 1kp0 17b0 1ip0 17b0 1fB0 19X0 1ip0 19X0 1ip0 17b0 qdB0 38L0 1jd0 Tz0 l6O0 11A0 WN0 1qL0 TB0 1tX0 U10 1tz0 11B0 1in0 17d0 z90 cne0 pb0 2Cp0 1800 14o0 1dc0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1a00 1fA0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WO0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 Xc0 1qo0 WM0 1qM0 11A0 1o00 1200 1nA0 11A0 1tA0 U00 15w0|13e6","Asia/Jakarta|BMT +0720 +0730 +09 +08 WIB|-77.c -7k -7u -90 -80 -70|01232425|-1Q0Tk luM0 mPzO 8vWu 6kpu 4PXu xhcu|31e6","Asia/Jayapura|LMT +09 +0930 WIT|-9m.M -90 -9u -90|0123|-1uu9m.M sMMm.M L4nu|26e4","Asia/Jerusalem|JMT IST IDT IDDT|-2k.E -20 -30 -40|012121212121321212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-26Bek.E SyMk.E 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 3LB0 Em0 or0 1cn0 1dB0 16n0 10O0 1ja0 1tC0 14o0 1cM0 1a00 11A0 1Na0 An0 1MP0 AJ0 1Kp0 LC0 1oo0 Wl0 EQN0 Db0 1fB0 Rb0 bXd0 gM0 8Q00 IM0 1wM0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 1hB0 1dX0 1ep0 1aL0 1eN0 17X0 1nf0 11z0 1tB0 19W0 1e10 17b0 1ep0 1gL0 18N0 1fz0 1eN0 17b0 1gq0 1gn0 19d0 1dz0 1c10 17X0 1hB0 1gn0 19d0 1dz0 1c10 17X0 1kp0 1dz0 1c10 1aL0 1eN0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0|81e4","Asia/Kabul|+04 +0430|-40 -4u|01|-10Qs0|46e5","Asia/Kamchatka|LMT +11 +12 +13|-ay.A -b0 -c0 -d0|012323232323232323232321232323232323232323232323232323232323212|-1SLKy.A ivXy.A 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|18e4","Asia/Karachi|LMT +0530 +0630 +05 PKT PKST|-4s.c -5u -6u -50 -50 -60|012134545454|-2xoss.c 1qOKW.c 7zX0 eup0 LqMu 1fy00 1cL0 dK10 11b0 1610 1jX0|24e6","Asia/Urumqi|LMT +06|-5O.k -60|01|-1GgtO.k|32e5","Asia/Kathmandu|LMT +0530 +0545|-5F.g -5u -5J|012|-21JhF.g 2EGMb.g|12e5","Asia/Khandyga|LMT +08 +09 +10 +11|-92.d -80 -90 -a0 -b0|0123232323232323232323212323232323232323232323232343434343434343432|-21Q92.d pAp2.d 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 qK0 yN0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|66e2","Asia/Krasnoyarsk|LMT +06 +07 +08|-6b.q -60 -70 -80|01232323232323232323232123232323232323232323232323232323232323232|-21Hib.q prAb.q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|10e5","Asia/Kuala_Lumpur|SMT +07 +0720 +0730 +09 +08|-6T.p -70 -7k -7u -90 -80|0123435|-2Bg6T.p 17anT.p l5XE 17bO 8Fyu 1so1u|71e5","Asia/Kuching|LMT +0730 +08 +0820 +09|-7l.k -7u -80 -8k -90|0123232323232323242|-1KITl.k gDbP.k 6ynu AnE 1O0k AnE 1NAk AnE 1NAk AnE 1NAk AnE 1O0k AnE 1NAk AnE pAk 8Fz0|13e4","Asia/Macau|LMT CST +09 +10 CDT|-7y.a -80 -90 -a0 -90|012323214141414141414141414141414141414141414141414141414141414141414141|-2CFHy.a 1uqKy.a PX0 1kn0 15B0 11b0 4Qq0 1oM0 11c0 1ko0 1u00 11A0 1cM0 11c0 1o00 11A0 1o00 11A0 1oo0 1400 1o00 11A0 1o00 U00 1tA0 U00 1wo0 Rc0 1wru U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cK0 1cO0 1cK0 1cO0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|57e4","Asia/Magadan|LMT +10 +11 +12|-a3.c -a0 -b0 -c0|012323232323232323232321232323232323232323232323232323232323232312|-1Pca3.c eUo3.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Cq0|95e3","Asia/Makassar|LMT MMT +08 +09 WITA|-7V.A -7V.A -80 -90 -80|01234|-21JjV.A vfc0 myLV.A 8ML0|15e5","Asia/Manila|PST PDT JST|-80 -90 -90|010201010|-1kJI0 AL0 cK10 65X0 mXB0 vX0 VK10 1db0|24e6","Asia/Nicosia|LMT EET EEST|-2d.s -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Vc2d.s 2a3cd.s 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|32e4","Asia/Novokuznetsk|LMT +06 +07 +08|-5M.M -60 -70 -80|012323232323232323232321232323232323232323232323232323232323212|-1PctM.M eULM.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|55e4","Asia/Novosibirsk|LMT +06 +07 +08|-5v.E -60 -70 -80|0123232323232323232323212323212121212121212121212121212121212121212|-21Qnv.E pAFv.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 ml0 Os0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 4eN0|15e5","Asia/Omsk|LMT +05 +06 +07|-4R.u -50 -60 -70|01232323232323232323232123232323232323232323232323232323232323232|-224sR.u pMLR.u 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|12e5","Asia/Oral|LMT +03 +05 +06 +04|-3p.o -30 -50 -60 -40|01232323232323232424242424242424242424242424242|-1Pc3p.o eUop.o 23CK0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 1cM0 IM0 1EM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|27e4","Asia/Pontianak|LMT PMT +0730 +09 +08 WITA WIB|-7h.k -7h.k -7u -90 -80 -80 -70|012324256|-2ua7h.k XE00 munL.k 8Rau 6kpu 4PXu xhcu Wqnu|23e4","Asia/Pyongyang|LMT KST JST KST|-8n -8u -90 -90|012313|-2um8n 97XR 1lTzu 2Onc0 6BA0|29e5","Asia/Qostanay|LMT +04 +05 +06|-4e.s -40 -50 -60|012323232323232323232123232323232323232323232323|-1Pc4e.s eUoe.s 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|","Asia/Qyzylorda|LMT +04 +05 +06|-4l.Q -40 -50 -60|01232323232323232323232323232323232323232323232|-1Pc4l.Q eUol.Q 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 3ao0 1EM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 zQl0|73e4","Asia/Rangoon|RMT +0630 +09|-6o.L -6u -90|0121|-21Jio.L SmnS.L 7j9u|48e5","Asia/Sakhalin|LMT +09 +11 +12 +10|-9u.M -90 -b0 -c0 -a0|01232323232323232323232423232323232424242424242424242424242424242|-2AGVu.M 1BoMu.M 1qFa0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 2pB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|58e4","Asia/Samarkand|LMT +04 +05 +06|-4r.R -40 -50 -60|01232323232323232323232|-1Pc4r.R eUor.R 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0|36e4","Asia/Seoul|LMT KST JST KST KDT KDT|-8r.Q -8u -90 -90 -a0 -9u|012343434343151515151515134343|-2um8r.Q 97XV.Q 1m1zu 6CM0 Fz0 1kN0 14n0 1kN0 14L0 1zd0 On0 69B0 2I0u OL0 1FB0 Rb0 1qN0 TX0 1tB0 TX0 1tB0 TX0 1tB0 TX0 2ap0 12FBu 11A0 1o00 11A0|23e6","Asia/Srednekolymsk|LMT +10 +11 +12|-ae.Q -a0 -b0 -c0|01232323232323232323232123232323232323232323232323232323232323232|-1Pcae.Q eUoe.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|35e2","Asia/Taipei|CST JST CDT|-80 -90 -90|01020202020202020202020202020202020202020|-1iw80 joM0 1yo0 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 10N0 1BX0 10p0 1pz0 10p0 1pz0 10p0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1BB0 ML0 1Bd0 ML0 uq10 1db0 1cN0 1db0 97B0 AL0|74e5","Asia/Tashkent|LMT +05 +06 +07|-4B.b -50 -60 -70|012323232323232323232321|-1Pc4B.b eUnB.b 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0|23e5","Asia/Tbilisi|TBMT +03 +04 +05|-2X.b -30 -40 -50|0123232323232323232323212121232323232323232323212|-1Pc2X.b 1jUnX.b WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cK0 1cL0 1cN0 1cL0 1cN0 2pz0 1cL0 1fB0 3Nz0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 An0 Os0 WM0|11e5","Asia/Tehran|LMT TMT +0330 +04 +05 +0430|-3p.I -3p.I -3u -40 -50 -4u|01234325252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2btDp.I 1d3c0 1huLT.I TXu 1pz0 sN0 vAu 1cL0 1dB0 1en0 pNB0 UL0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 64p0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0|14e6","Asia/Thimphu|LMT +0530 +06|-5W.A -5u -60|012|-Su5W.A 1BGMs.A|79e3","Asia/Tokyo|JST JDT|-90 -a0|010101010|-QJJ0 Rc0 1lc0 14o0 1zc0 Oo0 1zc0 Oo0|38e6","Asia/Tomsk|LMT +06 +07 +08|-5D.P -60 -70 -80|0123232323232323232323212323232323232323232323212121212121212121212|-21NhD.P pxzD.P 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 co0 1bB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Qp0|10e5","Asia/Ulaanbaatar|LMT +07 +08 +09|-77.w -70 -80 -90|012323232323232323232323232323232323232323232323232|-2APH7.w 2Uko7.w cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|12e5","Asia/Ust-Nera|LMT +08 +09 +12 +11 +10|-9w.S -80 -90 -c0 -b0 -a0|012343434343434343434345434343434343434343434343434343434343434345|-21Q9w.S pApw.S 23CL0 1d90 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|65e2","Asia/Vladivostok|LMT +09 +10 +11|-8L.v -90 -a0 -b0|01232323232323232323232123232323232323232323232323232323232323232|-1SJIL.v itXL.v 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4","Asia/Yakutsk|LMT +08 +09 +10|-8C.W -80 -90 -a0|01232323232323232323232123232323232323232323232323232323232323232|-21Q8C.W pAoC.W 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|28e4","Asia/Yekaterinburg|LMT PMT +04 +05 +06|-42.x -3J.5 -40 -50 -60|012343434343434343434343234343434343434343434343434343434343434343|-2ag42.x 7mQh.s qBvJ.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|14e5","Asia/Yerevan|LMT +03 +04 +05|-2W -30 -40 -50|0123232323232323232323212121212323232323232323232323232323232|-1Pc2W 1jUnW WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 4RX0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|13e5","Atlantic/Azores|HMT -02 -01 +00 WET|1S.w 20 10 0 0|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121232323232323232323232323232323234323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2ldW0 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|25e4","Atlantic/Bermuda|LMT AST ADT|4j.i 40 30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1BnRE.G 1LTbE.G 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e3","Atlantic/Canary|LMT -01 WET WEST|11.A 10 0 -10|01232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UtaW.o XPAW.o 1lAK0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4","Atlantic/Cape_Verde|LMT -02 -01|1y.4 20 10|01212|-2ldW0 1eEo0 7zX0 1djf0|50e4","Atlantic/Faroe|LMT WET WEST|r.4 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2uSnw.U 2Wgow.U 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|49e3","Atlantic/Madeira|FMT -01 +00 +01 WET WEST|17.A 10 0 -10 0 -10|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2ldX0 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e4","Atlantic/Reykjavik|LMT -01 +00 GMT|1s 10 0 0|012121212121212121212121212121212121212121212121212121212121212121213|-2uWmw mfaw 1Bd0 ML0 1LB0 Cn0 1LB0 3fX0 C10 HrX0 1cO0 LB0 1EL0 LA0 1C00 Oo0 1wo0 Rc0 1wo0 Rc0 1wo0 Rc0 1zc0 Oo0 1zc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0|12e4","Atlantic/South_Georgia|-02|20|0||30","Atlantic/Stanley|SMT -04 -03 -02|3P.o 40 30 20|012121212121212323212121212121212121212121212121212121212121212121212|-2kJw8.A 12bA8.A 19X0 1fB0 19X0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 Cn0 1Cc10 WL0 1qL0 U10 1tz0 2mN0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 U10 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qN0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 U10 1tz0 U10 1tz0 U10|21e2","Australia/Sydney|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|40e5","Australia/Adelaide|ACST ACDT|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 WM0 1qM0 Rc0 1zc0 U00 1tA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|11e5","Australia/Brisbane|AEST AEDT|-a0 -b0|01010101010101010|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0|20e5","Australia/Broken_Hill|ACST ACDT|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|18e3","Australia/Currie|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 19X0 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|746","Australia/Darwin|ACST ACDT|-9u -au|010101010|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0|12e4","Australia/Eucla|+0845 +0945|-8J -9J|0101010101010101010|-293kI xcX 10jd0 yL0 1cN0 1cL0 1gSp0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|368","Australia/Hobart|AEST AEDT|-a0 -b0|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 19X0 10jd0 yL0 1cN0 1cL0 1fB0 19X0 VfB0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|21e4","Australia/Lord_Howe|AEST +1030 +1130 +11|-a0 -au -bu -b0|0121212121313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313|raC0 1zdu Rb0 1zd0 On0 1zd0 On0 1zd0 On0 1zd0 TXu 1qMu WLu 1tAu WLu 1tAu TXu 1tAu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 11Au 1nXu 1qMu 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu 11zu 1o0u WLu 1qMu 14nu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu|347","Australia/Lindeman|AEST AEDT|-a0 -b0|010101010101010101010|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0|10","Australia/Melbourne|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1qM0 11A0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|39e5","Australia/Perth|AWST AWDT|-80 -90|0101010101010101010|-293jX xcX 10jd0 yL0 1cN0 1cL0 1gSp0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|18e5","CET|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|","Pacific/Easter|EMT -07 -06 -05|7h.s 70 60 50|012121212121212121212121212123232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1uSgG.w 1s4IG.w WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 2pA0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0|30e2","CST6CDT|CST CDT CWT CPT|60 50 50 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","EET|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|","Europe/Dublin|DMT IST GMT BST IST|p.l -y.D 0 -10 -10|01232323232324242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242|-2ax9y.D Rc0 1fzy.D 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 g600 14o0 1wo0 17c0 1io0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5","EST|EST|50|0||","EST5EDT|EST EDT EWT EPT|50 40 40 40|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 SgN0 8x40 iv0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","Etc/GMT-0|GMT|0|0||","Etc/GMT-1|+01|-10|0||","Pacific/Port_Moresby|+10|-a0|0||25e4","Etc/GMT-11|+11|-b0|0||","Pacific/Tarawa|+12|-c0|0||29e3","Etc/GMT-13|+13|-d0|0||","Etc/GMT-14|+14|-e0|0||","Etc/GMT-2|+02|-20|0||","Etc/GMT-3|+03|-30|0||","Etc/GMT-4|+04|-40|0||","Etc/GMT-5|+05|-50|0||","Etc/GMT-6|+06|-60|0||","Indian/Christmas|+07|-70|0||21e2","Etc/GMT-8|+08|-80|0||","Pacific/Palau|+09|-90|0||21e3","Etc/GMT+1|-01|10|0||","Etc/GMT+10|-10|a0|0||","Etc/GMT+11|-11|b0|0||","Etc/GMT+12|-12|c0|0||","Etc/GMT+3|-03|30|0||","Etc/GMT+4|-04|40|0||","Etc/GMT+5|-05|50|0||","Etc/GMT+6|-06|60|0||","Etc/GMT+7|-07|70|0||","Etc/GMT+8|-08|80|0||","Etc/GMT+9|-09|90|0||","Etc/UTC|UTC|0|0||","Europe/Amsterdam|AMT NST +0120 +0020 CEST CET|-j.w -1j.w -1k -k -20 -10|010101010101010101010101010101010101010101012323234545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545|-2aFcj.w 11b0 1iP0 11A0 1io0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1co0 1io0 1yo0 Pc0 1a00 1fA0 1Bc0 Mo0 1tc0 Uo0 1tA0 U00 1uo0 W00 1s00 VA0 1so0 Vc0 1sM0 UM0 1wo0 Rc0 1u00 Wo0 1rA0 W00 1s00 VA0 1sM0 UM0 1w00 fV0 BCX.w 1tA0 U00 1u00 Wo0 1sm0 601k WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|16e5","Europe/Andorra|WET CET CEST|0 -10 -20|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-UBA0 1xIN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|79e3","Europe/Astrakhan|LMT +03 +04 +05|-3c.c -30 -40 -50|012323232323232323212121212121212121212121212121212121212121212|-1Pcrc.c eUMc.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|10e5","Europe/Athens|AMT EET EEST CEST CET|-1y.Q -20 -30 -20 -10|012123434121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a61x.Q CNbx.Q mn0 kU10 9b0 3Es0 Xa0 1fb0 1dd0 k3X0 Nz0 SCp0 1vc0 SO0 1cM0 1a00 1ao0 1fc0 1a10 1fG0 1cg0 1dX0 1bX0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|35e5","Europe/London|GMT BST BDST|0 -10 -20|0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|10e6","Europe/Belgrade|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19RC0 3IP0 WM0 1fA0 1cM0 1cM0 1rc0 Qo0 1vmo0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5","Europe/Berlin|CET CEST CEMT|-10 -20 -30|01010101010101210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 kL0 Nc0 m10 WM0 1ao0 1cp0 dX0 jz0 Dd0 1io0 17c0 1fA0 1a00 1ehA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|41e5","Europe/Prague|CET CEST GMT|-10 -20 0|01010101010101010201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 1qM0 11c0 mp0 xA0 mn0 17c0 1io0 17c0 1fc0 1ao0 1bNc0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|13e5","Europe/Brussels|WET CET CEST WEST|0 -10 -20 -10|0121212103030303030303030303030303030303030303030303212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ehc0 3zX0 11c0 1iO0 11A0 1o00 11A0 my0 Ic0 1qM0 Rc0 1EM0 UM0 1u00 10o0 1io0 1io0 17c0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a30 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 y00 5Wn0 WM0 1fA0 1cM0 16M0 1iM0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|21e5","Europe/Bucharest|BMT EET EEST|-1I.o -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1xApI.o 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Axc0 On0 1fA0 1a10 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|19e5","Europe/Budapest|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1ip0 17b0 1op0 1tb0 Q2m0 3Ne0 WM0 1fA0 1cM0 1cM0 1oJ0 1dc0 1030 1fA0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1iM0 1fA0 8Ha0 Rb0 1wN0 Rb0 1BB0 Lz0 1C20 LB0 SNX0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e5","Europe/Zurich|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19Lc0 11A0 1o00 11A0 1xG10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|38e4","Europe/Chisinau|CMT BMT EET EEST CEST CET MSK MSD|-1T -1I.o -20 -30 -20 -10 -30 -40|012323232323232323234545467676767676767676767323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-26jdT wGMa.A 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 27A0 2en0 39g0 WM0 1fA0 1cM0 V90 1t7z0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 gL0 WO0 1cM0 1cM0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11D0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|67e4","Europe/Copenhagen|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 Tz0 VuO0 60q0 WM0 1fA0 1cM0 1cM0 1cM0 S00 1HA0 Nc0 1C00 Dc0 1Nc0 Ao0 1h5A0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5","Europe/Gibraltar|GMT BST BDST CET CEST|0 -10 -20 -10 -20|010101010101010101010101010101010101010101010101012121212121010121010101010101010101034343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 10Jz0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|30e3","Europe/Helsinki|HMT EET EEST|-1D.N -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1WuND.N OULD.N 1dA0 1xGq0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5","Europe/Kaliningrad|CET CEST EET EEST MSK MSD +03|-10 -20 -20 -30 -30 -40 -30|01010101010101232454545454545454543232323232323232323232323232323232323232323262|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 390 7A0 1en0 12N0 1pbb0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|44e4","Europe/Kiev|KMT EET MSK CEST CET MSD EEST|-22.4 -20 -30 -20 -10 -40 -30|0123434252525252525252525256161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc22.4 eUo2.4 rnz0 2Hg0 WM0 1fA0 da0 1v4m0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 Db0 3220 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|34e5","Europe/Kirov|LMT +03 +04 +05|-3i.M -30 -40 -50|01232323232323232321212121212121212121212121212121212121212121|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|48e4","Europe/Lisbon|LMT WET WEST WEMT CET CEST|A.J 0 -10 -20 -10 -20|012121212121212121212121212121212121212121212321232123212321212121212121212121212121212121212121214121212121212121212121212121212124545454212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2le00 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 pvy0 1cM0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e5","Europe/Luxembourg|LMT CET CEST WET WEST WEST WET|-o.A -10 -20 0 -10 -20 -10|0121212134343434343434343434343434343434343434343434565651212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2DG0o.A t6mo.A TB0 1nX0 Up0 1o20 11A0 rW0 CM0 1qP0 R90 1EO0 UK0 1u20 10m0 1ip0 1in0 17e0 19W0 1fB0 1db0 1cp0 1in0 17d0 1fz0 1a10 1in0 1a10 1in0 17f0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 vA0 60L0 WM0 1fA0 1cM0 17c0 1io0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4","Europe/Madrid|WET WEST WEMT CET CEST|0 -10 -20 -10 -20|010101010101010101210343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-25Td0 19B0 1cL0 1dd0 b1z0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1in0 17d0 iIn0 Hd0 1cL0 bb0 1200 2s20 14n0 5aL0 Mp0 1vz0 17d0 1in0 17d0 1in0 17d0 1in0 17d0 6hX0 11B0 XHX0 1a10 1fz0 1a10 19X0 1cN0 1fz0 1a10 1fC0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|62e5","Europe/Malta|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2arB0 Lz0 1cN0 1db0 1410 1on0 Wp0 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1co0 17c0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1co0 1cM0 1lA0 Xc0 1qq0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1iN0 19z0 1fB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|42e4","Europe/Minsk|MMT EET MSK CEST CET MSD EEST +03|-1O -20 -30 -20 -10 -40 -30 -30|01234343252525252525252525261616161616161616161616161616161616161617|-1Pc1O eUnO qNX0 3gQ0 WM0 1fA0 1cM0 Al0 1tsn0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 3Fc0 1cN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0|19e5","Europe/Monaco|PMT WET WEST WEMT CET CEST|-9.l 0 -10 -20 -10 -20|01212121212121212121212121212121212121212121212121232323232345454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 2RV0 11z0 11B0 1ze0 WM0 1fA0 1cM0 1fa0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|38e3","Europe/Moscow|MMT MMT MST MDST MSD MSK +05 EET EEST MSK|-2u.h -2v.j -3v.j -4v.j -40 -30 -50 -20 -30 -40|012132345464575454545454545454545458754545454545454545454545454545454545454595|-2ag2u.h 2pyW.W 1bA0 11X0 GN0 1Hb0 c4v.j ik0 3DA0 dz0 15A0 c10 2q10 iM10 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|16e6","Europe/Paris|PMT WET WEST CEST CET WEMT|-9.l 0 -10 -20 -10 -20|0121212121212121212121212121212121212121212121212123434352543434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434|-2nco8.l cNb8.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 Ik0 5M30 WM0 1fA0 1cM0 Vx0 hB0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e6","Europe/Riga|RMT LST EET MSK CEST CET MSD EEST|-1A.y -2A.y -20 -30 -20 -10 -40 -30|010102345454536363636363636363727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272|-25TzA.y 11A0 1iM0 ko0 gWm0 yDXA.y 2bX0 3fE0 WM0 1fA0 1cM0 1cM0 4m0 1sLy0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 1o00 11A0 1o00 11A0 1qM0 3oo0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|64e4","Europe/Rome|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2arB0 Lz0 1cN0 1db0 1410 1on0 Wp0 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1cM0 16M0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1C00 LA0 1zc0 Oo0 1C00 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1zc0 Oo0 1fC0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|39e5","Europe/Samara|LMT +03 +04 +05|-3k.k -30 -40 -50|0123232323232323232121232323232323232323232323232323232323212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2y10 14m0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|12e5","Europe/Saratov|LMT +03 +04 +05|-34.i -30 -40 -50|012323232323232321212121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 5810|","Europe/Simferopol|SMT EET MSK CEST CET MSD EEST MSK|-2g -20 -30 -20 -10 -40 -30 -40|012343432525252525252525252161616525252616161616161616161616161616161616172|-1Pc2g eUog rEn0 2qs0 WM0 1fA0 1cM0 3V0 1u0L0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 4eL0 1cL0 1cN0 1cL0 1cN0 dX0 WL0 1cN0 1cL0 1fB0 1o30 11B0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11z0 1nW0|33e4","Europe/Sofia|EET CET CEST EEST|-20 -10 -20 -30|01212103030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030|-168L0 WM0 1fA0 1cM0 1cM0 1cN0 1mKH0 1dd0 1fb0 1ap0 1fb0 1a20 1fy0 1a30 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5","Europe/Stockholm|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 TB0 2yDe0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|15e5","Europe/Tallinn|TMT CET CEST EET MSK MSD EEST|-1D -10 -20 -20 -30 -40 -30|012103421212454545454545454546363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363|-26oND teD 11A0 1Ta0 4rXl KSLD 2FX0 2Jg0 WM0 1fA0 1cM0 18J0 1sTX0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o10 11A0 1qM0 5QM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|41e4","Europe/Tirane|LMT CET CEST|-1j.k -10 -20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glBj.k 14pcj.k 5LC0 WM0 4M0 1fCK0 10n0 1op0 11z0 1pd0 11z0 1qN0 WL0 1qp0 Xb0 1qp0 Xb0 1qp0 11z0 1lB0 11z0 1qN0 11z0 1iN0 16n0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|42e4","Europe/Ulyanovsk|LMT +03 +04 +05 +02|-3d.A -30 -40 -50 -20|01232323232323232321214121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|13e5","Europe/Uzhgorod|CET CEST MSK MSD EET EEST|-10 -20 -30 -40 -20 -30|010101023232323232323232320454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-1cqL0 6i00 WM0 1fA0 1cM0 1ml0 1Cp0 1r3W0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 1Nf0 2pw0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e4","Europe/Vienna|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 3KM0 14o0 LA00 6i00 WM0 1fA0 1cM0 1cM0 1cM0 400 2qM0 1ao0 1co0 1cM0 1io0 17c0 1gHa0 19X0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|18e5","Europe/Vilnius|WMT KMT CET EET MSK CEST MSD EEST|-1o -1z.A -10 -20 -30 -20 -40 -30|012324525254646464646464646473737373737373737352537373737373737373737373737373737373737373737373737373737373737373737373|-293do 6ILM.o 1Ooz.A zz0 Mfd0 29W0 3is0 WM0 1fA0 1cM0 LV0 1tgL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11B0 1o00 11A0 1qM0 8io0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4","Europe/Volgograd|LMT +03 +04 +05|-2V.E -30 -40 -50|012323232323232321212121212121212121212121212121212121212121212|-21IqV.E psLV.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 9Jd0|10e5","Europe/Warsaw|WMT CET CEST EET EEST|-1o -10 -20 -20 -30|012121234312121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ctdo 1LXo 11d0 1iO0 11A0 1o00 11A0 1on0 11A0 6zy0 HWP0 5IM0 WM0 1fA0 1cM0 1dz0 1mL0 1en0 15B0 1aq0 1nA0 11A0 1io0 17c0 1fA0 1a00 iDX0 LA0 1cM0 1cM0 1C00 Oo0 1cM0 1cM0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1C00 LA0 uso0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e5","Europe/Zaporozhye|+0220 EET MSK CEST CET MSD EEST|-2k -20 -30 -20 -10 -40 -30|01234342525252525252525252526161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc2k eUok rdb0 2RE0 WM0 1fA0 8m0 1v9a0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cK0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|77e4","HST|HST|a0|0||","Indian/Chagos|LMT +05 +06|-4N.E -50 -60|012|-2xosN.E 3AGLN.E|30e2","Indian/Cocos|+0630|-6u|0||596","Indian/Kerguelen|-00 +05|0 -50|01|-MG00|130","Indian/Mahe|LMT +04|-3F.M -40|01|-2yO3F.M|79e3","Indian/Maldives|MMT +05|-4S -50|01|-olgS|35e4","Indian/Mauritius|LMT +04 +05|-3O -40 -50|012121|-2xorO 34unO 14L0 12kr0 11z0|15e4","Indian/Reunion|LMT +04|-3F.Q -40|01|-2mDDF.Q|84e4","Pacific/Kwajalein|+11 +10 +09 -12 +12|-b0 -a0 -90 c0 -c0|012034|-1kln0 akp0 6Up0 12ry0 Wan0|14e3","MET|MET MEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|","MST|MST|70|0||","MST7MDT|MST MDT MWT MPT|70 60 60 60|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","Pacific/Chatham|+1215 +1245 +1345|-cf -cJ -dJ|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-WqAf 1adef IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|600","Pacific/Apia|LMT -1130 -11 -10 +14 +13|bq.U bu b0 a0 -e0 -d0|01232345454545454545454545454545454545454545454545454545454|-2nDMx.4 1yW03.4 2rRbu 1ff0 1a00 CI0 AQ0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|37e3","Pacific/Bougainville|+10 +09 +11|-a0 -90 -b0|0102|-16Wy0 7CN0 2MQp0|18e4","Pacific/Chuuk|+10 +09|-a0 -90|01010|-2ewy0 axB0 RVX0 axd0|49e3","Pacific/Efate|LMT +11 +12|-bd.g -b0 -c0|0121212121212121212121|-2l9nd.g 2Szcd.g 1cL0 1oN0 10L0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 Lz0 1Nd0 An0|66e3","Pacific/Enderbury|-12 -11 +13|c0 b0 -d0|012|nIc0 B7X0|1","Pacific/Fakaofo|-11 +13|b0 -d0|01|1Gfn0|483","Pacific/Fiji|LMT +12 +13|-bT.I -c0 -d0|0121212121212121212121212121212121212121212121212121212121212121|-2bUzT.I 3m8NT.I LA0 1EM0 IM0 nJc0 LA0 1o00 Rc0 1wo0 Ao0 1Nc0 Ao0 1Q00 xz0 1SN0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 20o0 pc0 20o0 s00 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 1VA0 s00 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 1VA0 s00|88e4","Pacific/Galapagos|LMT -05 -06|5W.o 50 60|01212|-1yVS1.A 2dTz1.A gNd0 rz0|25e3","Pacific/Gambier|LMT -09|8X.M 90|01|-2jof0.c|125","Pacific/Guadalcanal|LMT +11|-aD.M -b0|01|-2joyD.M|11e4","Pacific/Guam|GST +09 GDT ChST|-a0 -90 -b0 -a0|01020202020202020203|-18jK0 6pB0 AhB0 3QL0 g2p0 3p91 WOX rX0 1zd0 Rb0 1wp0 Rb0 5xd0 rX0 5sN0 zb1 1C0X On0 ULb0|17e4","Pacific/Honolulu|HST HDT HWT HPT HST|au 9u 9u 9u a0|0102304|-1thLu 8x0 lef0 8wWu iAu 46p0|37e4","Pacific/Kiritimati|-1040 -10 +14|aE a0 -e0|012|nIaE B7Xk|51e2","Pacific/Kosrae|+11 +09 +10 +12|-b0 -90 -a0 -c0|01021030|-2ewz0 axC0 HBy0 akp0 axd0 WOK0 1bdz0|66e2","Pacific/Majuro|+11 +09 +10 +12|-b0 -90 -a0 -c0|0102103|-2ewz0 axC0 HBy0 akp0 6RB0 12um0|28e3","Pacific/Marquesas|LMT -0930|9i 9u|01|-2joeG|86e2","Pacific/Pago_Pago|LMT SST|bm.M b0|01|-2nDMB.c|37e2","Pacific/Nauru|LMT +1130 +09 +12|-b7.E -bu -90 -c0|01213|-1Xdn7.E QCnB.E 7mqu 1lnbu|10e3","Pacific/Niue|-1120 -1130 -11|bk bu b0|012|-KfME 17y0a|12e2","Pacific/Norfolk|+1112 +1130 +1230 +11 +12|-bc -bu -cu -b0 -c0|012134343434343434343434343434343434343434|-Kgbc W01G Oo0 1COo0 9Jcu 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|25e4","Pacific/Noumea|LMT +11 +12|-b5.M -b0 -c0|01212121|-2l9n5.M 2EqM5.M xX0 1PB0 yn0 HeP0 Ao0|98e3","Pacific/Pitcairn|-0830 -08|8u 80|01|18Vku|56","Pacific/Pohnpei|+11 +09 +10|-b0 -90 -a0|010210|-2ewz0 axC0 HBy0 akp0 axd0|34e3","Pacific/Rarotonga|-1030 -0930 -10|au 9u a0|012121212121212121212121212|lyWu IL0 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu|13e3","Pacific/Tahiti|LMT -10|9W.g a0|01|-2joe1.I|18e4","Pacific/Tongatapu|+1220 +13 +14|-ck -d0 -e0|0121212121|-1aB0k 2n5dk 15A0 1wo0 xz0 1Q10 xz0 zWN0 s00|75e3","PST8PDT|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|","WET|WET WEST|0 -10|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|"],"links":["Africa/Abidjan|Africa/Bamako","Africa/Abidjan|Africa/Banjul","Africa/Abidjan|Africa/Conakry","Africa/Abidjan|Africa/Dakar","Africa/Abidjan|Africa/Freetown","Africa/Abidjan|Africa/Lome","Africa/Abidjan|Africa/Nouakchott","Africa/Abidjan|Africa/Ouagadougou","Africa/Abidjan|Africa/Timbuktu","Africa/Abidjan|Atlantic/St_Helena","Africa/Cairo|Egypt","Africa/Johannesburg|Africa/Maseru","Africa/Johannesburg|Africa/Mbabane","Africa/Lagos|Africa/Bangui","Africa/Lagos|Africa/Brazzaville","Africa/Lagos|Africa/Douala","Africa/Lagos|Africa/Kinshasa","Africa/Lagos|Africa/Libreville","Africa/Lagos|Africa/Luanda","Africa/Lagos|Africa/Malabo","Africa/Lagos|Africa/Niamey","Africa/Lagos|Africa/Porto-Novo","Africa/Maputo|Africa/Blantyre","Africa/Maputo|Africa/Bujumbura","Africa/Maputo|Africa/Gaborone","Africa/Maputo|Africa/Harare","Africa/Maputo|Africa/Kigali","Africa/Maputo|Africa/Lubumbashi","Africa/Maputo|Africa/Lusaka","Africa/Nairobi|Africa/Addis_Ababa","Africa/Nairobi|Africa/Asmara","Africa/Nairobi|Africa/Asmera","Africa/Nairobi|Africa/Dar_es_Salaam","Africa/Nairobi|Africa/Djibouti","Africa/Nairobi|Africa/Kampala","Africa/Nairobi|Africa/Mogadishu","Africa/Nairobi|Indian/Antananarivo","Africa/Nairobi|Indian/Comoro","Africa/Nairobi|Indian/Mayotte","Africa/Tripoli|Libya","America/Adak|America/Atka","America/Adak|US/Aleutian","America/Anchorage|US/Alaska","America/Argentina/Buenos_Aires|America/Buenos_Aires","America/Argentina/Catamarca|America/Argentina/ComodRivadavia","America/Argentina/Catamarca|America/Catamarca","America/Argentina/Cordoba|America/Cordoba","America/Argentina/Cordoba|America/Rosario","America/Argentina/Jujuy|America/Jujuy","America/Argentina/Mendoza|America/Mendoza","America/Atikokan|America/Coral_Harbour","America/Chicago|US/Central","America/Curacao|America/Aruba","America/Curacao|America/Kralendijk","America/Curacao|America/Lower_Princes","America/Denver|America/Shiprock","America/Denver|Navajo","America/Denver|US/Mountain","America/Detroit|US/Michigan","America/Edmonton|Canada/Mountain","America/Fort_Wayne|America/Indiana/Indianapolis","America/Fort_Wayne|America/Indianapolis","America/Fort_Wayne|US/East-Indiana","America/Godthab|America/Nuuk","America/Halifax|Canada/Atlantic","America/Havana|Cuba","America/Indiana/Knox|America/Knox_IN","America/Indiana/Knox|US/Indiana-Starke","America/Jamaica|Jamaica","America/Kentucky/Louisville|America/Louisville","America/Los_Angeles|US/Pacific","America/Los_Angeles|US/Pacific-New","America/Manaus|Brazil/West","America/Mazatlan|Mexico/BajaSur","America/Mexico_City|Mexico/General","America/New_York|US/Eastern","America/Noronha|Brazil/DeNoronha","America/Panama|America/Cayman","America/Phoenix|US/Arizona","America/Port_of_Spain|America/Anguilla","America/Port_of_Spain|America/Antigua","America/Port_of_Spain|America/Dominica","America/Port_of_Spain|America/Grenada","America/Port_of_Spain|America/Guadeloupe","America/Port_of_Spain|America/Marigot","America/Port_of_Spain|America/Montserrat","America/Port_of_Spain|America/St_Barthelemy","America/Port_of_Spain|America/St_Kitts","America/Port_of_Spain|America/St_Lucia","America/Port_of_Spain|America/St_Thomas","America/Port_of_Spain|America/St_Vincent","America/Port_of_Spain|America/Tortola","America/Port_of_Spain|America/Virgin","America/Regina|Canada/Saskatchewan","America/Rio_Branco|America/Porto_Acre","America/Rio_Branco|Brazil/Acre","America/Santiago|Chile/Continental","America/Sao_Paulo|Brazil/East","America/St_Johns|Canada/Newfoundland","America/Tijuana|America/Ensenada","America/Tijuana|America/Santa_Isabel","America/Tijuana|Mexico/BajaNorte","America/Toronto|America/Montreal","America/Toronto|Canada/Eastern","America/Vancouver|Canada/Pacific","America/Whitehorse|Canada/Yukon","America/Winnipeg|Canada/Central","Asia/Ashgabat|Asia/Ashkhabad","Asia/Bangkok|Asia/Phnom_Penh","Asia/Bangkok|Asia/Vientiane","Asia/Dhaka|Asia/Dacca","Asia/Dubai|Asia/Muscat","Asia/Ho_Chi_Minh|Asia/Saigon","Asia/Hong_Kong|Hongkong","Asia/Jerusalem|Asia/Tel_Aviv","Asia/Jerusalem|Israel","Asia/Kathmandu|Asia/Katmandu","Asia/Kolkata|Asia/Calcutta","Asia/Kuala_Lumpur|Asia/Singapore","Asia/Kuala_Lumpur|Singapore","Asia/Macau|Asia/Macao","Asia/Makassar|Asia/Ujung_Pandang","Asia/Nicosia|Europe/Nicosia","Asia/Qatar|Asia/Bahrain","Asia/Rangoon|Asia/Yangon","Asia/Riyadh|Asia/Aden","Asia/Riyadh|Asia/Kuwait","Asia/Seoul|ROK","Asia/Shanghai|Asia/Chongqing","Asia/Shanghai|Asia/Chungking","Asia/Shanghai|Asia/Harbin","Asia/Shanghai|PRC","Asia/Taipei|ROC","Asia/Tehran|Iran","Asia/Thimphu|Asia/Thimbu","Asia/Tokyo|Japan","Asia/Ulaanbaatar|Asia/Ulan_Bator","Asia/Urumqi|Asia/Kashgar","Atlantic/Faroe|Atlantic/Faeroe","Atlantic/Reykjavik|Iceland","Atlantic/South_Georgia|Etc/GMT+2","Australia/Adelaide|Australia/South","Australia/Brisbane|Australia/Queensland","Australia/Broken_Hill|Australia/Yancowinna","Australia/Darwin|Australia/North","Australia/Hobart|Australia/Tasmania","Australia/Lord_Howe|Australia/LHI","Australia/Melbourne|Australia/Victoria","Australia/Perth|Australia/West","Australia/Sydney|Australia/ACT","Australia/Sydney|Australia/Canberra","Australia/Sydney|Australia/NSW","Etc/GMT-0|Etc/GMT","Etc/GMT-0|Etc/GMT+0","Etc/GMT-0|Etc/GMT0","Etc/GMT-0|Etc/Greenwich","Etc/GMT-0|GMT","Etc/GMT-0|GMT+0","Etc/GMT-0|GMT-0","Etc/GMT-0|GMT0","Etc/GMT-0|Greenwich","Etc/UTC|Etc/UCT","Etc/UTC|Etc/Universal","Etc/UTC|Etc/Zulu","Etc/UTC|UCT","Etc/UTC|UTC","Etc/UTC|Universal","Etc/UTC|Zulu","Europe/Belgrade|Europe/Ljubljana","Europe/Belgrade|Europe/Podgorica","Europe/Belgrade|Europe/Sarajevo","Europe/Belgrade|Europe/Skopje","Europe/Belgrade|Europe/Zagreb","Europe/Chisinau|Europe/Tiraspol","Europe/Dublin|Eire","Europe/Helsinki|Europe/Mariehamn","Europe/Istanbul|Asia/Istanbul","Europe/Istanbul|Turkey","Europe/Lisbon|Portugal","Europe/London|Europe/Belfast","Europe/London|Europe/Guernsey","Europe/London|Europe/Isle_of_Man","Europe/London|Europe/Jersey","Europe/London|GB","Europe/London|GB-Eire","Europe/Moscow|W-SU","Europe/Oslo|Arctic/Longyearbyen","Europe/Oslo|Atlantic/Jan_Mayen","Europe/Prague|Europe/Bratislava","Europe/Rome|Europe/San_Marino","Europe/Rome|Europe/Vatican","Europe/Warsaw|Poland","Europe/Zurich|Europe/Busingen","Europe/Zurich|Europe/Vaduz","Indian/Christmas|Etc/GMT-7","Pacific/Auckland|Antarctica/McMurdo","Pacific/Auckland|Antarctica/South_Pole","Pacific/Auckland|NZ","Pacific/Chatham|NZ-CHAT","Pacific/Chuuk|Pacific/Truk","Pacific/Chuuk|Pacific/Yap","Pacific/Easter|Chile/EasterIsland","Pacific/Guam|Pacific/Saipan","Pacific/Honolulu|Pacific/Johnston","Pacific/Honolulu|US/Hawaii","Pacific/Kwajalein|Kwajalein","Pacific/Pago_Pago|Pacific/Midway","Pacific/Pago_Pago|Pacific/Samoa","Pacific/Pago_Pago|US/Samoa","Pacific/Palau|Etc/GMT-9","Pacific/Pohnpei|Pacific/Ponape","Pacific/Port_Moresby|Etc/GMT-10","Pacific/Tarawa|Etc/GMT-12","Pacific/Tarawa|Pacific/Funafuti","Pacific/Tarawa|Pacific/Wake","Pacific/Tarawa|Pacific/Wallis"],"countries":["AD|Europe/Andorra","AE|Asia/Dubai","AF|Asia/Kabul","AG|America/Port_of_Spain America/Antigua","AI|America/Port_of_Spain America/Anguilla","AL|Europe/Tirane","AM|Asia/Yerevan","AO|Africa/Lagos Africa/Luanda","AQ|Antarctica/Casey Antarctica/Davis Antarctica/DumontDUrville Antarctica/Mawson Antarctica/Palmer Antarctica/Rothera Antarctica/Syowa Antarctica/Troll Antarctica/Vostok Pacific/Auckland Antarctica/McMurdo","AR|America/Argentina/Buenos_Aires America/Argentina/Cordoba America/Argentina/Salta America/Argentina/Jujuy America/Argentina/Tucuman America/Argentina/Catamarca America/Argentina/La_Rioja America/Argentina/San_Juan America/Argentina/Mendoza America/Argentina/San_Luis America/Argentina/Rio_Gallegos America/Argentina/Ushuaia","AS|Pacific/Pago_Pago","AT|Europe/Vienna","AU|Australia/Lord_Howe Antarctica/Macquarie Australia/Hobart Australia/Currie Australia/Melbourne Australia/Sydney Australia/Broken_Hill Australia/Brisbane Australia/Lindeman Australia/Adelaide Australia/Darwin Australia/Perth Australia/Eucla","AW|America/Curacao America/Aruba","AX|Europe/Helsinki Europe/Mariehamn","AZ|Asia/Baku","BA|Europe/Belgrade Europe/Sarajevo","BB|America/Barbados","BD|Asia/Dhaka","BE|Europe/Brussels","BF|Africa/Abidjan Africa/Ouagadougou","BG|Europe/Sofia","BH|Asia/Qatar Asia/Bahrain","BI|Africa/Maputo Africa/Bujumbura","BJ|Africa/Lagos Africa/Porto-Novo","BL|America/Port_of_Spain America/St_Barthelemy","BM|Atlantic/Bermuda","BN|Asia/Brunei","BO|America/La_Paz","BQ|America/Curacao America/Kralendijk","BR|America/Noronha America/Belem America/Fortaleza America/Recife America/Araguaina America/Maceio America/Bahia America/Sao_Paulo America/Campo_Grande America/Cuiaba America/Santarem America/Porto_Velho America/Boa_Vista America/Manaus America/Eirunepe America/Rio_Branco","BS|America/Nassau","BT|Asia/Thimphu","BW|Africa/Maputo Africa/Gaborone","BY|Europe/Minsk","BZ|America/Belize","CA|America/St_Johns America/Halifax America/Glace_Bay America/Moncton America/Goose_Bay America/Blanc-Sablon America/Toronto America/Nipigon America/Thunder_Bay America/Iqaluit America/Pangnirtung America/Atikokan America/Winnipeg America/Rainy_River America/Resolute America/Rankin_Inlet America/Regina America/Swift_Current America/Edmonton America/Cambridge_Bay America/Yellowknife America/Inuvik America/Creston America/Dawson_Creek America/Fort_Nelson America/Vancouver America/Whitehorse America/Dawson","CC|Indian/Cocos","CD|Africa/Maputo Africa/Lagos Africa/Kinshasa Africa/Lubumbashi","CF|Africa/Lagos Africa/Bangui","CG|Africa/Lagos Africa/Brazzaville","CH|Europe/Zurich","CI|Africa/Abidjan","CK|Pacific/Rarotonga","CL|America/Santiago America/Punta_Arenas Pacific/Easter","CM|Africa/Lagos Africa/Douala","CN|Asia/Shanghai Asia/Urumqi","CO|America/Bogota","CR|America/Costa_Rica","CU|America/Havana","CV|Atlantic/Cape_Verde","CW|America/Curacao","CX|Indian/Christmas","CY|Asia/Nicosia Asia/Famagusta","CZ|Europe/Prague","DE|Europe/Zurich Europe/Berlin Europe/Busingen","DJ|Africa/Nairobi Africa/Djibouti","DK|Europe/Copenhagen","DM|America/Port_of_Spain America/Dominica","DO|America/Santo_Domingo","DZ|Africa/Algiers","EC|America/Guayaquil Pacific/Galapagos","EE|Europe/Tallinn","EG|Africa/Cairo","EH|Africa/El_Aaiun","ER|Africa/Nairobi Africa/Asmara","ES|Europe/Madrid Africa/Ceuta Atlantic/Canary","ET|Africa/Nairobi Africa/Addis_Ababa","FI|Europe/Helsinki","FJ|Pacific/Fiji","FK|Atlantic/Stanley","FM|Pacific/Chuuk Pacific/Pohnpei Pacific/Kosrae","FO|Atlantic/Faroe","FR|Europe/Paris","GA|Africa/Lagos Africa/Libreville","GB|Europe/London","GD|America/Port_of_Spain America/Grenada","GE|Asia/Tbilisi","GF|America/Cayenne","GG|Europe/London Europe/Guernsey","GH|Africa/Accra","GI|Europe/Gibraltar","GL|America/Nuuk America/Danmarkshavn America/Scoresbysund America/Thule","GM|Africa/Abidjan Africa/Banjul","GN|Africa/Abidjan Africa/Conakry","GP|America/Port_of_Spain America/Guadeloupe","GQ|Africa/Lagos Africa/Malabo","GR|Europe/Athens","GS|Atlantic/South_Georgia","GT|America/Guatemala","GU|Pacific/Guam","GW|Africa/Bissau","GY|America/Guyana","HK|Asia/Hong_Kong","HN|America/Tegucigalpa","HR|Europe/Belgrade Europe/Zagreb","HT|America/Port-au-Prince","HU|Europe/Budapest","ID|Asia/Jakarta Asia/Pontianak Asia/Makassar Asia/Jayapura","IE|Europe/Dublin","IL|Asia/Jerusalem","IM|Europe/London Europe/Isle_of_Man","IN|Asia/Kolkata","IO|Indian/Chagos","IQ|Asia/Baghdad","IR|Asia/Tehran","IS|Atlantic/Reykjavik","IT|Europe/Rome","JE|Europe/London Europe/Jersey","JM|America/Jamaica","JO|Asia/Amman","JP|Asia/Tokyo","KE|Africa/Nairobi","KG|Asia/Bishkek","KH|Asia/Bangkok Asia/Phnom_Penh","KI|Pacific/Tarawa Pacific/Enderbury Pacific/Kiritimati","KM|Africa/Nairobi Indian/Comoro","KN|America/Port_of_Spain America/St_Kitts","KP|Asia/Pyongyang","KR|Asia/Seoul","KW|Asia/Riyadh Asia/Kuwait","KY|America/Panama America/Cayman","KZ|Asia/Almaty Asia/Qyzylorda Asia/Qostanay Asia/Aqtobe Asia/Aqtau Asia/Atyrau Asia/Oral","LA|Asia/Bangkok Asia/Vientiane","LB|Asia/Beirut","LC|America/Port_of_Spain America/St_Lucia","LI|Europe/Zurich Europe/Vaduz","LK|Asia/Colombo","LR|Africa/Monrovia","LS|Africa/Johannesburg Africa/Maseru","LT|Europe/Vilnius","LU|Europe/Luxembourg","LV|Europe/Riga","LY|Africa/Tripoli","MA|Africa/Casablanca","MC|Europe/Monaco","MD|Europe/Chisinau","ME|Europe/Belgrade Europe/Podgorica","MF|America/Port_of_Spain America/Marigot","MG|Africa/Nairobi Indian/Antananarivo","MH|Pacific/Majuro Pacific/Kwajalein","MK|Europe/Belgrade Europe/Skopje","ML|Africa/Abidjan Africa/Bamako","MM|Asia/Yangon","MN|Asia/Ulaanbaatar Asia/Hovd Asia/Choibalsan","MO|Asia/Macau","MP|Pacific/Guam Pacific/Saipan","MQ|America/Martinique","MR|Africa/Abidjan Africa/Nouakchott","MS|America/Port_of_Spain America/Montserrat","MT|Europe/Malta","MU|Indian/Mauritius","MV|Indian/Maldives","MW|Africa/Maputo Africa/Blantyre","MX|America/Mexico_City America/Cancun America/Merida America/Monterrey America/Matamoros America/Mazatlan America/Chihuahua America/Ojinaga America/Hermosillo America/Tijuana America/Bahia_Banderas","MY|Asia/Kuala_Lumpur Asia/Kuching","MZ|Africa/Maputo","NA|Africa/Windhoek","NC|Pacific/Noumea","NE|Africa/Lagos Africa/Niamey","NF|Pacific/Norfolk","NG|Africa/Lagos","NI|America/Managua","NL|Europe/Amsterdam","NO|Europe/Oslo","NP|Asia/Kathmandu","NR|Pacific/Nauru","NU|Pacific/Niue","NZ|Pacific/Auckland Pacific/Chatham","OM|Asia/Dubai Asia/Muscat","PA|America/Panama","PE|America/Lima","PF|Pacific/Tahiti Pacific/Marquesas Pacific/Gambier","PG|Pacific/Port_Moresby Pacific/Bougainville","PH|Asia/Manila","PK|Asia/Karachi","PL|Europe/Warsaw","PM|America/Miquelon","PN|Pacific/Pitcairn","PR|America/Puerto_Rico","PS|Asia/Gaza Asia/Hebron","PT|Europe/Lisbon Atlantic/Madeira Atlantic/Azores","PW|Pacific/Palau","PY|America/Asuncion","QA|Asia/Qatar","RE|Indian/Reunion","RO|Europe/Bucharest","RS|Europe/Belgrade","RU|Europe/Kaliningrad Europe/Moscow Europe/Simferopol Europe/Kirov Europe/Astrakhan Europe/Volgograd Europe/Saratov Europe/Ulyanovsk Europe/Samara Asia/Yekaterinburg Asia/Omsk Asia/Novosibirsk Asia/Barnaul Asia/Tomsk Asia/Novokuznetsk Asia/Krasnoyarsk Asia/Irkutsk Asia/Chita Asia/Yakutsk Asia/Khandyga Asia/Vladivostok Asia/Ust-Nera Asia/Magadan Asia/Sakhalin Asia/Srednekolymsk Asia/Kamchatka Asia/Anadyr","RW|Africa/Maputo Africa/Kigali","SA|Asia/Riyadh","SB|Pacific/Guadalcanal","SC|Indian/Mahe","SD|Africa/Khartoum","SE|Europe/Stockholm","SG|Asia/Singapore","SH|Africa/Abidjan Atlantic/St_Helena","SI|Europe/Belgrade Europe/Ljubljana","SJ|Europe/Oslo Arctic/Longyearbyen","SK|Europe/Prague Europe/Bratislava","SL|Africa/Abidjan Africa/Freetown","SM|Europe/Rome Europe/San_Marino","SN|Africa/Abidjan Africa/Dakar","SO|Africa/Nairobi Africa/Mogadishu","SR|America/Paramaribo","SS|Africa/Juba","ST|Africa/Sao_Tome","SV|America/El_Salvador","SX|America/Curacao America/Lower_Princes","SY|Asia/Damascus","SZ|Africa/Johannesburg Africa/Mbabane","TC|America/Grand_Turk","TD|Africa/Ndjamena","TF|Indian/Reunion Indian/Kerguelen","TG|Africa/Abidjan Africa/Lome","TH|Asia/Bangkok","TJ|Asia/Dushanbe","TK|Pacific/Fakaofo","TL|Asia/Dili","TM|Asia/Ashgabat","TN|Africa/Tunis","TO|Pacific/Tongatapu","TR|Europe/Istanbul","TT|America/Port_of_Spain","TV|Pacific/Funafuti","TW|Asia/Taipei","TZ|Africa/Nairobi Africa/Dar_es_Salaam","UA|Europe/Simferopol Europe/Kiev Europe/Uzhgorod Europe/Zaporozhye","UG|Africa/Nairobi Africa/Kampala","UM|Pacific/Pago_Pago Pacific/Wake Pacific/Honolulu Pacific/Midway","US|America/New_York America/Detroit America/Kentucky/Louisville America/Kentucky/Monticello America/Indiana/Indianapolis America/Indiana/Vincennes America/Indiana/Winamac America/Indiana/Marengo America/Indiana/Petersburg America/Indiana/Vevay America/Chicago America/Indiana/Tell_City America/Indiana/Knox America/Menominee America/North_Dakota/Center America/North_Dakota/New_Salem America/North_Dakota/Beulah America/Denver America/Boise America/Phoenix America/Los_Angeles America/Anchorage America/Juneau America/Sitka America/Metlakatla America/Yakutat America/Nome America/Adak Pacific/Honolulu","UY|America/Montevideo","UZ|Asia/Samarkand Asia/Tashkent","VA|Europe/Rome Europe/Vatican","VC|America/Port_of_Spain America/St_Vincent","VE|America/Caracas","VG|America/Port_of_Spain America/Tortola","VI|America/Port_of_Spain America/St_Thomas","VN|Asia/Bangkok Asia/Ho_Chi_Minh","VU|Pacific/Efate","WF|Pacific/Wallis","WS|Pacific/Apia","YE|Asia/Riyadh Asia/Aden","YT|Africa/Nairobi Indian/Mayotte","ZA|Africa/Johannesburg","ZM|Africa/Maputo Africa/Lusaka","ZW|Africa/Maputo Africa/Harare"]}'
    );
  },
  '../../../node_modules/moment-timezone/index.js': function (e, t, n) {
    var i = (e.exports = n(
      '../../../node_modules/moment-timezone/moment-timezone.js'
    ));
    i.tz.load(
      n('../../../node_modules/moment-timezone/data/packed/latest.json')
    );
  },
  '../../../node_modules/moment-timezone/moment-timezone.js': function (
    e,
    t,
    n
  ) {
    var i, r, a;
    (function (o, s) {
      'use strict';
      1 && e.exports
        ? (e.exports = s(n('../../../node_modules/moment/moment.js')))
        : 1 &&
          ((r = [n('../../../node_modules/moment/moment.js')]),
          (i = s),
          (a = 'function' === typeof i ? i.apply(t, r) : i),
          void 0 === a || !(e.exports = a));
    })(0, function (e) {
      'use strict';
      void 0 === e.version && e.default && (e = e.default);
      var t,
        n = '0.5.31',
        i = {},
        r = {},
        a = {},
        o = {},
        s = {};
      (e && 'string' === typeof e.version) ||
        W(
          'Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/'
        );
      var c = e.version.split('.'),
        u = +c[0],
        l = +c[1];
      function d(e) {
        return e > 96 ? e - 87 : e > 64 ? e - 29 : e - 48;
      }
      function h(e) {
        var t,
          n = 0,
          i = e.split('.'),
          r = i[0],
          a = i[1] || '',
          o = 1,
          s = 0,
          c = 1;
        for (
          45 === e.charCodeAt(0) && ((n = 1), (c = -1)), n;
          n < r.length;
          n++
        )
          (t = d(r.charCodeAt(n))), (s = 60 * s + t);
        for (n = 0; n < a.length; n++)
          (o /= 60), (t = d(a.charCodeAt(n))), (s += t * o);
        return s * c;
      }
      function p(e) {
        for (var t = 0; t < e.length; t++) e[t] = h(e[t]);
      }
      function m(e, t) {
        for (var n = 0; n < t; n++)
          e[n] = Math.round((e[n - 1] || 0) + 6e4 * e[n]);
        e[t - 1] = 1 / 0;
      }
      function f(e, t) {
        var n,
          i = [];
        for (n = 0; n < t.length; n++) i[n] = e[t[n]];
        return i;
      }
      function _(e) {
        var t = e.split('|'),
          n = t[2].split(' '),
          i = t[3].split(''),
          r = t[4].split(' ');
        return (
          p(n),
          p(i),
          p(r),
          m(r, i.length),
          {
            name: t[0],
            abbrs: f(t[1].split(' '), i),
            offsets: f(n, i),
            untils: r,
            population: 0 | t[5],
          }
        );
      }
      function M(e) {
        e && this._set(_(e));
      }
      function v(e, t) {
        (this.name = e), (this.zones = t);
      }
      function g(e) {
        var t = e.toTimeString(),
          n = t.match(/\([a-z ]+\)/i);
        n && n[0]
          ? ((n = n[0].match(/[A-Z]/g)), (n = n ? n.join('') : void 0))
          : ((n = t.match(/[A-Z]{3,5}/g)), (n = n ? n[0] : void 0)),
          'GMT' === n && (n = void 0),
          (this.at = +e),
          (this.abbr = n),
          (this.offset = e.getTimezoneOffset());
      }
      function y(e) {
        (this.zone = e), (this.offsetScore = 0), (this.abbrScore = 0);
      }
      function b(e, t) {
        var n, i;
        while ((i = 6e4 * (((t.at - e.at) / 12e4) | 0)))
          (n = new g(new Date(e.at + i))),
            n.offset === e.offset ? (e = n) : (t = n);
        return e;
      }
      function w() {
        var e,
          t,
          n,
          i = new Date().getFullYear() - 2,
          r = new g(new Date(i, 0, 1)),
          a = [r];
        for (n = 1; n < 48; n++)
          (t = new g(new Date(i, n, 1))),
            t.offset !== r.offset &&
              ((e = b(r, t)), a.push(e), a.push(new g(new Date(e.at + 6e4)))),
            (r = t);
        for (n = 0; n < 4; n++)
          a.push(new g(new Date(i + n, 0, 1))),
            a.push(new g(new Date(i + n, 6, 1)));
        return a;
      }
      function A(e, t) {
        return e.offsetScore !== t.offsetScore
          ? e.offsetScore - t.offsetScore
          : e.abbrScore !== t.abbrScore
          ? e.abbrScore - t.abbrScore
          : e.zone.population !== t.zone.population
          ? t.zone.population - e.zone.population
          : t.zone.name.localeCompare(e.zone.name);
      }
      function x(e, t) {
        var n, i;
        for (p(t), n = 0; n < t.length; n++)
          (i = t[n]), (s[i] = s[i] || {}), (s[i][e] = !0);
      }
      function L(e) {
        var t,
          n,
          i,
          r = e.length,
          a = {},
          c = [];
        for (t = 0; t < r; t++)
          for (n in ((i = s[e[t].offset] || {}), i))
            i.hasOwnProperty(n) && (a[n] = !0);
        for (t in a) a.hasOwnProperty(t) && c.push(o[t]);
        return c;
      }
      function T() {
        try {
          var e = Intl.DateTimeFormat().resolvedOptions().timeZone;
          if (e && e.length > 3) {
            var t = o[S(e)];
            if (t) return t;
            W(
              'Moment Timezone found ' +
                e +
                ' from the Intl api, but did not have that data loaded.'
            );
          }
        } catch (e) {}
        var n,
          i,
          r,
          a = w(),
          s = a.length,
          c = L(a),
          u = [];
        for (i = 0; i < c.length; i++) {
          for (n = new y(E(c[i]), s), r = 0; r < s; r++) n.scoreOffsetAt(a[r]);
          u.push(n);
        }
        return u.sort(A), u.length > 0 ? u[0].zone.name : void 0;
      }
      function z(e) {
        return (t && !e) || (t = T()), t;
      }
      function S(e) {
        return (e || '').toLowerCase().replace(/\//g, '_');
      }
      function O(e) {
        var t, n, r, a;
        for ('string' === typeof e && (e = [e]), t = 0; t < e.length; t++)
          (r = e[t].split('|')),
            (n = r[0]),
            (a = S(n)),
            (i[a] = e[t]),
            (o[a] = n),
            x(a, r[2].split(' '));
      }
      function E(e, t) {
        e = S(e);
        var n,
          a = i[e];
        return a instanceof M
          ? a
          : 'string' === typeof a
          ? ((a = new M(a)), (i[e] = a), a)
          : r[e] && t !== E && (n = E(r[e], E))
          ? ((a = i[e] = new M()), a._set(n), (a.name = o[e]), a)
          : null;
      }
      function k() {
        var e,
          t = [];
        for (e in o)
          o.hasOwnProperty(e) && (i[e] || i[r[e]]) && o[e] && t.push(o[e]);
        return t.sort();
      }
      function C() {
        return Object.keys(a);
      }
      function D(e) {
        var t, n, i, a;
        for ('string' === typeof e && (e = [e]), t = 0; t < e.length; t++)
          (n = e[t].split('|')),
            (i = S(n[0])),
            (a = S(n[1])),
            (r[i] = a),
            (o[i] = n[0]),
            (r[a] = i),
            (o[a] = n[1]);
      }
      function N(e) {
        var t, n, i, r;
        if (e && e.length)
          for (t = 0; t < e.length; t++)
            (r = e[t].split('|')),
              (n = r[0].toUpperCase()),
              (i = r[1].split(' ')),
              (a[n] = new v(n, i));
      }
      function P(e) {
        return (e = e.toUpperCase()), a[e] || null;
      }
      function j(e, t) {
        if (((e = P(e)), !e)) return null;
        var n = e.zones.sort();
        return t
          ? n.map(function (e) {
              var t = E(e);
              return { name: e, offset: t.utcOffset(new Date()) };
            })
          : n;
      }
      function Y(e) {
        O(e.zones), D(e.links), N(e.countries), (I.dataVersion = e.version);
      }
      function R(e) {
        return (
          R.didShowError ||
            ((R.didShowError = !0),
            W(
              "moment.tz.zoneExists('" +
                e +
                "') has been deprecated in favor of !moment.tz.zone('" +
                e +
                "')"
            )),
          !!E(e)
        );
      }
      function B(e) {
        var t = 'X' === e._f || 'x' === e._f;
        return !(!e._a || void 0 !== e._tzm || t);
      }
      function W(e) {
        'undefined' !== typeof console &&
          'function' === typeof console.error &&
          void 0;
      }
      function I(t) {
        var n = Array.prototype.slice.call(arguments, 0, -1),
          i = arguments[arguments.length - 1],
          r = E(i),
          a = e.utc.apply(null, n);
        return (
          r && !e.isMoment(t) && B(a) && a.add(r.parse(a), 'minutes'),
          a.tz(i),
          a
        );
      }
      (u < 2 || (2 === u && l < 6)) &&
        W(
          'Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js ' +
            e.version +
            '. See momentjs.com'
        ),
        (M.prototype = {
          _set: function (e) {
            (this.name = e.name),
              (this.abbrs = e.abbrs),
              (this.untils = e.untils),
              (this.offsets = e.offsets),
              (this.population = e.population);
          },
          _index: function (e) {
            var t,
              n = +e,
              i = this.untils;
            for (t = 0; t < i.length; t++) if (n < i[t]) return t;
          },
          countries: function () {
            var e = this.name;
            return Object.keys(a).filter(function (t) {
              return -1 !== a[t].zones.indexOf(e);
            });
          },
          parse: function (e) {
            var t,
              n,
              i,
              r,
              a = +e,
              o = this.offsets,
              s = this.untils,
              c = s.length - 1;
            for (r = 0; r < c; r++)
              if (
                ((t = o[r]),
                (n = o[r + 1]),
                (i = o[r ? r - 1 : r]),
                t < n && I.moveAmbiguousForward
                  ? (t = n)
                  : t > i && I.moveInvalidForward && (t = i),
                a < s[r] - 6e4 * t)
              )
                return o[r];
            return o[c];
          },
          abbr: function (e) {
            return this.abbrs[this._index(e)];
          },
          offset: function (e) {
            return (
              W('zone.offset has been deprecated in favor of zone.utcOffset'),
              this.offsets[this._index(e)]
            );
          },
          utcOffset: function (e) {
            return this.offsets[this._index(e)];
          },
        }),
        (y.prototype.scoreOffsetAt = function (e) {
          (this.offsetScore += Math.abs(this.zone.utcOffset(e.at) - e.offset)),
            this.zone.abbr(e.at).replace(/[^A-Z]/g, '') !== e.abbr &&
              this.abbrScore++;
        }),
        (I.version = n),
        (I.dataVersion = ''),
        (I._zones = i),
        (I._links = r),
        (I._names = o),
        (I._countries = a),
        (I.add = O),
        (I.link = D),
        (I.load = Y),
        (I.zone = E),
        (I.zoneExists = R),
        (I.guess = z),
        (I.names = k),
        (I.Zone = M),
        (I.unpack = _),
        (I.unpackBase60 = h),
        (I.needsOffset = B),
        (I.moveInvalidForward = !0),
        (I.moveAmbiguousForward = !1),
        (I.countries = C),
        (I.zonesForCountry = j);
      var q = e.fn;
      function H(e) {
        return function () {
          return this._z ? this._z.abbr(this) : e.call(this);
        };
      }
      function F(e) {
        return function () {
          return (this._z = null), e.apply(this, arguments);
        };
      }
      function U(e) {
        return function () {
          return (
            arguments.length > 0 && (this._z = null), e.apply(this, arguments)
          );
        };
      }
      (e.tz = I),
        (e.defaultZone = null),
        (e.updateOffset = function (t, n) {
          var i,
            r = e.defaultZone;
          if (
            (void 0 === t._z &&
              (r &&
                B(t) &&
                !t._isUTC &&
                ((t._d = e.utc(t._a)._d), t.utc().add(r.parse(t), 'minutes')),
              (t._z = r)),
            t._z)
          )
            if (
              ((i = t._z.utcOffset(t)),
              Math.abs(i) < 16 && (i /= 60),
              void 0 !== t.utcOffset)
            ) {
              var a = t._z;
              t.utcOffset(-i, n), (t._z = a);
            } else t.zone(i, n);
        }),
        (q.tz = function (t, n) {
          if (t) {
            if ('string' !== typeof t)
              throw new Error(
                'Time zone name must be a string, got ' +
                  t +
                  ' [' +
                  typeof t +
                  ']'
              );
            return (
              (this._z = E(t)),
              this._z
                ? e.updateOffset(this, n)
                : W(
                    'Moment Timezone has no data for ' +
                      t +
                      '. See http://momentjs.com/timezone/docs/#/data-loading/.'
                  ),
              this
            );
          }
          if (this._z) return this._z.name;
        }),
        (q.zoneName = H(q.zoneName)),
        (q.zoneAbbr = H(q.zoneAbbr)),
        (q.utc = F(q.utc)),
        (q.local = F(q.local)),
        (q.utcOffset = U(q.utcOffset)),
        (e.tz.setDefault = function (t) {
          return (
            (u < 2 || (2 === u && l < 9)) &&
              W(
                'Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js ' +
                  e.version +
                  '.'
              ),
            (e.defaultZone = t ? E(t) : null),
            e
          );
        });
      var X = e.momentProperties;
      return (
        '[object Array]' === Object.prototype.toString.call(X)
          ? (X.push('_z'), X.push('_a'))
          : X && (X._z = null),
        e
      );
    });
  },
  '../../../node_modules/moment/locale sync recursive ^\\.\\/.*$': function (
    e,
    t,
    n
  ) {
    var i = {
      './af': '../../../node_modules/moment/locale/af.js',
      './af.js': '../../../node_modules/moment/locale/af.js',
      './ar': '../../../node_modules/moment/locale/ar.js',
      './ar-dz': '../../../node_modules/moment/locale/ar-dz.js',
      './ar-dz.js': '../../../node_modules/moment/locale/ar-dz.js',
      './ar-kw': '../../../node_modules/moment/locale/ar-kw.js',
      './ar-kw.js': '../../../node_modules/moment/locale/ar-kw.js',
      './ar-ly': '../../../node_modules/moment/locale/ar-ly.js',
      './ar-ly.js': '../../../node_modules/moment/locale/ar-ly.js',
      './ar-ma': '../../../node_modules/moment/locale/ar-ma.js',
      './ar-ma.js': '../../../node_modules/moment/locale/ar-ma.js',
      './ar-sa': '../../../node_modules/moment/locale/ar-sa.js',
      './ar-sa.js': '../../../node_modules/moment/locale/ar-sa.js',
      './ar-tn': '../../../node_modules/moment/locale/ar-tn.js',
      './ar-tn.js': '../../../node_modules/moment/locale/ar-tn.js',
      './ar.js': '../../../node_modules/moment/locale/ar.js',
      './az': '../../../node_modules/moment/locale/az.js',
      './az.js': '../../../node_modules/moment/locale/az.js',
      './be': '../../../node_modules/moment/locale/be.js',
      './be.js': '../../../node_modules/moment/locale/be.js',
      './bg': '../../../node_modules/moment/locale/bg.js',
      './bg.js': '../../../node_modules/moment/locale/bg.js',
      './bm': '../../../node_modules/moment/locale/bm.js',
      './bm.js': '../../../node_modules/moment/locale/bm.js',
      './bn': '../../../node_modules/moment/locale/bn.js',
      './bn-bd': '../../../node_modules/moment/locale/bn-bd.js',
      './bn-bd.js': '../../../node_modules/moment/locale/bn-bd.js',
      './bn.js': '../../../node_modules/moment/locale/bn.js',
      './bo': '../../../node_modules/moment/locale/bo.js',
      './bo.js': '../../../node_modules/moment/locale/bo.js',
      './br': '../../../node_modules/moment/locale/br.js',
      './br.js': '../../../node_modules/moment/locale/br.js',
      './bs': '../../../node_modules/moment/locale/bs.js',
      './bs.js': '../../../node_modules/moment/locale/bs.js',
      './ca': '../../../node_modules/moment/locale/ca.js',
      './ca.js': '../../../node_modules/moment/locale/ca.js',
      './cs': '../../../node_modules/moment/locale/cs.js',
      './cs.js': '../../../node_modules/moment/locale/cs.js',
      './cv': '../../../node_modules/moment/locale/cv.js',
      './cv.js': '../../../node_modules/moment/locale/cv.js',
      './cy': '../../../node_modules/moment/locale/cy.js',
      './cy.js': '../../../node_modules/moment/locale/cy.js',
      './da': '../../../node_modules/moment/locale/da.js',
      './da.js': '../../../node_modules/moment/locale/da.js',
      './de': '../../../node_modules/moment/locale/de.js',
      './de-at': '../../../node_modules/moment/locale/de-at.js',
      './de-at.js': '../../../node_modules/moment/locale/de-at.js',
      './de-ch': '../../../node_modules/moment/locale/de-ch.js',
      './de-ch.js': '../../../node_modules/moment/locale/de-ch.js',
      './de.js': '../../../node_modules/moment/locale/de.js',
      './dv': '../../../node_modules/moment/locale/dv.js',
      './dv.js': '../../../node_modules/moment/locale/dv.js',
      './el': '../../../node_modules/moment/locale/el.js',
      './el.js': '../../../node_modules/moment/locale/el.js',
      './en-au': '../../../node_modules/moment/locale/en-au.js',
      './en-au.js': '../../../node_modules/moment/locale/en-au.js',
      './en-ca': '../../../node_modules/moment/locale/en-ca.js',
      './en-ca.js': '../../../node_modules/moment/locale/en-ca.js',
      './en-gb': '../../../node_modules/moment/locale/en-gb.js',
      './en-gb.js': '../../../node_modules/moment/locale/en-gb.js',
      './en-ie': '../../../node_modules/moment/locale/en-ie.js',
      './en-ie.js': '../../../node_modules/moment/locale/en-ie.js',
      './en-il': '../../../node_modules/moment/locale/en-il.js',
      './en-il.js': '../../../node_modules/moment/locale/en-il.js',
      './en-in': '../../../node_modules/moment/locale/en-in.js',
      './en-in.js': '../../../node_modules/moment/locale/en-in.js',
      './en-nz': '../../../node_modules/moment/locale/en-nz.js',
      './en-nz.js': '../../../node_modules/moment/locale/en-nz.js',
      './en-sg': '../../../node_modules/moment/locale/en-sg.js',
      './en-sg.js': '../../../node_modules/moment/locale/en-sg.js',
      './eo': '../../../node_modules/moment/locale/eo.js',
      './eo.js': '../../../node_modules/moment/locale/eo.js',
      './es': '../../../node_modules/moment/locale/es.js',
      './es-do': '../../../node_modules/moment/locale/es-do.js',
      './es-do.js': '../../../node_modules/moment/locale/es-do.js',
      './es-mx': '../../../node_modules/moment/locale/es-mx.js',
      './es-mx.js': '../../../node_modules/moment/locale/es-mx.js',
      './es-us': '../../../node_modules/moment/locale/es-us.js',
      './es-us.js': '../../../node_modules/moment/locale/es-us.js',
      './es.js': '../../../node_modules/moment/locale/es.js',
      './et': '../../../node_modules/moment/locale/et.js',
      './et.js': '../../../node_modules/moment/locale/et.js',
      './eu': '../../../node_modules/moment/locale/eu.js',
      './eu.js': '../../../node_modules/moment/locale/eu.js',
      './fa': '../../../node_modules/moment/locale/fa.js',
      './fa.js': '../../../node_modules/moment/locale/fa.js',
      './fi': '../../../node_modules/moment/locale/fi.js',
      './fi.js': '../../../node_modules/moment/locale/fi.js',
      './fil': '../../../node_modules/moment/locale/fil.js',
      './fil.js': '../../../node_modules/moment/locale/fil.js',
      './fo': '../../../node_modules/moment/locale/fo.js',
      './fo.js': '../../../node_modules/moment/locale/fo.js',
      './fr': '../../../node_modules/moment/locale/fr.js',
      './fr-ca': '../../../node_modules/moment/locale/fr-ca.js',
      './fr-ca.js': '../../../node_modules/moment/locale/fr-ca.js',
      './fr-ch': '../../../node_modules/moment/locale/fr-ch.js',
      './fr-ch.js': '../../../node_modules/moment/locale/fr-ch.js',
      './fr.js': '../../../node_modules/moment/locale/fr.js',
      './fy': '../../../node_modules/moment/locale/fy.js',
      './fy.js': '../../../node_modules/moment/locale/fy.js',
      './ga': '../../../node_modules/moment/locale/ga.js',
      './ga.js': '../../../node_modules/moment/locale/ga.js',
      './gd': '../../../node_modules/moment/locale/gd.js',
      './gd.js': '../../../node_modules/moment/locale/gd.js',
      './gl': '../../../node_modules/moment/locale/gl.js',
      './gl.js': '../../../node_modules/moment/locale/gl.js',
      './gom-deva': '../../../node_modules/moment/locale/gom-deva.js',
      './gom-deva.js': '../../../node_modules/moment/locale/gom-deva.js',
      './gom-latn': '../../../node_modules/moment/locale/gom-latn.js',
      './gom-latn.js': '../../../node_modules/moment/locale/gom-latn.js',
      './gu': '../../../node_modules/moment/locale/gu.js',
      './gu.js': '../../../node_modules/moment/locale/gu.js',
      './he': '../../../node_modules/moment/locale/he.js',
      './he.js': '../../../node_modules/moment/locale/he.js',
      './hi': '../../../node_modules/moment/locale/hi.js',
      './hi.js': '../../../node_modules/moment/locale/hi.js',
      './hr': '../../../node_modules/moment/locale/hr.js',
      './hr.js': '../../../node_modules/moment/locale/hr.js',
      './hu': '../../../node_modules/moment/locale/hu.js',
      './hu.js': '../../../node_modules/moment/locale/hu.js',
      './hy-am': '../../../node_modules/moment/locale/hy-am.js',
      './hy-am.js': '../../../node_modules/moment/locale/hy-am.js',
      './id': '../../../node_modules/moment/locale/id.js',
      './id.js': '../../../node_modules/moment/locale/id.js',
      './is': '../../../node_modules/moment/locale/is.js',
      './is.js': '../../../node_modules/moment/locale/is.js',
      './it': '../../../node_modules/moment/locale/it.js',
      './it-ch': '../../../node_modules/moment/locale/it-ch.js',
      './it-ch.js': '../../../node_modules/moment/locale/it-ch.js',
      './it.js': '../../../node_modules/moment/locale/it.js',
      './ja': '../../../node_modules/moment/locale/ja.js',
      './ja.js': '../../../node_modules/moment/locale/ja.js',
      './jv': '../../../node_modules/moment/locale/jv.js',
      './jv.js': '../../../node_modules/moment/locale/jv.js',
      './ka': '../../../node_modules/moment/locale/ka.js',
      './ka.js': '../../../node_modules/moment/locale/ka.js',
      './kk': '../../../node_modules/moment/locale/kk.js',
      './kk.js': '../../../node_modules/moment/locale/kk.js',
      './km': '../../../node_modules/moment/locale/km.js',
      './km.js': '../../../node_modules/moment/locale/km.js',
      './kn': '../../../node_modules/moment/locale/kn.js',
      './kn.js': '../../../node_modules/moment/locale/kn.js',
      './ko': '../../../node_modules/moment/locale/ko.js',
      './ko.js': '../../../node_modules/moment/locale/ko.js',
      './ku': '../../../node_modules/moment/locale/ku.js',
      './ku.js': '../../../node_modules/moment/locale/ku.js',
      './ky': '../../../node_modules/moment/locale/ky.js',
      './ky.js': '../../../node_modules/moment/locale/ky.js',
      './lb': '../../../node_modules/moment/locale/lb.js',
      './lb.js': '../../../node_modules/moment/locale/lb.js',
      './lo': '../../../node_modules/moment/locale/lo.js',
      './lo.js': '../../../node_modules/moment/locale/lo.js',
      './lt': '../../../node_modules/moment/locale/lt.js',
      './lt.js': '../../../node_modules/moment/locale/lt.js',
      './lv': '../../../node_modules/moment/locale/lv.js',
      './lv.js': '../../../node_modules/moment/locale/lv.js',
      './me': '../../../node_modules/moment/locale/me.js',
      './me.js': '../../../node_modules/moment/locale/me.js',
      './mi': '../../../node_modules/moment/locale/mi.js',
      './mi.js': '../../../node_modules/moment/locale/mi.js',
      './mk': '../../../node_modules/moment/locale/mk.js',
      './mk.js': '../../../node_modules/moment/locale/mk.js',
      './ml': '../../../node_modules/moment/locale/ml.js',
      './ml.js': '../../../node_modules/moment/locale/ml.js',
      './mn': '../../../node_modules/moment/locale/mn.js',
      './mn.js': '../../../node_modules/moment/locale/mn.js',
      './mr': '../../../node_modules/moment/locale/mr.js',
      './mr.js': '../../../node_modules/moment/locale/mr.js',
      './ms': '../../../node_modules/moment/locale/ms.js',
      './ms-my': '../../../node_modules/moment/locale/ms-my.js',
      './ms-my.js': '../../../node_modules/moment/locale/ms-my.js',
      './ms.js': '../../../node_modules/moment/locale/ms.js',
      './mt': '../../../node_modules/moment/locale/mt.js',
      './mt.js': '../../../node_modules/moment/locale/mt.js',
      './my': '../../../node_modules/moment/locale/my.js',
      './my.js': '../../../node_modules/moment/locale/my.js',
      './nb': '../../../node_modules/moment/locale/nb.js',
      './nb.js': '../../../node_modules/moment/locale/nb.js',
      './ne': '../../../node_modules/moment/locale/ne.js',
      './ne.js': '../../../node_modules/moment/locale/ne.js',
      './nl': '../../../node_modules/moment/locale/nl.js',
      './nl-be': '../../../node_modules/moment/locale/nl-be.js',
      './nl-be.js': '../../../node_modules/moment/locale/nl-be.js',
      './nl.js': '../../../node_modules/moment/locale/nl.js',
      './nn': '../../../node_modules/moment/locale/nn.js',
      './nn.js': '../../../node_modules/moment/locale/nn.js',
      './oc-lnc': '../../../node_modules/moment/locale/oc-lnc.js',
      './oc-lnc.js': '../../../node_modules/moment/locale/oc-lnc.js',
      './pa-in': '../../../node_modules/moment/locale/pa-in.js',
      './pa-in.js': '../../../node_modules/moment/locale/pa-in.js',
      './pl': '../../../node_modules/moment/locale/pl.js',
      './pl.js': '../../../node_modules/moment/locale/pl.js',
      './pt': '../../../node_modules/moment/locale/pt.js',
      './pt-br': '../../../node_modules/moment/locale/pt-br.js',
      './pt-br.js': '../../../node_modules/moment/locale/pt-br.js',
      './pt.js': '../../../node_modules/moment/locale/pt.js',
      './ro': '../../../node_modules/moment/locale/ro.js',
      './ro.js': '../../../node_modules/moment/locale/ro.js',
      './ru': '../../../node_modules/moment/locale/ru.js',
      './ru.js': '../../../node_modules/moment/locale/ru.js',
      './sd': '../../../node_modules/moment/locale/sd.js',
      './sd.js': '../../../node_modules/moment/locale/sd.js',
      './se': '../../../node_modules/moment/locale/se.js',
      './se.js': '../../../node_modules/moment/locale/se.js',
      './si': '../../../node_modules/moment/locale/si.js',
      './si.js': '../../../node_modules/moment/locale/si.js',
      './sk': '../../../node_modules/moment/locale/sk.js',
      './sk.js': '../../../node_modules/moment/locale/sk.js',
      './sl': '../../../node_modules/moment/locale/sl.js',
      './sl.js': '../../../node_modules/moment/locale/sl.js',
      './sq': '../../../node_modules/moment/locale/sq.js',
      './sq.js': '../../../node_modules/moment/locale/sq.js',
      './sr': '../../../node_modules/moment/locale/sr.js',
      './sr-cyrl': '../../../node_modules/moment/locale/sr-cyrl.js',
      './sr-cyrl.js': '../../../node_modules/moment/locale/sr-cyrl.js',
      './sr.js': '../../../node_modules/moment/locale/sr.js',
      './ss': '../../../node_modules/moment/locale/ss.js',
      './ss.js': '../../../node_modules/moment/locale/ss.js',
      './sv': '../../../node_modules/moment/locale/sv.js',
      './sv.js': '../../../node_modules/moment/locale/sv.js',
      './sw': '../../../node_modules/moment/locale/sw.js',
      './sw.js': '../../../node_modules/moment/locale/sw.js',
      './ta': '../../../node_modules/moment/locale/ta.js',
      './ta.js': '../../../node_modules/moment/locale/ta.js',
      './te': '../../../node_modules/moment/locale/te.js',
      './te.js': '../../../node_modules/moment/locale/te.js',
      './tet': '../../../node_modules/moment/locale/tet.js',
      './tet.js': '../../../node_modules/moment/locale/tet.js',
      './tg': '../../../node_modules/moment/locale/tg.js',
      './tg.js': '../../../node_modules/moment/locale/tg.js',
      './th': '../../../node_modules/moment/locale/th.js',
      './th.js': '../../../node_modules/moment/locale/th.js',
      './tk': '../../../node_modules/moment/locale/tk.js',
      './tk.js': '../../../node_modules/moment/locale/tk.js',
      './tl-ph': '../../../node_modules/moment/locale/tl-ph.js',
      './tl-ph.js': '../../../node_modules/moment/locale/tl-ph.js',
      './tlh': '../../../node_modules/moment/locale/tlh.js',
      './tlh.js': '../../../node_modules/moment/locale/tlh.js',
      './tr': '../../../node_modules/moment/locale/tr.js',
      './tr.js': '../../../node_modules/moment/locale/tr.js',
      './tzl': '../../../node_modules/moment/locale/tzl.js',
      './tzl.js': '../../../node_modules/moment/locale/tzl.js',
      './tzm': '../../../node_modules/moment/locale/tzm.js',
      './tzm-latn': '../../../node_modules/moment/locale/tzm-latn.js',
      './tzm-latn.js': '../../../node_modules/moment/locale/tzm-latn.js',
      './tzm.js': '../../../node_modules/moment/locale/tzm.js',
      './ug-cn': '../../../node_modules/moment/locale/ug-cn.js',
      './ug-cn.js': '../../../node_modules/moment/locale/ug-cn.js',
      './uk': '../../../node_modules/moment/locale/uk.js',
      './uk.js': '../../../node_modules/moment/locale/uk.js',
      './ur': '../../../node_modules/moment/locale/ur.js',
      './ur.js': '../../../node_modules/moment/locale/ur.js',
      './uz': '../../../node_modules/moment/locale/uz.js',
      './uz-latn': '../../../node_modules/moment/locale/uz-latn.js',
      './uz-latn.js': '../../../node_modules/moment/locale/uz-latn.js',
      './uz.js': '../../../node_modules/moment/locale/uz.js',
      './vi': '../../../node_modules/moment/locale/vi.js',
      './vi.js': '../../../node_modules/moment/locale/vi.js',
      './x-pseudo': '../../../node_modules/moment/locale/x-pseudo.js',
      './x-pseudo.js': '../../../node_modules/moment/locale/x-pseudo.js',
      './yo': '../../../node_modules/moment/locale/yo.js',
      './yo.js': '../../../node_modules/moment/locale/yo.js',
      './zh-cn': '../../../node_modules/moment/locale/zh-cn.js',
      './zh-cn.js': '../../../node_modules/moment/locale/zh-cn.js',
      './zh-hk': '../../../node_modules/moment/locale/zh-hk.js',
      './zh-hk.js': '../../../node_modules/moment/locale/zh-hk.js',
      './zh-mo': '../../../node_modules/moment/locale/zh-mo.js',
      './zh-mo.js': '../../../node_modules/moment/locale/zh-mo.js',
      './zh-tw': '../../../node_modules/moment/locale/zh-tw.js',
      './zh-tw.js': '../../../node_modules/moment/locale/zh-tw.js',
    };
    function r(e) {
      var t = a(e);
      return n(t);
    }
    function a(e) {
      if (!n.o(i, e)) {
        var t = new Error("Cannot find module '" + e + "'");
        throw ((t.code = 'MODULE_NOT_FOUND'), t);
      }
      return i[e];
    }
    (r.keys = function e() {
      return Object.keys(i);
    }),
      (r.resolve = a),
      (e.exports = r),
      (r.id = '../../../node_modules/moment/locale sync recursive ^\\.\\/.*$');
  },
  '../../../node_modules/moment/locale/af.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('af', {
        months: 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split(
          '_'
        ),
        monthsShort: 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split(
          '_'
        ),
        weekdays: 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split(
          '_'
        ),
        weekdaysShort: 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
        weekdaysMin: 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
        meridiemParse: /vm|nm/i,
        isPM: function (e) {
          return /^nm$/i.test(e);
        },
        meridiem: function (e, t, n) {
          return e < 12 ? (n ? 'vm' : 'VM') : n ? 'nm' : 'NM';
        },
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[Vandag om] LT',
          nextDay: '[Môre om] LT',
          nextWeek: 'dddd [om] LT',
          lastDay: '[Gister om] LT',
          lastWeek: '[Laas] dddd [om] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'oor %s',
          past: '%s gelede',
          s: "'n paar sekondes",
          ss: '%d sekondes',
          m: "'n minuut",
          mm: '%d minute',
          h: "'n uur",
          hh: '%d ure',
          d: "'n dag",
          dd: '%d dae',
          M: "'n maand",
          MM: '%d maande',
          y: "'n jaar",
          yy: '%d jaar',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal: function (e) {
          return e + (1 === e || 8 === e || e >= 20 ? 'ste' : 'de');
        },
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/ar-dz.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = function (e) {
          return 0 === e
            ? 0
            : 1 === e
            ? 1
            : 2 === e
            ? 2
            : e % 100 >= 3 && e % 100 <= 10
            ? 3
            : e % 100 >= 11
            ? 4
            : 5;
        },
        n = {
          s: [
            'أقل من ثانية',
            'ثانية واحدة',
            ['ثانيتان', 'ثانيتين'],
            '%d ثوان',
            '%d ثانية',
            '%d ثانية',
          ],
          m: [
            'أقل من دقيقة',
            'دقيقة واحدة',
            ['دقيقتان', 'دقيقتين'],
            '%d دقائق',
            '%d دقيقة',
            '%d دقيقة',
          ],
          h: [
            'أقل من ساعة',
            'ساعة واحدة',
            ['ساعتان', 'ساعتين'],
            '%d ساعات',
            '%d ساعة',
            '%d ساعة',
          ],
          d: [
            'أقل من يوم',
            'يوم واحد',
            ['يومان', 'يومين'],
            '%d أيام',
            '%d يومًا',
            '%d يوم',
          ],
          M: [
            'أقل من شهر',
            'شهر واحد',
            ['شهران', 'شهرين'],
            '%d أشهر',
            '%d شهرا',
            '%d شهر',
          ],
          y: [
            'أقل من عام',
            'عام واحد',
            ['عامان', 'عامين'],
            '%d أعوام',
            '%d عامًا',
            '%d عام',
          ],
        },
        i = function (e) {
          return function (i, r, a, o) {
            var s = t(i),
              c = n[e][t(i)];
            return 2 === s && (c = c[r ? 0 : 1]), c.replace(/%d/i, i);
          };
        },
        r = [
          'جانفي',
          'فيفري',
          'مارس',
          'أفريل',
          'ماي',
          'جوان',
          'جويلية',
          'أوت',
          'سبتمبر',
          'أكتوبر',
          'نوفمبر',
          'ديسمبر',
        ],
        a = e.defineLocale('ar-dz', {
          months: r,
          monthsShort: r,
          weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split(
            '_'
          ),
          weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
          weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'D/‏M/‏YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          meridiemParse: /ص|م/,
          isPM: function (e) {
            return 'م' === e;
          },
          meridiem: function (e, t, n) {
            return e < 12 ? 'ص' : 'م';
          },
          calendar: {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'بعد %s',
            past: 'منذ %s',
            s: i('s'),
            ss: i('s'),
            m: i('m'),
            mm: i('m'),
            h: i('h'),
            hh: i('h'),
            d: i('d'),
            dd: i('d'),
            M: i('M'),
            MM: i('M'),
            y: i('y'),
            yy: i('y'),
          },
          postformat: function (e) {
            return e.replace(/,/g, '،');
          },
          week: { dow: 0, doy: 4 },
        });
      return a;
    });
  },
  '../../../node_modules/moment/locale/ar-kw.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('ar-kw', {
        months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
          '_'
        ),
        monthsShort: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
          '_'
        ),
        weekdays: 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split(
          '_'
        ),
        weekdaysShort: 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[اليوم على الساعة] LT',
          nextDay: '[غدا على الساعة] LT',
          nextWeek: 'dddd [على الساعة] LT',
          lastDay: '[أمس على الساعة] LT',
          lastWeek: 'dddd [على الساعة] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'في %s',
          past: 'منذ %s',
          s: 'ثوان',
          ss: '%d ثانية',
          m: 'دقيقة',
          mm: '%d دقائق',
          h: 'ساعة',
          hh: '%d ساعات',
          d: 'يوم',
          dd: '%d أيام',
          M: 'شهر',
          MM: '%d أشهر',
          y: 'سنة',
          yy: '%d سنوات',
        },
        week: { dow: 0, doy: 12 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/ar-ly.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          1: '1',
          2: '2',
          3: '3',
          4: '4',
          5: '5',
          6: '6',
          7: '7',
          8: '8',
          9: '9',
          0: '0',
        },
        n = function (e) {
          return 0 === e
            ? 0
            : 1 === e
            ? 1
            : 2 === e
            ? 2
            : e % 100 >= 3 && e % 100 <= 10
            ? 3
            : e % 100 >= 11
            ? 4
            : 5;
        },
        i = {
          s: [
            'أقل من ثانية',
            'ثانية واحدة',
            ['ثانيتان', 'ثانيتين'],
            '%d ثوان',
            '%d ثانية',
            '%d ثانية',
          ],
          m: [
            'أقل من دقيقة',
            'دقيقة واحدة',
            ['دقيقتان', 'دقيقتين'],
            '%d دقائق',
            '%d دقيقة',
            '%d دقيقة',
          ],
          h: [
            'أقل من ساعة',
            'ساعة واحدة',
            ['ساعتان', 'ساعتين'],
            '%d ساعات',
            '%d ساعة',
            '%d ساعة',
          ],
          d: [
            'أقل من يوم',
            'يوم واحد',
            ['يومان', 'يومين'],
            '%d أيام',
            '%d يومًا',
            '%d يوم',
          ],
          M: [
            'أقل من شهر',
            'شهر واحد',
            ['شهران', 'شهرين'],
            '%d أشهر',
            '%d شهرا',
            '%d شهر',
          ],
          y: [
            'أقل من عام',
            'عام واحد',
            ['عامان', 'عامين'],
            '%d أعوام',
            '%d عامًا',
            '%d عام',
          ],
        },
        r = function (e) {
          return function (t, r, a, o) {
            var s = n(t),
              c = i[e][n(t)];
            return 2 === s && (c = c[r ? 0 : 1]), c.replace(/%d/i, t);
          };
        },
        a = [
          'يناير',
          'فبراير',
          'مارس',
          'أبريل',
          'مايو',
          'يونيو',
          'يوليو',
          'أغسطس',
          'سبتمبر',
          'أكتوبر',
          'نوفمبر',
          'ديسمبر',
        ],
        o = e.defineLocale('ar-ly', {
          months: a,
          monthsShort: a,
          weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split(
            '_'
          ),
          weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
          weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'D/‏M/‏YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          meridiemParse: /ص|م/,
          isPM: function (e) {
            return 'م' === e;
          },
          meridiem: function (e, t, n) {
            return e < 12 ? 'ص' : 'م';
          },
          calendar: {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'بعد %s',
            past: 'منذ %s',
            s: r('s'),
            ss: r('s'),
            m: r('m'),
            mm: r('m'),
            h: r('h'),
            hh: r('h'),
            d: r('d'),
            dd: r('d'),
            M: r('M'),
            MM: r('M'),
            y: r('y'),
            yy: r('y'),
          },
          preparse: function (e) {
            return e.replace(/،/g, ',');
          },
          postformat: function (e) {
            return e
              .replace(/\d/g, function (e) {
                return t[e];
              })
              .replace(/,/g, '،');
          },
          week: { dow: 6, doy: 12 },
        });
      return o;
    });
  },
  '../../../node_modules/moment/locale/ar-ma.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('ar-ma', {
        months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
          '_'
        ),
        monthsShort: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
          '_'
        ),
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split(
          '_'
        ),
        weekdaysShort: 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[اليوم على الساعة] LT',
          nextDay: '[غدا على الساعة] LT',
          nextWeek: 'dddd [على الساعة] LT',
          lastDay: '[أمس على الساعة] LT',
          lastWeek: 'dddd [على الساعة] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'في %s',
          past: 'منذ %s',
          s: 'ثوان',
          ss: '%d ثانية',
          m: 'دقيقة',
          mm: '%d دقائق',
          h: 'ساعة',
          hh: '%d ساعات',
          d: 'يوم',
          dd: '%d أيام',
          M: 'شهر',
          MM: '%d أشهر',
          y: 'سنة',
          yy: '%d سنوات',
        },
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/ar-sa.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          1: '١',
          2: '٢',
          3: '٣',
          4: '٤',
          5: '٥',
          6: '٦',
          7: '٧',
          8: '٨',
          9: '٩',
          0: '٠',
        },
        n = {
          '١': '1',
          '٢': '2',
          '٣': '3',
          '٤': '4',
          '٥': '5',
          '٦': '6',
          '٧': '7',
          '٨': '8',
          '٩': '9',
          '٠': '0',
        },
        i = e.defineLocale('ar-sa', {
          months: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
            '_'
          ),
          monthsShort: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
            '_'
          ),
          weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split(
            '_'
          ),
          weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
          weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          meridiemParse: /ص|م/,
          isPM: function (e) {
            return 'م' === e;
          },
          meridiem: function (e, t, n) {
            return e < 12 ? 'ص' : 'م';
          },
          calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            ss: '%d ثانية',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات',
          },
          preparse: function (e) {
            return e
              .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (e) {
                return n[e];
              })
              .replace(/،/g, ',');
          },
          postformat: function (e) {
            return e
              .replace(/\d/g, function (e) {
                return t[e];
              })
              .replace(/,/g, '،');
          },
          week: { dow: 0, doy: 6 },
        });
      return i;
    });
  },
  '../../../node_modules/moment/locale/ar-tn.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('ar-tn', {
        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
          '_'
        ),
        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
          '_'
        ),
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split(
          '_'
        ),
        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[اليوم على الساعة] LT',
          nextDay: '[غدا على الساعة] LT',
          nextWeek: 'dddd [على الساعة] LT',
          lastDay: '[أمس على الساعة] LT',
          lastWeek: 'dddd [على الساعة] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'في %s',
          past: 'منذ %s',
          s: 'ثوان',
          ss: '%d ثانية',
          m: 'دقيقة',
          mm: '%d دقائق',
          h: 'ساعة',
          hh: '%d ساعات',
          d: 'يوم',
          dd: '%d أيام',
          M: 'شهر',
          MM: '%d أشهر',
          y: 'سنة',
          yy: '%d سنوات',
        },
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/ar.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          1: '١',
          2: '٢',
          3: '٣',
          4: '٤',
          5: '٥',
          6: '٦',
          7: '٧',
          8: '٨',
          9: '٩',
          0: '٠',
        },
        n = {
          '١': '1',
          '٢': '2',
          '٣': '3',
          '٤': '4',
          '٥': '5',
          '٦': '6',
          '٧': '7',
          '٨': '8',
          '٩': '9',
          '٠': '0',
        },
        i = function (e) {
          return 0 === e
            ? 0
            : 1 === e
            ? 1
            : 2 === e
            ? 2
            : e % 100 >= 3 && e % 100 <= 10
            ? 3
            : e % 100 >= 11
            ? 4
            : 5;
        },
        r = {
          s: [
            'أقل من ثانية',
            'ثانية واحدة',
            ['ثانيتان', 'ثانيتين'],
            '%d ثوان',
            '%d ثانية',
            '%d ثانية',
          ],
          m: [
            'أقل من دقيقة',
            'دقيقة واحدة',
            ['دقيقتان', 'دقيقتين'],
            '%d دقائق',
            '%d دقيقة',
            '%d دقيقة',
          ],
          h: [
            'أقل من ساعة',
            'ساعة واحدة',
            ['ساعتان', 'ساعتين'],
            '%d ساعات',
            '%d ساعة',
            '%d ساعة',
          ],
          d: [
            'أقل من يوم',
            'يوم واحد',
            ['يومان', 'يومين'],
            '%d أيام',
            '%d يومًا',
            '%d يوم',
          ],
          M: [
            'أقل من شهر',
            'شهر واحد',
            ['شهران', 'شهرين'],
            '%d أشهر',
            '%d شهرا',
            '%d شهر',
          ],
          y: [
            'أقل من عام',
            'عام واحد',
            ['عامان', 'عامين'],
            '%d أعوام',
            '%d عامًا',
            '%d عام',
          ],
        },
        a = function (e) {
          return function (t, n, a, o) {
            var s = i(t),
              c = r[e][i(t)];
            return 2 === s && (c = c[n ? 0 : 1]), c.replace(/%d/i, t);
          };
        },
        o = [
          'يناير',
          'فبراير',
          'مارس',
          'أبريل',
          'مايو',
          'يونيو',
          'يوليو',
          'أغسطس',
          'سبتمبر',
          'أكتوبر',
          'نوفمبر',
          'ديسمبر',
        ],
        s = e.defineLocale('ar', {
          months: o,
          monthsShort: o,
          weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split(
            '_'
          ),
          weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
          weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'D/‏M/‏YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          meridiemParse: /ص|م/,
          isPM: function (e) {
            return 'م' === e;
          },
          meridiem: function (e, t, n) {
            return e < 12 ? 'ص' : 'م';
          },
          calendar: {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'بعد %s',
            past: 'منذ %s',
            s: a('s'),
            ss: a('s'),
            m: a('m'),
            mm: a('m'),
            h: a('h'),
            hh: a('h'),
            d: a('d'),
            dd: a('d'),
            M: a('M'),
            MM: a('M'),
            y: a('y'),
            yy: a('y'),
          },
          preparse: function (e) {
            return e
              .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (e) {
                return n[e];
              })
              .replace(/،/g, ',');
          },
          postformat: function (e) {
            return e
              .replace(/\d/g, function (e) {
                return t[e];
              })
              .replace(/,/g, '،');
          },
          week: { dow: 6, doy: 12 },
        });
      return s;
    });
  },
  '../../../node_modules/moment/locale/az.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          1: '-inci',
          5: '-inci',
          8: '-inci',
          70: '-inci',
          80: '-inci',
          2: '-nci',
          7: '-nci',
          20: '-nci',
          50: '-nci',
          3: '-üncü',
          4: '-üncü',
          100: '-üncü',
          6: '-ncı',
          9: '-uncu',
          10: '-uncu',
          30: '-uncu',
          60: '-ıncı',
          90: '-ıncı',
        },
        n = e.defineLocale('az', {
          months: 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split(
            '_'
          ),
          monthsShort: 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split(
            '_'
          ),
          weekdays: 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split(
            '_'
          ),
          weekdaysShort: 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
          weekdaysMin: 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[bugün saat] LT',
            nextDay: '[sabah saat] LT',
            nextWeek: '[gələn həftə] dddd [saat] LT',
            lastDay: '[dünən] LT',
            lastWeek: '[keçən həftə] dddd [saat] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s sonra',
            past: '%s əvvəl',
            s: 'bir neçə saniyə',
            ss: '%d saniyə',
            m: 'bir dəqiqə',
            mm: '%d dəqiqə',
            h: 'bir saat',
            hh: '%d saat',
            d: 'bir gün',
            dd: '%d gün',
            M: 'bir ay',
            MM: '%d ay',
            y: 'bir il',
            yy: '%d il',
          },
          meridiemParse: /gecə|səhər|gündüz|axşam/,
          isPM: function (e) {
            return /^(gündüz|axşam)$/.test(e);
          },
          meridiem: function (e, t, n) {
            return e < 4
              ? 'gecə'
              : e < 12
              ? 'səhər'
              : e < 17
              ? 'gündüz'
              : 'axşam';
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
          ordinal: function (e) {
            if (0 === e) return e + '-ıncı';
            var n = e % 10,
              i = (e % 100) - n,
              r = e >= 100 ? 100 : null;
            return e + (t[n] || t[i] || t[r]);
          },
          week: { dow: 1, doy: 7 },
        });
      return n;
    });
  },
  '../../../node_modules/moment/locale/be.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      function t(e, t) {
        var n = e.split('_');
        return t % 10 === 1 && t % 100 !== 11
          ? n[0]
          : t % 10 >= 2 && t % 10 <= 4 && (t % 100 < 10 || t % 100 >= 20)
          ? n[1]
          : n[2];
      }
      function n(e, n, i) {
        var r = {
          ss: n ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
          mm: n ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
          hh: n ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
          dd: 'дзень_дні_дзён',
          MM: 'месяц_месяцы_месяцаў',
          yy: 'год_гады_гадоў',
        };
        return 'm' === i
          ? n
            ? 'хвіліна'
            : 'хвіліну'
          : 'h' === i
          ? n
            ? 'гадзіна'
            : 'гадзіну'
          : e + ' ' + t(r[i], +e);
      }
      var i = e.defineLocale('be', {
        months: {
          format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split(
            '_'
          ),
          standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split(
            '_'
          ),
        },
        monthsShort: 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split(
          '_'
        ),
        weekdays: {
          format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split(
            '_'
          ),
          standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split(
            '_'
          ),
          isFormat: /\[ ?[Ууў] ?(?:мінулую|наступную)? ?\] ?dddd/,
        },
        weekdaysShort: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
        weekdaysMin: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'D MMMM YYYY г.',
          LLL: 'D MMMM YYYY г., HH:mm',
          LLLL: 'dddd, D MMMM YYYY г., HH:mm',
        },
        calendar: {
          sameDay: '[Сёння ў] LT',
          nextDay: '[Заўтра ў] LT',
          lastDay: '[Учора ў] LT',
          nextWeek: function () {
            return '[У] dddd [ў] LT';
          },
          lastWeek: function () {
            switch (this.day()) {
              case 0:
              case 3:
              case 5:
              case 6:
                return '[У мінулую] dddd [ў] LT';
              case 1:
              case 2:
              case 4:
                return '[У мінулы] dddd [ў] LT';
            }
          },
          sameElse: 'L',
        },
        relativeTime: {
          future: 'праз %s',
          past: '%s таму',
          s: 'некалькі секунд',
          m: n,
          mm: n,
          h: n,
          hh: n,
          d: 'дзень',
          dd: n,
          M: 'месяц',
          MM: n,
          y: 'год',
          yy: n,
        },
        meridiemParse: /ночы|раніцы|дня|вечара/,
        isPM: function (e) {
          return /^(дня|вечара)$/.test(e);
        },
        meridiem: function (e, t, n) {
          return e < 4 ? 'ночы' : e < 12 ? 'раніцы' : e < 17 ? 'дня' : 'вечара';
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
        ordinal: function (e, t) {
          switch (t) {
            case 'M':
            case 'd':
            case 'DDD':
            case 'w':
            case 'W':
              return (e % 10 !== 2 && e % 10 !== 3) ||
                e % 100 === 12 ||
                e % 100 === 13
                ? e + '-ы'
                : e + '-і';
            case 'D':
              return e + '-га';
            default:
              return e;
          }
        },
        week: { dow: 1, doy: 7 },
      });
      return i;
    });
  },
  '../../../node_modules/moment/locale/bg.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('bg', {
        months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split(
          '_'
        ),
        monthsShort: 'яну_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split(
          '_'
        ),
        weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split(
          '_'
        ),
        weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
        weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        longDateFormat: {
          LT: 'H:mm',
          LTS: 'H:mm:ss',
          L: 'D.MM.YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY H:mm',
          LLLL: 'dddd, D MMMM YYYY H:mm',
        },
        calendar: {
          sameDay: '[Днес в] LT',
          nextDay: '[Утре в] LT',
          nextWeek: 'dddd [в] LT',
          lastDay: '[Вчера в] LT',
          lastWeek: function () {
            switch (this.day()) {
              case 0:
              case 3:
              case 6:
                return '[Миналата] dddd [в] LT';
              case 1:
              case 2:
              case 4:
              case 5:
                return '[Миналия] dddd [в] LT';
            }
          },
          sameElse: 'L',
        },
        relativeTime: {
          future: 'след %s',
          past: 'преди %s',
          s: 'няколко секунди',
          ss: '%d секунди',
          m: 'минута',
          mm: '%d минути',
          h: 'час',
          hh: '%d часа',
          d: 'ден',
          dd: '%d дена',
          w: 'седмица',
          ww: '%d седмици',
          M: 'месец',
          MM: '%d месеца',
          y: 'година',
          yy: '%d години',
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
        ordinal: function (e) {
          var t = e % 10,
            n = e % 100;
          return 0 === e
            ? e + '-ев'
            : 0 === n
            ? e + '-ен'
            : n > 10 && n < 20
            ? e + '-ти'
            : 1 === t
            ? e + '-ви'
            : 2 === t
            ? e + '-ри'
            : 7 === t || 8 === t
            ? e + '-ми'
            : e + '-ти';
        },
        week: { dow: 1, doy: 7 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/bm.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('bm', {
        months: 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split(
          '_'
        ),
        monthsShort: 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split(
          '_'
        ),
        weekdays: 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),
        weekdaysShort: 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),
        weekdaysMin: 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'MMMM [tile] D [san] YYYY',
          LLL: 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
          LLLL: 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
        },
        calendar: {
          sameDay: '[Bi lɛrɛ] LT',
          nextDay: '[Sini lɛrɛ] LT',
          nextWeek: 'dddd [don lɛrɛ] LT',
          lastDay: '[Kunu lɛrɛ] LT',
          lastWeek: 'dddd [tɛmɛnen lɛrɛ] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: '%s kɔnɔ',
          past: 'a bɛ %s bɔ',
          s: 'sanga dama dama',
          ss: 'sekondi %d',
          m: 'miniti kelen',
          mm: 'miniti %d',
          h: 'lɛrɛ kelen',
          hh: 'lɛrɛ %d',
          d: 'tile kelen',
          dd: 'tile %d',
          M: 'kalo kelen',
          MM: 'kalo %d',
          y: 'san kelen',
          yy: 'san %d',
        },
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/bn-bd.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          1: '১',
          2: '২',
          3: '৩',
          4: '৪',
          5: '৫',
          6: '৬',
          7: '৭',
          8: '৮',
          9: '৯',
          0: '০',
        },
        n = {
          '১': '1',
          '২': '2',
          '৩': '3',
          '৪': '4',
          '৫': '5',
          '৬': '6',
          '৭': '7',
          '৮': '8',
          '৯': '9',
          '০': '0',
        },
        i = e.defineLocale('bn-bd', {
          months: 'জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split(
            '_'
          ),
          monthsShort: 'জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে'.split(
            '_'
          ),
          weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split(
            '_'
          ),
          weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
          weekdaysMin: 'রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি'.split('_'),
          longDateFormat: {
            LT: 'A h:mm সময়',
            LTS: 'A h:mm:ss সময়',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm সময়',
            LLLL: 'dddd, D MMMM YYYY, A h:mm সময়',
          },
          calendar: {
            sameDay: '[আজ] LT',
            nextDay: '[আগামীকাল] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[গতকাল] LT',
            lastWeek: '[গত] dddd, LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s পরে',
            past: '%s আগে',
            s: 'কয়েক সেকেন্ড',
            ss: '%d সেকেন্ড',
            m: 'এক মিনিট',
            mm: '%d মিনিট',
            h: 'এক ঘন্টা',
            hh: '%d ঘন্টা',
            d: 'এক দিন',
            dd: '%d দিন',
            M: 'এক মাস',
            MM: '%d মাস',
            y: 'এক বছর',
            yy: '%d বছর',
          },
          preparse: function (e) {
            return e.replace(/[১২৩৪৫৬৭৮৯০]/g, function (e) {
              return n[e];
            });
          },
          postformat: function (e) {
            return e.replace(/\d/g, function (e) {
              return t[e];
            });
          },
          meridiemParse: /রাত|ভোর|সকাল|দুপুর|বিকাল|সন্ধ্যা|রাত/,
          meridiemHour: function (e, t) {
            return (
              12 === e && (e = 0),
              'রাত' === t
                ? e < 4
                  ? e
                  : e + 12
                : 'ভোর' === t || 'সকাল' === t
                ? e
                : 'দুপুর' === t
                ? e >= 3
                  ? e
                  : e + 12
                : 'বিকাল' === t || 'সন্ধ্যা' === t
                ? e + 12
                : void 0
            );
          },
          meridiem: function (e, t, n) {
            return e < 4
              ? 'রাত'
              : e < 6
              ? 'ভোর'
              : e < 12
              ? 'সকাল'
              : e < 15
              ? 'দুপুর'
              : e < 18
              ? 'বিকাল'
              : e < 20
              ? 'সন্ধ্যা'
              : 'রাত';
          },
          week: { dow: 0, doy: 6 },
        });
      return i;
    });
  },
  '../../../node_modules/moment/locale/bn.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          1: '১',
          2: '২',
          3: '৩',
          4: '৪',
          5: '৫',
          6: '৬',
          7: '৭',
          8: '৮',
          9: '৯',
          0: '০',
        },
        n = {
          '১': '1',
          '২': '2',
          '৩': '3',
          '৪': '4',
          '৫': '5',
          '৬': '6',
          '৭': '7',
          '৮': '8',
          '৯': '9',
          '০': '0',
        },
        i = e.defineLocale('bn', {
          months: 'জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split(
            '_'
          ),
          monthsShort: 'জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে'.split(
            '_'
          ),
          weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split(
            '_'
          ),
          weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
          weekdaysMin: 'রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি'.split('_'),
          longDateFormat: {
            LT: 'A h:mm সময়',
            LTS: 'A h:mm:ss সময়',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm সময়',
            LLLL: 'dddd, D MMMM YYYY, A h:mm সময়',
          },
          calendar: {
            sameDay: '[আজ] LT',
            nextDay: '[আগামীকাল] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[গতকাল] LT',
            lastWeek: '[গত] dddd, LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s পরে',
            past: '%s আগে',
            s: 'কয়েক সেকেন্ড',
            ss: '%d সেকেন্ড',
            m: 'এক মিনিট',
            mm: '%d মিনিট',
            h: 'এক ঘন্টা',
            hh: '%d ঘন্টা',
            d: 'এক দিন',
            dd: '%d দিন',
            M: 'এক মাস',
            MM: '%d মাস',
            y: 'এক বছর',
            yy: '%d বছর',
          },
          preparse: function (e) {
            return e.replace(/[১২৩৪৫৬৭৮৯০]/g, function (e) {
              return n[e];
            });
          },
          postformat: function (e) {
            return e.replace(/\d/g, function (e) {
              return t[e];
            });
          },
          meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
          meridiemHour: function (e, t) {
            return (
              12 === e && (e = 0),
              ('রাত' === t && e >= 4) ||
              ('দুপুর' === t && e < 5) ||
              'বিকাল' === t
                ? e + 12
                : e
            );
          },
          meridiem: function (e, t, n) {
            return e < 4
              ? 'রাত'
              : e < 10
              ? 'সকাল'
              : e < 17
              ? 'দুপুর'
              : e < 20
              ? 'বিকাল'
              : 'রাত';
          },
          week: { dow: 0, doy: 6 },
        });
      return i;
    });
  },
  '../../../node_modules/moment/locale/bo.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          1: '༡',
          2: '༢',
          3: '༣',
          4: '༤',
          5: '༥',
          6: '༦',
          7: '༧',
          8: '༨',
          9: '༩',
          0: '༠',
        },
        n = {
          '༡': '1',
          '༢': '2',
          '༣': '3',
          '༤': '4',
          '༥': '5',
          '༦': '6',
          '༧': '7',
          '༨': '8',
          '༩': '9',
          '༠': '0',
        },
        i = e.defineLocale('bo', {
          months: 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split(
            '_'
          ),
          monthsShort: 'ཟླ་1_ཟླ་2_ཟླ་3_ཟླ་4_ཟླ་5_ཟླ་6_ཟླ་7_ཟླ་8_ཟླ་9_ཟླ་10_ཟླ་11_ཟླ་12'.split(
            '_'
          ),
          monthsShortRegex: /^(ཟླ་\d{1,2})/,
          monthsParseExact: !0,
          weekdays: 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split(
            '_'
          ),
          weekdaysShort: 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split(
            '_'
          ),
          weekdaysMin: 'ཉི_ཟླ_མིག_ལྷག_ཕུར_སངས_སྤེན'.split('_'),
          longDateFormat: {
            LT: 'A h:mm',
            LTS: 'A h:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm',
            LLLL: 'dddd, D MMMM YYYY, A h:mm',
          },
          calendar: {
            sameDay: '[དི་རིང] LT',
            nextDay: '[སང་ཉིན] LT',
            nextWeek: '[བདུན་ཕྲག་རྗེས་མ], LT',
            lastDay: '[ཁ་སང] LT',
            lastWeek: '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s ལ་',
            past: '%s སྔན་ལ',
            s: 'ལམ་སང',
            ss: '%d སྐར་ཆ།',
            m: 'སྐར་མ་གཅིག',
            mm: '%d སྐར་མ',
            h: 'ཆུ་ཚོད་གཅིག',
            hh: '%d ཆུ་ཚོད',
            d: 'ཉིན་གཅིག',
            dd: '%d ཉིན་',
            M: 'ཟླ་བ་གཅིག',
            MM: '%d ཟླ་བ',
            y: 'ལོ་གཅིག',
            yy: '%d ལོ',
          },
          preparse: function (e) {
            return e.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (e) {
              return n[e];
            });
          },
          postformat: function (e) {
            return e.replace(/\d/g, function (e) {
              return t[e];
            });
          },
          meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
          meridiemHour: function (e, t) {
            return (
              12 === e && (e = 0),
              ('མཚན་མོ' === t && e >= 4) ||
              ('ཉིན་གུང' === t && e < 5) ||
              'དགོང་དག' === t
                ? e + 12
                : e
            );
          },
          meridiem: function (e, t, n) {
            return e < 4
              ? 'མཚན་མོ'
              : e < 10
              ? 'ཞོགས་ཀས'
              : e < 17
              ? 'ཉིན་གུང'
              : e < 20
              ? 'དགོང་དག'
              : 'མཚན་མོ';
          },
          week: { dow: 0, doy: 6 },
        });
      return i;
    });
  },
  '../../../node_modules/moment/locale/br.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      function t(e, t, n) {
        var i = { mm: 'munutenn', MM: 'miz', dd: 'devezh' };
        return e + ' ' + r(i[n], e);
      }
      function n(e) {
        switch (i(e)) {
          case 1:
          case 3:
          case 4:
          case 5:
          case 9:
            return e + ' bloaz';
          default:
            return e + ' vloaz';
        }
      }
      function i(e) {
        return e > 9 ? i(e % 10) : e;
      }
      function r(e, t) {
        return 2 === t ? a(e) : e;
      }
      function a(e) {
        var t = { m: 'v', b: 'v', d: 'z' };
        return void 0 === t[e.charAt(0)] ? e : t[e.charAt(0)] + e.substring(1);
      }
      var o = [
          /^gen/i,
          /^c[ʼ\']hwe/i,
          /^meu/i,
          /^ebr/i,
          /^mae/i,
          /^(mez|eve)/i,
          /^gou/i,
          /^eos/i,
          /^gwe/i,
          /^her/i,
          /^du/i,
          /^ker/i,
        ],
        s = /^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu|gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,
        c = /^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu)/i,
        u = /^(gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,
        l = [
          /^sul/i,
          /^lun/i,
          /^meurzh/i,
          /^merc[ʼ\']her/i,
          /^yaou/i,
          /^gwener/i,
          /^sadorn/i,
        ],
        d = [/^Sul/i, /^Lun/i, /^Meu/i, /^Mer/i, /^Yao/i, /^Gwe/i, /^Sad/i],
        h = [/^Su/i, /^Lu/i, /^Me([^r]|$)/i, /^Mer/i, /^Ya/i, /^Gw/i, /^Sa/i],
        p = e.defineLocale('br', {
          months: 'Genver_Cʼhwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split(
            '_'
          ),
          monthsShort: 'Gen_Cʼhwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split(
            '_'
          ),
          weekdays: 'Sul_Lun_Meurzh_Mercʼher_Yaou_Gwener_Sadorn'.split('_'),
          weekdaysShort: 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
          weekdaysMin: 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
          weekdaysParse: h,
          fullWeekdaysParse: l,
          shortWeekdaysParse: d,
          minWeekdaysParse: h,
          monthsRegex: s,
          monthsShortRegex: s,
          monthsStrictRegex: c,
          monthsShortStrictRegex: u,
          monthsParse: o,
          longMonthsParse: o,
          shortMonthsParse: o,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [a viz] MMMM YYYY',
            LLL: 'D [a viz] MMMM YYYY HH:mm',
            LLLL: 'dddd, D [a viz] MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[Hiziv da] LT',
            nextDay: '[Warcʼhoazh da] LT',
            nextWeek: 'dddd [da] LT',
            lastDay: '[Decʼh da] LT',
            lastWeek: 'dddd [paset da] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'a-benn %s',
            past: '%s ʼzo',
            s: 'un nebeud segondennoù',
            ss: '%d eilenn',
            m: 'ur vunutenn',
            mm: t,
            h: 'un eur',
            hh: '%d eur',
            d: 'un devezh',
            dd: t,
            M: 'ur miz',
            MM: t,
            y: 'ur bloaz',
            yy: n,
          },
          dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
          ordinal: function (e) {
            var t = 1 === e ? 'añ' : 'vet';
            return e + t;
          },
          week: { dow: 1, doy: 4 },
          meridiemParse: /a.m.|g.m./,
          isPM: function (e) {
            return 'g.m.' === e;
          },
          meridiem: function (e, t, n) {
            return e < 12 ? 'a.m.' : 'g.m.';
          },
        });
      return p;
    });
  },
  '../../../node_modules/moment/locale/bs.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      function t(e, t, n) {
        var i = e + ' ';
        switch (n) {
          case 'ss':
            return (
              (i +=
                1 === e
                  ? 'sekunda'
                  : 2 === e || 3 === e || 4 === e
                  ? 'sekunde'
                  : 'sekundi'),
              i
            );
          case 'm':
            return t ? 'jedna minuta' : 'jedne minute';
          case 'mm':
            return (
              (i +=
                1 === e
                  ? 'minuta'
                  : 2 === e || 3 === e || 4 === e
                  ? 'minute'
                  : 'minuta'),
              i
            );
          case 'h':
            return t ? 'jedan sat' : 'jednog sata';
          case 'hh':
            return (
              (i +=
                1 === e
                  ? 'sat'
                  : 2 === e || 3 === e || 4 === e
                  ? 'sata'
                  : 'sati'),
              i
            );
          case 'dd':
            return (i += 1 === e ? 'dan' : 'dana'), i;
          case 'MM':
            return (
              (i +=
                1 === e
                  ? 'mjesec'
                  : 2 === e || 3 === e || 4 === e
                  ? 'mjeseca'
                  : 'mjeseci'),
              i
            );
          case 'yy':
            return (
              (i +=
                1 === e
                  ? 'godina'
                  : 2 === e || 3 === e || 4 === e
                  ? 'godine'
                  : 'godina'),
              i
            );
        }
      }
      var n = e.defineLocale('bs', {
        months: 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split(
          '_'
        ),
        monthsShort: 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(
          '_'
        ),
        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'H:mm',
          LTS: 'H:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'D. MMMM YYYY',
          LLL: 'D. MMMM YYYY H:mm',
          LLLL: 'dddd, D. MMMM YYYY H:mm',
        },
        calendar: {
          sameDay: '[danas u] LT',
          nextDay: '[sutra u] LT',
          nextWeek: function () {
            switch (this.day()) {
              case 0:
                return '[u] [nedjelju] [u] LT';
              case 3:
                return '[u] [srijedu] [u] LT';
              case 6:
                return '[u] [subotu] [u] LT';
              case 1:
              case 2:
              case 4:
              case 5:
                return '[u] dddd [u] LT';
            }
          },
          lastDay: '[jučer u] LT',
          lastWeek: function () {
            switch (this.day()) {
              case 0:
              case 3:
                return '[prošlu] dddd [u] LT';
              case 6:
                return '[prošle] [subote] [u] LT';
              case 1:
              case 2:
              case 4:
              case 5:
                return '[prošli] dddd [u] LT';
            }
          },
          sameElse: 'L',
        },
        relativeTime: {
          future: 'za %s',
          past: 'prije %s',
          s: 'par sekundi',
          ss: t,
          m: t,
          mm: t,
          h: t,
          hh: t,
          d: 'dan',
          dd: t,
          M: 'mjesec',
          MM: t,
          y: 'godinu',
          yy: t,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: { dow: 1, doy: 7 },
      });
      return n;
    });
  },
  '../../../node_modules/moment/locale/ca.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('ca', {
        months: {
          standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split(
            '_'
          ),
          format: "de gener_de febrer_de març_d'abril_de maig_de juny_de juliol_d'agost_de setembre_d'octubre_de novembre_de desembre".split(
            '_'
          ),
          isFormat: /D[oD]?(\s)+MMMM/,
        },
        monthsShort: 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split(
          '_'
        ),
        weekdaysShort: 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
        weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'H:mm',
          LTS: 'H:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM [de] YYYY',
          ll: 'D MMM YYYY',
          LLL: 'D MMMM [de] YYYY [a les] H:mm',
          lll: 'D MMM YYYY, H:mm',
          LLLL: 'dddd D MMMM [de] YYYY [a les] H:mm',
          llll: 'ddd D MMM YYYY, H:mm',
        },
        calendar: {
          sameDay: function () {
            return '[avui a ' + (1 !== this.hours() ? 'les' : 'la') + '] LT';
          },
          nextDay: function () {
            return '[demà a ' + (1 !== this.hours() ? 'les' : 'la') + '] LT';
          },
          nextWeek: function () {
            return 'dddd [a ' + (1 !== this.hours() ? 'les' : 'la') + '] LT';
          },
          lastDay: function () {
            return '[ahir a ' + (1 !== this.hours() ? 'les' : 'la') + '] LT';
          },
          lastWeek: function () {
            return (
              '[el] dddd [passat a ' +
              (1 !== this.hours() ? 'les' : 'la') +
              '] LT'
            );
          },
          sameElse: 'L',
        },
        relativeTime: {
          future: "d'aquí %s",
          past: 'fa %s',
          s: 'uns segons',
          ss: '%d segons',
          m: 'un minut',
          mm: '%d minuts',
          h: 'una hora',
          hh: '%d hores',
          d: 'un dia',
          dd: '%d dies',
          M: 'un mes',
          MM: '%d mesos',
          y: 'un any',
          yy: '%d anys',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
        ordinal: function (e, t) {
          var n =
            1 === e ? 'r' : 2 === e ? 'n' : 3 === e ? 'r' : 4 === e ? 't' : 'è';
          return ('w' !== t && 'W' !== t) || (n = 'a'), e + n;
        },
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/cs.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split(
          '_'
        ),
        n = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_'),
        i = [
          /^led/i,
          /^úno/i,
          /^bře/i,
          /^dub/i,
          /^kvě/i,
          /^(čvn|červen$|června)/i,
          /^(čvc|červenec|července)/i,
          /^srp/i,
          /^zář/i,
          /^říj/i,
          /^lis/i,
          /^pro/i,
        ],
        r = /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;
      function a(e) {
        return e > 1 && e < 5 && 1 !== ~~(e / 10);
      }
      function o(e, t, n, i) {
        var r = e + ' ';
        switch (n) {
          case 's':
            return t || i ? 'pár sekund' : 'pár sekundami';
          case 'ss':
            return t || i ? r + (a(e) ? 'sekundy' : 'sekund') : r + 'sekundami';
          case 'm':
            return t ? 'minuta' : i ? 'minutu' : 'minutou';
          case 'mm':
            return t || i ? r + (a(e) ? 'minuty' : 'minut') : r + 'minutami';
          case 'h':
            return t ? 'hodina' : i ? 'hodinu' : 'hodinou';
          case 'hh':
            return t || i ? r + (a(e) ? 'hodiny' : 'hodin') : r + 'hodinami';
          case 'd':
            return t || i ? 'den' : 'dnem';
          case 'dd':
            return t || i ? r + (a(e) ? 'dny' : 'dní') : r + 'dny';
          case 'M':
            return t || i ? 'měsíc' : 'měsícem';
          case 'MM':
            return t || i ? r + (a(e) ? 'měsíce' : 'měsíců') : r + 'měsíci';
          case 'y':
            return t || i ? 'rok' : 'rokem';
          case 'yy':
            return t || i ? r + (a(e) ? 'roky' : 'let') : r + 'lety';
        }
      }
      var s = e.defineLocale('cs', {
        months: t,
        monthsShort: n,
        monthsRegex: r,
        monthsShortRegex: r,
        monthsStrictRegex: /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,
        monthsShortStrictRegex: /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,
        monthsParse: i,
        longMonthsParse: i,
        shortMonthsParse: i,
        weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
        weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),
        weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),
        longDateFormat: {
          LT: 'H:mm',
          LTS: 'H:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'D. MMMM YYYY',
          LLL: 'D. MMMM YYYY H:mm',
          LLLL: 'dddd D. MMMM YYYY H:mm',
          l: 'D. M. YYYY',
        },
        calendar: {
          sameDay: '[dnes v] LT',
          nextDay: '[zítra v] LT',
          nextWeek: function () {
            switch (this.day()) {
              case 0:
                return '[v neděli v] LT';
              case 1:
              case 2:
                return '[v] dddd [v] LT';
              case 3:
                return '[ve středu v] LT';
              case 4:
                return '[ve čtvrtek v] LT';
              case 5:
                return '[v pátek v] LT';
              case 6:
                return '[v sobotu v] LT';
            }
          },
          lastDay: '[včera v] LT',
          lastWeek: function () {
            switch (this.day()) {
              case 0:
                return '[minulou neděli v] LT';
              case 1:
              case 2:
                return '[minulé] dddd [v] LT';
              case 3:
                return '[minulou středu v] LT';
              case 4:
              case 5:
                return '[minulý] dddd [v] LT';
              case 6:
                return '[minulou sobotu v] LT';
            }
          },
          sameElse: 'L',
        },
        relativeTime: {
          future: 'za %s',
          past: 'před %s',
          s: o,
          ss: o,
          m: o,
          mm: o,
          h: o,
          hh: o,
          d: o,
          dd: o,
          M: o,
          MM: o,
          y: o,
          yy: o,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: { dow: 1, doy: 4 },
      });
      return s;
    });
  },
  '../../../node_modules/moment/locale/cv.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('cv', {
        months: 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split(
          '_'
        ),
        monthsShort: 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split(
          '_'
        ),
        weekdays: 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split(
          '_'
        ),
        weekdaysShort: 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
        weekdaysMin: 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD-MM-YYYY',
          LL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
          LLL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
          LLLL: 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
        },
        calendar: {
          sameDay: '[Паян] LT [сехетре]',
          nextDay: '[Ыран] LT [сехетре]',
          lastDay: '[Ӗнер] LT [сехетре]',
          nextWeek: '[Ҫитес] dddd LT [сехетре]',
          lastWeek: '[Иртнӗ] dddd LT [сехетре]',
          sameElse: 'L',
        },
        relativeTime: {
          future: function (e) {
            var t = /сехет$/i.exec(e) ? 'рен' : /ҫул$/i.exec(e) ? 'тан' : 'ран';
            return e + t;
          },
          past: '%s каялла',
          s: 'пӗр-ик ҫеккунт',
          ss: '%d ҫеккунт',
          m: 'пӗр минут',
          mm: '%d минут',
          h: 'пӗр сехет',
          hh: '%d сехет',
          d: 'пӗр кун',
          dd: '%d кун',
          M: 'пӗр уйӑх',
          MM: '%d уйӑх',
          y: 'пӗр ҫул',
          yy: '%d ҫул',
        },
        dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
        ordinal: '%d-мӗш',
        week: { dow: 1, doy: 7 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/cy.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('cy', {
        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split(
          '_'
        ),
        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split(
          '_'
        ),
        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split(
          '_'
        ),
        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[Heddiw am] LT',
          nextDay: '[Yfory am] LT',
          nextWeek: 'dddd [am] LT',
          lastDay: '[Ddoe am] LT',
          lastWeek: 'dddd [diwethaf am] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'mewn %s',
          past: '%s yn ôl',
          s: 'ychydig eiliadau',
          ss: '%d eiliad',
          m: 'munud',
          mm: '%d munud',
          h: 'awr',
          hh: '%d awr',
          d: 'diwrnod',
          dd: '%d diwrnod',
          M: 'mis',
          MM: '%d mis',
          y: 'blwyddyn',
          yy: '%d flynedd',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
        ordinal: function (e) {
          var t = e,
            n = '',
            i = [
              '',
              'af',
              'il',
              'ydd',
              'ydd',
              'ed',
              'ed',
              'ed',
              'fed',
              'fed',
              'fed',
              'eg',
              'fed',
              'eg',
              'eg',
              'fed',
              'eg',
              'eg',
              'fed',
              'eg',
              'fed',
            ];
          return (
            t > 20
              ? (n =
                  40 === t || 50 === t || 60 === t || 80 === t || 100 === t
                    ? 'fed'
                    : 'ain')
              : t > 0 && (n = i[t]),
            e + n
          );
        },
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/da.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('da', {
        months: 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split(
          '_'
        ),
        monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split(
          '_'
        ),
        weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split(
          '_'
        ),
        weekdaysShort: 'søn_man_tir_ons_tor_fre_lør'.split('_'),
        weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'D. MMMM YYYY',
          LLL: 'D. MMMM YYYY HH:mm',
          LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm',
        },
        calendar: {
          sameDay: '[i dag kl.] LT',
          nextDay: '[i morgen kl.] LT',
          nextWeek: 'på dddd [kl.] LT',
          lastDay: '[i går kl.] LT',
          lastWeek: '[i] dddd[s kl.] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'om %s',
          past: '%s siden',
          s: 'få sekunder',
          ss: '%d sekunder',
          m: 'et minut',
          mm: '%d minutter',
          h: 'en time',
          hh: '%d timer',
          d: 'en dag',
          dd: '%d dage',
          M: 'en måned',
          MM: '%d måneder',
          y: 'et år',
          yy: '%d år',
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/de-at.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      function t(e, t, n, i) {
        var r = {
          m: ['eine Minute', 'einer Minute'],
          h: ['eine Stunde', 'einer Stunde'],
          d: ['ein Tag', 'einem Tag'],
          dd: [e + ' Tage', e + ' Tagen'],
          w: ['eine Woche', 'einer Woche'],
          M: ['ein Monat', 'einem Monat'],
          MM: [e + ' Monate', e + ' Monaten'],
          y: ['ein Jahr', 'einem Jahr'],
          yy: [e + ' Jahre', e + ' Jahren'],
        };
        return t ? r[n][0] : r[n][1];
      }
      var n = e.defineLocale('de-at', {
        months: 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(
          '_'
        ),
        monthsShort: 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(
          '_'
        ),
        weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'D. MMMM YYYY',
          LLL: 'D. MMMM YYYY HH:mm',
          LLLL: 'dddd, D. MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[heute um] LT [Uhr]',
          sameElse: 'L',
          nextDay: '[morgen um] LT [Uhr]',
          nextWeek: 'dddd [um] LT [Uhr]',
          lastDay: '[gestern um] LT [Uhr]',
          lastWeek: '[letzten] dddd [um] LT [Uhr]',
        },
        relativeTime: {
          future: 'in %s',
          past: 'vor %s',
          s: 'ein paar Sekunden',
          ss: '%d Sekunden',
          m: t,
          mm: '%d Minuten',
          h: t,
          hh: '%d Stunden',
          d: t,
          dd: t,
          w: t,
          ww: '%d Wochen',
          M: t,
          MM: t,
          y: t,
          yy: t,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: { dow: 1, doy: 4 },
      });
      return n;
    });
  },
  '../../../node_modules/moment/locale/de-ch.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      function t(e, t, n, i) {
        var r = {
          m: ['eine Minute', 'einer Minute'],
          h: ['eine Stunde', 'einer Stunde'],
          d: ['ein Tag', 'einem Tag'],
          dd: [e + ' Tage', e + ' Tagen'],
          w: ['eine Woche', 'einer Woche'],
          M: ['ein Monat', 'einem Monat'],
          MM: [e + ' Monate', e + ' Monaten'],
          y: ['ein Jahr', 'einem Jahr'],
          yy: [e + ' Jahre', e + ' Jahren'],
        };
        return t ? r[n][0] : r[n][1];
      }
      var n = e.defineLocale('de-ch', {
        months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(
          '_'
        ),
        monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(
          '_'
        ),
        weekdaysShort: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'D. MMMM YYYY',
          LLL: 'D. MMMM YYYY HH:mm',
          LLLL: 'dddd, D. MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[heute um] LT [Uhr]',
          sameElse: 'L',
          nextDay: '[morgen um] LT [Uhr]',
          nextWeek: 'dddd [um] LT [Uhr]',
          lastDay: '[gestern um] LT [Uhr]',
          lastWeek: '[letzten] dddd [um] LT [Uhr]',
        },
        relativeTime: {
          future: 'in %s',
          past: 'vor %s',
          s: 'ein paar Sekunden',
          ss: '%d Sekunden',
          m: t,
          mm: '%d Minuten',
          h: t,
          hh: '%d Stunden',
          d: t,
          dd: t,
          w: t,
          ww: '%d Wochen',
          M: t,
          MM: t,
          y: t,
          yy: t,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: { dow: 1, doy: 4 },
      });
      return n;
    });
  },
  '../../../node_modules/moment/locale/de.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      function t(e, t, n, i) {
        var r = {
          m: ['eine Minute', 'einer Minute'],
          h: ['eine Stunde', 'einer Stunde'],
          d: ['ein Tag', 'einem Tag'],
          dd: [e + ' Tage', e + ' Tagen'],
          w: ['eine Woche', 'einer Woche'],
          M: ['ein Monat', 'einem Monat'],
          MM: [e + ' Monate', e + ' Monaten'],
          y: ['ein Jahr', 'einem Jahr'],
          yy: [e + ' Jahre', e + ' Jahren'],
        };
        return t ? r[n][0] : r[n][1];
      }
      var n = e.defineLocale('de', {
        months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(
          '_'
        ),
        monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(
          '_'
        ),
        weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'D. MMMM YYYY',
          LLL: 'D. MMMM YYYY HH:mm',
          LLLL: 'dddd, D. MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[heute um] LT [Uhr]',
          sameElse: 'L',
          nextDay: '[morgen um] LT [Uhr]',
          nextWeek: 'dddd [um] LT [Uhr]',
          lastDay: '[gestern um] LT [Uhr]',
          lastWeek: '[letzten] dddd [um] LT [Uhr]',
        },
        relativeTime: {
          future: 'in %s',
          past: 'vor %s',
          s: 'ein paar Sekunden',
          ss: '%d Sekunden',
          m: t,
          mm: '%d Minuten',
          h: t,
          hh: '%d Stunden',
          d: t,
          dd: t,
          w: t,
          ww: '%d Wochen',
          M: t,
          MM: t,
          y: t,
          yy: t,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: { dow: 1, doy: 4 },
      });
      return n;
    });
  },
  '../../../node_modules/moment/locale/dv.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = [
          'ޖެނުއަރީ',
          'ފެބްރުއަރީ',
          'މާރިޗު',
          'އޭޕްރީލު',
          'މޭ',
          'ޖޫން',
          'ޖުލައި',
          'އޯގަސްޓު',
          'ސެޕްޓެމްބަރު',
          'އޮކްޓޯބަރު',
          'ނޮވެމްބަރު',
          'ޑިސެމްބަރު',
        ],
        n = [
          'އާދިއްތަ',
          'ހޯމަ',
          'އަންގާރަ',
          'ބުދަ',
          'ބުރާސްފަތި',
          'ހުކުރު',
          'ހޮނިހިރު',
        ],
        i = e.defineLocale('dv', {
          months: t,
          monthsShort: t,
          weekdays: n,
          weekdaysShort: n,
          weekdaysMin: 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'D/M/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          meridiemParse: /މކ|މފ/,
          isPM: function (e) {
            return 'މފ' === e;
          },
          meridiem: function (e, t, n) {
            return e < 12 ? 'މކ' : 'މފ';
          },
          calendar: {
            sameDay: '[މިއަދު] LT',
            nextDay: '[މާދަމާ] LT',
            nextWeek: 'dddd LT',
            lastDay: '[އިއްޔެ] LT',
            lastWeek: '[ފާއިތުވި] dddd LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'ތެރޭގައި %s',
            past: 'ކުރިން %s',
            s: 'ސިކުންތުކޮޅެއް',
            ss: 'd% ސިކުންތު',
            m: 'މިނިޓެއް',
            mm: 'މިނިޓު %d',
            h: 'ގަޑިއިރެއް',
            hh: 'ގަޑިއިރު %d',
            d: 'ދުވަހެއް',
            dd: 'ދުވަސް %d',
            M: 'މަހެއް',
            MM: 'މަސް %d',
            y: 'އަހަރެއް',
            yy: 'އަހަރު %d',
          },
          preparse: function (e) {
            return e.replace(/،/g, ',');
          },
          postformat: function (e) {
            return e.replace(/,/g, '،');
          },
          week: { dow: 7, doy: 12 },
        });
      return i;
    });
  },
  '../../../node_modules/moment/locale/el.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      function t(e) {
        return (
          ('undefined' !== typeof Function && e instanceof Function) ||
          '[object Function]' === Object.prototype.toString.call(e)
        );
      }
      var n = e.defineLocale('el', {
        monthsNominativeEl: 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split(
          '_'
        ),
        monthsGenitiveEl: 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split(
          '_'
        ),
        months: function (e, t) {
          return e
            ? 'string' === typeof t &&
              /D/.test(t.substring(0, t.indexOf('MMMM')))
              ? this._monthsGenitiveEl[e.month()]
              : this._monthsNominativeEl[e.month()]
            : this._monthsNominativeEl;
        },
        monthsShort: 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split(
          '_'
        ),
        weekdays: 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split(
          '_'
        ),
        weekdaysShort: 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
        weekdaysMin: 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
        meridiem: function (e, t, n) {
          return e > 11 ? (n ? 'μμ' : 'ΜΜ') : n ? 'πμ' : 'ΠΜ';
        },
        isPM: function (e) {
          return 'μ' === (e + '').toLowerCase()[0];
        },
        meridiemParse: /[ΠΜ]\.?Μ?\.?/i,
        longDateFormat: {
          LT: 'h:mm A',
          LTS: 'h:mm:ss A',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY h:mm A',
          LLLL: 'dddd, D MMMM YYYY h:mm A',
        },
        calendarEl: {
          sameDay: '[Σήμερα {}] LT',
          nextDay: '[Αύριο {}] LT',
          nextWeek: 'dddd [{}] LT',
          lastDay: '[Χθες {}] LT',
          lastWeek: function () {
            switch (this.day()) {
              case 6:
                return '[το προηγούμενο] dddd [{}] LT';
              default:
                return '[την προηγούμενη] dddd [{}] LT';
            }
          },
          sameElse: 'L',
        },
        calendar: function (e, n) {
          var i = this._calendarEl[e],
            r = n && n.hours();
          return (
            t(i) && (i = i.apply(n)),
            i.replace('{}', r % 12 === 1 ? 'στη' : 'στις')
          );
        },
        relativeTime: {
          future: 'σε %s',
          past: '%s πριν',
          s: 'λίγα δευτερόλεπτα',
          ss: '%d δευτερόλεπτα',
          m: 'ένα λεπτό',
          mm: '%d λεπτά',
          h: 'μία ώρα',
          hh: '%d ώρες',
          d: 'μία μέρα',
          dd: '%d μέρες',
          M: 'ένας μήνας',
          MM: '%d μήνες',
          y: 'ένας χρόνος',
          yy: '%d χρόνια',
        },
        dayOfMonthOrdinalParse: /\d{1,2}η/,
        ordinal: '%dη',
        week: { dow: 1, doy: 4 },
      });
      return n;
    });
  },
  '../../../node_modules/moment/locale/en-au.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('en-au', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
          '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
          '_'
        ),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
          '_'
        ),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
          LT: 'h:mm A',
          LTS: 'h:mm:ss A',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY h:mm A',
          LLLL: 'dddd, D MMMM YYYY h:mm A',
        },
        calendar: {
          sameDay: '[Today at] LT',
          nextDay: '[Tomorrow at] LT',
          nextWeek: 'dddd [at] LT',
          lastDay: '[Yesterday at] LT',
          lastWeek: '[Last] dddd [at] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'in %s',
          past: '%s ago',
          s: 'a few seconds',
          ss: '%d seconds',
          m: 'a minute',
          mm: '%d minutes',
          h: 'an hour',
          hh: '%d hours',
          d: 'a day',
          dd: '%d days',
          M: 'a month',
          MM: '%d months',
          y: 'a year',
          yy: '%d years',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (e) {
          var t = e % 10,
            n =
              1 === ~~((e % 100) / 10)
                ? 'th'
                : 1 === t
                ? 'st'
                : 2 === t
                ? 'nd'
                : 3 === t
                ? 'rd'
                : 'th';
          return e + n;
        },
        week: { dow: 0, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/en-ca.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('en-ca', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
          '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
          '_'
        ),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
          '_'
        ),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
          LT: 'h:mm A',
          LTS: 'h:mm:ss A',
          L: 'YYYY-MM-DD',
          LL: 'MMMM D, YYYY',
          LLL: 'MMMM D, YYYY h:mm A',
          LLLL: 'dddd, MMMM D, YYYY h:mm A',
        },
        calendar: {
          sameDay: '[Today at] LT',
          nextDay: '[Tomorrow at] LT',
          nextWeek: 'dddd [at] LT',
          lastDay: '[Yesterday at] LT',
          lastWeek: '[Last] dddd [at] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'in %s',
          past: '%s ago',
          s: 'a few seconds',
          ss: '%d seconds',
          m: 'a minute',
          mm: '%d minutes',
          h: 'an hour',
          hh: '%d hours',
          d: 'a day',
          dd: '%d days',
          M: 'a month',
          MM: '%d months',
          y: 'a year',
          yy: '%d years',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (e) {
          var t = e % 10,
            n =
              1 === ~~((e % 100) / 10)
                ? 'th'
                : 1 === t
                ? 'st'
                : 2 === t
                ? 'nd'
                : 3 === t
                ? 'rd'
                : 'th';
          return e + n;
        },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/en-gb.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('en-gb', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
          '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
          '_'
        ),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
          '_'
        ),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[Today at] LT',
          nextDay: '[Tomorrow at] LT',
          nextWeek: 'dddd [at] LT',
          lastDay: '[Yesterday at] LT',
          lastWeek: '[Last] dddd [at] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'in %s',
          past: '%s ago',
          s: 'a few seconds',
          ss: '%d seconds',
          m: 'a minute',
          mm: '%d minutes',
          h: 'an hour',
          hh: '%d hours',
          d: 'a day',
          dd: '%d days',
          M: 'a month',
          MM: '%d months',
          y: 'a year',
          yy: '%d years',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (e) {
          var t = e % 10,
            n =
              1 === ~~((e % 100) / 10)
                ? 'th'
                : 1 === t
                ? 'st'
                : 2 === t
                ? 'nd'
                : 3 === t
                ? 'rd'
                : 'th';
          return e + n;
        },
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/en-ie.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('en-ie', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
          '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
          '_'
        ),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
          '_'
        ),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[Today at] LT',
          nextDay: '[Tomorrow at] LT',
          nextWeek: 'dddd [at] LT',
          lastDay: '[Yesterday at] LT',
          lastWeek: '[Last] dddd [at] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'in %s',
          past: '%s ago',
          s: 'a few seconds',
          ss: '%d seconds',
          m: 'a minute',
          mm: '%d minutes',
          h: 'an hour',
          hh: '%d hours',
          d: 'a day',
          dd: '%d days',
          M: 'a month',
          MM: '%d months',
          y: 'a year',
          yy: '%d years',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (e) {
          var t = e % 10,
            n =
              1 === ~~((e % 100) / 10)
                ? 'th'
                : 1 === t
                ? 'st'
                : 2 === t
                ? 'nd'
                : 3 === t
                ? 'rd'
                : 'th';
          return e + n;
        },
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/en-il.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('en-il', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
          '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
          '_'
        ),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
          '_'
        ),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[Today at] LT',
          nextDay: '[Tomorrow at] LT',
          nextWeek: 'dddd [at] LT',
          lastDay: '[Yesterday at] LT',
          lastWeek: '[Last] dddd [at] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'in %s',
          past: '%s ago',
          s: 'a few seconds',
          ss: '%d seconds',
          m: 'a minute',
          mm: '%d minutes',
          h: 'an hour',
          hh: '%d hours',
          d: 'a day',
          dd: '%d days',
          M: 'a month',
          MM: '%d months',
          y: 'a year',
          yy: '%d years',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (e) {
          var t = e % 10,
            n =
              1 === ~~((e % 100) / 10)
                ? 'th'
                : 1 === t
                ? 'st'
                : 2 === t
                ? 'nd'
                : 3 === t
                ? 'rd'
                : 'th';
          return e + n;
        },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/en-in.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('en-in', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
          '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
          '_'
        ),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
          '_'
        ),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
          LT: 'h:mm A',
          LTS: 'h:mm:ss A',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY h:mm A',
          LLLL: 'dddd, D MMMM YYYY h:mm A',
        },
        calendar: {
          sameDay: '[Today at] LT',
          nextDay: '[Tomorrow at] LT',
          nextWeek: 'dddd [at] LT',
          lastDay: '[Yesterday at] LT',
          lastWeek: '[Last] dddd [at] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'in %s',
          past: '%s ago',
          s: 'a few seconds',
          ss: '%d seconds',
          m: 'a minute',
          mm: '%d minutes',
          h: 'an hour',
          hh: '%d hours',
          d: 'a day',
          dd: '%d days',
          M: 'a month',
          MM: '%d months',
          y: 'a year',
          yy: '%d years',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (e) {
          var t = e % 10,
            n =
              1 === ~~((e % 100) / 10)
                ? 'th'
                : 1 === t
                ? 'st'
                : 2 === t
                ? 'nd'
                : 3 === t
                ? 'rd'
                : 'th';
          return e + n;
        },
        week: { dow: 0, doy: 6 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/en-nz.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('en-nz', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
          '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
          '_'
        ),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
          '_'
        ),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
          LT: 'h:mm A',
          LTS: 'h:mm:ss A',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY h:mm A',
          LLLL: 'dddd, D MMMM YYYY h:mm A',
        },
        calendar: {
          sameDay: '[Today at] LT',
          nextDay: '[Tomorrow at] LT',
          nextWeek: 'dddd [at] LT',
          lastDay: '[Yesterday at] LT',
          lastWeek: '[Last] dddd [at] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'in %s',
          past: '%s ago',
          s: 'a few seconds',
          ss: '%d seconds',
          m: 'a minute',
          mm: '%d minutes',
          h: 'an hour',
          hh: '%d hours',
          d: 'a day',
          dd: '%d days',
          M: 'a month',
          MM: '%d months',
          y: 'a year',
          yy: '%d years',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (e) {
          var t = e % 10,
            n =
              1 === ~~((e % 100) / 10)
                ? 'th'
                : 1 === t
                ? 'st'
                : 2 === t
                ? 'nd'
                : 3 === t
                ? 'rd'
                : 'th';
          return e + n;
        },
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/en-sg.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('en-sg', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
          '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
          '_'
        ),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
          '_'
        ),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[Today at] LT',
          nextDay: '[Tomorrow at] LT',
          nextWeek: 'dddd [at] LT',
          lastDay: '[Yesterday at] LT',
          lastWeek: '[Last] dddd [at] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'in %s',
          past: '%s ago',
          s: 'a few seconds',
          ss: '%d seconds',
          m: 'a minute',
          mm: '%d minutes',
          h: 'an hour',
          hh: '%d hours',
          d: 'a day',
          dd: '%d days',
          M: 'a month',
          MM: '%d months',
          y: 'a year',
          yy: '%d years',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (e) {
          var t = e % 10,
            n =
              1 === ~~((e % 100) / 10)
                ? 'th'
                : 1 === t
                ? 'st'
                : 2 === t
                ? 'nd'
                : 3 === t
                ? 'rd'
                : 'th';
          return e + n;
        },
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/eo.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('eo', {
        months: 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split(
          '_'
        ),
        monthsShort: 'jan_feb_mart_apr_maj_jun_jul_aŭg_sept_okt_nov_dec'.split(
          '_'
        ),
        weekdays: 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split(
          '_'
        ),
        weekdaysShort: 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),
        weekdaysMin: 'di_lu_ma_me_ĵa_ve_sa'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'YYYY-MM-DD',
          LL: '[la] D[-an de] MMMM, YYYY',
          LLL: '[la] D[-an de] MMMM, YYYY HH:mm',
          LLLL: 'dddd[n], [la] D[-an de] MMMM, YYYY HH:mm',
          llll: 'ddd, [la] D[-an de] MMM, YYYY HH:mm',
        },
        meridiemParse: /[ap]\.t\.m/i,
        isPM: function (e) {
          return 'p' === e.charAt(0).toLowerCase();
        },
        meridiem: function (e, t, n) {
          return e > 11 ? (n ? 'p.t.m.' : 'P.T.M.') : n ? 'a.t.m.' : 'A.T.M.';
        },
        calendar: {
          sameDay: '[Hodiaŭ je] LT',
          nextDay: '[Morgaŭ je] LT',
          nextWeek: 'dddd[n je] LT',
          lastDay: '[Hieraŭ je] LT',
          lastWeek: '[pasintan] dddd[n je] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'post %s',
          past: 'antaŭ %s',
          s: 'kelkaj sekundoj',
          ss: '%d sekundoj',
          m: 'unu minuto',
          mm: '%d minutoj',
          h: 'unu horo',
          hh: '%d horoj',
          d: 'unu tago',
          dd: '%d tagoj',
          M: 'unu monato',
          MM: '%d monatoj',
          y: 'unu jaro',
          yy: '%d jaroj',
        },
        dayOfMonthOrdinalParse: /\d{1,2}a/,
        ordinal: '%da',
        week: { dow: 1, doy: 7 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/es-do.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
          '_'
        ),
        n = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
        i = [
          /^ene/i,
          /^feb/i,
          /^mar/i,
          /^abr/i,
          /^may/i,
          /^jun/i,
          /^jul/i,
          /^ago/i,
          /^sep/i,
          /^oct/i,
          /^nov/i,
          /^dic/i,
        ],
        r = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        a = e.defineLocale('es-do', {
          months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
            '_'
          ),
          monthsShort: function (e, i) {
            return e ? (/-MMM-/.test(i) ? n[e.month()] : t[e.month()]) : t;
          },
          monthsRegex: r,
          monthsShortRegex: r,
          monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
          monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
          monthsParse: i,
          longMonthsParse: i,
          shortMonthsParse: i,
          weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split(
            '_'
          ),
          weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
          weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY h:mm A',
            LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A',
          },
          calendar: {
            sameDay: function () {
              return '[hoy a la' + (1 !== this.hours() ? 's' : '') + '] LT';
            },
            nextDay: function () {
              return '[mañana a la' + (1 !== this.hours() ? 's' : '') + '] LT';
            },
            nextWeek: function () {
              return 'dddd [a la' + (1 !== this.hours() ? 's' : '') + '] LT';
            },
            lastDay: function () {
              return '[ayer a la' + (1 !== this.hours() ? 's' : '') + '] LT';
            },
            lastWeek: function () {
              return (
                '[el] dddd [pasado a la' +
                (1 !== this.hours() ? 's' : '') +
                '] LT'
              );
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'en %s',
            past: 'hace %s',
            s: 'unos segundos',
            ss: '%d segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'una hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            w: 'una semana',
            ww: '%d semanas',
            M: 'un mes',
            MM: '%d meses',
            y: 'un año',
            yy: '%d años',
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: '%dº',
          week: { dow: 1, doy: 4 },
        });
      return a;
    });
  },
  '../../../node_modules/moment/locale/es-mx.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
          '_'
        ),
        n = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
        i = [
          /^ene/i,
          /^feb/i,
          /^mar/i,
          /^abr/i,
          /^may/i,
          /^jun/i,
          /^jul/i,
          /^ago/i,
          /^sep/i,
          /^oct/i,
          /^nov/i,
          /^dic/i,
        ],
        r = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        a = e.defineLocale('es-mx', {
          months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
            '_'
          ),
          monthsShort: function (e, i) {
            return e ? (/-MMM-/.test(i) ? n[e.month()] : t[e.month()]) : t;
          },
          monthsRegex: r,
          monthsShortRegex: r,
          monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
          monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
          monthsParse: i,
          longMonthsParse: i,
          shortMonthsParse: i,
          weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split(
            '_'
          ),
          weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
          weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY H:mm',
            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',
          },
          calendar: {
            sameDay: function () {
              return '[hoy a la' + (1 !== this.hours() ? 's' : '') + '] LT';
            },
            nextDay: function () {
              return '[mañana a la' + (1 !== this.hours() ? 's' : '') + '] LT';
            },
            nextWeek: function () {
              return 'dddd [a la' + (1 !== this.hours() ? 's' : '') + '] LT';
            },
            lastDay: function () {
              return '[ayer a la' + (1 !== this.hours() ? 's' : '') + '] LT';
            },
            lastWeek: function () {
              return (
                '[el] dddd [pasado a la' +
                (1 !== this.hours() ? 's' : '') +
                '] LT'
              );
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'en %s',
            past: 'hace %s',
            s: 'unos segundos',
            ss: '%d segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'una hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            w: 'una semana',
            ww: '%d semanas',
            M: 'un mes',
            MM: '%d meses',
            y: 'un año',
            yy: '%d años',
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: '%dº',
          week: { dow: 0, doy: 4 },
          invalidDate: 'Fecha inválida',
        });
      return a;
    });
  },
  '../../../node_modules/moment/locale/es-us.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
          '_'
        ),
        n = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
        i = [
          /^ene/i,
          /^feb/i,
          /^mar/i,
          /^abr/i,
          /^may/i,
          /^jun/i,
          /^jul/i,
          /^ago/i,
          /^sep/i,
          /^oct/i,
          /^nov/i,
          /^dic/i,
        ],
        r = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        a = e.defineLocale('es-us', {
          months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
            '_'
          ),
          monthsShort: function (e, i) {
            return e ? (/-MMM-/.test(i) ? n[e.month()] : t[e.month()]) : t;
          },
          monthsRegex: r,
          monthsShortRegex: r,
          monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
          monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
          monthsParse: i,
          longMonthsParse: i,
          shortMonthsParse: i,
          weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split(
            '_'
          ),
          weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
          weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'MM/DD/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY h:mm A',
            LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A',
          },
          calendar: {
            sameDay: function () {
              return '[hoy a la' + (1 !== this.hours() ? 's' : '') + '] LT';
            },
            nextDay: function () {
              return '[mañana a la' + (1 !== this.hours() ? 's' : '') + '] LT';
            },
            nextWeek: function () {
              return 'dddd [a la' + (1 !== this.hours() ? 's' : '') + '] LT';
            },
            lastDay: function () {
              return '[ayer a la' + (1 !== this.hours() ? 's' : '') + '] LT';
            },
            lastWeek: function () {
              return (
                '[el] dddd [pasado a la' +
                (1 !== this.hours() ? 's' : '') +
                '] LT'
              );
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'en %s',
            past: 'hace %s',
            s: 'unos segundos',
            ss: '%d segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'una hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            w: 'una semana',
            ww: '%d semanas',
            M: 'un mes',
            MM: '%d meses',
            y: 'un año',
            yy: '%d años',
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: '%dº',
          week: { dow: 0, doy: 6 },
        });
      return a;
    });
  },
  '../../../node_modules/moment/locale/es.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
          '_'
        ),
        n = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
        i = [
          /^ene/i,
          /^feb/i,
          /^mar/i,
          /^abr/i,
          /^may/i,
          /^jun/i,
          /^jul/i,
          /^ago/i,
          /^sep/i,
          /^oct/i,
          /^nov/i,
          /^dic/i,
        ],
        r = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        a = e.defineLocale('es', {
          months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
            '_'
          ),
          monthsShort: function (e, i) {
            return e ? (/-MMM-/.test(i) ? n[e.month()] : t[e.month()]) : t;
          },
          monthsRegex: r,
          monthsShortRegex: r,
          monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
          monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
          monthsParse: i,
          longMonthsParse: i,
          shortMonthsParse: i,
          weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split(
            '_'
          ),
          weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
          weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY H:mm',
            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',
          },
          calendar: {
            sameDay: function () {
              return '[hoy a la' + (1 !== this.hours() ? 's' : '') + '] LT';
            },
            nextDay: function () {
              return '[mañana a la' + (1 !== this.hours() ? 's' : '') + '] LT';
            },
            nextWeek: function () {
              return 'dddd [a la' + (1 !== this.hours() ? 's' : '') + '] LT';
            },
            lastDay: function () {
              return '[ayer a la' + (1 !== this.hours() ? 's' : '') + '] LT';
            },
            lastWeek: function () {
              return (
                '[el] dddd [pasado a la' +
                (1 !== this.hours() ? 's' : '') +
                '] LT'
              );
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'en %s',
            past: 'hace %s',
            s: 'unos segundos',
            ss: '%d segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'una hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            w: 'una semana',
            ww: '%d semanas',
            M: 'un mes',
            MM: '%d meses',
            y: 'un año',
            yy: '%d años',
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: '%dº',
          week: { dow: 1, doy: 4 },
          invalidDate: 'Fecha inválida',
        });
      return a;
    });
  },
  '../../../node_modules/moment/locale/et.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      function t(e, t, n, i) {
        var r = {
          s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
          ss: [e + 'sekundi', e + 'sekundit'],
          m: ['ühe minuti', 'üks minut'],
          mm: [e + ' minuti', e + ' minutit'],
          h: ['ühe tunni', 'tund aega', 'üks tund'],
          hh: [e + ' tunni', e + ' tundi'],
          d: ['ühe päeva', 'üks päev'],
          M: ['kuu aja', 'kuu aega', 'üks kuu'],
          MM: [e + ' kuu', e + ' kuud'],
          y: ['ühe aasta', 'aasta', 'üks aasta'],
          yy: [e + ' aasta', e + ' aastat'],
        };
        return t ? (r[n][2] ? r[n][2] : r[n][1]) : i ? r[n][0] : r[n][1];
      }
      var n = e.defineLocale('et', {
        months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split(
          '_'
        ),
        monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split(
          '_'
        ),
        weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split(
          '_'
        ),
        weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),
        weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),
        longDateFormat: {
          LT: 'H:mm',
          LTS: 'H:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'D. MMMM YYYY',
          LLL: 'D. MMMM YYYY H:mm',
          LLLL: 'dddd, D. MMMM YYYY H:mm',
        },
        calendar: {
          sameDay: '[Täna,] LT',
          nextDay: '[Homme,] LT',
          nextWeek: '[Järgmine] dddd LT',
          lastDay: '[Eile,] LT',
          lastWeek: '[Eelmine] dddd LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: '%s pärast',
          past: '%s tagasi',
          s: t,
          ss: t,
          m: t,
          mm: t,
          h: t,
          hh: t,
          d: t,
          dd: '%d päeva',
          M: t,
          MM: t,
          y: t,
          yy: t,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: { dow: 1, doy: 4 },
      });
      return n;
    });
  },
  '../../../node_modules/moment/locale/eu.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('eu', {
        months: 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split(
          '_'
        ),
        monthsShort: 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split(
          '_'
        ),
        weekdaysShort: 'ig._al._ar._az._og._ol._lr.'.split('_'),
        weekdaysMin: 'ig_al_ar_az_og_ol_lr'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'YYYY-MM-DD',
          LL: 'YYYY[ko] MMMM[ren] D[a]',
          LLL: 'YYYY[ko] MMMM[ren] D[a] HH:mm',
          LLLL: 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
          l: 'YYYY-M-D',
          ll: 'YYYY[ko] MMM D[a]',
          lll: 'YYYY[ko] MMM D[a] HH:mm',
          llll: 'ddd, YYYY[ko] MMM D[a] HH:mm',
        },
        calendar: {
          sameDay: '[gaur] LT[etan]',
          nextDay: '[bihar] LT[etan]',
          nextWeek: 'dddd LT[etan]',
          lastDay: '[atzo] LT[etan]',
          lastWeek: '[aurreko] dddd LT[etan]',
          sameElse: 'L',
        },
        relativeTime: {
          future: '%s barru',
          past: 'duela %s',
          s: 'segundo batzuk',
          ss: '%d segundo',
          m: 'minutu bat',
          mm: '%d minutu',
          h: 'ordu bat',
          hh: '%d ordu',
          d: 'egun bat',
          dd: '%d egun',
          M: 'hilabete bat',
          MM: '%d hilabete',
          y: 'urte bat',
          yy: '%d urte',
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: { dow: 1, doy: 7 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/fa.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          1: '۱',
          2: '۲',
          3: '۳',
          4: '۴',
          5: '۵',
          6: '۶',
          7: '۷',
          8: '۸',
          9: '۹',
          0: '۰',
        },
        n = {
          '۱': '1',
          '۲': '2',
          '۳': '3',
          '۴': '4',
          '۵': '5',
          '۶': '6',
          '۷': '7',
          '۸': '8',
          '۹': '9',
          '۰': '0',
        },
        i = e.defineLocale('fa', {
          months: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split(
            '_'
          ),
          monthsShort: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split(
            '_'
          ),
          weekdays: 'یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه'.split(
            '_'
          ),
          weekdaysShort: 'یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه'.split(
            '_'
          ),
          weekdaysMin: 'ی_د_س_چ_پ_ج_ش'.split('_'),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          meridiemParse: /قبل از ظهر|بعد از ظهر/,
          isPM: function (e) {
            return /بعد از ظهر/.test(e);
          },
          meridiem: function (e, t, n) {
            return e < 12 ? 'قبل از ظهر' : 'بعد از ظهر';
          },
          calendar: {
            sameDay: '[امروز ساعت] LT',
            nextDay: '[فردا ساعت] LT',
            nextWeek: 'dddd [ساعت] LT',
            lastDay: '[دیروز ساعت] LT',
            lastWeek: 'dddd [پیش] [ساعت] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'در %s',
            past: '%s پیش',
            s: 'چند ثانیه',
            ss: '%d ثانیه',
            m: 'یک دقیقه',
            mm: '%d دقیقه',
            h: 'یک ساعت',
            hh: '%d ساعت',
            d: 'یک روز',
            dd: '%d روز',
            M: 'یک ماه',
            MM: '%d ماه',
            y: 'یک سال',
            yy: '%d سال',
          },
          preparse: function (e) {
            return e
              .replace(/[۰-۹]/g, function (e) {
                return n[e];
              })
              .replace(/،/g, ',');
          },
          postformat: function (e) {
            return e
              .replace(/\d/g, function (e) {
                return t[e];
              })
              .replace(/,/g, '،');
          },
          dayOfMonthOrdinalParse: /\d{1,2}م/,
          ordinal: '%dم',
          week: { dow: 6, doy: 12 },
        });
      return i;
    });
  },
  '../../../node_modules/moment/locale/fi.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(
          ' '
        ),
        n = [
          'nolla',
          'yhden',
          'kahden',
          'kolmen',
          'neljän',
          'viiden',
          'kuuden',
          t[7],
          t[8],
          t[9],
        ];
      function i(e, t, n, i) {
        var a = '';
        switch (n) {
          case 's':
            return i ? 'muutaman sekunnin' : 'muutama sekunti';
          case 'ss':
            a = i ? 'sekunnin' : 'sekuntia';
            break;
          case 'm':
            return i ? 'minuutin' : 'minuutti';
          case 'mm':
            a = i ? 'minuutin' : 'minuuttia';
            break;
          case 'h':
            return i ? 'tunnin' : 'tunti';
          case 'hh':
            a = i ? 'tunnin' : 'tuntia';
            break;
          case 'd':
            return i ? 'päivän' : 'päivä';
          case 'dd':
            a = i ? 'päivän' : 'päivää';
            break;
          case 'M':
            return i ? 'kuukauden' : 'kuukausi';
          case 'MM':
            a = i ? 'kuukauden' : 'kuukautta';
            break;
          case 'y':
            return i ? 'vuoden' : 'vuosi';
          case 'yy':
            a = i ? 'vuoden' : 'vuotta';
            break;
        }
        return (a = r(e, i) + ' ' + a), a;
      }
      function r(e, i) {
        return e < 10 ? (i ? n[e] : t[e]) : e;
      }
      var a = e.defineLocale('fi', {
        months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split(
          '_'
        ),
        monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split(
          '_'
        ),
        weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split(
          '_'
        ),
        weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),
        weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),
        longDateFormat: {
          LT: 'HH.mm',
          LTS: 'HH.mm.ss',
          L: 'DD.MM.YYYY',
          LL: 'Do MMMM[ta] YYYY',
          LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',
          LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
          l: 'D.M.YYYY',
          ll: 'Do MMM YYYY',
          lll: 'Do MMM YYYY, [klo] HH.mm',
          llll: 'ddd, Do MMM YYYY, [klo] HH.mm',
        },
        calendar: {
          sameDay: '[tänään] [klo] LT',
          nextDay: '[huomenna] [klo] LT',
          nextWeek: 'dddd [klo] LT',
          lastDay: '[eilen] [klo] LT',
          lastWeek: '[viime] dddd[na] [klo] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: '%s päästä',
          past: '%s sitten',
          s: i,
          ss: i,
          m: i,
          mm: i,
          h: i,
          hh: i,
          d: i,
          dd: i,
          M: i,
          MM: i,
          y: i,
          yy: i,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: { dow: 1, doy: 4 },
      });
      return a;
    });
  },
  '../../../node_modules/moment/locale/fil.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('fil', {
        months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split(
          '_'
        ),
        monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split(
          '_'
        ),
        weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split(
          '_'
        ),
        weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
        weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'MM/D/YYYY',
          LL: 'MMMM D, YYYY',
          LLL: 'MMMM D, YYYY HH:mm',
          LLLL: 'dddd, MMMM DD, YYYY HH:mm',
        },
        calendar: {
          sameDay: 'LT [ngayong araw]',
          nextDay: '[Bukas ng] LT',
          nextWeek: 'LT [sa susunod na] dddd',
          lastDay: 'LT [kahapon]',
          lastWeek: 'LT [noong nakaraang] dddd',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'sa loob ng %s',
          past: '%s ang nakalipas',
          s: 'ilang segundo',
          ss: '%d segundo',
          m: 'isang minuto',
          mm: '%d minuto',
          h: 'isang oras',
          hh: '%d oras',
          d: 'isang araw',
          dd: '%d araw',
          M: 'isang buwan',
          MM: '%d buwan',
          y: 'isang taon',
          yy: '%d taon',
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal: function (e) {
          return e;
        },
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/fo.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('fo', {
        months: 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split(
          '_'
        ),
        monthsShort: 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split(
          '_'
        ),
        weekdays: 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split(
          '_'
        ),
        weekdaysShort: 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
        weekdaysMin: 'su_má_tý_mi_hó_fr_le'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd D. MMMM, YYYY HH:mm',
        },
        calendar: {
          sameDay: '[Í dag kl.] LT',
          nextDay: '[Í morgin kl.] LT',
          nextWeek: 'dddd [kl.] LT',
          lastDay: '[Í gjár kl.] LT',
          lastWeek: '[síðstu] dddd [kl] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'um %s',
          past: '%s síðani',
          s: 'fá sekund',
          ss: '%d sekundir',
          m: 'ein minuttur',
          mm: '%d minuttir',
          h: 'ein tími',
          hh: '%d tímar',
          d: 'ein dagur',
          dd: '%d dagar',
          M: 'ein mánaður',
          MM: '%d mánaðir',
          y: 'eitt ár',
          yy: '%d ár',
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/fr-ca.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('fr-ca', {
        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(
          '_'
        ),
        monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split(
          '_'
        ),
        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'YYYY-MM-DD',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[Aujourd’hui à] LT',
          nextDay: '[Demain à] LT',
          nextWeek: 'dddd [à] LT',
          lastDay: '[Hier à] LT',
          lastWeek: 'dddd [dernier à] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'dans %s',
          past: 'il y a %s',
          s: 'quelques secondes',
          ss: '%d secondes',
          m: 'une minute',
          mm: '%d minutes',
          h: 'une heure',
          hh: '%d heures',
          d: 'un jour',
          dd: '%d jours',
          M: 'un mois',
          MM: '%d mois',
          y: 'un an',
          yy: '%d ans',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
        ordinal: function (e, t) {
          switch (t) {
            default:
            case 'M':
            case 'Q':
            case 'D':
            case 'DDD':
            case 'd':
              return e + (1 === e ? 'er' : 'e');
            case 'w':
            case 'W':
              return e + (1 === e ? 're' : 'e');
          }
        },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/fr-ch.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('fr-ch', {
        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(
          '_'
        ),
        monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split(
          '_'
        ),
        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[Aujourd’hui à] LT',
          nextDay: '[Demain à] LT',
          nextWeek: 'dddd [à] LT',
          lastDay: '[Hier à] LT',
          lastWeek: 'dddd [dernier à] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'dans %s',
          past: 'il y a %s',
          s: 'quelques secondes',
          ss: '%d secondes',
          m: 'une minute',
          mm: '%d minutes',
          h: 'une heure',
          hh: '%d heures',
          d: 'un jour',
          dd: '%d jours',
          M: 'un mois',
          MM: '%d mois',
          y: 'un an',
          yy: '%d ans',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
        ordinal: function (e, t) {
          switch (t) {
            default:
            case 'M':
            case 'Q':
            case 'D':
            case 'DDD':
            case 'd':
              return e + (1 === e ? 'er' : 'e');
            case 'w':
            case 'W':
              return e + (1 === e ? 're' : 'e');
          }
        },
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/fr.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = /^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,
        n = /(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?)/i,
        i = /(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?|janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,
        r = [
          /^janv/i,
          /^févr/i,
          /^mars/i,
          /^avr/i,
          /^mai/i,
          /^juin/i,
          /^juil/i,
          /^août/i,
          /^sept/i,
          /^oct/i,
          /^nov/i,
          /^déc/i,
        ],
        a = e.defineLocale('fr', {
          months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(
            '_'
          ),
          monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(
            '_'
          ),
          monthsRegex: i,
          monthsShortRegex: i,
          monthsStrictRegex: t,
          monthsShortStrictRegex: n,
          monthsParse: r,
          longMonthsParse: r,
          shortMonthsParse: r,
          weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split(
            '_'
          ),
          weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
          weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[Aujourd’hui à] LT',
            nextDay: '[Demain à] LT',
            nextWeek: 'dddd [à] LT',
            lastDay: '[Hier à] LT',
            lastWeek: 'dddd [dernier à] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'dans %s',
            past: 'il y a %s',
            s: 'quelques secondes',
            ss: '%d secondes',
            m: 'une minute',
            mm: '%d minutes',
            h: 'une heure',
            hh: '%d heures',
            d: 'un jour',
            dd: '%d jours',
            w: 'une semaine',
            ww: '%d semaines',
            M: 'un mois',
            MM: '%d mois',
            y: 'un an',
            yy: '%d ans',
          },
          dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
          ordinal: function (e, t) {
            switch (t) {
              case 'D':
                return e + (1 === e ? 'er' : '');
              default:
              case 'M':
              case 'Q':
              case 'DDD':
              case 'd':
                return e + (1 === e ? 'er' : 'e');
              case 'w':
              case 'W':
                return e + (1 === e ? 're' : 'e');
            }
          },
          week: { dow: 1, doy: 4 },
        });
      return a;
    });
  },
  '../../../node_modules/moment/locale/fy.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split(
          '_'
        ),
        n = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
        i = e.defineLocale('fy', {
          months: 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split(
            '_'
          ),
          monthsShort: function (e, i) {
            return e ? (/-MMM-/.test(i) ? n[e.month()] : t[e.month()]) : t;
          },
          monthsParseExact: !0,
          weekdays: 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split(
            '_'
          ),
          weekdaysShort: 'si._mo._ti._wo._to._fr._so.'.split('_'),
          weekdaysMin: 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD-MM-YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[hjoed om] LT',
            nextDay: '[moarn om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[juster om] LT',
            lastWeek: '[ôfrûne] dddd [om] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'oer %s',
            past: '%s lyn',
            s: 'in pear sekonden',
            ss: '%d sekonden',
            m: 'ien minút',
            mm: '%d minuten',
            h: 'ien oere',
            hh: '%d oeren',
            d: 'ien dei',
            dd: '%d dagen',
            M: 'ien moanne',
            MM: '%d moannen',
            y: 'ien jier',
            yy: '%d jierren',
          },
          dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
          ordinal: function (e) {
            return e + (1 === e || 8 === e || e >= 20 ? 'ste' : 'de');
          },
          week: { dow: 1, doy: 4 },
        });
      return i;
    });
  },
  '../../../node_modules/moment/locale/ga.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = [
          'Eanáir',
          'Feabhra',
          'Márta',
          'Aibreán',
          'Bealtaine',
          'Meitheamh',
          'Iúil',
          'Lúnasa',
          'Meán Fómhair',
          'Deireadh Fómhair',
          'Samhain',
          'Nollaig',
        ],
        n = [
          'Ean',
          'Feabh',
          'Márt',
          'Aib',
          'Beal',
          'Meith',
          'Iúil',
          'Lún',
          'M.F.',
          'D.F.',
          'Samh',
          'Noll',
        ],
        i = [
          'Dé Domhnaigh',
          'Dé Luain',
          'Dé Máirt',
          'Dé Céadaoin',
          'Déardaoin',
          'Dé hAoine',
          'Dé Sathairn',
        ],
        r = ['Domh', 'Luan', 'Máirt', 'Céad', 'Déar', 'Aoine', 'Sath'],
        a = ['Do', 'Lu', 'Má', 'Cé', 'Dé', 'A', 'Sa'],
        o = e.defineLocale('ga', {
          months: t,
          monthsShort: n,
          monthsParseExact: !0,
          weekdays: i,
          weekdaysShort: r,
          weekdaysMin: a,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[Inniu ag] LT',
            nextDay: '[Amárach ag] LT',
            nextWeek: 'dddd [ag] LT',
            lastDay: '[Inné ag] LT',
            lastWeek: 'dddd [seo caite] [ag] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'i %s',
            past: '%s ó shin',
            s: 'cúpla soicind',
            ss: '%d soicind',
            m: 'nóiméad',
            mm: '%d nóiméad',
            h: 'uair an chloig',
            hh: '%d uair an chloig',
            d: 'lá',
            dd: '%d lá',
            M: 'mí',
            MM: '%d míonna',
            y: 'bliain',
            yy: '%d bliain',
          },
          dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
          ordinal: function (e) {
            var t = 1 === e ? 'd' : e % 10 === 2 ? 'na' : 'mh';
            return e + t;
          },
          week: { dow: 1, doy: 4 },
        });
      return o;
    });
  },
  '../../../node_modules/moment/locale/gd.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = [
          'Am Faoilleach',
          'An Gearran',
          'Am Màrt',
          'An Giblean',
          'An Cèitean',
          'An t-Ògmhios',
          'An t-Iuchar',
          'An Lùnastal',
          'An t-Sultain',
          'An Dàmhair',
          'An t-Samhain',
          'An Dùbhlachd',
        ],
        n = [
          'Faoi',
          'Gear',
          'Màrt',
          'Gibl',
          'Cèit',
          'Ògmh',
          'Iuch',
          'Lùn',
          'Sult',
          'Dàmh',
          'Samh',
          'Dùbh',
        ],
        i = [
          'Didòmhnaich',
          'Diluain',
          'Dimàirt',
          'Diciadain',
          'Diardaoin',
          'Dihaoine',
          'Disathairne',
        ],
        r = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'],
        a = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'],
        o = e.defineLocale('gd', {
          months: t,
          monthsShort: n,
          monthsParseExact: !0,
          weekdays: i,
          weekdaysShort: r,
          weekdaysMin: a,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[An-diugh aig] LT',
            nextDay: '[A-màireach aig] LT',
            nextWeek: 'dddd [aig] LT',
            lastDay: '[An-dè aig] LT',
            lastWeek: 'dddd [seo chaidh] [aig] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'ann an %s',
            past: 'bho chionn %s',
            s: 'beagan diogan',
            ss: '%d diogan',
            m: 'mionaid',
            mm: '%d mionaidean',
            h: 'uair',
            hh: '%d uairean',
            d: 'latha',
            dd: '%d latha',
            M: 'mìos',
            MM: '%d mìosan',
            y: 'bliadhna',
            yy: '%d bliadhna',
          },
          dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
          ordinal: function (e) {
            var t = 1 === e ? 'd' : e % 10 === 2 ? 'na' : 'mh';
            return e + t;
          },
          week: { dow: 1, doy: 4 },
        });
      return o;
    });
  },
  '../../../node_modules/moment/locale/gl.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('gl', {
        months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split(
          '_'
        ),
        monthsShort: 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
        weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
        weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'H:mm',
          LTS: 'H:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D [de] MMMM [de] YYYY',
          LLL: 'D [de] MMMM [de] YYYY H:mm',
          LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',
        },
        calendar: {
          sameDay: function () {
            return '[hoxe ' + (1 !== this.hours() ? 'ás' : 'á') + '] LT';
          },
          nextDay: function () {
            return '[mañá ' + (1 !== this.hours() ? 'ás' : 'á') + '] LT';
          },
          nextWeek: function () {
            return 'dddd [' + (1 !== this.hours() ? 'ás' : 'a') + '] LT';
          },
          lastDay: function () {
            return '[onte ' + (1 !== this.hours() ? 'á' : 'a') + '] LT';
          },
          lastWeek: function () {
            return (
              '[o] dddd [pasado ' + (1 !== this.hours() ? 'ás' : 'a') + '] LT'
            );
          },
          sameElse: 'L',
        },
        relativeTime: {
          future: function (e) {
            return 0 === e.indexOf('un') ? 'n' + e : 'en ' + e;
          },
          past: 'hai %s',
          s: 'uns segundos',
          ss: '%d segundos',
          m: 'un minuto',
          mm: '%d minutos',
          h: 'unha hora',
          hh: '%d horas',
          d: 'un día',
          dd: '%d días',
          M: 'un mes',
          MM: '%d meses',
          y: 'un ano',
          yy: '%d anos',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/gom-deva.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      function t(e, t, n, i) {
        var r = {
          s: ['थोडया सॅकंडांनी', 'थोडे सॅकंड'],
          ss: [e + ' सॅकंडांनी', e + ' सॅकंड'],
          m: ['एका मिणटान', 'एक मिनूट'],
          mm: [e + ' मिणटांनी', e + ' मिणटां'],
          h: ['एका वरान', 'एक वर'],
          hh: [e + ' वरांनी', e + ' वरां'],
          d: ['एका दिसान', 'एक दीस'],
          dd: [e + ' दिसांनी', e + ' दीस'],
          M: ['एका म्हयन्यान', 'एक म्हयनो'],
          MM: [e + ' म्हयन्यानी', e + ' म्हयने'],
          y: ['एका वर्सान', 'एक वर्स'],
          yy: [e + ' वर्सांनी', e + ' वर्सां'],
        };
        return i ? r[n][0] : r[n][1];
      }
      var n = e.defineLocale('gom-deva', {
        months: {
          standalone: 'जानेवारी_फेब्रुवारी_मार्च_एप्रील_मे_जून_जुलय_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split(
            '_'
          ),
          format: 'जानेवारीच्या_फेब्रुवारीच्या_मार्चाच्या_एप्रीलाच्या_मेयाच्या_जूनाच्या_जुलयाच्या_ऑगस्टाच्या_सप्टेंबराच्या_ऑक्टोबराच्या_नोव्हेंबराच्या_डिसेंबराच्या'.split(
            '_'
          ),
          isFormat: /MMMM(\s)+D[oD]?/,
        },
        monthsShort: 'जाने._फेब्रु._मार्च_एप्री._मे_जून_जुल._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'आयतार_सोमार_मंगळार_बुधवार_बिरेस्तार_सुक्रार_शेनवार'.split(
          '_'
        ),
        weekdaysShort: 'आयत._सोम._मंगळ._बुध._ब्रेस्त._सुक्र._शेन.'.split('_'),
        weekdaysMin: 'आ_सो_मं_बु_ब्रे_सु_शे'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'A h:mm [वाजतां]',
          LTS: 'A h:mm:ss [वाजतां]',
          L: 'DD-MM-YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY A h:mm [वाजतां]',
          LLLL: 'dddd, MMMM Do, YYYY, A h:mm [वाजतां]',
          llll: 'ddd, D MMM YYYY, A h:mm [वाजतां]',
        },
        calendar: {
          sameDay: '[आयज] LT',
          nextDay: '[फाल्यां] LT',
          nextWeek: '[फुडलो] dddd[,] LT',
          lastDay: '[काल] LT',
          lastWeek: '[फाटलो] dddd[,] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: '%s',
          past: '%s आदीं',
          s: t,
          ss: t,
          m: t,
          mm: t,
          h: t,
          hh: t,
          d: t,
          dd: t,
          M: t,
          MM: t,
          y: t,
          yy: t,
        },
        dayOfMonthOrdinalParse: /\d{1,2}(वेर)/,
        ordinal: function (e, t) {
          switch (t) {
            case 'D':
              return e + 'वेर';
            default:
            case 'M':
            case 'Q':
            case 'DDD':
            case 'd':
            case 'w':
            case 'W':
              return e;
          }
        },
        week: { dow: 0, doy: 3 },
        meridiemParse: /राती|सकाळीं|दनपारां|सांजे/,
        meridiemHour: function (e, t) {
          return (
            12 === e && (e = 0),
            'राती' === t
              ? e < 4
                ? e
                : e + 12
              : 'सकाळीं' === t
              ? e
              : 'दनपारां' === t
              ? e > 12
                ? e
                : e + 12
              : 'सांजे' === t
              ? e + 12
              : void 0
          );
        },
        meridiem: function (e, t, n) {
          return e < 4
            ? 'राती'
            : e < 12
            ? 'सकाळीं'
            : e < 16
            ? 'दनपारां'
            : e < 20
            ? 'सांजे'
            : 'राती';
        },
      });
      return n;
    });
  },
  '../../../node_modules/moment/locale/gom-latn.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      function t(e, t, n, i) {
        var r = {
          s: ['thoddea sekondamni', 'thodde sekond'],
          ss: [e + ' sekondamni', e + ' sekond'],
          m: ['eka mintan', 'ek minut'],
          mm: [e + ' mintamni', e + ' mintam'],
          h: ['eka voran', 'ek vor'],
          hh: [e + ' voramni', e + ' voram'],
          d: ['eka disan', 'ek dis'],
          dd: [e + ' disamni', e + ' dis'],
          M: ['eka mhoinean', 'ek mhoino'],
          MM: [e + ' mhoineamni', e + ' mhoine'],
          y: ['eka vorsan', 'ek voros'],
          yy: [e + ' vorsamni', e + ' vorsam'],
        };
        return i ? r[n][0] : r[n][1];
      }
      var n = e.defineLocale('gom-latn', {
        months: {
          standalone: 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split(
            '_'
          ),
          format: 'Janerachea_Febrerachea_Marsachea_Abrilachea_Maiachea_Junachea_Julaiachea_Agostachea_Setembrachea_Otubrachea_Novembrachea_Dezembrachea'.split(
            '_'
          ),
          isFormat: /MMMM(\s)+D[oD]?/,
        },
        monthsShort: 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: "Aitar_Somar_Mongllar_Budhvar_Birestar_Sukrar_Son'var".split(
          '_'
        ),
        weekdaysShort: 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),
        weekdaysMin: 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'A h:mm [vazta]',
          LTS: 'A h:mm:ss [vazta]',
          L: 'DD-MM-YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY A h:mm [vazta]',
          LLLL: 'dddd, MMMM Do, YYYY, A h:mm [vazta]',
          llll: 'ddd, D MMM YYYY, A h:mm [vazta]',
        },
        calendar: {
          sameDay: '[Aiz] LT',
          nextDay: '[Faleam] LT',
          nextWeek: '[Fuddlo] dddd[,] LT',
          lastDay: '[Kal] LT',
          lastWeek: '[Fattlo] dddd[,] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: '%s',
          past: '%s adim',
          s: t,
          ss: t,
          m: t,
          mm: t,
          h: t,
          hh: t,
          d: t,
          dd: t,
          M: t,
          MM: t,
          y: t,
          yy: t,
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er)/,
        ordinal: function (e, t) {
          switch (t) {
            case 'D':
              return e + 'er';
            default:
            case 'M':
            case 'Q':
            case 'DDD':
            case 'd':
            case 'w':
            case 'W':
              return e;
          }
        },
        week: { dow: 0, doy: 3 },
        meridiemParse: /rati|sokallim|donparam|sanje/,
        meridiemHour: function (e, t) {
          return (
            12 === e && (e = 0),
            'rati' === t
              ? e < 4
                ? e
                : e + 12
              : 'sokallim' === t
              ? e
              : 'donparam' === t
              ? e > 12
                ? e
                : e + 12
              : 'sanje' === t
              ? e + 12
              : void 0
          );
        },
        meridiem: function (e, t, n) {
          return e < 4
            ? 'rati'
            : e < 12
            ? 'sokallim'
            : e < 16
            ? 'donparam'
            : e < 20
            ? 'sanje'
            : 'rati';
        },
      });
      return n;
    });
  },
  '../../../node_modules/moment/locale/gu.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          1: '૧',
          2: '૨',
          3: '૩',
          4: '૪',
          5: '૫',
          6: '૬',
          7: '૭',
          8: '૮',
          9: '૯',
          0: '૦',
        },
        n = {
          '૧': '1',
          '૨': '2',
          '૩': '3',
          '૪': '4',
          '૫': '5',
          '૬': '6',
          '૭': '7',
          '૮': '8',
          '૯': '9',
          '૦': '0',
        },
        i = e.defineLocale('gu', {
          months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split(
            '_'
          ),
          monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split(
            '_'
          ),
          monthsParseExact: !0,
          weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split(
            '_'
          ),
          weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),
          weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),
          longDateFormat: {
            LT: 'A h:mm વાગ્યે',
            LTS: 'A h:mm:ss વાગ્યે',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm વાગ્યે',
            LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે',
          },
          calendar: {
            sameDay: '[આજ] LT',
            nextDay: '[કાલે] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[ગઇકાલે] LT',
            lastWeek: '[પાછલા] dddd, LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s મા',
            past: '%s પહેલા',
            s: 'અમુક પળો',
            ss: '%d સેકંડ',
            m: 'એક મિનિટ',
            mm: '%d મિનિટ',
            h: 'એક કલાક',
            hh: '%d કલાક',
            d: 'એક દિવસ',
            dd: '%d દિવસ',
            M: 'એક મહિનો',
            MM: '%d મહિનો',
            y: 'એક વર્ષ',
            yy: '%d વર્ષ',
          },
          preparse: function (e) {
            return e.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (e) {
              return n[e];
            });
          },
          postformat: function (e) {
            return e.replace(/\d/g, function (e) {
              return t[e];
            });
          },
          meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
          meridiemHour: function (e, t) {
            return (
              12 === e && (e = 0),
              'રાત' === t
                ? e < 4
                  ? e
                  : e + 12
                : 'સવાર' === t
                ? e
                : 'બપોર' === t
                ? e >= 10
                  ? e
                  : e + 12
                : 'સાંજ' === t
                ? e + 12
                : void 0
            );
          },
          meridiem: function (e, t, n) {
            return e < 4
              ? 'રાત'
              : e < 10
              ? 'સવાર'
              : e < 17
              ? 'બપોર'
              : e < 20
              ? 'સાંજ'
              : 'રાત';
          },
          week: { dow: 0, doy: 6 },
        });
      return i;
    });
  },
  '../../../node_modules/moment/locale/he.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('he', {
        months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split(
          '_'
        ),
        monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split(
          '_'
        ),
        weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
        weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
        weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D [ב]MMMM YYYY',
          LLL: 'D [ב]MMMM YYYY HH:mm',
          LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',
          l: 'D/M/YYYY',
          ll: 'D MMM YYYY',
          lll: 'D MMM YYYY HH:mm',
          llll: 'ddd, D MMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[היום ב־]LT',
          nextDay: '[מחר ב־]LT',
          nextWeek: 'dddd [בשעה] LT',
          lastDay: '[אתמול ב־]LT',
          lastWeek: '[ביום] dddd [האחרון בשעה] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'בעוד %s',
          past: 'לפני %s',
          s: 'מספר שניות',
          ss: '%d שניות',
          m: 'דקה',
          mm: '%d דקות',
          h: 'שעה',
          hh: function (e) {
            return 2 === e ? 'שעתיים' : e + ' שעות';
          },
          d: 'יום',
          dd: function (e) {
            return 2 === e ? 'יומיים' : e + ' ימים';
          },
          M: 'חודש',
          MM: function (e) {
            return 2 === e ? 'חודשיים' : e + ' חודשים';
          },
          y: 'שנה',
          yy: function (e) {
            return 2 === e
              ? 'שנתיים'
              : e % 10 === 0 && 10 !== e
              ? e + ' שנה'
              : e + ' שנים';
          },
        },
        meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
        isPM: function (e) {
          return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(e);
        },
        meridiem: function (e, t, n) {
          return e < 5
            ? 'לפנות בוקר'
            : e < 10
            ? 'בבוקר'
            : e < 12
            ? n
              ? 'לפנה"צ'
              : 'לפני הצהריים'
            : e < 18
            ? n
              ? 'אחה"צ'
              : 'אחרי הצהריים'
            : 'בערב';
        },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/hi.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          1: '१',
          2: '२',
          3: '३',
          4: '४',
          5: '५',
          6: '६',
          7: '७',
          8: '८',
          9: '९',
          0: '०',
        },
        n = {
          '१': '1',
          '२': '2',
          '३': '3',
          '४': '4',
          '५': '5',
          '६': '6',
          '७': '7',
          '८': '8',
          '९': '9',
          '०': '0',
        },
        i = e.defineLocale('hi', {
          months: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split(
            '_'
          ),
          monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split(
            '_'
          ),
          monthsParseExact: !0,
          weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split(
            '_'
          ),
          weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
          weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),
          longDateFormat: {
            LT: 'A h:mm बजे',
            LTS: 'A h:mm:ss बजे',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm बजे',
            LLLL: 'dddd, D MMMM YYYY, A h:mm बजे',
          },
          calendar: {
            sameDay: '[आज] LT',
            nextDay: '[कल] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[कल] LT',
            lastWeek: '[पिछले] dddd, LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s में',
            past: '%s पहले',
            s: 'कुछ ही क्षण',
            ss: '%d सेकंड',
            m: 'एक मिनट',
            mm: '%d मिनट',
            h: 'एक घंटा',
            hh: '%d घंटे',
            d: 'एक दिन',
            dd: '%d दिन',
            M: 'एक महीने',
            MM: '%d महीने',
            y: 'एक वर्ष',
            yy: '%d वर्ष',
          },
          preparse: function (e) {
            return e.replace(/[१२३४५६७८९०]/g, function (e) {
              return n[e];
            });
          },
          postformat: function (e) {
            return e.replace(/\d/g, function (e) {
              return t[e];
            });
          },
          meridiemParse: /रात|सुबह|दोपहर|शाम/,
          meridiemHour: function (e, t) {
            return (
              12 === e && (e = 0),
              'रात' === t
                ? e < 4
                  ? e
                  : e + 12
                : 'सुबह' === t
                ? e
                : 'दोपहर' === t
                ? e >= 10
                  ? e
                  : e + 12
                : 'शाम' === t
                ? e + 12
                : void 0
            );
          },
          meridiem: function (e, t, n) {
            return e < 4
              ? 'रात'
              : e < 10
              ? 'सुबह'
              : e < 17
              ? 'दोपहर'
              : e < 20
              ? 'शाम'
              : 'रात';
          },
          week: { dow: 0, doy: 6 },
        });
      return i;
    });
  },
  '../../../node_modules/moment/locale/hr.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      function t(e, t, n) {
        var i = e + ' ';
        switch (n) {
          case 'ss':
            return (
              (i +=
                1 === e
                  ? 'sekunda'
                  : 2 === e || 3 === e || 4 === e
                  ? 'sekunde'
                  : 'sekundi'),
              i
            );
          case 'm':
            return t ? 'jedna minuta' : 'jedne minute';
          case 'mm':
            return (
              (i +=
                1 === e
                  ? 'minuta'
                  : 2 === e || 3 === e || 4 === e
                  ? 'minute'
                  : 'minuta'),
              i
            );
          case 'h':
            return t ? 'jedan sat' : 'jednog sata';
          case 'hh':
            return (
              (i +=
                1 === e
                  ? 'sat'
                  : 2 === e || 3 === e || 4 === e
                  ? 'sata'
                  : 'sati'),
              i
            );
          case 'dd':
            return (i += 1 === e ? 'dan' : 'dana'), i;
          case 'MM':
            return (
              (i +=
                1 === e
                  ? 'mjesec'
                  : 2 === e || 3 === e || 4 === e
                  ? 'mjeseca'
                  : 'mjeseci'),
              i
            );
          case 'yy':
            return (
              (i +=
                1 === e
                  ? 'godina'
                  : 2 === e || 3 === e || 4 === e
                  ? 'godine'
                  : 'godina'),
              i
            );
        }
      }
      var n = e.defineLocale('hr', {
        months: {
          format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split(
            '_'
          ),
          standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split(
            '_'
          ),
        },
        monthsShort: 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(
          '_'
        ),
        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'H:mm',
          LTS: 'H:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'Do MMMM YYYY',
          LLL: 'Do MMMM YYYY H:mm',
          LLLL: 'dddd, Do MMMM YYYY H:mm',
        },
        calendar: {
          sameDay: '[danas u] LT',
          nextDay: '[sutra u] LT',
          nextWeek: function () {
            switch (this.day()) {
              case 0:
                return '[u] [nedjelju] [u] LT';
              case 3:
                return '[u] [srijedu] [u] LT';
              case 6:
                return '[u] [subotu] [u] LT';
              case 1:
              case 2:
              case 4:
              case 5:
                return '[u] dddd [u] LT';
            }
          },
          lastDay: '[jučer u] LT',
          lastWeek: function () {
            switch (this.day()) {
              case 0:
                return '[prošlu] [nedjelju] [u] LT';
              case 3:
                return '[prošlu] [srijedu] [u] LT';
              case 6:
                return '[prošle] [subote] [u] LT';
              case 1:
              case 2:
              case 4:
              case 5:
                return '[prošli] dddd [u] LT';
            }
          },
          sameElse: 'L',
        },
        relativeTime: {
          future: 'za %s',
          past: 'prije %s',
          s: 'par sekundi',
          ss: t,
          m: t,
          mm: t,
          h: t,
          hh: t,
          d: 'dan',
          dd: t,
          M: 'mjesec',
          MM: t,
          y: 'godinu',
          yy: t,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: { dow: 1, doy: 7 },
      });
      return n;
    });
  },
  '../../../node_modules/moment/locale/hu.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(
        ' '
      );
      function n(e, t, n, i) {
        var r = e;
        switch (n) {
          case 's':
            return i || t ? 'néhány másodperc' : 'néhány másodperce';
          case 'ss':
            return r + (i || t) ? ' másodperc' : ' másodperce';
          case 'm':
            return 'egy' + (i || t ? ' perc' : ' perce');
          case 'mm':
            return r + (i || t ? ' perc' : ' perce');
          case 'h':
            return 'egy' + (i || t ? ' óra' : ' órája');
          case 'hh':
            return r + (i || t ? ' óra' : ' órája');
          case 'd':
            return 'egy' + (i || t ? ' nap' : ' napja');
          case 'dd':
            return r + (i || t ? ' nap' : ' napja');
          case 'M':
            return 'egy' + (i || t ? ' hónap' : ' hónapja');
          case 'MM':
            return r + (i || t ? ' hónap' : ' hónapja');
          case 'y':
            return 'egy' + (i || t ? ' év' : ' éve');
          case 'yy':
            return r + (i || t ? ' év' : ' éve');
        }
        return '';
      }
      function i(e) {
        return (e ? '' : '[múlt] ') + '[' + t[this.day()] + '] LT[-kor]';
      }
      var r = e.defineLocale('hu', {
        months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split(
          '_'
        ),
        monthsShort: 'jan._feb._márc._ápr._máj._jún._júl._aug._szept._okt._nov._dec.'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split(
          '_'
        ),
        weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
        weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),
        longDateFormat: {
          LT: 'H:mm',
          LTS: 'H:mm:ss',
          L: 'YYYY.MM.DD.',
          LL: 'YYYY. MMMM D.',
          LLL: 'YYYY. MMMM D. H:mm',
          LLLL: 'YYYY. MMMM D., dddd H:mm',
        },
        meridiemParse: /de|du/i,
        isPM: function (e) {
          return 'u' === e.charAt(1).toLowerCase();
        },
        meridiem: function (e, t, n) {
          return e < 12 ? (!0 === n ? 'de' : 'DE') : !0 === n ? 'du' : 'DU';
        },
        calendar: {
          sameDay: '[ma] LT[-kor]',
          nextDay: '[holnap] LT[-kor]',
          nextWeek: function () {
            return i.call(this, !0);
          },
          lastDay: '[tegnap] LT[-kor]',
          lastWeek: function () {
            return i.call(this, !1);
          },
          sameElse: 'L',
        },
        relativeTime: {
          future: '%s múlva',
          past: '%s',
          s: n,
          ss: n,
          m: n,
          mm: n,
          h: n,
          hh: n,
          d: n,
          dd: n,
          M: n,
          MM: n,
          y: n,
          yy: n,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: { dow: 1, doy: 4 },
      });
      return r;
    });
  },
  '../../../node_modules/moment/locale/hy-am.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('hy-am', {
        months: {
          format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split(
            '_'
          ),
          standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split(
            '_'
          ),
        },
        monthsShort: 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split(
          '_'
        ),
        weekdays: 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split(
          '_'
        ),
        weekdaysShort: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
        weekdaysMin: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'D MMMM YYYY թ.',
          LLL: 'D MMMM YYYY թ., HH:mm',
          LLLL: 'dddd, D MMMM YYYY թ., HH:mm',
        },
        calendar: {
          sameDay: '[այսօր] LT',
          nextDay: '[վաղը] LT',
          lastDay: '[երեկ] LT',
          nextWeek: function () {
            return 'dddd [օրը ժամը] LT';
          },
          lastWeek: function () {
            return '[անցած] dddd [օրը ժամը] LT';
          },
          sameElse: 'L',
        },
        relativeTime: {
          future: '%s հետո',
          past: '%s առաջ',
          s: 'մի քանի վայրկյան',
          ss: '%d վայրկյան',
          m: 'րոպե',
          mm: '%d րոպե',
          h: 'ժամ',
          hh: '%d ժամ',
          d: 'օր',
          dd: '%d օր',
          M: 'ամիս',
          MM: '%d ամիս',
          y: 'տարի',
          yy: '%d տարի',
        },
        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
        isPM: function (e) {
          return /^(ցերեկվա|երեկոյան)$/.test(e);
        },
        meridiem: function (e) {
          return e < 4
            ? 'գիշերվա'
            : e < 12
            ? 'առավոտվա'
            : e < 17
            ? 'ցերեկվա'
            : 'երեկոյան';
        },
        dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
        ordinal: function (e, t) {
          switch (t) {
            case 'DDD':
            case 'w':
            case 'W':
            case 'DDDo':
              return 1 === e ? e + '-ին' : e + '-րդ';
            default:
              return e;
          }
        },
        week: { dow: 1, doy: 7 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/id.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('id', {
        months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split(
          '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split(
          '_'
        ),
        weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
        weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
        weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat: {
          LT: 'HH.mm',
          LTS: 'HH.mm.ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY [pukul] HH.mm',
          LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',
        },
        meridiemParse: /pagi|siang|sore|malam/,
        meridiemHour: function (e, t) {
          return (
            12 === e && (e = 0),
            'pagi' === t
              ? e
              : 'siang' === t
              ? e >= 11
                ? e
                : e + 12
              : 'sore' === t || 'malam' === t
              ? e + 12
              : void 0
          );
        },
        meridiem: function (e, t, n) {
          return e < 11 ? 'pagi' : e < 15 ? 'siang' : e < 19 ? 'sore' : 'malam';
        },
        calendar: {
          sameDay: '[Hari ini pukul] LT',
          nextDay: '[Besok pukul] LT',
          nextWeek: 'dddd [pukul] LT',
          lastDay: '[Kemarin pukul] LT',
          lastWeek: 'dddd [lalu pukul] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'dalam %s',
          past: '%s yang lalu',
          s: 'beberapa detik',
          ss: '%d detik',
          m: 'semenit',
          mm: '%d menit',
          h: 'sejam',
          hh: '%d jam',
          d: 'sehari',
          dd: '%d hari',
          M: 'sebulan',
          MM: '%d bulan',
          y: 'setahun',
          yy: '%d tahun',
        },
        week: { dow: 0, doy: 6 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/is.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      function t(e) {
        return e % 100 === 11 || e % 10 !== 1;
      }
      function n(e, n, i, r) {
        var a = e + ' ';
        switch (i) {
          case 's':
            return n || r ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
          case 'ss':
            return t(e)
              ? a + (n || r ? 'sekúndur' : 'sekúndum')
              : a + 'sekúnda';
          case 'm':
            return n ? 'mínúta' : 'mínútu';
          case 'mm':
            return t(e)
              ? a + (n || r ? 'mínútur' : 'mínútum')
              : n
              ? a + 'mínúta'
              : a + 'mínútu';
          case 'hh':
            return t(e)
              ? a + (n || r ? 'klukkustundir' : 'klukkustundum')
              : a + 'klukkustund';
          case 'd':
            return n ? 'dagur' : r ? 'dag' : 'degi';
          case 'dd':
            return t(e)
              ? n
                ? a + 'dagar'
                : a + (r ? 'daga' : 'dögum')
              : n
              ? a + 'dagur'
              : a + (r ? 'dag' : 'degi');
          case 'M':
            return n ? 'mánuður' : r ? 'mánuð' : 'mánuði';
          case 'MM':
            return t(e)
              ? n
                ? a + 'mánuðir'
                : a + (r ? 'mánuði' : 'mánuðum')
              : n
              ? a + 'mánuður'
              : a + (r ? 'mánuð' : 'mánuði');
          case 'y':
            return n || r ? 'ár' : 'ári';
          case 'yy':
            return t(e)
              ? a + (n || r ? 'ár' : 'árum')
              : a + (n || r ? 'ár' : 'ári');
        }
      }
      var i = e.defineLocale('is', {
        months: 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split(
          '_'
        ),
        monthsShort: 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split(
          '_'
        ),
        weekdays: 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split(
          '_'
        ),
        weekdaysShort: 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
        weekdaysMin: 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
        longDateFormat: {
          LT: 'H:mm',
          LTS: 'H:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'D. MMMM YYYY',
          LLL: 'D. MMMM YYYY [kl.] H:mm',
          LLLL: 'dddd, D. MMMM YYYY [kl.] H:mm',
        },
        calendar: {
          sameDay: '[í dag kl.] LT',
          nextDay: '[á morgun kl.] LT',
          nextWeek: 'dddd [kl.] LT',
          lastDay: '[í gær kl.] LT',
          lastWeek: '[síðasta] dddd [kl.] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'eftir %s',
          past: 'fyrir %s síðan',
          s: n,
          ss: n,
          m: n,
          mm: n,
          h: 'klukkustund',
          hh: n,
          d: n,
          dd: n,
          M: n,
          MM: n,
          y: n,
          yy: n,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: { dow: 1, doy: 4 },
      });
      return i;
    });
  },
  '../../../node_modules/moment/locale/it-ch.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('it-ch', {
        months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split(
          '_'
        ),
        monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split(
          '_'
        ),
        weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split(
          '_'
        ),
        weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
        weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[Oggi alle] LT',
          nextDay: '[Domani alle] LT',
          nextWeek: 'dddd [alle] LT',
          lastDay: '[Ieri alle] LT',
          lastWeek: function () {
            switch (this.day()) {
              case 0:
                return '[la scorsa] dddd [alle] LT';
              default:
                return '[lo scorso] dddd [alle] LT';
            }
          },
          sameElse: 'L',
        },
        relativeTime: {
          future: function (e) {
            return (/^[0-9].+$/.test(e) ? 'tra' : 'in') + ' ' + e;
          },
          past: '%s fa',
          s: 'alcuni secondi',
          ss: '%d secondi',
          m: 'un minuto',
          mm: '%d minuti',
          h: "un'ora",
          hh: '%d ore',
          d: 'un giorno',
          dd: '%d giorni',
          M: 'un mese',
          MM: '%d mesi',
          y: 'un anno',
          yy: '%d anni',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/it.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('it', {
        months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split(
          '_'
        ),
        monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split(
          '_'
        ),
        weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split(
          '_'
        ),
        weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
        weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: function () {
            return (
              '[Oggi a' +
              (this.hours() > 1 ? 'lle ' : 0 === this.hours() ? ' ' : "ll'") +
              ']LT'
            );
          },
          nextDay: function () {
            return (
              '[Domani a' +
              (this.hours() > 1 ? 'lle ' : 0 === this.hours() ? ' ' : "ll'") +
              ']LT'
            );
          },
          nextWeek: function () {
            return (
              'dddd [a' +
              (this.hours() > 1 ? 'lle ' : 0 === this.hours() ? ' ' : "ll'") +
              ']LT'
            );
          },
          lastDay: function () {
            return (
              '[Ieri a' +
              (this.hours() > 1 ? 'lle ' : 0 === this.hours() ? ' ' : "ll'") +
              ']LT'
            );
          },
          lastWeek: function () {
            switch (this.day()) {
              case 0:
                return (
                  '[La scorsa] dddd [a' +
                  (this.hours() > 1
                    ? 'lle '
                    : 0 === this.hours()
                    ? ' '
                    : "ll'") +
                  ']LT'
                );
              default:
                return (
                  '[Lo scorso] dddd [a' +
                  (this.hours() > 1
                    ? 'lle '
                    : 0 === this.hours()
                    ? ' '
                    : "ll'") +
                  ']LT'
                );
            }
          },
          sameElse: 'L',
        },
        relativeTime: {
          future: 'tra %s',
          past: '%s fa',
          s: 'alcuni secondi',
          ss: '%d secondi',
          m: 'un minuto',
          mm: '%d minuti',
          h: "un'ora",
          hh: '%d ore',
          d: 'un giorno',
          dd: '%d giorni',
          w: 'una settimana',
          ww: '%d settimane',
          M: 'un mese',
          MM: '%d mesi',
          y: 'un anno',
          yy: '%d anni',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/ja.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('ja', {
        eras: [
          {
            since: '2019-05-01',
            offset: 1,
            name: '令和',
            narrow: '㋿',
            abbr: 'R',
          },
          {
            since: '1989-01-08',
            until: '2019-04-30',
            offset: 1,
            name: '平成',
            narrow: '㍻',
            abbr: 'H',
          },
          {
            since: '1926-12-25',
            until: '1989-01-07',
            offset: 1,
            name: '昭和',
            narrow: '㍼',
            abbr: 'S',
          },
          {
            since: '1912-07-30',
            until: '1926-12-24',
            offset: 1,
            name: '大正',
            narrow: '㍽',
            abbr: 'T',
          },
          {
            since: '1873-01-01',
            until: '1912-07-29',
            offset: 6,
            name: '明治',
            narrow: '㍾',
            abbr: 'M',
          },
          {
            since: '0001-01-01',
            until: '1873-12-31',
            offset: 1,
            name: '西暦',
            narrow: 'AD',
            abbr: 'AD',
          },
          {
            since: '0000-12-31',
            until: -1 / 0,
            offset: 1,
            name: '紀元前',
            narrow: 'BC',
            abbr: 'BC',
          },
        ],
        eraYearOrdinalRegex: /(元|\d+)年/,
        eraYearOrdinalParse: function (e, t) {
          return '元' === t[1] ? 1 : parseInt(t[1] || e, 10);
        },
        months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
          '_'
        ),
        weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
        weekdaysShort: '日_月_火_水_木_金_土'.split('_'),
        weekdaysMin: '日_月_火_水_木_金_土'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'YYYY/MM/DD',
          LL: 'YYYY年M月D日',
          LLL: 'YYYY年M月D日 HH:mm',
          LLLL: 'YYYY年M月D日 dddd HH:mm',
          l: 'YYYY/MM/DD',
          ll: 'YYYY年M月D日',
          lll: 'YYYY年M月D日 HH:mm',
          llll: 'YYYY年M月D日(ddd) HH:mm',
        },
        meridiemParse: /午前|午後/i,
        isPM: function (e) {
          return '午後' === e;
        },
        meridiem: function (e, t, n) {
          return e < 12 ? '午前' : '午後';
        },
        calendar: {
          sameDay: '[今日] LT',
          nextDay: '[明日] LT',
          nextWeek: function (e) {
            return e.week() !== this.week() ? '[来週]dddd LT' : 'dddd LT';
          },
          lastDay: '[昨日] LT',
          lastWeek: function (e) {
            return this.week() !== e.week() ? '[先週]dddd LT' : 'dddd LT';
          },
          sameElse: 'L',
        },
        dayOfMonthOrdinalParse: /\d{1,2}日/,
        ordinal: function (e, t) {
          switch (t) {
            case 'y':
              return 1 === e ? '元年' : e + '年';
            case 'd':
            case 'D':
            case 'DDD':
              return e + '日';
            default:
              return e;
          }
        },
        relativeTime: {
          future: '%s後',
          past: '%s前',
          s: '数秒',
          ss: '%d秒',
          m: '1分',
          mm: '%d分',
          h: '1時間',
          hh: '%d時間',
          d: '1日',
          dd: '%d日',
          M: '1ヶ月',
          MM: '%dヶ月',
          y: '1年',
          yy: '%d年',
        },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/jv.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('jv', {
        months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split(
          '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split(
          '_'
        ),
        weekdays: 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
        weekdaysShort: 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
        weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
        longDateFormat: {
          LT: 'HH.mm',
          LTS: 'HH.mm.ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY [pukul] HH.mm',
          LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',
        },
        meridiemParse: /enjing|siyang|sonten|ndalu/,
        meridiemHour: function (e, t) {
          return (
            12 === e && (e = 0),
            'enjing' === t
              ? e
              : 'siyang' === t
              ? e >= 11
                ? e
                : e + 12
              : 'sonten' === t || 'ndalu' === t
              ? e + 12
              : void 0
          );
        },
        meridiem: function (e, t, n) {
          return e < 11
            ? 'enjing'
            : e < 15
            ? 'siyang'
            : e < 19
            ? 'sonten'
            : 'ndalu';
        },
        calendar: {
          sameDay: '[Dinten puniko pukul] LT',
          nextDay: '[Mbenjang pukul] LT',
          nextWeek: 'dddd [pukul] LT',
          lastDay: '[Kala wingi pukul] LT',
          lastWeek: 'dddd [kepengker pukul] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'wonten ing %s',
          past: '%s ingkang kepengker',
          s: 'sawetawis detik',
          ss: '%d detik',
          m: 'setunggal menit',
          mm: '%d menit',
          h: 'setunggal jam',
          hh: '%d jam',
          d: 'sedinten',
          dd: '%d dinten',
          M: 'sewulan',
          MM: '%d wulan',
          y: 'setaun',
          yy: '%d taun',
        },
        week: { dow: 1, doy: 7 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/ka.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('ka', {
        months: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split(
          '_'
        ),
        monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split(
          '_'
        ),
        weekdays: {
          standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split(
            '_'
          ),
          format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split(
            '_'
          ),
          isFormat: /(წინა|შემდეგ)/,
        },
        weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
        weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[დღეს] LT[-ზე]',
          nextDay: '[ხვალ] LT[-ზე]',
          lastDay: '[გუშინ] LT[-ზე]',
          nextWeek: '[შემდეგ] dddd LT[-ზე]',
          lastWeek: '[წინა] dddd LT-ზე',
          sameElse: 'L',
        },
        relativeTime: {
          future: function (e) {
            return e.replace(/(წამ|წუთ|საათ|წელ|დღ|თვ)(ი|ე)/, function (
              e,
              t,
              n
            ) {
              return 'ი' === n ? t + 'ში' : t + n + 'ში';
            });
          },
          past: function (e) {
            return /(წამი|წუთი|საათი|დღე|თვე)/.test(e)
              ? e.replace(/(ი|ე)$/, 'ის წინ')
              : /წელი/.test(e)
              ? e.replace(/წელი$/, 'წლის წინ')
              : e;
          },
          s: 'რამდენიმე წამი',
          ss: '%d წამი',
          m: 'წუთი',
          mm: '%d წუთი',
          h: 'საათი',
          hh: '%d საათი',
          d: 'დღე',
          dd: '%d დღე',
          M: 'თვე',
          MM: '%d თვე',
          y: 'წელი',
          yy: '%d წელი',
        },
        dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
        ordinal: function (e) {
          return 0 === e
            ? e
            : 1 === e
            ? e + '-ლი'
            : e < 20 || (e <= 100 && e % 20 === 0) || e % 100 === 0
            ? 'მე-' + e
            : e + '-ე';
        },
        week: { dow: 1, doy: 7 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/kk.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          0: '-ші',
          1: '-ші',
          2: '-ші',
          3: '-ші',
          4: '-ші',
          5: '-ші',
          6: '-шы',
          7: '-ші',
          8: '-ші',
          9: '-шы',
          10: '-шы',
          20: '-шы',
          30: '-шы',
          40: '-шы',
          50: '-ші',
          60: '-шы',
          70: '-ші',
          80: '-ші',
          90: '-шы',
          100: '-ші',
        },
        n = e.defineLocale('kk', {
          months: 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split(
            '_'
          ),
          monthsShort: 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split(
            '_'
          ),
          weekdays: 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split(
            '_'
          ),
          weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
          weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[Бүгін сағат] LT',
            nextDay: '[Ертең сағат] LT',
            nextWeek: 'dddd [сағат] LT',
            lastDay: '[Кеше сағат] LT',
            lastWeek: '[Өткен аптаның] dddd [сағат] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s ішінде',
            past: '%s бұрын',
            s: 'бірнеше секунд',
            ss: '%d секунд',
            m: 'бір минут',
            mm: '%d минут',
            h: 'бір сағат',
            hh: '%d сағат',
            d: 'бір күн',
            dd: '%d күн',
            M: 'бір ай',
            MM: '%d ай',
            y: 'бір жыл',
            yy: '%d жыл',
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
          ordinal: function (e) {
            var n = e % 10,
              i = e >= 100 ? 100 : null;
            return e + (t[e] || t[n] || t[i]);
          },
          week: { dow: 1, doy: 7 },
        });
      return n;
    });
  },
  '../../../node_modules/moment/locale/km.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          1: '១',
          2: '២',
          3: '៣',
          4: '៤',
          5: '៥',
          6: '៦',
          7: '៧',
          8: '៨',
          9: '៩',
          0: '០',
        },
        n = {
          '១': '1',
          '២': '2',
          '៣': '3',
          '៤': '4',
          '៥': '5',
          '៦': '6',
          '៧': '7',
          '៨': '8',
          '៩': '9',
          '០': '0',
        },
        i = e.defineLocale('km', {
          months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
            '_'
          ),
          monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
            '_'
          ),
          weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
          weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
          weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          meridiemParse: /ព្រឹក|ល្ងាច/,
          isPM: function (e) {
            return 'ល្ងាច' === e;
          },
          meridiem: function (e, t, n) {
            return e < 12 ? 'ព្រឹក' : 'ល្ងាច';
          },
          calendar: {
            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
            nextDay: '[ស្អែក ម៉ោង] LT',
            nextWeek: 'dddd [ម៉ោង] LT',
            lastDay: '[ម្សិលមិញ ម៉ោង] LT',
            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%sទៀត',
            past: '%sមុន',
            s: 'ប៉ុន្មានវិនាទី',
            ss: '%d វិនាទី',
            m: 'មួយនាទី',
            mm: '%d នាទី',
            h: 'មួយម៉ោង',
            hh: '%d ម៉ោង',
            d: 'មួយថ្ងៃ',
            dd: '%d ថ្ងៃ',
            M: 'មួយខែ',
            MM: '%d ខែ',
            y: 'មួយឆ្នាំ',
            yy: '%d ឆ្នាំ',
          },
          dayOfMonthOrdinalParse: /ទី\d{1,2}/,
          ordinal: 'ទី%d',
          preparse: function (e) {
            return e.replace(/[១២៣៤៥៦៧៨៩០]/g, function (e) {
              return n[e];
            });
          },
          postformat: function (e) {
            return e.replace(/\d/g, function (e) {
              return t[e];
            });
          },
          week: { dow: 1, doy: 4 },
        });
      return i;
    });
  },
  '../../../node_modules/moment/locale/kn.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          1: '೧',
          2: '೨',
          3: '೩',
          4: '೪',
          5: '೫',
          6: '೬',
          7: '೭',
          8: '೮',
          9: '೯',
          0: '೦',
        },
        n = {
          '೧': '1',
          '೨': '2',
          '೩': '3',
          '೪': '4',
          '೫': '5',
          '೬': '6',
          '೭': '7',
          '೮': '8',
          '೯': '9',
          '೦': '0',
        },
        i = e.defineLocale('kn', {
          months: 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split(
            '_'
          ),
          monthsShort: 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split(
            '_'
          ),
          monthsParseExact: !0,
          weekdays: 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split(
            '_'
          ),
          weekdaysShort: 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),
          weekdaysMin: 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),
          longDateFormat: {
            LT: 'A h:mm',
            LTS: 'A h:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm',
            LLLL: 'dddd, D MMMM YYYY, A h:mm',
          },
          calendar: {
            sameDay: '[ಇಂದು] LT',
            nextDay: '[ನಾಳೆ] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[ನಿನ್ನೆ] LT',
            lastWeek: '[ಕೊನೆಯ] dddd, LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s ನಂತರ',
            past: '%s ಹಿಂದೆ',
            s: 'ಕೆಲವು ಕ್ಷಣಗಳು',
            ss: '%d ಸೆಕೆಂಡುಗಳು',
            m: 'ಒಂದು ನಿಮಿಷ',
            mm: '%d ನಿಮಿಷ',
            h: 'ಒಂದು ಗಂಟೆ',
            hh: '%d ಗಂಟೆ',
            d: 'ಒಂದು ದಿನ',
            dd: '%d ದಿನ',
            M: 'ಒಂದು ತಿಂಗಳು',
            MM: '%d ತಿಂಗಳು',
            y: 'ಒಂದು ವರ್ಷ',
            yy: '%d ವರ್ಷ',
          },
          preparse: function (e) {
            return e.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (e) {
              return n[e];
            });
          },
          postformat: function (e) {
            return e.replace(/\d/g, function (e) {
              return t[e];
            });
          },
          meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
          meridiemHour: function (e, t) {
            return (
              12 === e && (e = 0),
              'ರಾತ್ರಿ' === t
                ? e < 4
                  ? e
                  : e + 12
                : 'ಬೆಳಿಗ್ಗೆ' === t
                ? e
                : 'ಮಧ್ಯಾಹ್ನ' === t
                ? e >= 10
                  ? e
                  : e + 12
                : 'ಸಂಜೆ' === t
                ? e + 12
                : void 0
            );
          },
          meridiem: function (e, t, n) {
            return e < 4
              ? 'ರಾತ್ರಿ'
              : e < 10
              ? 'ಬೆಳಿಗ್ಗೆ'
              : e < 17
              ? 'ಮಧ್ಯಾಹ್ನ'
              : e < 20
              ? 'ಸಂಜೆ'
              : 'ರಾತ್ರಿ';
          },
          dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
          ordinal: function (e) {
            return e + 'ನೇ';
          },
          week: { dow: 0, doy: 6 },
        });
      return i;
    });
  },
  '../../../node_modules/moment/locale/ko.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('ko', {
        months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
        monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split(
          '_'
        ),
        weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
        weekdaysShort: '일_월_화_수_목_금_토'.split('_'),
        weekdaysMin: '일_월_화_수_목_금_토'.split('_'),
        longDateFormat: {
          LT: 'A h:mm',
          LTS: 'A h:mm:ss',
          L: 'YYYY.MM.DD.',
          LL: 'YYYY년 MMMM D일',
          LLL: 'YYYY년 MMMM D일 A h:mm',
          LLLL: 'YYYY년 MMMM D일 dddd A h:mm',
          l: 'YYYY.MM.DD.',
          ll: 'YYYY년 MMMM D일',
          lll: 'YYYY년 MMMM D일 A h:mm',
          llll: 'YYYY년 MMMM D일 dddd A h:mm',
        },
        calendar: {
          sameDay: '오늘 LT',
          nextDay: '내일 LT',
          nextWeek: 'dddd LT',
          lastDay: '어제 LT',
          lastWeek: '지난주 dddd LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: '%s 후',
          past: '%s 전',
          s: '몇 초',
          ss: '%d초',
          m: '1분',
          mm: '%d분',
          h: '한 시간',
          hh: '%d시간',
          d: '하루',
          dd: '%d일',
          M: '한 달',
          MM: '%d달',
          y: '일 년',
          yy: '%d년',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(일|월|주)/,
        ordinal: function (e, t) {
          switch (t) {
            case 'd':
            case 'D':
            case 'DDD':
              return e + '일';
            case 'M':
              return e + '월';
            case 'w':
            case 'W':
              return e + '주';
            default:
              return e;
          }
        },
        meridiemParse: /오전|오후/,
        isPM: function (e) {
          return '오후' === e;
        },
        meridiem: function (e, t, n) {
          return e < 12 ? '오전' : '오후';
        },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/ku.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          1: '١',
          2: '٢',
          3: '٣',
          4: '٤',
          5: '٥',
          6: '٦',
          7: '٧',
          8: '٨',
          9: '٩',
          0: '٠',
        },
        n = {
          '١': '1',
          '٢': '2',
          '٣': '3',
          '٤': '4',
          '٥': '5',
          '٦': '6',
          '٧': '7',
          '٨': '8',
          '٩': '9',
          '٠': '0',
        },
        i = [
          'کانونی دووەم',
          'شوبات',
          'ئازار',
          'نیسان',
          'ئایار',
          'حوزەیران',
          'تەمموز',
          'ئاب',
          'ئەیلوول',
          'تشرینی یەكەم',
          'تشرینی دووەم',
          'كانونی یەکەم',
        ],
        r = e.defineLocale('ku', {
          months: i,
          monthsShort: i,
          weekdays: 'یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌'.split(
            '_'
          ),
          weekdaysShort: 'یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌'.split(
            '_'
          ),
          weekdaysMin: 'ی_د_س_چ_پ_ه_ش'.split('_'),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          meridiemParse: /ئێواره‌|به‌یانی/,
          isPM: function (e) {
            return /ئێواره‌/.test(e);
          },
          meridiem: function (e, t, n) {
            return e < 12 ? 'به‌یانی' : 'ئێواره‌';
          },
          calendar: {
            sameDay: '[ئه‌مرۆ كاتژمێر] LT',
            nextDay: '[به‌یانی كاتژمێر] LT',
            nextWeek: 'dddd [كاتژمێر] LT',
            lastDay: '[دوێنێ كاتژمێر] LT',
            lastWeek: 'dddd [كاتژمێر] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'له‌ %s',
            past: '%s',
            s: 'چه‌ند چركه‌یه‌ك',
            ss: 'چركه‌ %d',
            m: 'یه‌ك خوله‌ك',
            mm: '%d خوله‌ك',
            h: 'یه‌ك كاتژمێر',
            hh: '%d كاتژمێر',
            d: 'یه‌ك ڕۆژ',
            dd: '%d ڕۆژ',
            M: 'یه‌ك مانگ',
            MM: '%d مانگ',
            y: 'یه‌ك ساڵ',
            yy: '%d ساڵ',
          },
          preparse: function (e) {
            return e
              .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (e) {
                return n[e];
              })
              .replace(/،/g, ',');
          },
          postformat: function (e) {
            return e
              .replace(/\d/g, function (e) {
                return t[e];
              })
              .replace(/,/g, '،');
          },
          week: { dow: 6, doy: 12 },
        });
      return r;
    });
  },
  '../../../node_modules/moment/locale/ky.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          0: '-чү',
          1: '-чи',
          2: '-чи',
          3: '-чү',
          4: '-чү',
          5: '-чи',
          6: '-чы',
          7: '-чи',
          8: '-чи',
          9: '-чу',
          10: '-чу',
          20: '-чы',
          30: '-чу',
          40: '-чы',
          50: '-чү',
          60: '-чы',
          70: '-чи',
          80: '-чи',
          90: '-чу',
          100: '-чү',
        },
        n = e.defineLocale('ky', {
          months: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(
            '_'
          ),
          monthsShort: 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split(
            '_'
          ),
          weekdays: 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split(
            '_'
          ),
          weekdaysShort: 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
          weekdaysMin: 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[Бүгүн саат] LT',
            nextDay: '[Эртең саат] LT',
            nextWeek: 'dddd [саат] LT',
            lastDay: '[Кечээ саат] LT',
            lastWeek: '[Өткөн аптанын] dddd [күнү] [саат] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s ичинде',
            past: '%s мурун',
            s: 'бирнече секунд',
            ss: '%d секунд',
            m: 'бир мүнөт',
            mm: '%d мүнөт',
            h: 'бир саат',
            hh: '%d саат',
            d: 'бир күн',
            dd: '%d күн',
            M: 'бир ай',
            MM: '%d ай',
            y: 'бир жыл',
            yy: '%d жыл',
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
          ordinal: function (e) {
            var n = e % 10,
              i = e >= 100 ? 100 : null;
            return e + (t[e] || t[n] || t[i]);
          },
          week: { dow: 1, doy: 7 },
        });
      return n;
    });
  },
  '../../../node_modules/moment/locale/lb.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      function t(e, t, n, i) {
        var r = {
          m: ['eng Minutt', 'enger Minutt'],
          h: ['eng Stonn', 'enger Stonn'],
          d: ['een Dag', 'engem Dag'],
          M: ['ee Mount', 'engem Mount'],
          y: ['ee Joer', 'engem Joer'],
        };
        return t ? r[n][0] : r[n][1];
      }
      function n(e) {
        var t = e.substr(0, e.indexOf(' '));
        return r(t) ? 'a ' + e : 'an ' + e;
      }
      function i(e) {
        var t = e.substr(0, e.indexOf(' '));
        return r(t) ? 'viru ' + e : 'virun ' + e;
      }
      function r(e) {
        if (((e = parseInt(e, 10)), isNaN(e))) return !1;
        if (e < 0) return !0;
        if (e < 10) return 4 <= e && e <= 7;
        if (e < 100) {
          var t = e % 10,
            n = e / 10;
          return r(0 === t ? n : t);
        }
        if (e < 1e4) {
          while (e >= 10) e /= 10;
          return r(e);
        }
        return (e /= 1e3), r(e);
      }
      var a = e.defineLocale('lb', {
        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split(
          '_'
        ),
        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split(
          '_'
        ),
        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'H:mm [Auer]',
          LTS: 'H:mm:ss [Auer]',
          L: 'DD.MM.YYYY',
          LL: 'D. MMMM YYYY',
          LLL: 'D. MMMM YYYY H:mm [Auer]',
          LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]',
        },
        calendar: {
          sameDay: '[Haut um] LT',
          sameElse: 'L',
          nextDay: '[Muer um] LT',
          nextWeek: 'dddd [um] LT',
          lastDay: '[Gëschter um] LT',
          lastWeek: function () {
            switch (this.day()) {
              case 2:
              case 4:
                return '[Leschten] dddd [um] LT';
              default:
                return '[Leschte] dddd [um] LT';
            }
          },
        },
        relativeTime: {
          future: n,
          past: i,
          s: 'e puer Sekonnen',
          ss: '%d Sekonnen',
          m: t,
          mm: '%d Minutten',
          h: t,
          hh: '%d Stonnen',
          d: t,
          dd: '%d Deeg',
          M: t,
          MM: '%d Méint',
          y: t,
          yy: '%d Joer',
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: { dow: 1, doy: 4 },
      });
      return a;
    });
  },
  '../../../node_modules/moment/locale/lo.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('lo', {
        months: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split(
          '_'
        ),
        monthsShort: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split(
          '_'
        ),
        weekdays: 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
        weekdaysShort: 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
        weekdaysMin: 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'ວັນdddd D MMMM YYYY HH:mm',
        },
        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
        isPM: function (e) {
          return 'ຕອນແລງ' === e;
        },
        meridiem: function (e, t, n) {
          return e < 12 ? 'ຕອນເຊົ້າ' : 'ຕອນແລງ';
        },
        calendar: {
          sameDay: '[ມື້ນີ້ເວລາ] LT',
          nextDay: '[ມື້ອື່ນເວລາ] LT',
          nextWeek: '[ວັນ]dddd[ໜ້າເວລາ] LT',
          lastDay: '[ມື້ວານນີ້ເວລາ] LT',
          lastWeek: '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'ອີກ %s',
          past: '%sຜ່ານມາ',
          s: 'ບໍ່ເທົ່າໃດວິນາທີ',
          ss: '%d ວິນາທີ',
          m: '1 ນາທີ',
          mm: '%d ນາທີ',
          h: '1 ຊົ່ວໂມງ',
          hh: '%d ຊົ່ວໂມງ',
          d: '1 ມື້',
          dd: '%d ມື້',
          M: '1 ເດືອນ',
          MM: '%d ເດືອນ',
          y: '1 ປີ',
          yy: '%d ປີ',
        },
        dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
        ordinal: function (e) {
          return 'ທີ່' + e;
        },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/lt.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
        ss: 'sekundė_sekundžių_sekundes',
        m: 'minutė_minutės_minutę',
        mm: 'minutės_minučių_minutes',
        h: 'valanda_valandos_valandą',
        hh: 'valandos_valandų_valandas',
        d: 'diena_dienos_dieną',
        dd: 'dienos_dienų_dienas',
        M: 'mėnuo_mėnesio_mėnesį',
        MM: 'mėnesiai_mėnesių_mėnesius',
        y: 'metai_metų_metus',
        yy: 'metai_metų_metus',
      };
      function n(e, t, n, i) {
        return t
          ? 'kelios sekundės'
          : i
          ? 'kelių sekundžių'
          : 'kelias sekundes';
      }
      function i(e, t, n, i) {
        return t ? a(n)[0] : i ? a(n)[1] : a(n)[2];
      }
      function r(e) {
        return e % 10 === 0 || (e > 10 && e < 20);
      }
      function a(e) {
        return t[e].split('_');
      }
      function o(e, t, n, o) {
        var s = e + ' ';
        return 1 === e
          ? s + i(e, t, n[0], o)
          : t
          ? s + (r(e) ? a(n)[1] : a(n)[0])
          : o
          ? s + a(n)[1]
          : s + (r(e) ? a(n)[1] : a(n)[2]);
      }
      var s = e.defineLocale('lt', {
        months: {
          format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split(
            '_'
          ),
          standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split(
            '_'
          ),
          isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/,
        },
        monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split(
          '_'
        ),
        weekdays: {
          format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split(
            '_'
          ),
          standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split(
            '_'
          ),
          isFormat: /dddd HH:mm/,
        },
        weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
        weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'YYYY-MM-DD',
          LL: 'YYYY [m.] MMMM D [d.]',
          LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
          LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
          l: 'YYYY-MM-DD',
          ll: 'YYYY [m.] MMMM D [d.]',
          lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
          llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]',
        },
        calendar: {
          sameDay: '[Šiandien] LT',
          nextDay: '[Rytoj] LT',
          nextWeek: 'dddd LT',
          lastDay: '[Vakar] LT',
          lastWeek: '[Praėjusį] dddd LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'po %s',
          past: 'prieš %s',
          s: n,
          ss: o,
          m: i,
          mm: o,
          h: i,
          hh: o,
          d: i,
          dd: o,
          M: i,
          MM: o,
          y: i,
          yy: o,
        },
        dayOfMonthOrdinalParse: /\d{1,2}-oji/,
        ordinal: function (e) {
          return e + '-oji';
        },
        week: { dow: 1, doy: 4 },
      });
      return s;
    });
  },
  '../../../node_modules/moment/locale/lv.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
        ss: 'sekundes_sekundēm_sekunde_sekundes'.split('_'),
        m: 'minūtes_minūtēm_minūte_minūtes'.split('_'),
        mm: 'minūtes_minūtēm_minūte_minūtes'.split('_'),
        h: 'stundas_stundām_stunda_stundas'.split('_'),
        hh: 'stundas_stundām_stunda_stundas'.split('_'),
        d: 'dienas_dienām_diena_dienas'.split('_'),
        dd: 'dienas_dienām_diena_dienas'.split('_'),
        M: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
        MM: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
        y: 'gada_gadiem_gads_gadi'.split('_'),
        yy: 'gada_gadiem_gads_gadi'.split('_'),
      };
      function n(e, t, n) {
        return n
          ? t % 10 === 1 && t % 100 !== 11
            ? e[2]
            : e[3]
          : t % 10 === 1 && t % 100 !== 11
          ? e[0]
          : e[1];
      }
      function i(e, i, r) {
        return e + ' ' + n(t[r], e, i);
      }
      function r(e, i, r) {
        return n(t[r], e, i);
      }
      function a(e, t) {
        return t ? 'dažas sekundes' : 'dažām sekundēm';
      }
      var o = e.defineLocale('lv', {
        months: 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split(
          '_'
        ),
        monthsShort: 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split(
          '_'
        ),
        weekdays: 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split(
          '_'
        ),
        weekdaysShort: 'Sv_P_O_T_C_Pk_S'.split('_'),
        weekdaysMin: 'Sv_P_O_T_C_Pk_S'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD.MM.YYYY.',
          LL: 'YYYY. [gada] D. MMMM',
          LLL: 'YYYY. [gada] D. MMMM, HH:mm',
          LLLL: 'YYYY. [gada] D. MMMM, dddd, HH:mm',
        },
        calendar: {
          sameDay: '[Šodien pulksten] LT',
          nextDay: '[Rīt pulksten] LT',
          nextWeek: 'dddd [pulksten] LT',
          lastDay: '[Vakar pulksten] LT',
          lastWeek: '[Pagājušā] dddd [pulksten] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'pēc %s',
          past: 'pirms %s',
          s: a,
          ss: i,
          m: r,
          mm: i,
          h: r,
          hh: i,
          d: r,
          dd: i,
          M: r,
          MM: i,
          y: r,
          yy: i,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: { dow: 1, doy: 4 },
      });
      return o;
    });
  },
  '../../../node_modules/moment/locale/me.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          words: {
            ss: ['sekund', 'sekunda', 'sekundi'],
            m: ['jedan minut', 'jednog minuta'],
            mm: ['minut', 'minuta', 'minuta'],
            h: ['jedan sat', 'jednog sata'],
            hh: ['sat', 'sata', 'sati'],
            dd: ['dan', 'dana', 'dana'],
            MM: ['mjesec', 'mjeseca', 'mjeseci'],
            yy: ['godina', 'godine', 'godina'],
          },
          correctGrammaticalCase: function (e, t) {
            return 1 === e ? t[0] : e >= 2 && e <= 4 ? t[1] : t[2];
          },
          translate: function (e, n, i) {
            var r = t.words[i];
            return 1 === i.length
              ? n
                ? r[0]
                : r[1]
              : e + ' ' + t.correctGrammaticalCase(e, r);
          },
        },
        n = e.defineLocale('me', {
          months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split(
            '_'
          ),
          monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split(
            '_'
          ),
          monthsParseExact: !0,
          weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(
            '_'
          ),
          weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
          weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm',
          },
          calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sjutra u] LT',
            nextWeek: function () {
              switch (this.day()) {
                case 0:
                  return '[u] [nedjelju] [u] LT';
                case 3:
                  return '[u] [srijedu] [u] LT';
                case 6:
                  return '[u] [subotu] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                  return '[u] dddd [u] LT';
              }
            },
            lastDay: '[juče u] LT',
            lastWeek: function () {
              var e = [
                '[prošle] [nedjelje] [u] LT',
                '[prošlog] [ponedjeljka] [u] LT',
                '[prošlog] [utorka] [u] LT',
                '[prošle] [srijede] [u] LT',
                '[prošlog] [četvrtka] [u] LT',
                '[prošlog] [petka] [u] LT',
                '[prošle] [subote] [u] LT',
              ];
              return e[this.day()];
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'za %s',
            past: 'prije %s',
            s: 'nekoliko sekundi',
            ss: t.translate,
            m: t.translate,
            mm: t.translate,
            h: t.translate,
            hh: t.translate,
            d: 'dan',
            dd: t.translate,
            M: 'mjesec',
            MM: t.translate,
            y: 'godinu',
            yy: t.translate,
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: { dow: 1, doy: 7 },
        });
      return n;
    });
  },
  '../../../node_modules/moment/locale/mi.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('mi', {
        months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split(
          '_'
        ),
        monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split(
          '_'
        ),
        monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
        weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),
        weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
        weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY [i] HH:mm',
          LLLL: 'dddd, D MMMM YYYY [i] HH:mm',
        },
        calendar: {
          sameDay: '[i teie mahana, i] LT',
          nextDay: '[apopo i] LT',
          nextWeek: 'dddd [i] LT',
          lastDay: '[inanahi i] LT',
          lastWeek: 'dddd [whakamutunga i] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'i roto i %s',
          past: '%s i mua',
          s: 'te hēkona ruarua',
          ss: '%d hēkona',
          m: 'he meneti',
          mm: '%d meneti',
          h: 'te haora',
          hh: '%d haora',
          d: 'he ra',
          dd: '%d ra',
          M: 'he marama',
          MM: '%d marama',
          y: 'he tau',
          yy: '%d tau',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/mk.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('mk', {
        months: 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split(
          '_'
        ),
        monthsShort: 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split(
          '_'
        ),
        weekdays: 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split(
          '_'
        ),
        weekdaysShort: 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
        weekdaysMin: 'нe_пo_вт_ср_че_пе_сa'.split('_'),
        longDateFormat: {
          LT: 'H:mm',
          LTS: 'H:mm:ss',
          L: 'D.MM.YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY H:mm',
          LLLL: 'dddd, D MMMM YYYY H:mm',
        },
        calendar: {
          sameDay: '[Денес во] LT',
          nextDay: '[Утре во] LT',
          nextWeek: '[Во] dddd [во] LT',
          lastDay: '[Вчера во] LT',
          lastWeek: function () {
            switch (this.day()) {
              case 0:
              case 3:
              case 6:
                return '[Изминатата] dddd [во] LT';
              case 1:
              case 2:
              case 4:
              case 5:
                return '[Изминатиот] dddd [во] LT';
            }
          },
          sameElse: 'L',
        },
        relativeTime: {
          future: 'за %s',
          past: 'пред %s',
          s: 'неколку секунди',
          ss: '%d секунди',
          m: 'една минута',
          mm: '%d минути',
          h: 'еден час',
          hh: '%d часа',
          d: 'еден ден',
          dd: '%d дена',
          M: 'еден месец',
          MM: '%d месеци',
          y: 'една година',
          yy: '%d години',
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
        ordinal: function (e) {
          var t = e % 10,
            n = e % 100;
          return 0 === e
            ? e + '-ев'
            : 0 === n
            ? e + '-ен'
            : n > 10 && n < 20
            ? e + '-ти'
            : 1 === t
            ? e + '-ви'
            : 2 === t
            ? e + '-ри'
            : 7 === t || 8 === t
            ? e + '-ми'
            : e + '-ти';
        },
        week: { dow: 1, doy: 7 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/ml.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('ml', {
        months: 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split(
          '_'
        ),
        monthsShort: 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split(
          '_'
        ),
        weekdaysShort: 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
        weekdaysMin: 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
        longDateFormat: {
          LT: 'A h:mm -നു',
          LTS: 'A h:mm:ss -നു',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY, A h:mm -നു',
          LLLL: 'dddd, D MMMM YYYY, A h:mm -നു',
        },
        calendar: {
          sameDay: '[ഇന്ന്] LT',
          nextDay: '[നാളെ] LT',
          nextWeek: 'dddd, LT',
          lastDay: '[ഇന്നലെ] LT',
          lastWeek: '[കഴിഞ്ഞ] dddd, LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: '%s കഴിഞ്ഞ്',
          past: '%s മുൻപ്',
          s: 'അൽപ നിമിഷങ്ങൾ',
          ss: '%d സെക്കൻഡ്',
          m: 'ഒരു മിനിറ്റ്',
          mm: '%d മിനിറ്റ്',
          h: 'ഒരു മണിക്കൂർ',
          hh: '%d മണിക്കൂർ',
          d: 'ഒരു ദിവസം',
          dd: '%d ദിവസം',
          M: 'ഒരു മാസം',
          MM: '%d മാസം',
          y: 'ഒരു വർഷം',
          yy: '%d വർഷം',
        },
        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
        meridiemHour: function (e, t) {
          return (
            12 === e && (e = 0),
            ('രാത്രി' === t && e >= 4) ||
            'ഉച്ച കഴിഞ്ഞ്' === t ||
            'വൈകുന്നേരം' === t
              ? e + 12
              : e
          );
        },
        meridiem: function (e, t, n) {
          return e < 4
            ? 'രാത്രി'
            : e < 12
            ? 'രാവിലെ'
            : e < 17
            ? 'ഉച്ച കഴിഞ്ഞ്'
            : e < 20
            ? 'വൈകുന്നേരം'
            : 'രാത്രി';
        },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/mn.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      function t(e, t, n, i) {
        switch (n) {
          case 's':
            return t ? 'хэдхэн секунд' : 'хэдхэн секундын';
          case 'ss':
            return e + (t ? ' секунд' : ' секундын');
          case 'm':
          case 'mm':
            return e + (t ? ' минут' : ' минутын');
          case 'h':
          case 'hh':
            return e + (t ? ' цаг' : ' цагийн');
          case 'd':
          case 'dd':
            return e + (t ? ' өдөр' : ' өдрийн');
          case 'M':
          case 'MM':
            return e + (t ? ' сар' : ' сарын');
          case 'y':
          case 'yy':
            return e + (t ? ' жил' : ' жилийн');
          default:
            return e;
        }
      }
      var n = e.defineLocale('mn', {
        months: 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split(
          '_'
        ),
        monthsShort: '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),
        weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),
        weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'YYYY-MM-DD',
          LL: 'YYYY оны MMMMын D',
          LLL: 'YYYY оны MMMMын D HH:mm',
          LLLL: 'dddd, YYYY оны MMMMын D HH:mm',
        },
        meridiemParse: /ҮӨ|ҮХ/i,
        isPM: function (e) {
          return 'ҮХ' === e;
        },
        meridiem: function (e, t, n) {
          return e < 12 ? 'ҮӨ' : 'ҮХ';
        },
        calendar: {
          sameDay: '[Өнөөдөр] LT',
          nextDay: '[Маргааш] LT',
          nextWeek: '[Ирэх] dddd LT',
          lastDay: '[Өчигдөр] LT',
          lastWeek: '[Өнгөрсөн] dddd LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: '%s дараа',
          past: '%s өмнө',
          s: t,
          ss: t,
          m: t,
          mm: t,
          h: t,
          hh: t,
          d: t,
          dd: t,
          M: t,
          MM: t,
          y: t,
          yy: t,
        },
        dayOfMonthOrdinalParse: /\d{1,2} өдөр/,
        ordinal: function (e, t) {
          switch (t) {
            case 'd':
            case 'D':
            case 'DDD':
              return e + ' өдөр';
            default:
              return e;
          }
        },
      });
      return n;
    });
  },
  '../../../node_modules/moment/locale/mr.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          1: '१',
          2: '२',
          3: '३',
          4: '४',
          5: '५',
          6: '६',
          7: '७',
          8: '८',
          9: '९',
          0: '०',
        },
        n = {
          '१': '1',
          '२': '2',
          '३': '3',
          '४': '4',
          '५': '5',
          '६': '6',
          '७': '7',
          '८': '8',
          '९': '9',
          '०': '0',
        };
      function i(e, t, n, i) {
        var r = '';
        if (t)
          switch (n) {
            case 's':
              r = 'काही सेकंद';
              break;
            case 'ss':
              r = '%d सेकंद';
              break;
            case 'm':
              r = 'एक मिनिट';
              break;
            case 'mm':
              r = '%d मिनिटे';
              break;
            case 'h':
              r = 'एक तास';
              break;
            case 'hh':
              r = '%d तास';
              break;
            case 'd':
              r = 'एक दिवस';
              break;
            case 'dd':
              r = '%d दिवस';
              break;
            case 'M':
              r = 'एक महिना';
              break;
            case 'MM':
              r = '%d महिने';
              break;
            case 'y':
              r = 'एक वर्ष';
              break;
            case 'yy':
              r = '%d वर्षे';
              break;
          }
        else
          switch (n) {
            case 's':
              r = 'काही सेकंदां';
              break;
            case 'ss':
              r = '%d सेकंदां';
              break;
            case 'm':
              r = 'एका मिनिटा';
              break;
            case 'mm':
              r = '%d मिनिटां';
              break;
            case 'h':
              r = 'एका तासा';
              break;
            case 'hh':
              r = '%d तासां';
              break;
            case 'd':
              r = 'एका दिवसा';
              break;
            case 'dd':
              r = '%d दिवसां';
              break;
            case 'M':
              r = 'एका महिन्या';
              break;
            case 'MM':
              r = '%d महिन्यां';
              break;
            case 'y':
              r = 'एका वर्षा';
              break;
            case 'yy':
              r = '%d वर्षां';
              break;
          }
        return r.replace(/%d/i, e);
      }
      var r = e.defineLocale('mr', {
        months: 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split(
          '_'
        ),
        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split(
          '_'
        ),
        weekdaysShort: 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
        weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),
        longDateFormat: {
          LT: 'A h:mm वाजता',
          LTS: 'A h:mm:ss वाजता',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY, A h:mm वाजता',
          LLLL: 'dddd, D MMMM YYYY, A h:mm वाजता',
        },
        calendar: {
          sameDay: '[आज] LT',
          nextDay: '[उद्या] LT',
          nextWeek: 'dddd, LT',
          lastDay: '[काल] LT',
          lastWeek: '[मागील] dddd, LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: '%sमध्ये',
          past: '%sपूर्वी',
          s: i,
          ss: i,
          m: i,
          mm: i,
          h: i,
          hh: i,
          d: i,
          dd: i,
          M: i,
          MM: i,
          y: i,
          yy: i,
        },
        preparse: function (e) {
          return e.replace(/[१२३४५६७८९०]/g, function (e) {
            return n[e];
          });
        },
        postformat: function (e) {
          return e.replace(/\d/g, function (e) {
            return t[e];
          });
        },
        meridiemParse: /पहाटे|सकाळी|दुपारी|सायंकाळी|रात्री/,
        meridiemHour: function (e, t) {
          return (
            12 === e && (e = 0),
            'पहाटे' === t || 'सकाळी' === t
              ? e
              : 'दुपारी' === t || 'सायंकाळी' === t || 'रात्री' === t
              ? e >= 12
                ? e
                : e + 12
              : void 0
          );
        },
        meridiem: function (e, t, n) {
          return e >= 0 && e < 6
            ? 'पहाटे'
            : e < 12
            ? 'सकाळी'
            : e < 17
            ? 'दुपारी'
            : e < 20
            ? 'सायंकाळी'
            : 'रात्री';
        },
        week: { dow: 0, doy: 6 },
      });
      return r;
    });
  },
  '../../../node_modules/moment/locale/ms-my.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('ms-my', {
        months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split(
          '_'
        ),
        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split(
          '_'
        ),
        weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
        weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
        weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat: {
          LT: 'HH.mm',
          LTS: 'HH.mm.ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY [pukul] HH.mm',
          LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',
        },
        meridiemParse: /pagi|tengahari|petang|malam/,
        meridiemHour: function (e, t) {
          return (
            12 === e && (e = 0),
            'pagi' === t
              ? e
              : 'tengahari' === t
              ? e >= 11
                ? e
                : e + 12
              : 'petang' === t || 'malam' === t
              ? e + 12
              : void 0
          );
        },
        meridiem: function (e, t, n) {
          return e < 11
            ? 'pagi'
            : e < 15
            ? 'tengahari'
            : e < 19
            ? 'petang'
            : 'malam';
        },
        calendar: {
          sameDay: '[Hari ini pukul] LT',
          nextDay: '[Esok pukul] LT',
          nextWeek: 'dddd [pukul] LT',
          lastDay: '[Kelmarin pukul] LT',
          lastWeek: 'dddd [lepas pukul] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'dalam %s',
          past: '%s yang lepas',
          s: 'beberapa saat',
          ss: '%d saat',
          m: 'seminit',
          mm: '%d minit',
          h: 'sejam',
          hh: '%d jam',
          d: 'sehari',
          dd: '%d hari',
          M: 'sebulan',
          MM: '%d bulan',
          y: 'setahun',
          yy: '%d tahun',
        },
        week: { dow: 1, doy: 7 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/ms.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('ms', {
        months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split(
          '_'
        ),
        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split(
          '_'
        ),
        weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
        weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
        weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat: {
          LT: 'HH.mm',
          LTS: 'HH.mm.ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY [pukul] HH.mm',
          LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',
        },
        meridiemParse: /pagi|tengahari|petang|malam/,
        meridiemHour: function (e, t) {
          return (
            12 === e && (e = 0),
            'pagi' === t
              ? e
              : 'tengahari' === t
              ? e >= 11
                ? e
                : e + 12
              : 'petang' === t || 'malam' === t
              ? e + 12
              : void 0
          );
        },
        meridiem: function (e, t, n) {
          return e < 11
            ? 'pagi'
            : e < 15
            ? 'tengahari'
            : e < 19
            ? 'petang'
            : 'malam';
        },
        calendar: {
          sameDay: '[Hari ini pukul] LT',
          nextDay: '[Esok pukul] LT',
          nextWeek: 'dddd [pukul] LT',
          lastDay: '[Kelmarin pukul] LT',
          lastWeek: 'dddd [lepas pukul] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'dalam %s',
          past: '%s yang lepas',
          s: 'beberapa saat',
          ss: '%d saat',
          m: 'seminit',
          mm: '%d minit',
          h: 'sejam',
          hh: '%d jam',
          d: 'sehari',
          dd: '%d hari',
          M: 'sebulan',
          MM: '%d bulan',
          y: 'setahun',
          yy: '%d tahun',
        },
        week: { dow: 1, doy: 7 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/mt.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('mt', {
        months: 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split(
          '_'
        ),
        monthsShort: 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split(
          '_'
        ),
        weekdays: 'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split(
          '_'
        ),
        weekdaysShort: 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),
        weekdaysMin: 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[Illum fil-]LT',
          nextDay: '[Għada fil-]LT',
          nextWeek: 'dddd [fil-]LT',
          lastDay: '[Il-bieraħ fil-]LT',
          lastWeek: 'dddd [li għadda] [fil-]LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'f’ %s',
          past: '%s ilu',
          s: 'ftit sekondi',
          ss: '%d sekondi',
          m: 'minuta',
          mm: '%d minuti',
          h: 'siegħa',
          hh: '%d siegħat',
          d: 'ġurnata',
          dd: '%d ġranet',
          M: 'xahar',
          MM: '%d xhur',
          y: 'sena',
          yy: '%d sni',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/my.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          1: '၁',
          2: '၂',
          3: '၃',
          4: '၄',
          5: '၅',
          6: '၆',
          7: '၇',
          8: '၈',
          9: '၉',
          0: '၀',
        },
        n = {
          '၁': '1',
          '၂': '2',
          '၃': '3',
          '၄': '4',
          '၅': '5',
          '၆': '6',
          '၇': '7',
          '၈': '8',
          '၉': '9',
          '၀': '0',
        },
        i = e.defineLocale('my', {
          months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split(
            '_'
          ),
          monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split(
            '_'
          ),
          weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split(
            '_'
          ),
          weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
          weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[ယနေ.] LT [မှာ]',
            nextDay: '[မနက်ဖြန်] LT [မှာ]',
            nextWeek: 'dddd LT [မှာ]',
            lastDay: '[မနေ.က] LT [မှာ]',
            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'လာမည့် %s မှာ',
            past: 'လွန်ခဲ့သော %s က',
            s: 'စက္ကန်.အနည်းငယ်',
            ss: '%d စက္ကန့်',
            m: 'တစ်မိနစ်',
            mm: '%d မိနစ်',
            h: 'တစ်နာရီ',
            hh: '%d နာရီ',
            d: 'တစ်ရက်',
            dd: '%d ရက်',
            M: 'တစ်လ',
            MM: '%d လ',
            y: 'တစ်နှစ်',
            yy: '%d နှစ်',
          },
          preparse: function (e) {
            return e.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (e) {
              return n[e];
            });
          },
          postformat: function (e) {
            return e.replace(/\d/g, function (e) {
              return t[e];
            });
          },
          week: { dow: 1, doy: 4 },
        });
      return i;
    });
  },
  '../../../node_modules/moment/locale/nb.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('nb', {
        months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split(
          '_'
        ),
        monthsShort: 'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split(
          '_'
        ),
        weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),
        weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'D. MMMM YYYY',
          LLL: 'D. MMMM YYYY [kl.] HH:mm',
          LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm',
        },
        calendar: {
          sameDay: '[i dag kl.] LT',
          nextDay: '[i morgen kl.] LT',
          nextWeek: 'dddd [kl.] LT',
          lastDay: '[i går kl.] LT',
          lastWeek: '[forrige] dddd [kl.] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'om %s',
          past: '%s siden',
          s: 'noen sekunder',
          ss: '%d sekunder',
          m: 'ett minutt',
          mm: '%d minutter',
          h: 'en time',
          hh: '%d timer',
          d: 'en dag',
          dd: '%d dager',
          w: 'en uke',
          ww: '%d uker',
          M: 'en måned',
          MM: '%d måneder',
          y: 'ett år',
          yy: '%d år',
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/ne.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          1: '१',
          2: '२',
          3: '३',
          4: '४',
          5: '५',
          6: '६',
          7: '७',
          8: '८',
          9: '९',
          0: '०',
        },
        n = {
          '१': '1',
          '२': '2',
          '३': '3',
          '४': '4',
          '५': '5',
          '६': '6',
          '७': '7',
          '८': '8',
          '९': '9',
          '०': '0',
        },
        i = e.defineLocale('ne', {
          months: 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split(
            '_'
          ),
          monthsShort: 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split(
            '_'
          ),
          monthsParseExact: !0,
          weekdays: 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split(
            '_'
          ),
          weekdaysShort: 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
          weekdaysMin: 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: 'Aको h:mm बजे',
            LTS: 'Aको h:mm:ss बजे',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, Aको h:mm बजे',
            LLLL: 'dddd, D MMMM YYYY, Aको h:mm बजे',
          },
          preparse: function (e) {
            return e.replace(/[१२३४५६७८९०]/g, function (e) {
              return n[e];
            });
          },
          postformat: function (e) {
            return e.replace(/\d/g, function (e) {
              return t[e];
            });
          },
          meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
          meridiemHour: function (e, t) {
            return (
              12 === e && (e = 0),
              'राति' === t
                ? e < 4
                  ? e
                  : e + 12
                : 'बिहान' === t
                ? e
                : 'दिउँसो' === t
                ? e >= 10
                  ? e
                  : e + 12
                : 'साँझ' === t
                ? e + 12
                : void 0
            );
          },
          meridiem: function (e, t, n) {
            return e < 3
              ? 'राति'
              : e < 12
              ? 'बिहान'
              : e < 16
              ? 'दिउँसो'
              : e < 20
              ? 'साँझ'
              : 'राति';
          },
          calendar: {
            sameDay: '[आज] LT',
            nextDay: '[भोलि] LT',
            nextWeek: '[आउँदो] dddd[,] LT',
            lastDay: '[हिजो] LT',
            lastWeek: '[गएको] dddd[,] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%sमा',
            past: '%s अगाडि',
            s: 'केही क्षण',
            ss: '%d सेकेण्ड',
            m: 'एक मिनेट',
            mm: '%d मिनेट',
            h: 'एक घण्टा',
            hh: '%d घण्टा',
            d: 'एक दिन',
            dd: '%d दिन',
            M: 'एक महिना',
            MM: '%d महिना',
            y: 'एक बर्ष',
            yy: '%d बर्ष',
          },
          week: { dow: 0, doy: 6 },
        });
      return i;
    });
  },
  '../../../node_modules/moment/locale/nl-be.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split(
          '_'
        ),
        n = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_'),
        i = [
          /^jan/i,
          /^feb/i,
          /^maart|mrt.?$/i,
          /^apr/i,
          /^mei$/i,
          /^jun[i.]?$/i,
          /^jul[i.]?$/i,
          /^aug/i,
          /^sep/i,
          /^okt/i,
          /^nov/i,
          /^dec/i,
        ],
        r = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
        a = e.defineLocale('nl-be', {
          months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split(
            '_'
          ),
          monthsShort: function (e, i) {
            return e ? (/-MMM-/.test(i) ? n[e.month()] : t[e.month()]) : t;
          },
          monthsRegex: r,
          monthsShortRegex: r,
          monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
          monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
          monthsParse: i,
          longMonthsParse: i,
          shortMonthsParse: i,
          weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split(
            '_'
          ),
          weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),
          weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[vandaag om] LT',
            nextDay: '[morgen om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[gisteren om] LT',
            lastWeek: '[afgelopen] dddd [om] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'over %s',
            past: '%s geleden',
            s: 'een paar seconden',
            ss: '%d seconden',
            m: 'één minuut',
            mm: '%d minuten',
            h: 'één uur',
            hh: '%d uur',
            d: 'één dag',
            dd: '%d dagen',
            M: 'één maand',
            MM: '%d maanden',
            y: 'één jaar',
            yy: '%d jaar',
          },
          dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
          ordinal: function (e) {
            return e + (1 === e || 8 === e || e >= 20 ? 'ste' : 'de');
          },
          week: { dow: 1, doy: 4 },
        });
      return a;
    });
  },
  '../../../node_modules/moment/locale/nl.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split(
          '_'
        ),
        n = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_'),
        i = [
          /^jan/i,
          /^feb/i,
          /^maart|mrt.?$/i,
          /^apr/i,
          /^mei$/i,
          /^jun[i.]?$/i,
          /^jul[i.]?$/i,
          /^aug/i,
          /^sep/i,
          /^okt/i,
          /^nov/i,
          /^dec/i,
        ],
        r = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
        a = e.defineLocale('nl', {
          months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split(
            '_'
          ),
          monthsShort: function (e, i) {
            return e ? (/-MMM-/.test(i) ? n[e.month()] : t[e.month()]) : t;
          },
          monthsRegex: r,
          monthsShortRegex: r,
          monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
          monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
          monthsParse: i,
          longMonthsParse: i,
          shortMonthsParse: i,
          weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split(
            '_'
          ),
          weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),
          weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD-MM-YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[vandaag om] LT',
            nextDay: '[morgen om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[gisteren om] LT',
            lastWeek: '[afgelopen] dddd [om] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'over %s',
            past: '%s geleden',
            s: 'een paar seconden',
            ss: '%d seconden',
            m: 'één minuut',
            mm: '%d minuten',
            h: 'één uur',
            hh: '%d uur',
            d: 'één dag',
            dd: '%d dagen',
            w: 'één week',
            ww: '%d weken',
            M: 'één maand',
            MM: '%d maanden',
            y: 'één jaar',
            yy: '%d jaar',
          },
          dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
          ordinal: function (e) {
            return e + (1 === e || 8 === e || e >= 20 ? 'ste' : 'de');
          },
          week: { dow: 1, doy: 4 },
        });
      return a;
    });
  },
  '../../../node_modules/moment/locale/nn.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('nn', {
        months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split(
          '_'
        ),
        monthsShort: 'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split(
          '_'
        ),
        weekdaysShort: 'su._må._ty._on._to._fr._lau.'.split('_'),
        weekdaysMin: 'su_må_ty_on_to_fr_la'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'D. MMMM YYYY',
          LLL: 'D. MMMM YYYY [kl.] H:mm',
          LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm',
        },
        calendar: {
          sameDay: '[I dag klokka] LT',
          nextDay: '[I morgon klokka] LT',
          nextWeek: 'dddd [klokka] LT',
          lastDay: '[I går klokka] LT',
          lastWeek: '[Føregåande] dddd [klokka] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'om %s',
          past: '%s sidan',
          s: 'nokre sekund',
          ss: '%d sekund',
          m: 'eit minutt',
          mm: '%d minutt',
          h: 'ein time',
          hh: '%d timar',
          d: 'ein dag',
          dd: '%d dagar',
          w: 'ei veke',
          ww: '%d veker',
          M: 'ein månad',
          MM: '%d månader',
          y: 'eit år',
          yy: '%d år',
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/oc-lnc.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('oc-lnc', {
        months: {
          standalone: 'genièr_febrièr_març_abril_mai_junh_julhet_agost_setembre_octòbre_novembre_decembre'.split(
            '_'
          ),
          format: "de genièr_de febrièr_de març_d'abril_de mai_de junh_de julhet_d'agost_de setembre_d'octòbre_de novembre_de decembre".split(
            '_'
          ),
          isFormat: /D[oD]?(\s)+MMMM/,
        },
        monthsShort: 'gen._febr._març_abr._mai_junh_julh._ago._set._oct._nov._dec.'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'dimenge_diluns_dimars_dimècres_dijòus_divendres_dissabte'.split(
          '_'
        ),
        weekdaysShort: 'dg._dl._dm._dc._dj._dv._ds.'.split('_'),
        weekdaysMin: 'dg_dl_dm_dc_dj_dv_ds'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'H:mm',
          LTS: 'H:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM [de] YYYY',
          ll: 'D MMM YYYY',
          LLL: 'D MMMM [de] YYYY [a] H:mm',
          lll: 'D MMM YYYY, H:mm',
          LLLL: 'dddd D MMMM [de] YYYY [a] H:mm',
          llll: 'ddd D MMM YYYY, H:mm',
        },
        calendar: {
          sameDay: '[uèi a] LT',
          nextDay: '[deman a] LT',
          nextWeek: 'dddd [a] LT',
          lastDay: '[ièr a] LT',
          lastWeek: 'dddd [passat a] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: "d'aquí %s",
          past: 'fa %s',
          s: 'unas segondas',
          ss: '%d segondas',
          m: 'una minuta',
          mm: '%d minutas',
          h: 'una ora',
          hh: '%d oras',
          d: 'un jorn',
          dd: '%d jorns',
          M: 'un mes',
          MM: '%d meses',
          y: 'un an',
          yy: '%d ans',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
        ordinal: function (e, t) {
          var n =
            1 === e ? 'r' : 2 === e ? 'n' : 3 === e ? 'r' : 4 === e ? 't' : 'è';
          return ('w' !== t && 'W' !== t) || (n = 'a'), e + n;
        },
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/pa-in.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          1: '੧',
          2: '੨',
          3: '੩',
          4: '੪',
          5: '੫',
          6: '੬',
          7: '੭',
          8: '੮',
          9: '੯',
          0: '੦',
        },
        n = {
          '੧': '1',
          '੨': '2',
          '੩': '3',
          '੪': '4',
          '੫': '5',
          '੬': '6',
          '੭': '7',
          '੮': '8',
          '੯': '9',
          '੦': '0',
        },
        i = e.defineLocale('pa-in', {
          months: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split(
            '_'
          ),
          monthsShort: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split(
            '_'
          ),
          weekdays: 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split(
            '_'
          ),
          weekdaysShort: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
          weekdaysMin: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
          longDateFormat: {
            LT: 'A h:mm ਵਜੇ',
            LTS: 'A h:mm:ss ਵਜੇ',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm ਵਜੇ',
            LLLL: 'dddd, D MMMM YYYY, A h:mm ਵਜੇ',
          },
          calendar: {
            sameDay: '[ਅਜ] LT',
            nextDay: '[ਕਲ] LT',
            nextWeek: '[ਅਗਲਾ] dddd, LT',
            lastDay: '[ਕਲ] LT',
            lastWeek: '[ਪਿਛਲੇ] dddd, LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s ਵਿੱਚ',
            past: '%s ਪਿਛਲੇ',
            s: 'ਕੁਝ ਸਕਿੰਟ',
            ss: '%d ਸਕਿੰਟ',
            m: 'ਇਕ ਮਿੰਟ',
            mm: '%d ਮਿੰਟ',
            h: 'ਇੱਕ ਘੰਟਾ',
            hh: '%d ਘੰਟੇ',
            d: 'ਇੱਕ ਦਿਨ',
            dd: '%d ਦਿਨ',
            M: 'ਇੱਕ ਮਹੀਨਾ',
            MM: '%d ਮਹੀਨੇ',
            y: 'ਇੱਕ ਸਾਲ',
            yy: '%d ਸਾਲ',
          },
          preparse: function (e) {
            return e.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (e) {
              return n[e];
            });
          },
          postformat: function (e) {
            return e.replace(/\d/g, function (e) {
              return t[e];
            });
          },
          meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
          meridiemHour: function (e, t) {
            return (
              12 === e && (e = 0),
              'ਰਾਤ' === t
                ? e < 4
                  ? e
                  : e + 12
                : 'ਸਵੇਰ' === t
                ? e
                : 'ਦੁਪਹਿਰ' === t
                ? e >= 10
                  ? e
                  : e + 12
                : 'ਸ਼ਾਮ' === t
                ? e + 12
                : void 0
            );
          },
          meridiem: function (e, t, n) {
            return e < 4
              ? 'ਰਾਤ'
              : e < 10
              ? 'ਸਵੇਰ'
              : e < 17
              ? 'ਦੁਪਹਿਰ'
              : e < 20
              ? 'ਸ਼ਾਮ'
              : 'ਰਾਤ';
          },
          week: { dow: 0, doy: 6 },
        });
      return i;
    });
  },
  '../../../node_modules/moment/locale/pl.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split(
          '_'
        ),
        n = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split(
          '_'
        ),
        i = [
          /^sty/i,
          /^lut/i,
          /^mar/i,
          /^kwi/i,
          /^maj/i,
          /^cze/i,
          /^lip/i,
          /^sie/i,
          /^wrz/i,
          /^paź/i,
          /^lis/i,
          /^gru/i,
        ];
      function r(e) {
        return e % 10 < 5 && e % 10 > 1 && ~~(e / 10) % 10 !== 1;
      }
      function a(e, t, n) {
        var i = e + ' ';
        switch (n) {
          case 'ss':
            return i + (r(e) ? 'sekundy' : 'sekund');
          case 'm':
            return t ? 'minuta' : 'minutę';
          case 'mm':
            return i + (r(e) ? 'minuty' : 'minut');
          case 'h':
            return t ? 'godzina' : 'godzinę';
          case 'hh':
            return i + (r(e) ? 'godziny' : 'godzin');
          case 'ww':
            return i + (r(e) ? 'tygodnie' : 'tygodni');
          case 'MM':
            return i + (r(e) ? 'miesiące' : 'miesięcy');
          case 'yy':
            return i + (r(e) ? 'lata' : 'lat');
        }
      }
      var o = e.defineLocale('pl', {
        months: function (e, i) {
          return e ? (/D MMMM/.test(i) ? n[e.month()] : t[e.month()]) : t;
        },
        monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split(
          '_'
        ),
        monthsParse: i,
        longMonthsParse: i,
        shortMonthsParse: i,
        weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split(
          '_'
        ),
        weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
        weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[Dziś o] LT',
          nextDay: '[Jutro o] LT',
          nextWeek: function () {
            switch (this.day()) {
              case 0:
                return '[W niedzielę o] LT';
              case 2:
                return '[We wtorek o] LT';
              case 3:
                return '[W środę o] LT';
              case 6:
                return '[W sobotę o] LT';
              default:
                return '[W] dddd [o] LT';
            }
          },
          lastDay: '[Wczoraj o] LT',
          lastWeek: function () {
            switch (this.day()) {
              case 0:
                return '[W zeszłą niedzielę o] LT';
              case 3:
                return '[W zeszłą środę o] LT';
              case 6:
                return '[W zeszłą sobotę o] LT';
              default:
                return '[W zeszły] dddd [o] LT';
            }
          },
          sameElse: 'L',
        },
        relativeTime: {
          future: 'za %s',
          past: '%s temu',
          s: 'kilka sekund',
          ss: a,
          m: a,
          mm: a,
          h: a,
          hh: a,
          d: '1 dzień',
          dd: '%d dni',
          w: 'tydzień',
          ww: a,
          M: 'miesiąc',
          MM: a,
          y: 'rok',
          yy: a,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: { dow: 1, doy: 4 },
      });
      return o;
    });
  },
  '../../../node_modules/moment/locale/pt-br.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('pt-br', {
        months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split(
          '_'
        ),
        monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split(
          '_'
        ),
        weekdays: 'domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado'.split(
          '_'
        ),
        weekdaysShort: 'dom_seg_ter_qua_qui_sex_sáb'.split('_'),
        weekdaysMin: 'do_2ª_3ª_4ª_5ª_6ª_sá'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D [de] MMMM [de] YYYY',
          LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',
          LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm',
        },
        calendar: {
          sameDay: '[Hoje às] LT',
          nextDay: '[Amanhã às] LT',
          nextWeek: 'dddd [às] LT',
          lastDay: '[Ontem às] LT',
          lastWeek: function () {
            return 0 === this.day() || 6 === this.day()
              ? '[Último] dddd [às] LT'
              : '[Última] dddd [às] LT';
          },
          sameElse: 'L',
        },
        relativeTime: {
          future: 'em %s',
          past: 'há %s',
          s: 'poucos segundos',
          ss: '%d segundos',
          m: 'um minuto',
          mm: '%d minutos',
          h: 'uma hora',
          hh: '%d horas',
          d: 'um dia',
          dd: '%d dias',
          M: 'um mês',
          MM: '%d meses',
          y: 'um ano',
          yy: '%d anos',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        invalidDate: 'Data inválida',
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/pt.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('pt', {
        months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split(
          '_'
        ),
        monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split(
          '_'
        ),
        weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split(
          '_'
        ),
        weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
        weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D [de] MMMM [de] YYYY',
          LLL: 'D [de] MMMM [de] YYYY HH:mm',
          LLLL: 'dddd, D [de] MMMM [de] YYYY HH:mm',
        },
        calendar: {
          sameDay: '[Hoje às] LT',
          nextDay: '[Amanhã às] LT',
          nextWeek: 'dddd [às] LT',
          lastDay: '[Ontem às] LT',
          lastWeek: function () {
            return 0 === this.day() || 6 === this.day()
              ? '[Último] dddd [às] LT'
              : '[Última] dddd [às] LT';
          },
          sameElse: 'L',
        },
        relativeTime: {
          future: 'em %s',
          past: 'há %s',
          s: 'segundos',
          ss: '%d segundos',
          m: 'um minuto',
          mm: '%d minutos',
          h: 'uma hora',
          hh: '%d horas',
          d: 'um dia',
          dd: '%d dias',
          w: 'uma semana',
          ww: '%d semanas',
          M: 'um mês',
          MM: '%d meses',
          y: 'um ano',
          yy: '%d anos',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/ro.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      function t(e, t, n) {
        var i = {
            ss: 'secunde',
            mm: 'minute',
            hh: 'ore',
            dd: 'zile',
            ww: 'săptămâni',
            MM: 'luni',
            yy: 'ani',
          },
          r = ' ';
        return (
          (e % 100 >= 20 || (e >= 100 && e % 100 === 0)) && (r = ' de '),
          e + r + i[n]
        );
      }
      var n = e.defineLocale('ro', {
        months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split(
          '_'
        ),
        monthsShort: 'ian._feb._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
        weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
        weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
        longDateFormat: {
          LT: 'H:mm',
          LTS: 'H:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY H:mm',
          LLLL: 'dddd, D MMMM YYYY H:mm',
        },
        calendar: {
          sameDay: '[azi la] LT',
          nextDay: '[mâine la] LT',
          nextWeek: 'dddd [la] LT',
          lastDay: '[ieri la] LT',
          lastWeek: '[fosta] dddd [la] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'peste %s',
          past: '%s în urmă',
          s: 'câteva secunde',
          ss: t,
          m: 'un minut',
          mm: t,
          h: 'o oră',
          hh: t,
          d: 'o zi',
          dd: t,
          w: 'o săptămână',
          ww: t,
          M: 'o lună',
          MM: t,
          y: 'un an',
          yy: t,
        },
        week: { dow: 1, doy: 7 },
      });
      return n;
    });
  },
  '../../../node_modules/moment/locale/ru.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      function t(e, t) {
        var n = e.split('_');
        return t % 10 === 1 && t % 100 !== 11
          ? n[0]
          : t % 10 >= 2 && t % 10 <= 4 && (t % 100 < 10 || t % 100 >= 20)
          ? n[1]
          : n[2];
      }
      function n(e, n, i) {
        var r = {
          ss: n ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
          mm: n ? 'минута_минуты_минут' : 'минуту_минуты_минут',
          hh: 'час_часа_часов',
          dd: 'день_дня_дней',
          ww: 'неделя_недели_недель',
          MM: 'месяц_месяца_месяцев',
          yy: 'год_года_лет',
        };
        return 'm' === i ? (n ? 'минута' : 'минуту') : e + ' ' + t(r[i], +e);
      }
      var i = [
          /^янв/i,
          /^фев/i,
          /^мар/i,
          /^апр/i,
          /^ма[йя]/i,
          /^июн/i,
          /^июл/i,
          /^авг/i,
          /^сен/i,
          /^окт/i,
          /^ноя/i,
          /^дек/i,
        ],
        r = e.defineLocale('ru', {
          months: {
            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split(
              '_'
            ),
            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(
              '_'
            ),
          },
          monthsShort: {
            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split(
              '_'
            ),
            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split(
              '_'
            ),
          },
          weekdays: {
            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split(
              '_'
            ),
            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split(
              '_'
            ),
            isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?] ?dddd/,
          },
          weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
          weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
          monthsParse: i,
          longMonthsParse: i,
          shortMonthsParse: i,
          monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,
          monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,
          monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,
          monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY г.',
            LLL: 'D MMMM YYYY г., H:mm',
            LLLL: 'dddd, D MMMM YYYY г., H:mm',
          },
          calendar: {
            sameDay: '[Сегодня, в] LT',
            nextDay: '[Завтра, в] LT',
            lastDay: '[Вчера, в] LT',
            nextWeek: function (e) {
              if (e.week() === this.week())
                return 2 === this.day()
                  ? '[Во] dddd, [в] LT'
                  : '[В] dddd, [в] LT';
              switch (this.day()) {
                case 0:
                  return '[В следующее] dddd, [в] LT';
                case 1:
                case 2:
                case 4:
                  return '[В следующий] dddd, [в] LT';
                case 3:
                case 5:
                case 6:
                  return '[В следующую] dddd, [в] LT';
              }
            },
            lastWeek: function (e) {
              if (e.week() === this.week())
                return 2 === this.day()
                  ? '[Во] dddd, [в] LT'
                  : '[В] dddd, [в] LT';
              switch (this.day()) {
                case 0:
                  return '[В прошлое] dddd, [в] LT';
                case 1:
                case 2:
                case 4:
                  return '[В прошлый] dddd, [в] LT';
                case 3:
                case 5:
                case 6:
                  return '[В прошлую] dddd, [в] LT';
              }
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'через %s',
            past: '%s назад',
            s: 'несколько секунд',
            ss: n,
            m: n,
            mm: n,
            h: 'час',
            hh: n,
            d: 'день',
            dd: n,
            w: 'неделя',
            ww: n,
            M: 'месяц',
            MM: n,
            y: 'год',
            yy: n,
          },
          meridiemParse: /ночи|утра|дня|вечера/i,
          isPM: function (e) {
            return /^(дня|вечера)$/.test(e);
          },
          meridiem: function (e, t, n) {
            return e < 4 ? 'ночи' : e < 12 ? 'утра' : e < 17 ? 'дня' : 'вечера';
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
          ordinal: function (e, t) {
            switch (t) {
              case 'M':
              case 'd':
              case 'DDD':
                return e + '-й';
              case 'D':
                return e + '-го';
              case 'w':
              case 'W':
                return e + '-я';
              default:
                return e;
            }
          },
          week: { dow: 1, doy: 4 },
        });
      return r;
    });
  },
  '../../../node_modules/moment/locale/sd.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = [
          'جنوري',
          'فيبروري',
          'مارچ',
          'اپريل',
          'مئي',
          'جون',
          'جولاءِ',
          'آگسٽ',
          'سيپٽمبر',
          'آڪٽوبر',
          'نومبر',
          'ڊسمبر',
        ],
        n = ['آچر', 'سومر', 'اڱارو', 'اربع', 'خميس', 'جمع', 'ڇنڇر'],
        i = e.defineLocale('sd', {
          months: t,
          monthsShort: t,
          weekdays: n,
          weekdaysShort: n,
          weekdaysMin: n,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd، D MMMM YYYY HH:mm',
          },
          meridiemParse: /صبح|شام/,
          isPM: function (e) {
            return 'شام' === e;
          },
          meridiem: function (e, t, n) {
            return e < 12 ? 'صبح' : 'شام';
          },
          calendar: {
            sameDay: '[اڄ] LT',
            nextDay: '[سڀاڻي] LT',
            nextWeek: 'dddd [اڳين هفتي تي] LT',
            lastDay: '[ڪالهه] LT',
            lastWeek: '[گزريل هفتي] dddd [تي] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s پوء',
            past: '%s اڳ',
            s: 'چند سيڪنڊ',
            ss: '%d سيڪنڊ',
            m: 'هڪ منٽ',
            mm: '%d منٽ',
            h: 'هڪ ڪلاڪ',
            hh: '%d ڪلاڪ',
            d: 'هڪ ڏينهن',
            dd: '%d ڏينهن',
            M: 'هڪ مهينو',
            MM: '%d مهينا',
            y: 'هڪ سال',
            yy: '%d سال',
          },
          preparse: function (e) {
            return e.replace(/،/g, ',');
          },
          postformat: function (e) {
            return e.replace(/,/g, '،');
          },
          week: { dow: 1, doy: 4 },
        });
      return i;
    });
  },
  '../../../node_modules/moment/locale/se.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('se', {
        months: 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split(
          '_'
        ),
        monthsShort: 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split(
          '_'
        ),
        weekdays: 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split(
          '_'
        ),
        weekdaysShort: 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
        weekdaysMin: 's_v_m_g_d_b_L'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'MMMM D. [b.] YYYY',
          LLL: 'MMMM D. [b.] YYYY [ti.] HH:mm',
          LLLL: 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm',
        },
        calendar: {
          sameDay: '[otne ti] LT',
          nextDay: '[ihttin ti] LT',
          nextWeek: 'dddd [ti] LT',
          lastDay: '[ikte ti] LT',
          lastWeek: '[ovddit] dddd [ti] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: '%s geažes',
          past: 'maŋit %s',
          s: 'moadde sekunddat',
          ss: '%d sekunddat',
          m: 'okta minuhta',
          mm: '%d minuhtat',
          h: 'okta diimmu',
          hh: '%d diimmut',
          d: 'okta beaivi',
          dd: '%d beaivvit',
          M: 'okta mánnu',
          MM: '%d mánut',
          y: 'okta jahki',
          yy: '%d jagit',
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/si.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('si', {
        months: 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split(
          '_'
        ),
        monthsShort: 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split(
          '_'
        ),
        weekdays: 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split(
          '_'
        ),
        weekdaysShort: 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
        weekdaysMin: 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'a h:mm',
          LTS: 'a h:mm:ss',
          L: 'YYYY/MM/DD',
          LL: 'YYYY MMMM D',
          LLL: 'YYYY MMMM D, a h:mm',
          LLLL: 'YYYY MMMM D [වැනි] dddd, a h:mm:ss',
        },
        calendar: {
          sameDay: '[අද] LT[ට]',
          nextDay: '[හෙට] LT[ට]',
          nextWeek: 'dddd LT[ට]',
          lastDay: '[ඊයේ] LT[ට]',
          lastWeek: '[පසුගිය] dddd LT[ට]',
          sameElse: 'L',
        },
        relativeTime: {
          future: '%sකින්',
          past: '%sකට පෙර',
          s: 'තත්පර කිහිපය',
          ss: 'තත්පර %d',
          m: 'මිනිත්තුව',
          mm: 'මිනිත්තු %d',
          h: 'පැය',
          hh: 'පැය %d',
          d: 'දිනය',
          dd: 'දින %d',
          M: 'මාසය',
          MM: 'මාස %d',
          y: 'වසර',
          yy: 'වසර %d',
        },
        dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
        ordinal: function (e) {
          return e + ' වැනි';
        },
        meridiemParse: /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
        isPM: function (e) {
          return 'ප.ව.' === e || 'පස් වරු' === e;
        },
        meridiem: function (e, t, n) {
          return e > 11 ? (n ? 'ප.ව.' : 'පස් වරු') : n ? 'පෙ.ව.' : 'පෙර වරු';
        },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/sk.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split(
          '_'
        ),
        n = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
      function i(e) {
        return e > 1 && e < 5;
      }
      function r(e, t, n, r) {
        var a = e + ' ';
        switch (n) {
          case 's':
            return t || r ? 'pár sekúnd' : 'pár sekundami';
          case 'ss':
            return t || r ? a + (i(e) ? 'sekundy' : 'sekúnd') : a + 'sekundami';
          case 'm':
            return t ? 'minúta' : r ? 'minútu' : 'minútou';
          case 'mm':
            return t || r ? a + (i(e) ? 'minúty' : 'minút') : a + 'minútami';
          case 'h':
            return t ? 'hodina' : r ? 'hodinu' : 'hodinou';
          case 'hh':
            return t || r ? a + (i(e) ? 'hodiny' : 'hodín') : a + 'hodinami';
          case 'd':
            return t || r ? 'deň' : 'dňom';
          case 'dd':
            return t || r ? a + (i(e) ? 'dni' : 'dní') : a + 'dňami';
          case 'M':
            return t || r ? 'mesiac' : 'mesiacom';
          case 'MM':
            return t || r
              ? a + (i(e) ? 'mesiace' : 'mesiacov')
              : a + 'mesiacmi';
          case 'y':
            return t || r ? 'rok' : 'rokom';
          case 'yy':
            return t || r ? a + (i(e) ? 'roky' : 'rokov') : a + 'rokmi';
        }
      }
      var a = e.defineLocale('sk', {
        months: t,
        monthsShort: n,
        weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split(
          '_'
        ),
        weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),
        weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),
        longDateFormat: {
          LT: 'H:mm',
          LTS: 'H:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'D. MMMM YYYY',
          LLL: 'D. MMMM YYYY H:mm',
          LLLL: 'dddd D. MMMM YYYY H:mm',
        },
        calendar: {
          sameDay: '[dnes o] LT',
          nextDay: '[zajtra o] LT',
          nextWeek: function () {
            switch (this.day()) {
              case 0:
                return '[v nedeľu o] LT';
              case 1:
              case 2:
                return '[v] dddd [o] LT';
              case 3:
                return '[v stredu o] LT';
              case 4:
                return '[vo štvrtok o] LT';
              case 5:
                return '[v piatok o] LT';
              case 6:
                return '[v sobotu o] LT';
            }
          },
          lastDay: '[včera o] LT',
          lastWeek: function () {
            switch (this.day()) {
              case 0:
                return '[minulú nedeľu o] LT';
              case 1:
              case 2:
                return '[minulý] dddd [o] LT';
              case 3:
                return '[minulú stredu o] LT';
              case 4:
              case 5:
                return '[minulý] dddd [o] LT';
              case 6:
                return '[minulú sobotu o] LT';
            }
          },
          sameElse: 'L',
        },
        relativeTime: {
          future: 'za %s',
          past: 'pred %s',
          s: r,
          ss: r,
          m: r,
          mm: r,
          h: r,
          hh: r,
          d: r,
          dd: r,
          M: r,
          MM: r,
          y: r,
          yy: r,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: { dow: 1, doy: 4 },
      });
      return a;
    });
  },
  '../../../node_modules/moment/locale/sl.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      function t(e, t, n, i) {
        var r = e + ' ';
        switch (n) {
          case 's':
            return t || i ? 'nekaj sekund' : 'nekaj sekundami';
          case 'ss':
            return (
              (r +=
                1 === e
                  ? t
                    ? 'sekundo'
                    : 'sekundi'
                  : 2 === e
                  ? t || i
                    ? 'sekundi'
                    : 'sekundah'
                  : e < 5
                  ? t || i
                    ? 'sekunde'
                    : 'sekundah'
                  : 'sekund'),
              r
            );
          case 'm':
            return t ? 'ena minuta' : 'eno minuto';
          case 'mm':
            return (
              (r +=
                1 === e
                  ? t
                    ? 'minuta'
                    : 'minuto'
                  : 2 === e
                  ? t || i
                    ? 'minuti'
                    : 'minutama'
                  : e < 5
                  ? t || i
                    ? 'minute'
                    : 'minutami'
                  : t || i
                  ? 'minut'
                  : 'minutami'),
              r
            );
          case 'h':
            return t ? 'ena ura' : 'eno uro';
          case 'hh':
            return (
              (r +=
                1 === e
                  ? t
                    ? 'ura'
                    : 'uro'
                  : 2 === e
                  ? t || i
                    ? 'uri'
                    : 'urama'
                  : e < 5
                  ? t || i
                    ? 'ure'
                    : 'urami'
                  : t || i
                  ? 'ur'
                  : 'urami'),
              r
            );
          case 'd':
            return t || i ? 'en dan' : 'enim dnem';
          case 'dd':
            return (
              (r +=
                1 === e
                  ? t || i
                    ? 'dan'
                    : 'dnem'
                  : 2 === e
                  ? t || i
                    ? 'dni'
                    : 'dnevoma'
                  : t || i
                  ? 'dni'
                  : 'dnevi'),
              r
            );
          case 'M':
            return t || i ? 'en mesec' : 'enim mesecem';
          case 'MM':
            return (
              (r +=
                1 === e
                  ? t || i
                    ? 'mesec'
                    : 'mesecem'
                  : 2 === e
                  ? t || i
                    ? 'meseca'
                    : 'mesecema'
                  : e < 5
                  ? t || i
                    ? 'mesece'
                    : 'meseci'
                  : t || i
                  ? 'mesecev'
                  : 'meseci'),
              r
            );
          case 'y':
            return t || i ? 'eno leto' : 'enim letom';
          case 'yy':
            return (
              (r +=
                1 === e
                  ? t || i
                    ? 'leto'
                    : 'letom'
                  : 2 === e
                  ? t || i
                    ? 'leti'
                    : 'letoma'
                  : e < 5
                  ? t || i
                    ? 'leta'
                    : 'leti'
                  : t || i
                  ? 'let'
                  : 'leti'),
              r
            );
        }
      }
      var n = e.defineLocale('sl', {
        months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split(
          '_'
        ),
        monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split(
          '_'
        ),
        weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
        weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'H:mm',
          LTS: 'H:mm:ss',
          L: 'DD. MM. YYYY',
          LL: 'D. MMMM YYYY',
          LLL: 'D. MMMM YYYY H:mm',
          LLLL: 'dddd, D. MMMM YYYY H:mm',
        },
        calendar: {
          sameDay: '[danes ob] LT',
          nextDay: '[jutri ob] LT',
          nextWeek: function () {
            switch (this.day()) {
              case 0:
                return '[v] [nedeljo] [ob] LT';
              case 3:
                return '[v] [sredo] [ob] LT';
              case 6:
                return '[v] [soboto] [ob] LT';
              case 1:
              case 2:
              case 4:
              case 5:
                return '[v] dddd [ob] LT';
            }
          },
          lastDay: '[včeraj ob] LT',
          lastWeek: function () {
            switch (this.day()) {
              case 0:
                return '[prejšnjo] [nedeljo] [ob] LT';
              case 3:
                return '[prejšnjo] [sredo] [ob] LT';
              case 6:
                return '[prejšnjo] [soboto] [ob] LT';
              case 1:
              case 2:
              case 4:
              case 5:
                return '[prejšnji] dddd [ob] LT';
            }
          },
          sameElse: 'L',
        },
        relativeTime: {
          future: 'čez %s',
          past: 'pred %s',
          s: t,
          ss: t,
          m: t,
          mm: t,
          h: t,
          hh: t,
          d: t,
          dd: t,
          M: t,
          MM: t,
          y: t,
          yy: t,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: { dow: 1, doy: 7 },
      });
      return n;
    });
  },
  '../../../node_modules/moment/locale/sq.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('sq', {
        months: 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split(
          '_'
        ),
        monthsShort: 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split(
          '_'
        ),
        weekdays: 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split(
          '_'
        ),
        weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
        weekdaysMin: 'D_H_Ma_Më_E_P_Sh'.split('_'),
        weekdaysParseExact: !0,
        meridiemParse: /PD|MD/,
        isPM: function (e) {
          return 'M' === e.charAt(0);
        },
        meridiem: function (e, t, n) {
          return e < 12 ? 'PD' : 'MD';
        },
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[Sot në] LT',
          nextDay: '[Nesër në] LT',
          nextWeek: 'dddd [në] LT',
          lastDay: '[Dje në] LT',
          lastWeek: 'dddd [e kaluar në] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'në %s',
          past: '%s më parë',
          s: 'disa sekonda',
          ss: '%d sekonda',
          m: 'një minutë',
          mm: '%d minuta',
          h: 'një orë',
          hh: '%d orë',
          d: 'një ditë',
          dd: '%d ditë',
          M: 'një muaj',
          MM: '%d muaj',
          y: 'një vit',
          yy: '%d vite',
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/sr-cyrl.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          words: {
            ss: ['секунда', 'секунде', 'секунди'],
            m: ['један минут', 'једне минуте'],
            mm: ['минут', 'минуте', 'минута'],
            h: ['један сат', 'једног сата'],
            hh: ['сат', 'сата', 'сати'],
            dd: ['дан', 'дана', 'дана'],
            MM: ['месец', 'месеца', 'месеци'],
            yy: ['година', 'године', 'година'],
          },
          correctGrammaticalCase: function (e, t) {
            return 1 === e ? t[0] : e >= 2 && e <= 4 ? t[1] : t[2];
          },
          translate: function (e, n, i) {
            var r = t.words[i];
            return 1 === i.length
              ? n
                ? r[0]
                : r[1]
              : e + ' ' + t.correctGrammaticalCase(e, r);
          },
        },
        n = e.defineLocale('sr-cyrl', {
          months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split(
            '_'
          ),
          monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split(
            '_'
          ),
          monthsParseExact: !0,
          weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split(
            '_'
          ),
          weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
          weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'D. M. YYYY.',
            LL: 'D. MMMM YYYY.',
            LLL: 'D. MMMM YYYY. H:mm',
            LLLL: 'dddd, D. MMMM YYYY. H:mm',
          },
          calendar: {
            sameDay: '[данас у] LT',
            nextDay: '[сутра у] LT',
            nextWeek: function () {
              switch (this.day()) {
                case 0:
                  return '[у] [недељу] [у] LT';
                case 3:
                  return '[у] [среду] [у] LT';
                case 6:
                  return '[у] [суботу] [у] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                  return '[у] dddd [у] LT';
              }
            },
            lastDay: '[јуче у] LT',
            lastWeek: function () {
              var e = [
                '[прошле] [недеље] [у] LT',
                '[прошлог] [понедељка] [у] LT',
                '[прошлог] [уторка] [у] LT',
                '[прошле] [среде] [у] LT',
                '[прошлог] [четвртка] [у] LT',
                '[прошлог] [петка] [у] LT',
                '[прошле] [суботе] [у] LT',
              ];
              return e[this.day()];
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'за %s',
            past: 'пре %s',
            s: 'неколико секунди',
            ss: t.translate,
            m: t.translate,
            mm: t.translate,
            h: t.translate,
            hh: t.translate,
            d: 'дан',
            dd: t.translate,
            M: 'месец',
            MM: t.translate,
            y: 'годину',
            yy: t.translate,
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: { dow: 1, doy: 7 },
        });
      return n;
    });
  },
  '../../../node_modules/moment/locale/sr.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          words: {
            ss: ['sekunda', 'sekunde', 'sekundi'],
            m: ['jedan minut', 'jedne minute'],
            mm: ['minut', 'minute', 'minuta'],
            h: ['jedan sat', 'jednog sata'],
            hh: ['sat', 'sata', 'sati'],
            dd: ['dan', 'dana', 'dana'],
            MM: ['mesec', 'meseca', 'meseci'],
            yy: ['godina', 'godine', 'godina'],
          },
          correctGrammaticalCase: function (e, t) {
            return 1 === e ? t[0] : e >= 2 && e <= 4 ? t[1] : t[2];
          },
          translate: function (e, n, i) {
            var r = t.words[i];
            return 1 === i.length
              ? n
                ? r[0]
                : r[1]
              : e + ' ' + t.correctGrammaticalCase(e, r);
          },
        },
        n = e.defineLocale('sr', {
          months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split(
            '_'
          ),
          monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split(
            '_'
          ),
          monthsParseExact: !0,
          weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split(
            '_'
          ),
          weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
          weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
          weekdaysParseExact: !0,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'D. M. YYYY.',
            LL: 'D. MMMM YYYY.',
            LLL: 'D. MMMM YYYY. H:mm',
            LLLL: 'dddd, D. MMMM YYYY. H:mm',
          },
          calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sutra u] LT',
            nextWeek: function () {
              switch (this.day()) {
                case 0:
                  return '[u] [nedelju] [u] LT';
                case 3:
                  return '[u] [sredu] [u] LT';
                case 6:
                  return '[u] [subotu] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                  return '[u] dddd [u] LT';
              }
            },
            lastDay: '[juče u] LT',
            lastWeek: function () {
              var e = [
                '[prošle] [nedelje] [u] LT',
                '[prošlog] [ponedeljka] [u] LT',
                '[prošlog] [utorka] [u] LT',
                '[prošle] [srede] [u] LT',
                '[prošlog] [četvrtka] [u] LT',
                '[prošlog] [petka] [u] LT',
                '[prošle] [subote] [u] LT',
              ];
              return e[this.day()];
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'za %s',
            past: 'pre %s',
            s: 'nekoliko sekundi',
            ss: t.translate,
            m: t.translate,
            mm: t.translate,
            h: t.translate,
            hh: t.translate,
            d: 'dan',
            dd: t.translate,
            M: 'mesec',
            MM: t.translate,
            y: 'godinu',
            yy: t.translate,
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: { dow: 1, doy: 7 },
        });
      return n;
    });
  },
  '../../../node_modules/moment/locale/ss.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('ss', {
        months: "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split(
          '_'
        ),
        monthsShort: 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split(
          '_'
        ),
        weekdays: 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split(
          '_'
        ),
        weekdaysShort: 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
        weekdaysMin: 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'h:mm A',
          LTS: 'h:mm:ss A',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY h:mm A',
          LLLL: 'dddd, D MMMM YYYY h:mm A',
        },
        calendar: {
          sameDay: '[Namuhla nga] LT',
          nextDay: '[Kusasa nga] LT',
          nextWeek: 'dddd [nga] LT',
          lastDay: '[Itolo nga] LT',
          lastWeek: 'dddd [leliphelile] [nga] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'nga %s',
          past: 'wenteka nga %s',
          s: 'emizuzwana lomcane',
          ss: '%d mzuzwana',
          m: 'umzuzu',
          mm: '%d emizuzu',
          h: 'lihora',
          hh: '%d emahora',
          d: 'lilanga',
          dd: '%d emalanga',
          M: 'inyanga',
          MM: '%d tinyanga',
          y: 'umnyaka',
          yy: '%d iminyaka',
        },
        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
        meridiem: function (e, t, n) {
          return e < 11
            ? 'ekuseni'
            : e < 15
            ? 'emini'
            : e < 19
            ? 'entsambama'
            : 'ebusuku';
        },
        meridiemHour: function (e, t) {
          return (
            12 === e && (e = 0),
            'ekuseni' === t
              ? e
              : 'emini' === t
              ? e >= 11
                ? e
                : e + 12
              : 'entsambama' === t || 'ebusuku' === t
              ? 0 === e
                ? 0
                : e + 12
              : void 0
          );
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal: '%d',
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/sv.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('sv', {
        months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split(
          '_'
        ),
        monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split(
          '_'
        ),
        weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split(
          '_'
        ),
        weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
        weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'YYYY-MM-DD',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY [kl.] HH:mm',
          LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',
          lll: 'D MMM YYYY HH:mm',
          llll: 'ddd D MMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[Idag] LT',
          nextDay: '[Imorgon] LT',
          lastDay: '[Igår] LT',
          nextWeek: '[På] dddd LT',
          lastWeek: '[I] dddd[s] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'om %s',
          past: 'för %s sedan',
          s: 'några sekunder',
          ss: '%d sekunder',
          m: 'en minut',
          mm: '%d minuter',
          h: 'en timme',
          hh: '%d timmar',
          d: 'en dag',
          dd: '%d dagar',
          M: 'en månad',
          MM: '%d månader',
          y: 'ett år',
          yy: '%d år',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(\:e|\:a)/,
        ordinal: function (e) {
          var t = e % 10,
            n =
              1 === ~~((e % 100) / 10)
                ? ':e'
                : 1 === t || 2 === t
                ? ':a'
                : (3 === t, ':e');
          return e + n;
        },
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/sw.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('sw', {
        months: 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split(
          '_'
        ),
        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split(
          '_'
        ),
        weekdays: 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split(
          '_'
        ),
        weekdaysShort: 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
        weekdaysMin: 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'hh:mm A',
          LTS: 'HH:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[leo saa] LT',
          nextDay: '[kesho saa] LT',
          nextWeek: '[wiki ijayo] dddd [saat] LT',
          lastDay: '[jana] LT',
          lastWeek: '[wiki iliyopita] dddd [saat] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: '%s baadaye',
          past: 'tokea %s',
          s: 'hivi punde',
          ss: 'sekunde %d',
          m: 'dakika moja',
          mm: 'dakika %d',
          h: 'saa limoja',
          hh: 'masaa %d',
          d: 'siku moja',
          dd: 'siku %d',
          M: 'mwezi mmoja',
          MM: 'miezi %d',
          y: 'mwaka mmoja',
          yy: 'miaka %d',
        },
        week: { dow: 1, doy: 7 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/ta.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          1: '௧',
          2: '௨',
          3: '௩',
          4: '௪',
          5: '௫',
          6: '௬',
          7: '௭',
          8: '௮',
          9: '௯',
          0: '௦',
        },
        n = {
          '௧': '1',
          '௨': '2',
          '௩': '3',
          '௪': '4',
          '௫': '5',
          '௬': '6',
          '௭': '7',
          '௮': '8',
          '௯': '9',
          '௦': '0',
        },
        i = e.defineLocale('ta', {
          months: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split(
            '_'
          ),
          monthsShort: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split(
            '_'
          ),
          weekdays: 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split(
            '_'
          ),
          weekdaysShort: 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split(
            '_'
          ),
          weekdaysMin: 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, HH:mm',
            LLLL: 'dddd, D MMMM YYYY, HH:mm',
          },
          calendar: {
            sameDay: '[இன்று] LT',
            nextDay: '[நாளை] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[நேற்று] LT',
            lastWeek: '[கடந்த வாரம்] dddd, LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s இல்',
            past: '%s முன்',
            s: 'ஒரு சில விநாடிகள்',
            ss: '%d விநாடிகள்',
            m: 'ஒரு நிமிடம்',
            mm: '%d நிமிடங்கள்',
            h: 'ஒரு மணி நேரம்',
            hh: '%d மணி நேரம்',
            d: 'ஒரு நாள்',
            dd: '%d நாட்கள்',
            M: 'ஒரு மாதம்',
            MM: '%d மாதங்கள்',
            y: 'ஒரு வருடம்',
            yy: '%d ஆண்டுகள்',
          },
          dayOfMonthOrdinalParse: /\d{1,2}வது/,
          ordinal: function (e) {
            return e + 'வது';
          },
          preparse: function (e) {
            return e.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (e) {
              return n[e];
            });
          },
          postformat: function (e) {
            return e.replace(/\d/g, function (e) {
              return t[e];
            });
          },
          meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
          meridiem: function (e, t, n) {
            return e < 2
              ? ' யாமம்'
              : e < 6
              ? ' வைகறை'
              : e < 10
              ? ' காலை'
              : e < 14
              ? ' நண்பகல்'
              : e < 18
              ? ' எற்பாடு'
              : e < 22
              ? ' மாலை'
              : ' யாமம்';
          },
          meridiemHour: function (e, t) {
            return (
              12 === e && (e = 0),
              'யாமம்' === t
                ? e < 2
                  ? e
                  : e + 12
                : 'வைகறை' === t || 'காலை' === t || ('நண்பகல்' === t && e >= 10)
                ? e
                : e + 12
            );
          },
          week: { dow: 0, doy: 6 },
        });
      return i;
    });
  },
  '../../../node_modules/moment/locale/te.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('te', {
        months: 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split(
          '_'
        ),
        monthsShort: 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split(
          '_'
        ),
        weekdaysShort: 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
        weekdaysMin: 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
        longDateFormat: {
          LT: 'A h:mm',
          LTS: 'A h:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY, A h:mm',
          LLLL: 'dddd, D MMMM YYYY, A h:mm',
        },
        calendar: {
          sameDay: '[నేడు] LT',
          nextDay: '[రేపు] LT',
          nextWeek: 'dddd, LT',
          lastDay: '[నిన్న] LT',
          lastWeek: '[గత] dddd, LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: '%s లో',
          past: '%s క్రితం',
          s: 'కొన్ని క్షణాలు',
          ss: '%d సెకన్లు',
          m: 'ఒక నిమిషం',
          mm: '%d నిమిషాలు',
          h: 'ఒక గంట',
          hh: '%d గంటలు',
          d: 'ఒక రోజు',
          dd: '%d రోజులు',
          M: 'ఒక నెల',
          MM: '%d నెలలు',
          y: 'ఒక సంవత్సరం',
          yy: '%d సంవత్సరాలు',
        },
        dayOfMonthOrdinalParse: /\d{1,2}వ/,
        ordinal: '%dవ',
        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
        meridiemHour: function (e, t) {
          return (
            12 === e && (e = 0),
            'రాత్రి' === t
              ? e < 4
                ? e
                : e + 12
              : 'ఉదయం' === t
              ? e
              : 'మధ్యాహ్నం' === t
              ? e >= 10
                ? e
                : e + 12
              : 'సాయంత్రం' === t
              ? e + 12
              : void 0
          );
        },
        meridiem: function (e, t, n) {
          return e < 4
            ? 'రాత్రి'
            : e < 10
            ? 'ఉదయం'
            : e < 17
            ? 'మధ్యాహ్నం'
            : e < 20
            ? 'సాయంత్రం'
            : 'రాత్రి';
        },
        week: { dow: 0, doy: 6 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/tet.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('tet', {
        months: 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split(
          '_'
        ),
        monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split(
          '_'
        ),
        weekdays: 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split('_'),
        weekdaysShort: 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),
        weekdaysMin: 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[Ohin iha] LT',
          nextDay: '[Aban iha] LT',
          nextWeek: 'dddd [iha] LT',
          lastDay: '[Horiseik iha] LT',
          lastWeek: 'dddd [semana kotuk] [iha] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'iha %s',
          past: '%s liuba',
          s: 'segundu balun',
          ss: 'segundu %d',
          m: 'minutu ida',
          mm: 'minutu %d',
          h: 'oras ida',
          hh: 'oras %d',
          d: 'loron ida',
          dd: 'loron %d',
          M: 'fulan ida',
          MM: 'fulan %d',
          y: 'tinan ida',
          yy: 'tinan %d',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (e) {
          var t = e % 10,
            n =
              1 === ~~((e % 100) / 10)
                ? 'th'
                : 1 === t
                ? 'st'
                : 2 === t
                ? 'nd'
                : 3 === t
                ? 'rd'
                : 'th';
          return e + n;
        },
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/tg.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          0: '-ум',
          1: '-ум',
          2: '-юм',
          3: '-юм',
          4: '-ум',
          5: '-ум',
          6: '-ум',
          7: '-ум',
          8: '-ум',
          9: '-ум',
          10: '-ум',
          12: '-ум',
          13: '-ум',
          20: '-ум',
          30: '-юм',
          40: '-ум',
          50: '-ум',
          60: '-ум',
          70: '-ум',
          80: '-ум',
          90: '-ум',
          100: '-ум',
        },
        n = e.defineLocale('tg', {
          months: {
            format: 'январи_феврали_марти_апрели_майи_июни_июли_августи_сентябри_октябри_ноябри_декабри'.split(
              '_'
            ),
            standalone: 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split(
              '_'
            ),
          },
          monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split(
            '_'
          ),
          weekdays: 'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split(
            '_'
          ),
          weekdaysShort: 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),
          weekdaysMin: 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[Имрӯз соати] LT',
            nextDay: '[Фардо соати] LT',
            lastDay: '[Дирӯз соати] LT',
            nextWeek: 'dddd[и] [ҳафтаи оянда соати] LT',
            lastWeek: 'dddd[и] [ҳафтаи гузашта соати] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'баъди %s',
            past: '%s пеш',
            s: 'якчанд сония',
            m: 'як дақиқа',
            mm: '%d дақиқа',
            h: 'як соат',
            hh: '%d соат',
            d: 'як рӯз',
            dd: '%d рӯз',
            M: 'як моҳ',
            MM: '%d моҳ',
            y: 'як сол',
            yy: '%d сол',
          },
          meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,
          meridiemHour: function (e, t) {
            return (
              12 === e && (e = 0),
              'шаб' === t
                ? e < 4
                  ? e
                  : e + 12
                : 'субҳ' === t
                ? e
                : 'рӯз' === t
                ? e >= 11
                  ? e
                  : e + 12
                : 'бегоҳ' === t
                ? e + 12
                : void 0
            );
          },
          meridiem: function (e, t, n) {
            return e < 4
              ? 'шаб'
              : e < 11
              ? 'субҳ'
              : e < 16
              ? 'рӯз'
              : e < 19
              ? 'бегоҳ'
              : 'шаб';
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(ум|юм)/,
          ordinal: function (e) {
            var n = e % 10,
              i = e >= 100 ? 100 : null;
            return e + (t[e] || t[n] || t[i]);
          },
          week: { dow: 1, doy: 7 },
        });
      return n;
    });
  },
  '../../../node_modules/moment/locale/th.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('th', {
        months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split(
          '_'
        ),
        monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
        weekdaysShort: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'),
        weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'H:mm',
          LTS: 'H:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY เวลา H:mm',
          LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm',
        },
        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
        isPM: function (e) {
          return 'หลังเที่ยง' === e;
        },
        meridiem: function (e, t, n) {
          return e < 12 ? 'ก่อนเที่ยง' : 'หลังเที่ยง';
        },
        calendar: {
          sameDay: '[วันนี้ เวลา] LT',
          nextDay: '[พรุ่งนี้ เวลา] LT',
          nextWeek: 'dddd[หน้า เวลา] LT',
          lastDay: '[เมื่อวานนี้ เวลา] LT',
          lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'อีก %s',
          past: '%sที่แล้ว',
          s: 'ไม่กี่วินาที',
          ss: '%d วินาที',
          m: '1 นาที',
          mm: '%d นาที',
          h: '1 ชั่วโมง',
          hh: '%d ชั่วโมง',
          d: '1 วัน',
          dd: '%d วัน',
          w: '1 สัปดาห์',
          ww: '%d สัปดาห์',
          M: '1 เดือน',
          MM: '%d เดือน',
          y: '1 ปี',
          yy: '%d ปี',
        },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/tk.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          1: "'inji",
          5: "'inji",
          8: "'inji",
          70: "'inji",
          80: "'inji",
          2: "'nji",
          7: "'nji",
          20: "'nji",
          50: "'nji",
          3: "'ünji",
          4: "'ünji",
          100: "'ünji",
          6: "'njy",
          9: "'unjy",
          10: "'unjy",
          30: "'unjy",
          60: "'ynjy",
          90: "'ynjy",
        },
        n = e.defineLocale('tk', {
          months: 'Ýanwar_Fewral_Mart_Aprel_Maý_Iýun_Iýul_Awgust_Sentýabr_Oktýabr_Noýabr_Dekabr'.split(
            '_'
          ),
          monthsShort: 'Ýan_Few_Mar_Apr_Maý_Iýn_Iýl_Awg_Sen_Okt_Noý_Dek'.split(
            '_'
          ),
          weekdays: 'Ýekşenbe_Duşenbe_Sişenbe_Çarşenbe_Penşenbe_Anna_Şenbe'.split(
            '_'
          ),
          weekdaysShort: 'Ýek_Duş_Siş_Çar_Pen_Ann_Şen'.split('_'),
          weekdaysMin: 'Ýk_Dş_Sş_Çr_Pn_An_Şn'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[bugün sagat] LT',
            nextDay: '[ertir sagat] LT',
            nextWeek: '[indiki] dddd [sagat] LT',
            lastDay: '[düýn] LT',
            lastWeek: '[geçen] dddd [sagat] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s soň',
            past: '%s öň',
            s: 'birnäçe sekunt',
            m: 'bir minut',
            mm: '%d minut',
            h: 'bir sagat',
            hh: '%d sagat',
            d: 'bir gün',
            dd: '%d gün',
            M: 'bir aý',
            MM: '%d aý',
            y: 'bir ýyl',
            yy: '%d ýyl',
          },
          ordinal: function (e, n) {
            switch (n) {
              case 'd':
              case 'D':
              case 'Do':
              case 'DD':
                return e;
              default:
                if (0 === e) return e + "'unjy";
                var i = e % 10,
                  r = (e % 100) - i,
                  a = e >= 100 ? 100 : null;
                return e + (t[i] || t[r] || t[a]);
            }
          },
          week: { dow: 1, doy: 7 },
        });
      return n;
    });
  },
  '../../../node_modules/moment/locale/tl-ph.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('tl-ph', {
        months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split(
          '_'
        ),
        monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split(
          '_'
        ),
        weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split(
          '_'
        ),
        weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
        weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'MM/D/YYYY',
          LL: 'MMMM D, YYYY',
          LLL: 'MMMM D, YYYY HH:mm',
          LLLL: 'dddd, MMMM DD, YYYY HH:mm',
        },
        calendar: {
          sameDay: 'LT [ngayong araw]',
          nextDay: '[Bukas ng] LT',
          nextWeek: 'LT [sa susunod na] dddd',
          lastDay: 'LT [kahapon]',
          lastWeek: 'LT [noong nakaraang] dddd',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'sa loob ng %s',
          past: '%s ang nakalipas',
          s: 'ilang segundo',
          ss: '%d segundo',
          m: 'isang minuto',
          mm: '%d minuto',
          h: 'isang oras',
          hh: '%d oras',
          d: 'isang araw',
          dd: '%d araw',
          M: 'isang buwan',
          MM: '%d buwan',
          y: 'isang taon',
          yy: '%d taon',
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal: function (e) {
          return e;
        },
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/tlh.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');
      function n(e) {
        var t = e;
        return (
          (t =
            -1 !== e.indexOf('jaj')
              ? t.slice(0, -3) + 'leS'
              : -1 !== e.indexOf('jar')
              ? t.slice(0, -3) + 'waQ'
              : -1 !== e.indexOf('DIS')
              ? t.slice(0, -3) + 'nem'
              : t + ' pIq'),
          t
        );
      }
      function i(e) {
        var t = e;
        return (
          (t =
            -1 !== e.indexOf('jaj')
              ? t.slice(0, -3) + 'Hu’'
              : -1 !== e.indexOf('jar')
              ? t.slice(0, -3) + 'wen'
              : -1 !== e.indexOf('DIS')
              ? t.slice(0, -3) + 'ben'
              : t + ' ret'),
          t
        );
      }
      function r(e, t, n, i) {
        var r = a(e);
        switch (n) {
          case 'ss':
            return r + ' lup';
          case 'mm':
            return r + ' tup';
          case 'hh':
            return r + ' rep';
          case 'dd':
            return r + ' jaj';
          case 'MM':
            return r + ' jar';
          case 'yy':
            return r + ' DIS';
        }
      }
      function a(e) {
        var n = Math.floor((e % 1e3) / 100),
          i = Math.floor((e % 100) / 10),
          r = e % 10,
          a = '';
        return (
          n > 0 && (a += t[n] + 'vatlh'),
          i > 0 && (a += ('' !== a ? ' ' : '') + t[i] + 'maH'),
          r > 0 && (a += ('' !== a ? ' ' : '') + t[r]),
          '' === a ? 'pagh' : a
        );
      }
      var o = e.defineLocale('tlh', {
        months: 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split(
          '_'
        ),
        monthsShort: 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(
          '_'
        ),
        weekdaysShort: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(
          '_'
        ),
        weekdaysMin: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(
          '_'
        ),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[DaHjaj] LT',
          nextDay: '[wa’leS] LT',
          nextWeek: 'LLL',
          lastDay: '[wa’Hu’] LT',
          lastWeek: 'LLL',
          sameElse: 'L',
        },
        relativeTime: {
          future: n,
          past: i,
          s: 'puS lup',
          ss: r,
          m: 'wa’ tup',
          mm: r,
          h: 'wa’ rep',
          hh: r,
          d: 'wa’ jaj',
          dd: r,
          M: 'wa’ jar',
          MM: r,
          y: 'wa’ DIS',
          yy: r,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: { dow: 1, doy: 4 },
      });
      return o;
    });
  },
  '../../../node_modules/moment/locale/tr.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = {
          1: "'inci",
          5: "'inci",
          8: "'inci",
          70: "'inci",
          80: "'inci",
          2: "'nci",
          7: "'nci",
          20: "'nci",
          50: "'nci",
          3: "'üncü",
          4: "'üncü",
          100: "'üncü",
          6: "'ncı",
          9: "'uncu",
          10: "'uncu",
          30: "'uncu",
          60: "'ıncı",
          90: "'ıncı",
        },
        n = e.defineLocale('tr', {
          months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split(
            '_'
          ),
          monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split(
            '_'
          ),
          weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split(
            '_'
          ),
          weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
          weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
          meridiem: function (e, t, n) {
            return e < 12 ? (n ? 'öö' : 'ÖÖ') : n ? 'ös' : 'ÖS';
          },
          meridiemParse: /öö|ÖÖ|ös|ÖS/,
          isPM: function (e) {
            return 'ös' === e || 'ÖS' === e;
          },
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[bugün saat] LT',
            nextDay: '[yarın saat] LT',
            nextWeek: '[gelecek] dddd [saat] LT',
            lastDay: '[dün] LT',
            lastWeek: '[geçen] dddd [saat] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s sonra',
            past: '%s önce',
            s: 'birkaç saniye',
            ss: '%d saniye',
            m: 'bir dakika',
            mm: '%d dakika',
            h: 'bir saat',
            hh: '%d saat',
            d: 'bir gün',
            dd: '%d gün',
            w: 'bir hafta',
            ww: '%d hafta',
            M: 'bir ay',
            MM: '%d ay',
            y: 'bir yıl',
            yy: '%d yıl',
          },
          ordinal: function (e, n) {
            switch (n) {
              case 'd':
              case 'D':
              case 'Do':
              case 'DD':
                return e;
              default:
                if (0 === e) return e + "'ıncı";
                var i = e % 10,
                  r = (e % 100) - i,
                  a = e >= 100 ? 100 : null;
                return e + (t[i] || t[r] || t[a]);
            }
          },
          week: { dow: 1, doy: 7 },
        });
      return n;
    });
  },
  '../../../node_modules/moment/locale/tzl.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('tzl', {
        months: 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split(
          '_'
        ),
        monthsShort: 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split(
          '_'
        ),
        weekdays: 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split(
          '_'
        ),
        weekdaysShort: 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
        weekdaysMin: 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
        longDateFormat: {
          LT: 'HH.mm',
          LTS: 'HH.mm.ss',
          L: 'DD.MM.YYYY',
          LL: 'D. MMMM [dallas] YYYY',
          LLL: 'D. MMMM [dallas] YYYY HH.mm',
          LLLL: 'dddd, [li] D. MMMM [dallas] YYYY HH.mm',
        },
        meridiemParse: /d\'o|d\'a/i,
        isPM: function (e) {
          return "d'o" === e.toLowerCase();
        },
        meridiem: function (e, t, n) {
          return e > 11 ? (n ? "d'o" : "D'O") : n ? "d'a" : "D'A";
        },
        calendar: {
          sameDay: '[oxhi à] LT',
          nextDay: '[demà à] LT',
          nextWeek: 'dddd [à] LT',
          lastDay: '[ieiri à] LT',
          lastWeek: '[sür el] dddd [lasteu à] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'osprei %s',
          past: 'ja%s',
          s: n,
          ss: n,
          m: n,
          mm: n,
          h: n,
          hh: n,
          d: n,
          dd: n,
          M: n,
          MM: n,
          y: n,
          yy: n,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: { dow: 1, doy: 4 },
      });
      function n(e, t, n, i) {
        var r = {
          s: ['viensas secunds', "'iensas secunds"],
          ss: [e + ' secunds', e + ' secunds'],
          m: ["'n míut", "'iens míut"],
          mm: [e + ' míuts', e + ' míuts'],
          h: ["'n þora", "'iensa þora"],
          hh: [e + ' þoras', e + ' þoras'],
          d: ["'n ziua", "'iensa ziua"],
          dd: [e + ' ziuas', e + ' ziuas'],
          M: ["'n mes", "'iens mes"],
          MM: [e + ' mesen', e + ' mesen'],
          y: ["'n ar", "'iens ar"],
          yy: [e + ' ars', e + ' ars'],
        };
        return i || t ? r[n][0] : r[n][1];
      }
      return t;
    });
  },
  '../../../node_modules/moment/locale/tzm-latn.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('tzm-latn', {
        months: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split(
          '_'
        ),
        monthsShort: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split(
          '_'
        ),
        weekdays: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        weekdaysShort: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split(
          '_'
        ),
        weekdaysMin: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split(
          '_'
        ),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[asdkh g] LT',
          nextDay: '[aska g] LT',
          nextWeek: 'dddd [g] LT',
          lastDay: '[assant g] LT',
          lastWeek: 'dddd [g] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'dadkh s yan %s',
          past: 'yan %s',
          s: 'imik',
          ss: '%d imik',
          m: 'minuḍ',
          mm: '%d minuḍ',
          h: 'saɛa',
          hh: '%d tassaɛin',
          d: 'ass',
          dd: '%d ossan',
          M: 'ayowr',
          MM: '%d iyyirn',
          y: 'asgas',
          yy: '%d isgasn',
        },
        week: { dow: 6, doy: 12 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/tzm.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('tzm', {
        months: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split(
          '_'
        ),
        monthsShort: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split(
          '_'
        ),
        weekdays: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        weekdaysShort: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split(
          '_'
        ),
        weekdaysMin: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split(
          '_'
        ),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
          nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
          nextWeek: 'dddd [ⴴ] LT',
          lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
          lastWeek: 'dddd [ⴴ] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
          past: 'ⵢⴰⵏ %s',
          s: 'ⵉⵎⵉⴽ',
          ss: '%d ⵉⵎⵉⴽ',
          m: 'ⵎⵉⵏⵓⴺ',
          mm: '%d ⵎⵉⵏⵓⴺ',
          h: 'ⵙⴰⵄⴰ',
          hh: '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
          d: 'ⴰⵙⵙ',
          dd: '%d oⵙⵙⴰⵏ',
          M: 'ⴰⵢoⵓⵔ',
          MM: '%d ⵉⵢⵢⵉⵔⵏ',
          y: 'ⴰⵙⴳⴰⵙ',
          yy: '%d ⵉⵙⴳⴰⵙⵏ',
        },
        week: { dow: 6, doy: 12 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/ug-cn.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('ug-cn', {
        months: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
          '_'
        ),
        monthsShort: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
          '_'
        ),
        weekdays: 'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split(
          '_'
        ),
        weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
        weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'YYYY-MM-DD',
          LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',
          LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',
          LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',
        },
        meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,
        meridiemHour: function (e, t) {
          return (
            12 === e && (e = 0),
            'يېرىم كېچە' === t || 'سەھەر' === t || 'چۈشتىن بۇرۇن' === t
              ? e
              : 'چۈشتىن كېيىن' === t || 'كەچ' === t
              ? e + 12
              : e >= 11
              ? e
              : e + 12
          );
        },
        meridiem: function (e, t, n) {
          var i = 100 * e + t;
          return i < 600
            ? 'يېرىم كېچە'
            : i < 900
            ? 'سەھەر'
            : i < 1130
            ? 'چۈشتىن بۇرۇن'
            : i < 1230
            ? 'چۈش'
            : i < 1800
            ? 'چۈشتىن كېيىن'
            : 'كەچ';
        },
        calendar: {
          sameDay: '[بۈگۈن سائەت] LT',
          nextDay: '[ئەتە سائەت] LT',
          nextWeek: '[كېلەركى] dddd [سائەت] LT',
          lastDay: '[تۆنۈگۈن] LT',
          lastWeek: '[ئالدىنقى] dddd [سائەت] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: '%s كېيىن',
          past: '%s بۇرۇن',
          s: 'نەچچە سېكونت',
          ss: '%d سېكونت',
          m: 'بىر مىنۇت',
          mm: '%d مىنۇت',
          h: 'بىر سائەت',
          hh: '%d سائەت',
          d: 'بىر كۈن',
          dd: '%d كۈن',
          M: 'بىر ئاي',
          MM: '%d ئاي',
          y: 'بىر يىل',
          yy: '%d يىل',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,
        ordinal: function (e, t) {
          switch (t) {
            case 'd':
            case 'D':
            case 'DDD':
              return e + '-كۈنى';
            case 'w':
            case 'W':
              return e + '-ھەپتە';
            default:
              return e;
          }
        },
        preparse: function (e) {
          return e.replace(/،/g, ',');
        },
        postformat: function (e) {
          return e.replace(/,/g, '،');
        },
        week: { dow: 1, doy: 7 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/uk.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      function t(e, t) {
        var n = e.split('_');
        return t % 10 === 1 && t % 100 !== 11
          ? n[0]
          : t % 10 >= 2 && t % 10 <= 4 && (t % 100 < 10 || t % 100 >= 20)
          ? n[1]
          : n[2];
      }
      function n(e, n, i) {
        var r = {
          ss: n ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',
          mm: n ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
          hh: n ? 'година_години_годин' : 'годину_години_годин',
          dd: 'день_дні_днів',
          MM: 'місяць_місяці_місяців',
          yy: 'рік_роки_років',
        };
        return 'm' === i
          ? n
            ? 'хвилина'
            : 'хвилину'
          : 'h' === i
          ? n
            ? 'година'
            : 'годину'
          : e + ' ' + t(r[i], +e);
      }
      function i(e, t) {
        var n,
          i = {
            nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split(
              '_'
            ),
            accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split(
              '_'
            ),
            genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split(
              '_'
            ),
          };
        return !0 === e
          ? i['nominative'].slice(1, 7).concat(i['nominative'].slice(0, 1))
          : e
          ? ((n = /(\[[ВвУу]\]) ?dddd/.test(t)
              ? 'accusative'
              : /\[?(?:минулої|наступної)? ?\] ?dddd/.test(t)
              ? 'genitive'
              : 'nominative'),
            i[n][e.day()])
          : i['nominative'];
      }
      function r(e) {
        return function () {
          return e + 'о' + (11 === this.hours() ? 'б' : '') + '] LT';
        };
      }
      var a = e.defineLocale('uk', {
        months: {
          format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split(
            '_'
          ),
          standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split(
            '_'
          ),
        },
        monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split(
          '_'
        ),
        weekdays: i,
        weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'D MMMM YYYY р.',
          LLL: 'D MMMM YYYY р., HH:mm',
          LLLL: 'dddd, D MMMM YYYY р., HH:mm',
        },
        calendar: {
          sameDay: r('[Сьогодні '),
          nextDay: r('[Завтра '),
          lastDay: r('[Вчора '),
          nextWeek: r('[У] dddd ['),
          lastWeek: function () {
            switch (this.day()) {
              case 0:
              case 3:
              case 5:
              case 6:
                return r('[Минулої] dddd [').call(this);
              case 1:
              case 2:
              case 4:
                return r('[Минулого] dddd [').call(this);
            }
          },
          sameElse: 'L',
        },
        relativeTime: {
          future: 'за %s',
          past: '%s тому',
          s: 'декілька секунд',
          ss: n,
          m: n,
          mm: n,
          h: 'годину',
          hh: n,
          d: 'день',
          dd: n,
          M: 'місяць',
          MM: n,
          y: 'рік',
          yy: n,
        },
        meridiemParse: /ночі|ранку|дня|вечора/,
        isPM: function (e) {
          return /^(дня|вечора)$/.test(e);
        },
        meridiem: function (e, t, n) {
          return e < 4 ? 'ночі' : e < 12 ? 'ранку' : e < 17 ? 'дня' : 'вечора';
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
        ordinal: function (e, t) {
          switch (t) {
            case 'M':
            case 'd':
            case 'DDD':
            case 'w':
            case 'W':
              return e + '-й';
            case 'D':
              return e + '-го';
            default:
              return e;
          }
        },
        week: { dow: 1, doy: 7 },
      });
      return a;
    });
  },
  '../../../node_modules/moment/locale/ur.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = [
          'جنوری',
          'فروری',
          'مارچ',
          'اپریل',
          'مئی',
          'جون',
          'جولائی',
          'اگست',
          'ستمبر',
          'اکتوبر',
          'نومبر',
          'دسمبر',
        ],
        n = ['اتوار', 'پیر', 'منگل', 'بدھ', 'جمعرات', 'جمعہ', 'ہفتہ'],
        i = e.defineLocale('ur', {
          months: t,
          monthsShort: t,
          weekdays: n,
          weekdaysShort: n,
          weekdaysMin: n,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd، D MMMM YYYY HH:mm',
          },
          meridiemParse: /صبح|شام/,
          isPM: function (e) {
            return 'شام' === e;
          },
          meridiem: function (e, t, n) {
            return e < 12 ? 'صبح' : 'شام';
          },
          calendar: {
            sameDay: '[آج بوقت] LT',
            nextDay: '[کل بوقت] LT',
            nextWeek: 'dddd [بوقت] LT',
            lastDay: '[گذشتہ روز بوقت] LT',
            lastWeek: '[گذشتہ] dddd [بوقت] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s بعد',
            past: '%s قبل',
            s: 'چند سیکنڈ',
            ss: '%d سیکنڈ',
            m: 'ایک منٹ',
            mm: '%d منٹ',
            h: 'ایک گھنٹہ',
            hh: '%d گھنٹے',
            d: 'ایک دن',
            dd: '%d دن',
            M: 'ایک ماہ',
            MM: '%d ماہ',
            y: 'ایک سال',
            yy: '%d سال',
          },
          preparse: function (e) {
            return e.replace(/،/g, ',');
          },
          postformat: function (e) {
            return e.replace(/,/g, '،');
          },
          week: { dow: 1, doy: 4 },
        });
      return i;
    });
  },
  '../../../node_modules/moment/locale/uz-latn.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('uz-latn', {
        months: 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split(
          '_'
        ),
        monthsShort: 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split(
          '_'
        ),
        weekdays: 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split(
          '_'
        ),
        weekdaysShort: 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),
        weekdaysMin: 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'D MMMM YYYY, dddd HH:mm',
        },
        calendar: {
          sameDay: '[Bugun soat] LT [da]',
          nextDay: '[Ertaga] LT [da]',
          nextWeek: 'dddd [kuni soat] LT [da]',
          lastDay: '[Kecha soat] LT [da]',
          lastWeek: "[O'tgan] dddd [kuni soat] LT [da]",
          sameElse: 'L',
        },
        relativeTime: {
          future: 'Yaqin %s ichida',
          past: 'Bir necha %s oldin',
          s: 'soniya',
          ss: '%d soniya',
          m: 'bir daqiqa',
          mm: '%d daqiqa',
          h: 'bir soat',
          hh: '%d soat',
          d: 'bir kun',
          dd: '%d kun',
          M: 'bir oy',
          MM: '%d oy',
          y: 'bir yil',
          yy: '%d yil',
        },
        week: { dow: 1, doy: 7 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/uz.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('uz', {
        months: 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split(
          '_'
        ),
        monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split(
          '_'
        ),
        weekdays: 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split(
          '_'
        ),
        weekdaysShort: 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
        weekdaysMin: 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'D MMMM YYYY, dddd HH:mm',
        },
        calendar: {
          sameDay: '[Бугун соат] LT [да]',
          nextDay: '[Эртага] LT [да]',
          nextWeek: 'dddd [куни соат] LT [да]',
          lastDay: '[Кеча соат] LT [да]',
          lastWeek: '[Утган] dddd [куни соат] LT [да]',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'Якин %s ичида',
          past: 'Бир неча %s олдин',
          s: 'фурсат',
          ss: '%d фурсат',
          m: 'бир дакика',
          mm: '%d дакика',
          h: 'бир соат',
          hh: '%d соат',
          d: 'бир кун',
          dd: '%d кун',
          M: 'бир ой',
          MM: '%d ой',
          y: 'бир йил',
          yy: '%d йил',
        },
        week: { dow: 1, doy: 7 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/vi.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('vi', {
        months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split(
          '_'
        ),
        monthsShort: 'Thg 01_Thg 02_Thg 03_Thg 04_Thg 05_Thg 06_Thg 07_Thg 08_Thg 09_Thg 10_Thg 11_Thg 12'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split(
          '_'
        ),
        weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
        weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
        weekdaysParseExact: !0,
        meridiemParse: /sa|ch/i,
        isPM: function (e) {
          return /^ch$/i.test(e);
        },
        meridiem: function (e, t, n) {
          return e < 12 ? (n ? 'sa' : 'SA') : n ? 'ch' : 'CH';
        },
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM [năm] YYYY',
          LLL: 'D MMMM [năm] YYYY HH:mm',
          LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',
          l: 'DD/M/YYYY',
          ll: 'D MMM YYYY',
          lll: 'D MMM YYYY HH:mm',
          llll: 'ddd, D MMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[Hôm nay lúc] LT',
          nextDay: '[Ngày mai lúc] LT',
          nextWeek: 'dddd [tuần tới lúc] LT',
          lastDay: '[Hôm qua lúc] LT',
          lastWeek: 'dddd [tuần trước lúc] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: '%s tới',
          past: '%s trước',
          s: 'vài giây',
          ss: '%d giây',
          m: 'một phút',
          mm: '%d phút',
          h: 'một giờ',
          hh: '%d giờ',
          d: 'một ngày',
          dd: '%d ngày',
          w: 'một tuần',
          ww: '%d tuần',
          M: 'một tháng',
          MM: '%d tháng',
          y: 'một năm',
          yy: '%d năm',
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal: function (e) {
          return e;
        },
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/x-pseudo.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('x-pseudo', {
        months: 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split(
          '_'
        ),
        monthsShort: 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split(
          '_'
        ),
        monthsParseExact: !0,
        weekdays: 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split(
          '_'
        ),
        weekdaysShort: 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
        weekdaysMin: 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
        weekdaysParseExact: !0,
        longDateFormat: {
          LT: 'HH:mm',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
          sameDay: '[T~ódá~ý át] LT',
          nextDay: '[T~ómó~rró~w át] LT',
          nextWeek: 'dddd [át] LT',
          lastDay: '[Ý~ést~érdá~ý át] LT',
          lastWeek: '[L~ást] dddd [át] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'í~ñ %s',
          past: '%s á~gó',
          s: 'á ~féw ~sécó~ñds',
          ss: '%d s~écóñ~ds',
          m: 'á ~míñ~úté',
          mm: '%d m~íñú~tés',
          h: 'á~ñ hó~úr',
          hh: '%d h~óúrs',
          d: 'á ~dáý',
          dd: '%d d~áýs',
          M: 'á ~móñ~th',
          MM: '%d m~óñt~hs',
          y: 'á ~ýéár',
          yy: '%d ý~éárs',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function (e) {
          var t = e % 10,
            n =
              1 === ~~((e % 100) / 10)
                ? 'th'
                : 1 === t
                ? 'st'
                : 2 === t
                ? 'nd'
                : 3 === t
                ? 'rd'
                : 'th';
          return e + n;
        },
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/yo.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('yo', {
        months: 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split(
          '_'
        ),
        monthsShort: 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split(
          '_'
        ),
        weekdays: 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),
        weekdaysShort: 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),
        weekdaysMin: 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),
        longDateFormat: {
          LT: 'h:mm A',
          LTS: 'h:mm:ss A',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY h:mm A',
          LLLL: 'dddd, D MMMM YYYY h:mm A',
        },
        calendar: {
          sameDay: '[Ònì ni] LT',
          nextDay: '[Ọ̀la ni] LT',
          nextWeek: "dddd [Ọsẹ̀ tón'bọ] [ni] LT",
          lastDay: '[Àna ni] LT',
          lastWeek: 'dddd [Ọsẹ̀ tólọ́] [ni] LT',
          sameElse: 'L',
        },
        relativeTime: {
          future: 'ní %s',
          past: '%s kọjá',
          s: 'ìsẹjú aayá die',
          ss: 'aayá %d',
          m: 'ìsẹjú kan',
          mm: 'ìsẹjú %d',
          h: 'wákati kan',
          hh: 'wákati %d',
          d: 'ọjọ́ kan',
          dd: 'ọjọ́ %d',
          M: 'osù kan',
          MM: 'osù %d',
          y: 'ọdún kan',
          yy: 'ọdún %d',
        },
        dayOfMonthOrdinalParse: /ọjọ́\s\d{1,2}/,
        ordinal: 'ọjọ́ %d',
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/zh-cn.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('zh-cn', {
        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
          '_'
        ),
        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
          '_'
        ),
        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),
        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'YYYY/MM/DD',
          LL: 'YYYY年M月D日',
          LLL: 'YYYY年M月D日Ah点mm分',
          LLLL: 'YYYY年M月D日ddddAh点mm分',
          l: 'YYYY/M/D',
          ll: 'YYYY年M月D日',
          lll: 'YYYY年M月D日 HH:mm',
          llll: 'YYYY年M月D日dddd HH:mm',
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour: function (e, t) {
          return (
            12 === e && (e = 0),
            '凌晨' === t || '早上' === t || '上午' === t
              ? e
              : '下午' === t || '晚上' === t
              ? e + 12
              : e >= 11
              ? e
              : e + 12
          );
        },
        meridiem: function (e, t, n) {
          var i = 100 * e + t;
          return i < 600
            ? '凌晨'
            : i < 900
            ? '早上'
            : i < 1130
            ? '上午'
            : i < 1230
            ? '中午'
            : i < 1800
            ? '下午'
            : '晚上';
        },
        calendar: {
          sameDay: '[今天]LT',
          nextDay: '[明天]LT',
          nextWeek: function (e) {
            return e.week() !== this.week() ? '[下]dddLT' : '[本]dddLT';
          },
          lastDay: '[昨天]LT',
          lastWeek: function (e) {
            return this.week() !== e.week() ? '[上]dddLT' : '[本]dddLT';
          },
          sameElse: 'L',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
        ordinal: function (e, t) {
          switch (t) {
            case 'd':
            case 'D':
            case 'DDD':
              return e + '日';
            case 'M':
              return e + '月';
            case 'w':
            case 'W':
              return e + '周';
            default:
              return e;
          }
        },
        relativeTime: {
          future: '%s后',
          past: '%s前',
          s: '几秒',
          ss: '%d 秒',
          m: '1 分钟',
          mm: '%d 分钟',
          h: '1 小时',
          hh: '%d 小时',
          d: '1 天',
          dd: '%d 天',
          w: '1 周',
          ww: '%d 周',
          M: '1 个月',
          MM: '%d 个月',
          y: '1 年',
          yy: '%d 年',
        },
        week: { dow: 1, doy: 4 },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/zh-hk.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('zh-hk', {
        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
          '_'
        ),
        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
          '_'
        ),
        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'YYYY/MM/DD',
          LL: 'YYYY年M月D日',
          LLL: 'YYYY年M月D日 HH:mm',
          LLLL: 'YYYY年M月D日dddd HH:mm',
          l: 'YYYY/M/D',
          ll: 'YYYY年M月D日',
          lll: 'YYYY年M月D日 HH:mm',
          llll: 'YYYY年M月D日dddd HH:mm',
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour: function (e, t) {
          return (
            12 === e && (e = 0),
            '凌晨' === t || '早上' === t || '上午' === t
              ? e
              : '中午' === t
              ? e >= 11
                ? e
                : e + 12
              : '下午' === t || '晚上' === t
              ? e + 12
              : void 0
          );
        },
        meridiem: function (e, t, n) {
          var i = 100 * e + t;
          return i < 600
            ? '凌晨'
            : i < 900
            ? '早上'
            : i < 1200
            ? '上午'
            : 1200 === i
            ? '中午'
            : i < 1800
            ? '下午'
            : '晚上';
        },
        calendar: {
          sameDay: '[今天]LT',
          nextDay: '[明天]LT',
          nextWeek: '[下]ddddLT',
          lastDay: '[昨天]LT',
          lastWeek: '[上]ddddLT',
          sameElse: 'L',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
        ordinal: function (e, t) {
          switch (t) {
            case 'd':
            case 'D':
            case 'DDD':
              return e + '日';
            case 'M':
              return e + '月';
            case 'w':
            case 'W':
              return e + '週';
            default:
              return e;
          }
        },
        relativeTime: {
          future: '%s後',
          past: '%s前',
          s: '幾秒',
          ss: '%d 秒',
          m: '1 分鐘',
          mm: '%d 分鐘',
          h: '1 小時',
          hh: '%d 小時',
          d: '1 天',
          dd: '%d 天',
          M: '1 個月',
          MM: '%d 個月',
          y: '1 年',
          yy: '%d 年',
        },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/zh-mo.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('zh-mo', {
        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
          '_'
        ),
        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
          '_'
        ),
        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'YYYY年M月D日',
          LLL: 'YYYY年M月D日 HH:mm',
          LLLL: 'YYYY年M月D日dddd HH:mm',
          l: 'D/M/YYYY',
          ll: 'YYYY年M月D日',
          lll: 'YYYY年M月D日 HH:mm',
          llll: 'YYYY年M月D日dddd HH:mm',
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour: function (e, t) {
          return (
            12 === e && (e = 0),
            '凌晨' === t || '早上' === t || '上午' === t
              ? e
              : '中午' === t
              ? e >= 11
                ? e
                : e + 12
              : '下午' === t || '晚上' === t
              ? e + 12
              : void 0
          );
        },
        meridiem: function (e, t, n) {
          var i = 100 * e + t;
          return i < 600
            ? '凌晨'
            : i < 900
            ? '早上'
            : i < 1130
            ? '上午'
            : i < 1230
            ? '中午'
            : i < 1800
            ? '下午'
            : '晚上';
        },
        calendar: {
          sameDay: '[今天] LT',
          nextDay: '[明天] LT',
          nextWeek: '[下]dddd LT',
          lastDay: '[昨天] LT',
          lastWeek: '[上]dddd LT',
          sameElse: 'L',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
        ordinal: function (e, t) {
          switch (t) {
            case 'd':
            case 'D':
            case 'DDD':
              return e + '日';
            case 'M':
              return e + '月';
            case 'w':
            case 'W':
              return e + '週';
            default:
              return e;
          }
        },
        relativeTime: {
          future: '%s內',
          past: '%s前',
          s: '幾秒',
          ss: '%d 秒',
          m: '1 分鐘',
          mm: '%d 分鐘',
          h: '1 小時',
          hh: '%d 小時',
          d: '1 天',
          dd: '%d 天',
          M: '1 個月',
          MM: '%d 個月',
          y: '1 年',
          yy: '%d 年',
        },
      });
      return t;
    });
  },
  '../../../node_modules/moment/locale/zh-tw.js': function (e, t, n) {
    (function (e, t) {
      1 ? t(n('../../../node_modules/moment/moment.js')) : void 0;
    })(0, function (e) {
      'use strict';
      var t = e.defineLocale('zh-tw', {
        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
          '_'
        ),
        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
          '_'
        ),
        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
        longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'YYYY/MM/DD',
          LL: 'YYYY年M月D日',
          LLL: 'YYYY年M月D日 HH:mm',
          LLLL: 'YYYY年M月D日dddd HH:mm',
          l: 'YYYY/M/D',
          ll: 'YYYY年M月D日',
          lll: 'YYYY年M月D日 HH:mm',
          llll: 'YYYY年M月D日dddd HH:mm',
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour: function (e, t) {
          return (
            12 === e && (e = 0),
            '凌晨' === t || '早上' === t || '上午' === t
              ? e
              : '中午' === t
              ? e >= 11
                ? e
                : e + 12
              : '下午' === t || '晚上' === t
              ? e + 12
              : void 0
          );
        },
        meridiem: function (e, t, n) {
          var i = 100 * e + t;
          return i < 600
            ? '凌晨'
            : i < 900
            ? '早上'
            : i < 1130
            ? '上午'
            : i < 1230
            ? '中午'
            : i < 1800
            ? '下午'
            : '晚上';
        },
        calendar: {
          sameDay: '[今天] LT',
          nextDay: '[明天] LT',
          nextWeek: '[下]dddd LT',
          lastDay: '[昨天] LT',
          lastWeek: '[上]dddd LT',
          sameElse: 'L',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
        ordinal: function (e, t) {
          switch (t) {
            case 'd':
            case 'D':
            case 'DDD':
              return e + '日';
            case 'M':
              return e + '月';
            case 'w':
            case 'W':
              return e + '週';
            default:
              return e;
          }
        },
        relativeTime: {
          future: '%s後',
          past: '%s前',
          s: '幾秒',
          ss: '%d 秒',
          m: '1 分鐘',
          mm: '%d 分鐘',
          h: '1 小時',
          hh: '%d 小時',
          d: '1 天',
          dd: '%d 天',
          M: '1 個月',
          MM: '%d 個月',
          y: '1 年',
          yy: '%d 年',
        },
      });
      return t;
    });
  },
  '../../../node_modules/moment/moment.js': function (e, t, n) {
    (function (e) {
      var t;
      (function (t, n) {
        1 ? (e.exports = n()) : void 0;
      })(0, function () {
        'use strict';
        var i, r;
        function a() {
          return i.apply(null, arguments);
        }
        function o(e) {
          i = e;
        }
        function s(e) {
          return (
            e instanceof Array ||
            '[object Array]' === Object.prototype.toString.call(e)
          );
        }
        function c(e) {
          return (
            null != e && '[object Object]' === Object.prototype.toString.call(e)
          );
        }
        function u(e, t) {
          return Object.prototype.hasOwnProperty.call(e, t);
        }
        function l(e) {
          if (Object.getOwnPropertyNames)
            return 0 === Object.getOwnPropertyNames(e).length;
          var t;
          for (t in e) if (u(e, t)) return !1;
          return !0;
        }
        function d(e) {
          return void 0 === e;
        }
        function h(e) {
          return (
            'number' === typeof e ||
            '[object Number]' === Object.prototype.toString.call(e)
          );
        }
        function p(e) {
          return (
            e instanceof Date ||
            '[object Date]' === Object.prototype.toString.call(e)
          );
        }
        function m(e, t) {
          var n,
            i = [];
          for (n = 0; n < e.length; ++n) i.push(t(e[n], n));
          return i;
        }
        function f(e, t) {
          for (var n in t) u(t, n) && (e[n] = t[n]);
          return (
            u(t, 'toString') && (e.toString = t.toString),
            u(t, 'valueOf') && (e.valueOf = t.valueOf),
            e
          );
        }
        function _(e, t, n, i) {
          return Jn(e, t, n, i, !0).utc();
        }
        function M() {
          return {
            empty: !1,
            unusedTokens: [],
            unusedInput: [],
            overflow: -2,
            charsLeftOver: 0,
            nullInput: !1,
            invalidEra: null,
            invalidMonth: null,
            invalidFormat: !1,
            userInvalidated: !1,
            iso: !1,
            parsedDateParts: [],
            era: null,
            meridiem: null,
            rfc2822: !1,
            weekdayMismatch: !1,
          };
        }
        function v(e) {
          return null == e._pf && (e._pf = M()), e._pf;
        }
        function g(e) {
          if (null == e._isValid) {
            var t = v(e),
              n = r.call(t.parsedDateParts, function (e) {
                return null != e;
              }),
              i =
                !isNaN(e._d.getTime()) &&
                t.overflow < 0 &&
                !t.empty &&
                !t.invalidEra &&
                !t.invalidMonth &&
                !t.invalidWeekday &&
                !t.weekdayMismatch &&
                !t.nullInput &&
                !t.invalidFormat &&
                !t.userInvalidated &&
                (!t.meridiem || (t.meridiem && n));
            if (
              (e._strict &&
                (i =
                  i &&
                  0 === t.charsLeftOver &&
                  0 === t.unusedTokens.length &&
                  void 0 === t.bigHour),
              null != Object.isFrozen && Object.isFrozen(e))
            )
              return i;
            e._isValid = i;
          }
          return e._isValid;
        }
        function y(e) {
          var t = _(NaN);
          return null != e ? f(v(t), e) : (v(t).userInvalidated = !0), t;
        }
        r = Array.prototype.some
          ? Array.prototype.some
          : function (e) {
              var t,
                n = Object(this),
                i = n.length >>> 0;
              for (t = 0; t < i; t++)
                if (t in n && e.call(this, n[t], t, n)) return !0;
              return !1;
            };
        var b = (a.momentProperties = []),
          w = !1;
        function A(e, t) {
          var n, i, r;
          if (
            (d(t._isAMomentObject) || (e._isAMomentObject = t._isAMomentObject),
            d(t._i) || (e._i = t._i),
            d(t._f) || (e._f = t._f),
            d(t._l) || (e._l = t._l),
            d(t._strict) || (e._strict = t._strict),
            d(t._tzm) || (e._tzm = t._tzm),
            d(t._isUTC) || (e._isUTC = t._isUTC),
            d(t._offset) || (e._offset = t._offset),
            d(t._pf) || (e._pf = v(t)),
            d(t._locale) || (e._locale = t._locale),
            b.length > 0)
          )
            for (n = 0; n < b.length; n++)
              (i = b[n]), (r = t[i]), d(r) || (e[i] = r);
          return e;
        }
        function x(e) {
          A(this, e),
            (this._d = new Date(null != e._d ? e._d.getTime() : NaN)),
            this.isValid() || (this._d = new Date(NaN)),
            !1 === w && ((w = !0), a.updateOffset(this), (w = !1));
        }
        function L(e) {
          return e instanceof x || (null != e && null != e._isAMomentObject);
        }
        function T(e) {
          !1 === a.suppressDeprecationWarnings &&
            'undefined' !== typeof console &&
            console.warn &&
            void 0;
        }
        function z(e, t) {
          var n = !0;
          return f(function () {
            if (
              (null != a.deprecationHandler && a.deprecationHandler(null, e), n)
            ) {
              var i,
                r,
                o,
                s = [];
              for (r = 0; r < arguments.length; r++) {
                if (((i = ''), 'object' === typeof arguments[r])) {
                  for (o in ((i += '\n[' + r + '] '), arguments[0]))
                    u(arguments[0], o) &&
                      (i += o + ': ' + arguments[0][o] + ', ');
                  i = i.slice(0, -2);
                } else i = arguments[r];
                s.push(i);
              }
              T(
                e +
                  '\nArguments: ' +
                  Array.prototype.slice.call(s).join('') +
                  '\n' +
                  new Error().stack
              ),
                (n = !1);
            }
            return t.apply(this, arguments);
          }, t);
        }
        var S,
          O = {};
        function E(e, t) {
          null != a.deprecationHandler && a.deprecationHandler(e, t),
            O[e] || (T(t), (O[e] = !0));
        }
        function k(e) {
          return (
            ('undefined' !== typeof Function && e instanceof Function) ||
            '[object Function]' === Object.prototype.toString.call(e)
          );
        }
        function C(e) {
          var t, n;
          for (n in e)
            u(e, n) && ((t = e[n]), k(t) ? (this[n] = t) : (this['_' + n] = t));
          (this._config = e),
            (this._dayOfMonthOrdinalParseLenient = new RegExp(
              (this._dayOfMonthOrdinalParse.source ||
                this._ordinalParse.source) +
                '|' +
                /\d{1,2}/.source
            ));
        }
        function D(e, t) {
          var n,
            i = f({}, e);
          for (n in t)
            u(t, n) &&
              (c(e[n]) && c(t[n])
                ? ((i[n] = {}), f(i[n], e[n]), f(i[n], t[n]))
                : null != t[n]
                ? (i[n] = t[n])
                : delete i[n]);
          for (n in e) u(e, n) && !u(t, n) && c(e[n]) && (i[n] = f({}, i[n]));
          return i;
        }
        function N(e) {
          null != e && this.set(e);
        }
        (a.suppressDeprecationWarnings = !1),
          (a.deprecationHandler = null),
          (S = Object.keys
            ? Object.keys
            : function (e) {
                var t,
                  n = [];
                for (t in e) u(e, t) && n.push(t);
                return n;
              });
        var P = {
          sameDay: '[Today at] LT',
          nextDay: '[Tomorrow at] LT',
          nextWeek: 'dddd [at] LT',
          lastDay: '[Yesterday at] LT',
          lastWeek: '[Last] dddd [at] LT',
          sameElse: 'L',
        };
        function j(e, t, n) {
          var i = this._calendar[e] || this._calendar['sameElse'];
          return k(i) ? i.call(t, n) : i;
        }
        function Y(e, t, n) {
          var i = '' + Math.abs(e),
            r = t - i.length,
            a = e >= 0;
          return (
            (a ? (n ? '+' : '') : '-') +
            Math.pow(10, Math.max(0, r)).toString().substr(1) +
            i
          );
        }
        var R = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
          B = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
          W = {},
          I = {};
        function q(e, t, n, i) {
          var r = i;
          'string' === typeof i &&
            (r = function () {
              return this[i]();
            }),
            e && (I[e] = r),
            t &&
              (I[t[0]] = function () {
                return Y(r.apply(this, arguments), t[1], t[2]);
              }),
            n &&
              (I[n] = function () {
                return this.localeData().ordinal(r.apply(this, arguments), e);
              });
        }
        function H(e) {
          return e.match(/\[[\s\S]/)
            ? e.replace(/^\[|\]$/g, '')
            : e.replace(/\\/g, '');
        }
        function F(e) {
          var t,
            n,
            i = e.match(R);
          for (t = 0, n = i.length; t < n; t++)
            I[i[t]] ? (i[t] = I[i[t]]) : (i[t] = H(i[t]));
          return function (t) {
            var r,
              a = '';
            for (r = 0; r < n; r++) a += k(i[r]) ? i[r].call(t, e) : i[r];
            return a;
          };
        }
        function U(e, t) {
          return e.isValid()
            ? ((t = X(t, e.localeData())), (W[t] = W[t] || F(t)), W[t](e))
            : e.localeData().invalidDate();
        }
        function X(e, t) {
          var n = 5;
          function i(e) {
            return t.longDateFormat(e) || e;
          }
          B.lastIndex = 0;
          while (n >= 0 && B.test(e))
            (e = e.replace(B, i)), (B.lastIndex = 0), (n -= 1);
          return e;
        }
        var V = {
          LTS: 'h:mm:ss A',
          LT: 'h:mm A',
          L: 'MM/DD/YYYY',
          LL: 'MMMM D, YYYY',
          LLL: 'MMMM D, YYYY h:mm A',
          LLLL: 'dddd, MMMM D, YYYY h:mm A',
        };
        function G(e) {
          var t = this._longDateFormat[e],
            n = this._longDateFormat[e.toUpperCase()];
          return t || !n
            ? t
            : ((this._longDateFormat[e] = n
                .match(R)
                .map(function (e) {
                  return 'MMMM' === e ||
                    'MM' === e ||
                    'DD' === e ||
                    'dddd' === e
                    ? e.slice(1)
                    : e;
                })
                .join('')),
              this._longDateFormat[e]);
        }
        var J = 'Invalid date';
        function Z() {
          return this._invalidDate;
        }
        var K = '%d',
          Q = /\d{1,2}/;
        function $(e) {
          return this._ordinal.replace('%d', e);
        }
        var ee = {
          future: 'in %s',
          past: '%s ago',
          s: 'a few seconds',
          ss: '%d seconds',
          m: 'a minute',
          mm: '%d minutes',
          h: 'an hour',
          hh: '%d hours',
          d: 'a day',
          dd: '%d days',
          w: 'a week',
          ww: '%d weeks',
          M: 'a month',
          MM: '%d months',
          y: 'a year',
          yy: '%d years',
        };
        function te(e, t, n, i) {
          var r = this._relativeTime[n];
          return k(r) ? r(e, t, n, i) : r.replace(/%d/i, e);
        }
        function ne(e, t) {
          var n = this._relativeTime[e > 0 ? 'future' : 'past'];
          return k(n) ? n(t) : n.replace(/%s/i, t);
        }
        var ie = {};
        function re(e, t) {
          var n = e.toLowerCase();
          ie[n] = ie[n + 's'] = ie[t] = e;
        }
        function ae(e) {
          return 'string' === typeof e ? ie[e] || ie[e.toLowerCase()] : void 0;
        }
        function oe(e) {
          var t,
            n,
            i = {};
          for (n in e) u(e, n) && ((t = ae(n)), t && (i[t] = e[n]));
          return i;
        }
        var se = {};
        function ce(e, t) {
          se[e] = t;
        }
        function ue(e) {
          var t,
            n = [];
          for (t in e) u(e, t) && n.push({ unit: t, priority: se[t] });
          return (
            n.sort(function (e, t) {
              return e.priority - t.priority;
            }),
            n
          );
        }
        function le(e) {
          return (e % 4 === 0 && e % 100 !== 0) || e % 400 === 0;
        }
        function de(e) {
          return e < 0 ? Math.ceil(e) || 0 : Math.floor(e);
        }
        function he(e) {
          var t = +e,
            n = 0;
          return 0 !== t && isFinite(t) && (n = de(t)), n;
        }
        function pe(e, t) {
          return function (n) {
            return null != n
              ? (fe(this, e, n), a.updateOffset(this, t), this)
              : me(this, e);
          };
        }
        function me(e, t) {
          return e.isValid()
            ? e._d['get' + (e._isUTC ? 'UTC' : '') + t]()
            : NaN;
        }
        function fe(e, t, n) {
          e.isValid() &&
            !isNaN(n) &&
            ('FullYear' === t &&
            le(e.year()) &&
            1 === e.month() &&
            29 === e.date()
              ? ((n = he(n)),
                e._d['set' + (e._isUTC ? 'UTC' : '') + t](
                  n,
                  e.month(),
                  tt(n, e.month())
                ))
              : e._d['set' + (e._isUTC ? 'UTC' : '') + t](n));
        }
        function _e(e) {
          return (e = ae(e)), k(this[e]) ? this[e]() : this;
        }
        function Me(e, t) {
          if ('object' === typeof e) {
            e = oe(e);
            var n,
              i = ue(e);
            for (n = 0; n < i.length; n++) this[i[n].unit](e[i[n].unit]);
          } else if (((e = ae(e)), k(this[e]))) return this[e](t);
          return this;
        }
        var ve,
          ge = /\d/,
          ye = /\d\d/,
          be = /\d{3}/,
          we = /\d{4}/,
          Ae = /[+-]?\d{6}/,
          xe = /\d\d?/,
          Le = /\d\d\d\d?/,
          Te = /\d\d\d\d\d\d?/,
          ze = /\d{1,3}/,
          Se = /\d{1,4}/,
          Oe = /[+-]?\d{1,6}/,
          Ee = /\d+/,
          ke = /[+-]?\d+/,
          Ce = /Z|[+-]\d\d:?\d\d/gi,
          De = /Z|[+-]\d\d(?::?\d\d)?/gi,
          Ne = /[+-]?\d+(\.\d{1,3})?/,
          Pe = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;
        function je(e, t, n) {
          ve[e] = k(t)
            ? t
            : function (e, i) {
                return e && n ? n : t;
              };
        }
        function Ye(e, t) {
          return u(ve, e) ? ve[e](t._strict, t._locale) : new RegExp(Re(e));
        }
        function Re(e) {
          return Be(
            e
              .replace('\\', '')
              .replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (
                e,
                t,
                n,
                i,
                r
              ) {
                return t || n || i || r;
              })
          );
        }
        function Be(e) {
          return e.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
        }
        ve = {};
        var We = {};
        function Ie(e, t) {
          var n,
            i = t;
          for (
            'string' === typeof e && (e = [e]),
              h(t) &&
                (i = function (e, n) {
                  n[t] = he(e);
                }),
              n = 0;
            n < e.length;
            n++
          )
            We[e[n]] = i;
        }
        function qe(e, t) {
          Ie(e, function (e, n, i, r) {
            (i._w = i._w || {}), t(e, i._w, i, r);
          });
        }
        function He(e, t, n) {
          null != t && u(We, e) && We[e](t, n._a, n, e);
        }
        var Fe,
          Ue = 0,
          Xe = 1,
          Ve = 2,
          Ge = 3,
          Je = 4,
          Ze = 5,
          Ke = 6,
          Qe = 7,
          $e = 8;
        function et(e, t) {
          return ((e % t) + t) % t;
        }
        function tt(e, t) {
          if (isNaN(e) || isNaN(t)) return NaN;
          var n = et(t, 12);
          return (
            (e += (t - n) / 12),
            1 === n ? (le(e) ? 29 : 28) : 31 - ((n % 7) % 2)
          );
        }
        (Fe = Array.prototype.indexOf
          ? Array.prototype.indexOf
          : function (e) {
              var t;
              for (t = 0; t < this.length; ++t) if (this[t] === e) return t;
              return -1;
            }),
          q('M', ['MM', 2], 'Mo', function () {
            return this.month() + 1;
          }),
          q('MMM', 0, 0, function (e) {
            return this.localeData().monthsShort(this, e);
          }),
          q('MMMM', 0, 0, function (e) {
            return this.localeData().months(this, e);
          }),
          re('month', 'M'),
          ce('month', 8),
          je('M', xe),
          je('MM', xe, ye),
          je('MMM', function (e, t) {
            return t.monthsShortRegex(e);
          }),
          je('MMMM', function (e, t) {
            return t.monthsRegex(e);
          }),
          Ie(['M', 'MM'], function (e, t) {
            t[Xe] = he(e) - 1;
          }),
          Ie(['MMM', 'MMMM'], function (e, t, n, i) {
            var r = n._locale.monthsParse(e, i, n._strict);
            null != r ? (t[Xe] = r) : (v(n).invalidMonth = e);
          });
        var nt = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
          ),
          it = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
          rt = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
          at = Pe,
          ot = Pe;
        function st(e, t) {
          return e
            ? s(this._months)
              ? this._months[e.month()]
              : this._months[
                  (this._months.isFormat || rt).test(t)
                    ? 'format'
                    : 'standalone'
                ][e.month()]
            : s(this._months)
            ? this._months
            : this._months['standalone'];
        }
        function ct(e, t) {
          return e
            ? s(this._monthsShort)
              ? this._monthsShort[e.month()]
              : this._monthsShort[rt.test(t) ? 'format' : 'standalone'][
                  e.month()
                ]
            : s(this._monthsShort)
            ? this._monthsShort
            : this._monthsShort['standalone'];
        }
        function ut(e, t, n) {
          var i,
            r,
            a,
            o = e.toLocaleLowerCase();
          if (!this._monthsParse)
            for (
              this._monthsParse = [],
                this._longMonthsParse = [],
                this._shortMonthsParse = [],
                i = 0;
              i < 12;
              ++i
            )
              (a = _([2e3, i])),
                (this._shortMonthsParse[i] = this.monthsShort(
                  a,
                  ''
                ).toLocaleLowerCase()),
                (this._longMonthsParse[i] = this.months(
                  a,
                  ''
                ).toLocaleLowerCase());
          return n
            ? 'MMM' === t
              ? ((r = Fe.call(this._shortMonthsParse, o)), -1 !== r ? r : null)
              : ((r = Fe.call(this._longMonthsParse, o)), -1 !== r ? r : null)
            : 'MMM' === t
            ? ((r = Fe.call(this._shortMonthsParse, o)),
              -1 !== r
                ? r
                : ((r = Fe.call(this._longMonthsParse, o)),
                  -1 !== r ? r : null))
            : ((r = Fe.call(this._longMonthsParse, o)),
              -1 !== r
                ? r
                : ((r = Fe.call(this._shortMonthsParse, o)),
                  -1 !== r ? r : null));
        }
        function lt(e, t, n) {
          var i, r, a;
          if (this._monthsParseExact) return ut.call(this, e, t, n);
          for (
            this._monthsParse ||
              ((this._monthsParse = []),
              (this._longMonthsParse = []),
              (this._shortMonthsParse = [])),
              i = 0;
            i < 12;
            i++
          ) {
            if (
              ((r = _([2e3, i])),
              n &&
                !this._longMonthsParse[i] &&
                ((this._longMonthsParse[i] = new RegExp(
                  '^' + this.months(r, '').replace('.', '') + '$',
                  'i'
                )),
                (this._shortMonthsParse[i] = new RegExp(
                  '^' + this.monthsShort(r, '').replace('.', '') + '$',
                  'i'
                ))),
              n ||
                this._monthsParse[i] ||
                ((a =
                  '^' + this.months(r, '') + '|^' + this.monthsShort(r, '')),
                (this._monthsParse[i] = new RegExp(a.replace('.', ''), 'i'))),
              n && 'MMMM' === t && this._longMonthsParse[i].test(e))
            )
              return i;
            if (n && 'MMM' === t && this._shortMonthsParse[i].test(e)) return i;
            if (!n && this._monthsParse[i].test(e)) return i;
          }
        }
        function dt(e, t) {
          var n;
          if (!e.isValid()) return e;
          if ('string' === typeof t)
            if (/^\d+$/.test(t)) t = he(t);
            else if (((t = e.localeData().monthsParse(t)), !h(t))) return e;
          return (
            (n = Math.min(e.date(), tt(e.year(), t))),
            e._d['set' + (e._isUTC ? 'UTC' : '') + 'Month'](t, n),
            e
          );
        }
        function ht(e) {
          return null != e
            ? (dt(this, e), a.updateOffset(this, !0), this)
            : me(this, 'Month');
        }
        function pt() {
          return tt(this.year(), this.month());
        }
        function mt(e) {
          return this._monthsParseExact
            ? (u(this, '_monthsRegex') || _t.call(this),
              e ? this._monthsShortStrictRegex : this._monthsShortRegex)
            : (u(this, '_monthsShortRegex') || (this._monthsShortRegex = at),
              this._monthsShortStrictRegex && e
                ? this._monthsShortStrictRegex
                : this._monthsShortRegex);
        }
        function ft(e) {
          return this._monthsParseExact
            ? (u(this, '_monthsRegex') || _t.call(this),
              e ? this._monthsStrictRegex : this._monthsRegex)
            : (u(this, '_monthsRegex') || (this._monthsRegex = ot),
              this._monthsStrictRegex && e
                ? this._monthsStrictRegex
                : this._monthsRegex);
        }
        function _t() {
          function e(e, t) {
            return t.length - e.length;
          }
          var t,
            n,
            i = [],
            r = [],
            a = [];
          for (t = 0; t < 12; t++)
            (n = _([2e3, t])),
              i.push(this.monthsShort(n, '')),
              r.push(this.months(n, '')),
              a.push(this.months(n, '')),
              a.push(this.monthsShort(n, ''));
          for (i.sort(e), r.sort(e), a.sort(e), t = 0; t < 12; t++)
            (i[t] = Be(i[t])), (r[t] = Be(r[t]));
          for (t = 0; t < 24; t++) a[t] = Be(a[t]);
          (this._monthsRegex = new RegExp('^(' + a.join('|') + ')', 'i')),
            (this._monthsShortRegex = this._monthsRegex),
            (this._monthsStrictRegex = new RegExp(
              '^(' + r.join('|') + ')',
              'i'
            )),
            (this._monthsShortStrictRegex = new RegExp(
              '^(' + i.join('|') + ')',
              'i'
            ));
        }
        function Mt(e) {
          return le(e) ? 366 : 365;
        }
        q('Y', 0, 0, function () {
          var e = this.year();
          return e <= 9999 ? Y(e, 4) : '+' + e;
        }),
          q(0, ['YY', 2], 0, function () {
            return this.year() % 100;
          }),
          q(0, ['YYYY', 4], 0, 'year'),
          q(0, ['YYYYY', 5], 0, 'year'),
          q(0, ['YYYYYY', 6, !0], 0, 'year'),
          re('year', 'y'),
          ce('year', 1),
          je('Y', ke),
          je('YY', xe, ye),
          je('YYYY', Se, we),
          je('YYYYY', Oe, Ae),
          je('YYYYYY', Oe, Ae),
          Ie(['YYYYY', 'YYYYYY'], Ue),
          Ie('YYYY', function (e, t) {
            t[Ue] = 2 === e.length ? a.parseTwoDigitYear(e) : he(e);
          }),
          Ie('YY', function (e, t) {
            t[Ue] = a.parseTwoDigitYear(e);
          }),
          Ie('Y', function (e, t) {
            t[Ue] = parseInt(e, 10);
          }),
          (a.parseTwoDigitYear = function (e) {
            return he(e) + (he(e) > 68 ? 1900 : 2e3);
          });
        var vt = pe('FullYear', !0);
        function gt() {
          return le(this.year());
        }
        function yt(e, t, n, i, r, a, o) {
          var s;
          return (
            e < 100 && e >= 0
              ? ((s = new Date(e + 400, t, n, i, r, a, o)),
                isFinite(s.getFullYear()) && s.setFullYear(e))
              : (s = new Date(e, t, n, i, r, a, o)),
            s
          );
        }
        function bt(e) {
          var t, n;
          return (
            e < 100 && e >= 0
              ? ((n = Array.prototype.slice.call(arguments)),
                (n[0] = e + 400),
                (t = new Date(Date.UTC.apply(null, n))),
                isFinite(t.getUTCFullYear()) && t.setUTCFullYear(e))
              : (t = new Date(Date.UTC.apply(null, arguments))),
            t
          );
        }
        function wt(e, t, n) {
          var i = 7 + t - n,
            r = (7 + bt(e, 0, i).getUTCDay() - t) % 7;
          return -r + i - 1;
        }
        function At(e, t, n, i, r) {
          var a,
            o,
            s = (7 + n - i) % 7,
            c = wt(e, i, r),
            u = 1 + 7 * (t - 1) + s + c;
          return (
            u <= 0
              ? ((a = e - 1), (o = Mt(a) + u))
              : u > Mt(e)
              ? ((a = e + 1), (o = u - Mt(e)))
              : ((a = e), (o = u)),
            { year: a, dayOfYear: o }
          );
        }
        function xt(e, t, n) {
          var i,
            r,
            a = wt(e.year(), t, n),
            o = Math.floor((e.dayOfYear() - a - 1) / 7) + 1;
          return (
            o < 1
              ? ((r = e.year() - 1), (i = o + Lt(r, t, n)))
              : o > Lt(e.year(), t, n)
              ? ((i = o - Lt(e.year(), t, n)), (r = e.year() + 1))
              : ((r = e.year()), (i = o)),
            { week: i, year: r }
          );
        }
        function Lt(e, t, n) {
          var i = wt(e, t, n),
            r = wt(e + 1, t, n);
          return (Mt(e) - i + r) / 7;
        }
        function Tt(e) {
          return xt(e, this._week.dow, this._week.doy).week;
        }
        q('w', ['ww', 2], 'wo', 'week'),
          q('W', ['WW', 2], 'Wo', 'isoWeek'),
          re('week', 'w'),
          re('isoWeek', 'W'),
          ce('week', 5),
          ce('isoWeek', 5),
          je('w', xe),
          je('ww', xe, ye),
          je('W', xe),
          je('WW', xe, ye),
          qe(['w', 'ww', 'W', 'WW'], function (e, t, n, i) {
            t[i.substr(0, 1)] = he(e);
          });
        var zt = { dow: 0, doy: 6 };
        function St() {
          return this._week.dow;
        }
        function Ot() {
          return this._week.doy;
        }
        function Et(e) {
          var t = this.localeData().week(this);
          return null == e ? t : this.add(7 * (e - t), 'd');
        }
        function kt(e) {
          var t = xt(this, 1, 4).week;
          return null == e ? t : this.add(7 * (e - t), 'd');
        }
        function Ct(e, t) {
          return 'string' !== typeof e
            ? e
            : isNaN(e)
            ? ((e = t.weekdaysParse(e)), 'number' === typeof e ? e : null)
            : parseInt(e, 10);
        }
        function Dt(e, t) {
          return 'string' === typeof e
            ? t.weekdaysParse(e) % 7 || 7
            : isNaN(e)
            ? null
            : e;
        }
        function Nt(e, t) {
          return e.slice(t, 7).concat(e.slice(0, t));
        }
        q('d', 0, 'do', 'day'),
          q('dd', 0, 0, function (e) {
            return this.localeData().weekdaysMin(this, e);
          }),
          q('ddd', 0, 0, function (e) {
            return this.localeData().weekdaysShort(this, e);
          }),
          q('dddd', 0, 0, function (e) {
            return this.localeData().weekdays(this, e);
          }),
          q('e', 0, 0, 'weekday'),
          q('E', 0, 0, 'isoWeekday'),
          re('day', 'd'),
          re('weekday', 'e'),
          re('isoWeekday', 'E'),
          ce('day', 11),
          ce('weekday', 11),
          ce('isoWeekday', 11),
          je('d', xe),
          je('e', xe),
          je('E', xe),
          je('dd', function (e, t) {
            return t.weekdaysMinRegex(e);
          }),
          je('ddd', function (e, t) {
            return t.weekdaysShortRegex(e);
          }),
          je('dddd', function (e, t) {
            return t.weekdaysRegex(e);
          }),
          qe(['dd', 'ddd', 'dddd'], function (e, t, n, i) {
            var r = n._locale.weekdaysParse(e, i, n._strict);
            null != r ? (t.d = r) : (v(n).invalidWeekday = e);
          }),
          qe(['d', 'e', 'E'], function (e, t, n, i) {
            t[i] = he(e);
          });
        var Pt = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
          ),
          jt = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
          Yt = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
          Rt = Pe,
          Bt = Pe,
          Wt = Pe;
        function It(e, t) {
          var n = s(this._weekdays)
            ? this._weekdays
            : this._weekdays[
                e && !0 !== e && this._weekdays.isFormat.test(t)
                  ? 'format'
                  : 'standalone'
              ];
          return !0 === e ? Nt(n, this._week.dow) : e ? n[e.day()] : n;
        }
        function qt(e) {
          return !0 === e
            ? Nt(this._weekdaysShort, this._week.dow)
            : e
            ? this._weekdaysShort[e.day()]
            : this._weekdaysShort;
        }
        function Ht(e) {
          return !0 === e
            ? Nt(this._weekdaysMin, this._week.dow)
            : e
            ? this._weekdaysMin[e.day()]
            : this._weekdaysMin;
        }
        function Ft(e, t, n) {
          var i,
            r,
            a,
            o = e.toLocaleLowerCase();
          if (!this._weekdaysParse)
            for (
              this._weekdaysParse = [],
                this._shortWeekdaysParse = [],
                this._minWeekdaysParse = [],
                i = 0;
              i < 7;
              ++i
            )
              (a = _([2e3, 1]).day(i)),
                (this._minWeekdaysParse[i] = this.weekdaysMin(
                  a,
                  ''
                ).toLocaleLowerCase()),
                (this._shortWeekdaysParse[i] = this.weekdaysShort(
                  a,
                  ''
                ).toLocaleLowerCase()),
                (this._weekdaysParse[i] = this.weekdays(
                  a,
                  ''
                ).toLocaleLowerCase());
          return n
            ? 'dddd' === t
              ? ((r = Fe.call(this._weekdaysParse, o)), -1 !== r ? r : null)
              : 'ddd' === t
              ? ((r = Fe.call(this._shortWeekdaysParse, o)),
                -1 !== r ? r : null)
              : ((r = Fe.call(this._minWeekdaysParse, o)), -1 !== r ? r : null)
            : 'dddd' === t
            ? ((r = Fe.call(this._weekdaysParse, o)),
              -1 !== r
                ? r
                : ((r = Fe.call(this._shortWeekdaysParse, o)),
                  -1 !== r
                    ? r
                    : ((r = Fe.call(this._minWeekdaysParse, o)),
                      -1 !== r ? r : null)))
            : 'ddd' === t
            ? ((r = Fe.call(this._shortWeekdaysParse, o)),
              -1 !== r
                ? r
                : ((r = Fe.call(this._weekdaysParse, o)),
                  -1 !== r
                    ? r
                    : ((r = Fe.call(this._minWeekdaysParse, o)),
                      -1 !== r ? r : null)))
            : ((r = Fe.call(this._minWeekdaysParse, o)),
              -1 !== r
                ? r
                : ((r = Fe.call(this._weekdaysParse, o)),
                  -1 !== r
                    ? r
                    : ((r = Fe.call(this._shortWeekdaysParse, o)),
                      -1 !== r ? r : null)));
        }
        function Ut(e, t, n) {
          var i, r, a;
          if (this._weekdaysParseExact) return Ft.call(this, e, t, n);
          for (
            this._weekdaysParse ||
              ((this._weekdaysParse = []),
              (this._minWeekdaysParse = []),
              (this._shortWeekdaysParse = []),
              (this._fullWeekdaysParse = [])),
              i = 0;
            i < 7;
            i++
          ) {
            if (
              ((r = _([2e3, 1]).day(i)),
              n &&
                !this._fullWeekdaysParse[i] &&
                ((this._fullWeekdaysParse[i] = new RegExp(
                  '^' + this.weekdays(r, '').replace('.', '\\.?') + '$',
                  'i'
                )),
                (this._shortWeekdaysParse[i] = new RegExp(
                  '^' + this.weekdaysShort(r, '').replace('.', '\\.?') + '$',
                  'i'
                )),
                (this._minWeekdaysParse[i] = new RegExp(
                  '^' + this.weekdaysMin(r, '').replace('.', '\\.?') + '$',
                  'i'
                ))),
              this._weekdaysParse[i] ||
                ((a =
                  '^' +
                  this.weekdays(r, '') +
                  '|^' +
                  this.weekdaysShort(r, '') +
                  '|^' +
                  this.weekdaysMin(r, '')),
                (this._weekdaysParse[i] = new RegExp(a.replace('.', ''), 'i'))),
              n && 'dddd' === t && this._fullWeekdaysParse[i].test(e))
            )
              return i;
            if (n && 'ddd' === t && this._shortWeekdaysParse[i].test(e))
              return i;
            if (n && 'dd' === t && this._minWeekdaysParse[i].test(e)) return i;
            if (!n && this._weekdaysParse[i].test(e)) return i;
          }
        }
        function Xt(e) {
          if (!this.isValid()) return null != e ? this : NaN;
          var t = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
          return null != e
            ? ((e = Ct(e, this.localeData())), this.add(e - t, 'd'))
            : t;
        }
        function Vt(e) {
          if (!this.isValid()) return null != e ? this : NaN;
          var t = (this.day() + 7 - this.localeData()._week.dow) % 7;
          return null == e ? t : this.add(e - t, 'd');
        }
        function Gt(e) {
          if (!this.isValid()) return null != e ? this : NaN;
          if (null != e) {
            var t = Dt(e, this.localeData());
            return this.day(this.day() % 7 ? t : t - 7);
          }
          return this.day() || 7;
        }
        function Jt(e) {
          return this._weekdaysParseExact
            ? (u(this, '_weekdaysRegex') || Qt.call(this),
              e ? this._weekdaysStrictRegex : this._weekdaysRegex)
            : (u(this, '_weekdaysRegex') || (this._weekdaysRegex = Rt),
              this._weekdaysStrictRegex && e
                ? this._weekdaysStrictRegex
                : this._weekdaysRegex);
        }
        function Zt(e) {
          return this._weekdaysParseExact
            ? (u(this, '_weekdaysRegex') || Qt.call(this),
              e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex)
            : (u(this, '_weekdaysShortRegex') ||
                (this._weekdaysShortRegex = Bt),
              this._weekdaysShortStrictRegex && e
                ? this._weekdaysShortStrictRegex
                : this._weekdaysShortRegex);
        }
        function Kt(e) {
          return this._weekdaysParseExact
            ? (u(this, '_weekdaysRegex') || Qt.call(this),
              e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex)
            : (u(this, '_weekdaysMinRegex') || (this._weekdaysMinRegex = Wt),
              this._weekdaysMinStrictRegex && e
                ? this._weekdaysMinStrictRegex
                : this._weekdaysMinRegex);
        }
        function Qt() {
          function e(e, t) {
            return t.length - e.length;
          }
          var t,
            n,
            i,
            r,
            a,
            o = [],
            s = [],
            c = [],
            u = [];
          for (t = 0; t < 7; t++)
            (n = _([2e3, 1]).day(t)),
              (i = Be(this.weekdaysMin(n, ''))),
              (r = Be(this.weekdaysShort(n, ''))),
              (a = Be(this.weekdays(n, ''))),
              o.push(i),
              s.push(r),
              c.push(a),
              u.push(i),
              u.push(r),
              u.push(a);
          o.sort(e),
            s.sort(e),
            c.sort(e),
            u.sort(e),
            (this._weekdaysRegex = new RegExp('^(' + u.join('|') + ')', 'i')),
            (this._weekdaysShortRegex = this._weekdaysRegex),
            (this._weekdaysMinRegex = this._weekdaysRegex),
            (this._weekdaysStrictRegex = new RegExp(
              '^(' + c.join('|') + ')',
              'i'
            )),
            (this._weekdaysShortStrictRegex = new RegExp(
              '^(' + s.join('|') + ')',
              'i'
            )),
            (this._weekdaysMinStrictRegex = new RegExp(
              '^(' + o.join('|') + ')',
              'i'
            ));
        }
        function $t() {
          return this.hours() % 12 || 12;
        }
        function en() {
          return this.hours() || 24;
        }
        function tn(e, t) {
          q(e, 0, 0, function () {
            return this.localeData().meridiem(this.hours(), this.minutes(), t);
          });
        }
        function nn(e, t) {
          return t._meridiemParse;
        }
        function rn(e) {
          return 'p' === (e + '').toLowerCase().charAt(0);
        }
        q('H', ['HH', 2], 0, 'hour'),
          q('h', ['hh', 2], 0, $t),
          q('k', ['kk', 2], 0, en),
          q('hmm', 0, 0, function () {
            return '' + $t.apply(this) + Y(this.minutes(), 2);
          }),
          q('hmmss', 0, 0, function () {
            return (
              '' + $t.apply(this) + Y(this.minutes(), 2) + Y(this.seconds(), 2)
            );
          }),
          q('Hmm', 0, 0, function () {
            return '' + this.hours() + Y(this.minutes(), 2);
          }),
          q('Hmmss', 0, 0, function () {
            return (
              '' + this.hours() + Y(this.minutes(), 2) + Y(this.seconds(), 2)
            );
          }),
          tn('a', !0),
          tn('A', !1),
          re('hour', 'h'),
          ce('hour', 13),
          je('a', nn),
          je('A', nn),
          je('H', xe),
          je('h', xe),
          je('k', xe),
          je('HH', xe, ye),
          je('hh', xe, ye),
          je('kk', xe, ye),
          je('hmm', Le),
          je('hmmss', Te),
          je('Hmm', Le),
          je('Hmmss', Te),
          Ie(['H', 'HH'], Ge),
          Ie(['k', 'kk'], function (e, t, n) {
            var i = he(e);
            t[Ge] = 24 === i ? 0 : i;
          }),
          Ie(['a', 'A'], function (e, t, n) {
            (n._isPm = n._locale.isPM(e)), (n._meridiem = e);
          }),
          Ie(['h', 'hh'], function (e, t, n) {
            (t[Ge] = he(e)), (v(n).bigHour = !0);
          }),
          Ie('hmm', function (e, t, n) {
            var i = e.length - 2;
            (t[Ge] = he(e.substr(0, i))),
              (t[Je] = he(e.substr(i))),
              (v(n).bigHour = !0);
          }),
          Ie('hmmss', function (e, t, n) {
            var i = e.length - 4,
              r = e.length - 2;
            (t[Ge] = he(e.substr(0, i))),
              (t[Je] = he(e.substr(i, 2))),
              (t[Ze] = he(e.substr(r))),
              (v(n).bigHour = !0);
          }),
          Ie('Hmm', function (e, t, n) {
            var i = e.length - 2;
            (t[Ge] = he(e.substr(0, i))), (t[Je] = he(e.substr(i)));
          }),
          Ie('Hmmss', function (e, t, n) {
            var i = e.length - 4,
              r = e.length - 2;
            (t[Ge] = he(e.substr(0, i))),
              (t[Je] = he(e.substr(i, 2))),
              (t[Ze] = he(e.substr(r)));
          });
        var an = /[ap]\.?m?\.?/i,
          on = pe('Hours', !0);
        function sn(e, t, n) {
          return e > 11 ? (n ? 'pm' : 'PM') : n ? 'am' : 'AM';
        }
        var cn,
          un = {
            calendar: P,
            longDateFormat: V,
            invalidDate: J,
            ordinal: K,
            dayOfMonthOrdinalParse: Q,
            relativeTime: ee,
            months: nt,
            monthsShort: it,
            week: zt,
            weekdays: Pt,
            weekdaysMin: Yt,
            weekdaysShort: jt,
            meridiemParse: an,
          },
          ln = {},
          dn = {};
        function hn(e, t) {
          var n,
            i = Math.min(e.length, t.length);
          for (n = 0; n < i; n += 1) if (e[n] !== t[n]) return n;
          return i;
        }
        function pn(e) {
          return e ? e.toLowerCase().replace('_', '-') : e;
        }
        function mn(e) {
          var t,
            n,
            i,
            r,
            a = 0;
          while (a < e.length) {
            (r = pn(e[a]).split('-')),
              (t = r.length),
              (n = pn(e[a + 1])),
              (n = n ? n.split('-') : null);
            while (t > 0) {
              if (((i = fn(r.slice(0, t).join('-'))), i)) return i;
              if (n && n.length >= t && hn(r, n) >= t - 1) break;
              t--;
            }
            a++;
          }
          return cn;
        }
        function fn(i) {
          var r = null;
          if (void 0 === ln[i] && 'undefined' !== typeof e && e && e.exports)
            try {
              (r = cn._abbr),
                t,
                n(
                  '../../../node_modules/moment/locale sync recursive ^\\.\\/.*$'
                )('./' + i),
                _n(r);
            } catch (e) {
              ln[i] = null;
            }
          return ln[i];
        }
        function _n(e, t) {
          var n;
          return (
            e &&
              ((n = d(t) ? gn(e) : Mn(e, t)),
              n ? (cn = n) : 'undefined' !== typeof console && console.warn),
            cn._abbr
          );
        }
        function Mn(e, t) {
          if (null !== t) {
            var n,
              i = un;
            if (((t.abbr = e), null != ln[e]))
              E(
                'defineLocaleOverride',
                'use moment.updateLocale(localeName, config) to change ' +
                  'an existing locale. moment.defineLocale(localeName, ' +
                  'config) should only be used for creating a new locale ' +
                  'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'
              ),
                (i = ln[e]._config);
            else if (null != t.parentLocale)
              if (null != ln[t.parentLocale]) i = ln[t.parentLocale]._config;
              else {
                if (((n = fn(t.parentLocale)), null == n))
                  return (
                    dn[t.parentLocale] || (dn[t.parentLocale] = []),
                    dn[t.parentLocale].push({ name: e, config: t }),
                    null
                  );
                i = n._config;
              }
            return (
              (ln[e] = new N(D(i, t))),
              dn[e] &&
                dn[e].forEach(function (e) {
                  Mn(e.name, e.config);
                }),
              _n(e),
              ln[e]
            );
          }
          return delete ln[e], null;
        }
        function vn(e, t) {
          if (null != t) {
            var n,
              i,
              r = un;
            null != ln[e] && null != ln[e].parentLocale
              ? ln[e].set(D(ln[e]._config, t))
              : ((i = fn(e)),
                null != i && (r = i._config),
                (t = D(r, t)),
                null == i && (t.abbr = e),
                (n = new N(t)),
                (n.parentLocale = ln[e]),
                (ln[e] = n)),
              _n(e);
          } else null != ln[e] && (null != ln[e].parentLocale ? ((ln[e] = ln[e].parentLocale), e === _n() && _n(e)) : null != ln[e] && delete ln[e]);
          return ln[e];
        }
        function gn(e) {
          var t;
          if ((e && e._locale && e._locale._abbr && (e = e._locale._abbr), !e))
            return cn;
          if (!s(e)) {
            if (((t = fn(e)), t)) return t;
            e = [e];
          }
          return mn(e);
        }
        function yn() {
          return S(ln);
        }
        function bn(e) {
          var t,
            n = e._a;
          return (
            n &&
              -2 === v(e).overflow &&
              ((t =
                n[Xe] < 0 || n[Xe] > 11
                  ? Xe
                  : n[Ve] < 1 || n[Ve] > tt(n[Ue], n[Xe])
                  ? Ve
                  : n[Ge] < 0 ||
                    n[Ge] > 24 ||
                    (24 === n[Ge] &&
                      (0 !== n[Je] || 0 !== n[Ze] || 0 !== n[Ke]))
                  ? Ge
                  : n[Je] < 0 || n[Je] > 59
                  ? Je
                  : n[Ze] < 0 || n[Ze] > 59
                  ? Ze
                  : n[Ke] < 0 || n[Ke] > 999
                  ? Ke
                  : -1),
              v(e)._overflowDayOfYear && (t < Ue || t > Ve) && (t = Ve),
              v(e)._overflowWeeks && -1 === t && (t = Qe),
              v(e)._overflowWeekday && -1 === t && (t = $e),
              (v(e).overflow = t)),
            e
          );
        }
        var wn = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
          An = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
          xn = /Z|[+-]\d\d(?::?\d\d)?/,
          Ln = [
            ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
            ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
            ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
            ['GGGG-[W]WW', /\d{4}-W\d\d/, !1],
            ['YYYY-DDD', /\d{4}-\d{3}/],
            ['YYYY-MM', /\d{4}-\d\d/, !1],
            ['YYYYYYMMDD', /[+-]\d{10}/],
            ['YYYYMMDD', /\d{8}/],
            ['GGGG[W]WWE', /\d{4}W\d{3}/],
            ['GGGG[W]WW', /\d{4}W\d{2}/, !1],
            ['YYYYDDD', /\d{7}/],
            ['YYYYMM', /\d{6}/, !1],
            ['YYYY', /\d{4}/, !1],
          ],
          Tn = [
            ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
            ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
            ['HH:mm:ss', /\d\d:\d\d:\d\d/],
            ['HH:mm', /\d\d:\d\d/],
            ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
            ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
            ['HHmmss', /\d\d\d\d\d\d/],
            ['HHmm', /\d\d\d\d/],
            ['HH', /\d\d/],
          ],
          zn = /^\/?Date\((-?\d+)/i,
          Sn = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
          On = {
            UT: 0,
            GMT: 0,
            EDT: -4 * 60,
            EST: -5 * 60,
            CDT: -5 * 60,
            CST: -6 * 60,
            MDT: -6 * 60,
            MST: -7 * 60,
            PDT: -7 * 60,
            PST: -8 * 60,
          };
        function En(e) {
          var t,
            n,
            i,
            r,
            a,
            o,
            s = e._i,
            c = wn.exec(s) || An.exec(s);
          if (c) {
            for (v(e).iso = !0, t = 0, n = Ln.length; t < n; t++)
              if (Ln[t][1].exec(c[1])) {
                (r = Ln[t][0]), (i = !1 !== Ln[t][2]);
                break;
              }
            if (null == r) return (e._isValid = !1), void 0;
            if (c[3]) {
              for (t = 0, n = Tn.length; t < n; t++)
                if (Tn[t][1].exec(c[3])) {
                  a = (c[2] || ' ') + Tn[t][0];
                  break;
                }
              if (null == a) return (e._isValid = !1), void 0;
            }
            if (!i && null != a) return (e._isValid = !1), void 0;
            if (c[4]) {
              if (!xn.exec(c[4])) return (e._isValid = !1), void 0;
              o = 'Z';
            }
            (e._f = r + (a || '') + (o || '')), qn(e);
          } else e._isValid = !1;
        }
        function kn(e, t, n, i, r, a) {
          var o = [
            Cn(e),
            it.indexOf(t),
            parseInt(n, 10),
            parseInt(i, 10),
            parseInt(r, 10),
          ];
          return a && o.push(parseInt(a, 10)), o;
        }
        function Cn(e) {
          var t = parseInt(e, 10);
          return t <= 49 ? 2e3 + t : t <= 999 ? 1900 + t : t;
        }
        function Dn(e) {
          return e
            .replace(/\([^)]*\)|[\n\t]/g, ' ')
            .replace(/(\s\s+)/g, ' ')
            .replace(/^\s\s*/, '')
            .replace(/\s\s*$/, '');
        }
        function Nn(e, t, n) {
          if (e) {
            var i = jt.indexOf(e),
              r = new Date(t[0], t[1], t[2]).getDay();
            if (i !== r)
              return (v(n).weekdayMismatch = !0), (n._isValid = !1), !1;
          }
          return !0;
        }
        function Pn(e, t, n) {
          if (e) return On[e];
          if (t) return 0;
          var i = parseInt(n, 10),
            r = i % 100,
            a = (i - r) / 100;
          return 60 * a + r;
        }
        function jn(e) {
          var t,
            n = Sn.exec(Dn(e._i));
          if (n) {
            if (((t = kn(n[4], n[3], n[2], n[5], n[6], n[7])), !Nn(n[1], t, e)))
              return;
            (e._a = t),
              (e._tzm = Pn(n[8], n[9], n[10])),
              (e._d = bt.apply(null, e._a)),
              e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm),
              (v(e).rfc2822 = !0);
          } else e._isValid = !1;
        }
        function Yn(e) {
          var t = zn.exec(e._i);
          if (null !== t) return (e._d = new Date(+t[1])), void 0;
          En(e),
            !1 === e._isValid &&
              (delete e._isValid,
              jn(e),
              !1 === e._isValid &&
                (delete e._isValid,
                e._strict ? (e._isValid = !1) : a.createFromInputFallback(e)));
        }
        function Rn(e, t, n) {
          return null != e ? e : null != t ? t : n;
        }
        function Bn(e) {
          var t = new Date(a.now());
          return e._useUTC
            ? [t.getUTCFullYear(), t.getUTCMonth(), t.getUTCDate()]
            : [t.getFullYear(), t.getMonth(), t.getDate()];
        }
        function Wn(e) {
          var t,
            n,
            i,
            r,
            a,
            o = [];
          if (!e._d) {
            for (
              i = Bn(e),
                e._w && null == e._a[Ve] && null == e._a[Xe] && In(e),
                null != e._dayOfYear &&
                  ((a = Rn(e._a[Ue], i[Ue])),
                  (e._dayOfYear > Mt(a) || 0 === e._dayOfYear) &&
                    (v(e)._overflowDayOfYear = !0),
                  (n = bt(a, 0, e._dayOfYear)),
                  (e._a[Xe] = n.getUTCMonth()),
                  (e._a[Ve] = n.getUTCDate())),
                t = 0;
              t < 3 && null == e._a[t];
              ++t
            )
              e._a[t] = o[t] = i[t];
            for (; t < 7; t++)
              e._a[t] = o[t] = null == e._a[t] ? (2 === t ? 1 : 0) : e._a[t];
            24 === e._a[Ge] &&
              0 === e._a[Je] &&
              0 === e._a[Ze] &&
              0 === e._a[Ke] &&
              ((e._nextDay = !0), (e._a[Ge] = 0)),
              (e._d = (e._useUTC ? bt : yt).apply(null, o)),
              (r = e._useUTC ? e._d.getUTCDay() : e._d.getDay()),
              null != e._tzm &&
                e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm),
              e._nextDay && (e._a[Ge] = 24),
              e._w &&
                'undefined' !== typeof e._w.d &&
                e._w.d !== r &&
                (v(e).weekdayMismatch = !0);
          }
        }
        function In(e) {
          var t, n, i, r, a, o, s, c, u;
          (t = e._w),
            null != t.GG || null != t.W || null != t.E
              ? ((a = 1),
                (o = 4),
                (n = Rn(t.GG, e._a[Ue], xt(Zn(), 1, 4).year)),
                (i = Rn(t.W, 1)),
                (r = Rn(t.E, 1)),
                (r < 1 || r > 7) && (c = !0))
              : ((a = e._locale._week.dow),
                (o = e._locale._week.doy),
                (u = xt(Zn(), a, o)),
                (n = Rn(t.gg, e._a[Ue], u.year)),
                (i = Rn(t.w, u.week)),
                null != t.d
                  ? ((r = t.d), (r < 0 || r > 6) && (c = !0))
                  : null != t.e
                  ? ((r = t.e + a), (t.e < 0 || t.e > 6) && (c = !0))
                  : (r = a)),
            i < 1 || i > Lt(n, a, o)
              ? (v(e)._overflowWeeks = !0)
              : null != c
              ? (v(e)._overflowWeekday = !0)
              : ((s = At(n, i, r, a, o)),
                (e._a[Ue] = s.year),
                (e._dayOfYear = s.dayOfYear));
        }
        function qn(e) {
          if (e._f === a.ISO_8601) return En(e), void 0;
          if (e._f === a.RFC_2822) return jn(e), void 0;
          (e._a = []), (v(e).empty = !0);
          var t,
            n,
            i,
            r,
            o,
            s,
            c = '' + e._i,
            u = c.length,
            l = 0;
          for (i = X(e._f, e._locale).match(R) || [], t = 0; t < i.length; t++)
            (r = i[t]),
              (n = (c.match(Ye(r, e)) || [])[0]),
              n &&
                ((o = c.substr(0, c.indexOf(n))),
                o.length > 0 && v(e).unusedInput.push(o),
                (c = c.slice(c.indexOf(n) + n.length)),
                (l += n.length)),
              I[r]
                ? (n ? (v(e).empty = !1) : v(e).unusedTokens.push(r),
                  He(r, n, e))
                : e._strict && !n && v(e).unusedTokens.push(r);
          (v(e).charsLeftOver = u - l),
            c.length > 0 && v(e).unusedInput.push(c),
            e._a[Ge] <= 12 &&
              !0 === v(e).bigHour &&
              e._a[Ge] > 0 &&
              (v(e).bigHour = void 0),
            (v(e).parsedDateParts = e._a.slice(0)),
            (v(e).meridiem = e._meridiem),
            (e._a[Ge] = Hn(e._locale, e._a[Ge], e._meridiem)),
            (s = v(e).era),
            null !== s && (e._a[Ue] = e._locale.erasConvertYear(s, e._a[Ue])),
            Wn(e),
            bn(e);
        }
        function Hn(e, t, n) {
          var i;
          return null == n
            ? t
            : null != e.meridiemHour
            ? e.meridiemHour(t, n)
            : null != e.isPM
            ? ((i = e.isPM(n)),
              i && t < 12 && (t += 12),
              i || 12 !== t || (t = 0),
              t)
            : t;
        }
        function Fn(e) {
          var t,
            n,
            i,
            r,
            a,
            o,
            s = !1;
          if (0 === e._f.length)
            return (v(e).invalidFormat = !0), (e._d = new Date(NaN)), void 0;
          for (r = 0; r < e._f.length; r++)
            (a = 0),
              (o = !1),
              (t = A({}, e)),
              null != e._useUTC && (t._useUTC = e._useUTC),
              (t._f = e._f[r]),
              qn(t),
              g(t) && (o = !0),
              (a += v(t).charsLeftOver),
              (a += 10 * v(t).unusedTokens.length),
              (v(t).score = a),
              s
                ? a < i && ((i = a), (n = t))
                : (null == i || a < i || o) &&
                  ((i = a), (n = t), o && (s = !0));
          f(e, n || t);
        }
        function Un(e) {
          if (!e._d) {
            var t = oe(e._i),
              n = void 0 === t.day ? t.date : t.day;
            (e._a = m(
              [t.year, t.month, n, t.hour, t.minute, t.second, t.millisecond],
              function (e) {
                return e && parseInt(e, 10);
              }
            )),
              Wn(e);
          }
        }
        function Xn(e) {
          var t = new x(bn(Vn(e)));
          return t._nextDay && (t.add(1, 'd'), (t._nextDay = void 0)), t;
        }
        function Vn(e) {
          var t = e._i,
            n = e._f;
          return (
            (e._locale = e._locale || gn(e._l)),
            null === t || (void 0 === n && '' === t)
              ? y({ nullInput: !0 })
              : ('string' === typeof t && (e._i = t = e._locale.preparse(t)),
                L(t)
                  ? new x(bn(t))
                  : (p(t) ? (e._d = t) : s(n) ? Fn(e) : n ? qn(e) : Gn(e),
                    g(e) || (e._d = null),
                    e))
          );
        }
        function Gn(e) {
          var t = e._i;
          d(t)
            ? (e._d = new Date(a.now()))
            : p(t)
            ? (e._d = new Date(t.valueOf()))
            : 'string' === typeof t
            ? Yn(e)
            : s(t)
            ? ((e._a = m(t.slice(0), function (e) {
                return parseInt(e, 10);
              })),
              Wn(e))
            : c(t)
            ? Un(e)
            : h(t)
            ? (e._d = new Date(t))
            : a.createFromInputFallback(e);
        }
        function Jn(e, t, n, i, r) {
          var a = {};
          return (
            (!0 !== t && !1 !== t) || ((i = t), (t = void 0)),
            (!0 !== n && !1 !== n) || ((i = n), (n = void 0)),
            ((c(e) && l(e)) || (s(e) && 0 === e.length)) && (e = void 0),
            (a._isAMomentObject = !0),
            (a._useUTC = a._isUTC = r),
            (a._l = n),
            (a._i = e),
            (a._f = t),
            (a._strict = i),
            Xn(a)
          );
        }
        function Zn(e, t, n, i) {
          return Jn(e, t, n, i, !1);
        }
        (a.createFromInputFallback = z(
          'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
            'discouraged and will be removed in an upcoming major release. Please refer to ' +
            'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
          function (e) {
            e._d = new Date(e._i + (e._useUTC ? ' UTC' : ''));
          }
        )),
          (a.ISO_8601 = function () {}),
          (a.RFC_2822 = function () {});
        var Kn = z(
            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
              var e = Zn.apply(null, arguments);
              return this.isValid() && e.isValid()
                ? e < this
                  ? this
                  : e
                : y();
            }
          ),
          Qn = z(
            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
              var e = Zn.apply(null, arguments);
              return this.isValid() && e.isValid()
                ? e > this
                  ? this
                  : e
                : y();
            }
          );
        function $n(e, t) {
          var n, i;
          if ((1 === t.length && s(t[0]) && (t = t[0]), !t.length)) return Zn();
          for (n = t[0], i = 1; i < t.length; ++i)
            (t[i].isValid() && !t[i][e](n)) || (n = t[i]);
          return n;
        }
        function ei() {
          var e = [].slice.call(arguments, 0);
          return $n('isBefore', e);
        }
        function ti() {
          var e = [].slice.call(arguments, 0);
          return $n('isAfter', e);
        }
        var ni = function () {
            return Date.now ? Date.now() : +new Date();
          },
          ii = [
            'year',
            'quarter',
            'month',
            'week',
            'day',
            'hour',
            'minute',
            'second',
            'millisecond',
          ];
        function ri(e) {
          var t,
            n,
            i = !1;
          for (t in e)
            if (
              u(e, t) &&
              (-1 === Fe.call(ii, t) || (null != e[t] && isNaN(e[t])))
            )
              return !1;
          for (n = 0; n < ii.length; ++n)
            if (e[ii[n]]) {
              if (i) return !1;
              parseFloat(e[ii[n]]) !== he(e[ii[n]]) && (i = !0);
            }
          return !0;
        }
        function ai() {
          return this._isValid;
        }
        function oi() {
          return Oi(NaN);
        }
        function si(e) {
          var t = oe(e),
            n = t.year || 0,
            i = t.quarter || 0,
            r = t.month || 0,
            a = t.week || t.isoWeek || 0,
            o = t.day || 0,
            s = t.hour || 0,
            c = t.minute || 0,
            u = t.second || 0,
            l = t.millisecond || 0;
          (this._isValid = ri(t)),
            (this._milliseconds = +l + 1e3 * u + 6e4 * c + 1e3 * s * 60 * 60),
            (this._days = +o + 7 * a),
            (this._months = +r + 3 * i + 12 * n),
            (this._data = {}),
            (this._locale = gn()),
            this._bubble();
        }
        function ci(e) {
          return e instanceof si;
        }
        function ui(e) {
          return e < 0 ? -1 * Math.round(-1 * e) : Math.round(e);
        }
        function li(e, t, n) {
          var i,
            r = Math.min(e.length, t.length),
            a = Math.abs(e.length - t.length),
            o = 0;
          for (i = 0; i < r; i++)
            ((n && e[i] !== t[i]) || (!n && he(e[i]) !== he(t[i]))) && o++;
          return o + a;
        }
        function di(e, t) {
          q(e, 0, 0, function () {
            var e = this.utcOffset(),
              n = '+';
            return (
              e < 0 && ((e = -e), (n = '-')),
              n + Y(~~(e / 60), 2) + t + Y(~~e % 60, 2)
            );
          });
        }
        di('Z', ':'),
          di('ZZ', ''),
          je('Z', De),
          je('ZZ', De),
          Ie(['Z', 'ZZ'], function (e, t, n) {
            (n._useUTC = !0), (n._tzm = pi(De, e));
          });
        var hi = /([\+\-]|\d\d)/gi;
        function pi(e, t) {
          var n,
            i,
            r,
            a = (t || '').match(e);
          return null === a
            ? null
            : ((n = a[a.length - 1] || []),
              (i = (n + '').match(hi) || ['-', 0, 0]),
              (r = +60 * i[1] + he(i[2])),
              0 === r ? 0 : '+' === i[0] ? r : -r);
        }
        function mi(e, t) {
          var n, i;
          return t._isUTC
            ? ((n = t.clone()),
              (i =
                (L(e) || p(e) ? e.valueOf() : Zn(e).valueOf()) - n.valueOf()),
              n._d.setTime(n._d.valueOf() + i),
              a.updateOffset(n, !1),
              n)
            : Zn(e).local();
        }
        function fi(e) {
          return -Math.round(e._d.getTimezoneOffset());
        }
        function _i(e, t, n) {
          var i,
            r = this._offset || 0;
          if (!this.isValid()) return null != e ? this : NaN;
          if (null != e) {
            if ('string' === typeof e) {
              if (((e = pi(De, e)), null === e)) return this;
            } else Math.abs(e) < 16 && !n && (e *= 60);
            return (
              !this._isUTC && t && (i = fi(this)),
              (this._offset = e),
              (this._isUTC = !0),
              null != i && this.add(i, 'm'),
              r !== e &&
                (!t || this._changeInProgress
                  ? Ni(this, Oi(e - r, 'm'), 1, !1)
                  : this._changeInProgress ||
                    ((this._changeInProgress = !0),
                    a.updateOffset(this, !0),
                    (this._changeInProgress = null))),
              this
            );
          }
          return this._isUTC ? r : fi(this);
        }
        function Mi(e, t) {
          return null != e
            ? ('string' !== typeof e && (e = -e), this.utcOffset(e, t), this)
            : -this.utcOffset();
        }
        function vi(e) {
          return this.utcOffset(0, e);
        }
        function gi(e) {
          return (
            this._isUTC &&
              (this.utcOffset(0, e),
              (this._isUTC = !1),
              e && this.subtract(fi(this), 'm')),
            this
          );
        }
        function yi() {
          if (null != this._tzm) this.utcOffset(this._tzm, !1, !0);
          else if ('string' === typeof this._i) {
            var e = pi(Ce, this._i);
            null != e ? this.utcOffset(e) : this.utcOffset(0, !0);
          }
          return this;
        }
        function bi(e) {
          return (
            !!this.isValid() &&
            ((e = e ? Zn(e).utcOffset() : 0), (this.utcOffset() - e) % 60 === 0)
          );
        }
        function wi() {
          return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
          );
        }
        function Ai() {
          if (!d(this._isDSTShifted)) return this._isDSTShifted;
          var e,
            t = {};
          return (
            A(t, this),
            (t = Vn(t)),
            t._a
              ? ((e = t._isUTC ? _(t._a) : Zn(t._a)),
                (this._isDSTShifted =
                  this.isValid() && li(t._a, e.toArray()) > 0))
              : (this._isDSTShifted = !1),
            this._isDSTShifted
          );
        }
        function xi() {
          return !!this.isValid() && !this._isUTC;
        }
        function Li() {
          return !!this.isValid() && this._isUTC;
        }
        function Ti() {
          return !!this.isValid() && this._isUTC && 0 === this._offset;
        }
        a.updateOffset = function () {};
        var zi = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
          Si = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
        function Oi(e, t) {
          var n,
            i,
            r,
            a = e,
            o = null;
          return (
            ci(e)
              ? (a = { ms: e._milliseconds, d: e._days, M: e._months })
              : h(e) || !isNaN(+e)
              ? ((a = {}), t ? (a[t] = +e) : (a.milliseconds = +e))
              : (o = zi.exec(e))
              ? ((n = '-' === o[1] ? -1 : 1),
                (a = {
                  y: 0,
                  d: he(o[Ve]) * n,
                  h: he(o[Ge]) * n,
                  m: he(o[Je]) * n,
                  s: he(o[Ze]) * n,
                  ms: he(ui(1e3 * o[Ke])) * n,
                }))
              : (o = Si.exec(e))
              ? ((n = '-' === o[1] ? -1 : 1),
                (a = {
                  y: Ei(o[2], n),
                  M: Ei(o[3], n),
                  w: Ei(o[4], n),
                  d: Ei(o[5], n),
                  h: Ei(o[6], n),
                  m: Ei(o[7], n),
                  s: Ei(o[8], n),
                }))
              : null == a
              ? (a = {})
              : 'object' === typeof a &&
                ('from' in a || 'to' in a) &&
                ((r = Ci(Zn(a.from), Zn(a.to))),
                (a = {}),
                (a.ms = r.milliseconds),
                (a.M = r.months)),
            (i = new si(a)),
            ci(e) && u(e, '_locale') && (i._locale = e._locale),
            ci(e) && u(e, '_isValid') && (i._isValid = e._isValid),
            i
          );
        }
        function Ei(e, t) {
          var n = e && parseFloat(e.replace(',', '.'));
          return (isNaN(n) ? 0 : n) * t;
        }
        function ki(e, t) {
          var n = {};
          return (
            (n.months = t.month() - e.month() + 12 * (t.year() - e.year())),
            e.clone().add(n.months, 'M').isAfter(t) && --n.months,
            (n.milliseconds = +t - +e.clone().add(n.months, 'M')),
            n
          );
        }
        function Ci(e, t) {
          var n;
          return e.isValid() && t.isValid()
            ? ((t = mi(t, e)),
              e.isBefore(t)
                ? (n = ki(e, t))
                : ((n = ki(t, e)),
                  (n.milliseconds = -n.milliseconds),
                  (n.months = -n.months)),
              n)
            : { milliseconds: 0, months: 0 };
        }
        function Di(e, t) {
          return function (n, i) {
            var r, a;
            return (
              null === i ||
                isNaN(+i) ||
                (E(
                  t,
                  'moment().' +
                    t +
                    '(period, number) is deprecated. Please use moment().' +
                    t +
                    '(number, period). ' +
                    'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'
                ),
                (a = n),
                (n = i),
                (i = a)),
              (r = Oi(n, i)),
              Ni(this, r, e),
              this
            );
          };
        }
        function Ni(e, t, n, i) {
          var r = t._milliseconds,
            o = ui(t._days),
            s = ui(t._months);
          e.isValid() &&
            ((i = null == i || i),
            s && dt(e, me(e, 'Month') + s * n),
            o && fe(e, 'Date', me(e, 'Date') + o * n),
            r && e._d.setTime(e._d.valueOf() + r * n),
            i && a.updateOffset(e, o || s));
        }
        (Oi.fn = si.prototype), (Oi.invalid = oi);
        var Pi = Di(1, 'add'),
          ji = Di(-1, 'subtract');
        function Yi(e) {
          return 'string' === typeof e || e instanceof String;
        }
        function Ri(e) {
          return (
            L(e) ||
            p(e) ||
            Yi(e) ||
            h(e) ||
            Wi(e) ||
            Bi(e) ||
            null === e ||
            void 0 === e
          );
        }
        function Bi(e) {
          var t,
            n,
            i = c(e) && !l(e),
            r = !1,
            a = [
              'years',
              'year',
              'y',
              'months',
              'month',
              'M',
              'days',
              'day',
              'd',
              'dates',
              'date',
              'D',
              'hours',
              'hour',
              'h',
              'minutes',
              'minute',
              'm',
              'seconds',
              'second',
              's',
              'milliseconds',
              'millisecond',
              'ms',
            ];
          for (t = 0; t < a.length; t += 1) (n = a[t]), (r = r || u(e, n));
          return i && r;
        }
        function Wi(e) {
          var t = s(e),
            n = !1;
          return (
            t &&
              (n =
                0 ===
                e.filter(function (t) {
                  return !h(t) && Yi(e);
                }).length),
            t && n
          );
        }
        function Ii(e) {
          var t,
            n,
            i = c(e) && !l(e),
            r = !1,
            a = [
              'sameDay',
              'nextDay',
              'lastDay',
              'nextWeek',
              'lastWeek',
              'sameElse',
            ];
          for (t = 0; t < a.length; t += 1) (n = a[t]), (r = r || u(e, n));
          return i && r;
        }
        function qi(e, t) {
          var n = e.diff(t, 'days', !0);
          return n < -6
            ? 'sameElse'
            : n < -1
            ? 'lastWeek'
            : n < 0
            ? 'lastDay'
            : n < 1
            ? 'sameDay'
            : n < 2
            ? 'nextDay'
            : n < 7
            ? 'nextWeek'
            : 'sameElse';
        }
        function Hi(e, t) {
          1 === arguments.length &&
            (arguments[0]
              ? Ri(arguments[0])
                ? ((e = arguments[0]), (t = void 0))
                : Ii(arguments[0]) && ((t = arguments[0]), (e = void 0))
              : ((e = void 0), (t = void 0)));
          var n = e || Zn(),
            i = mi(n, this).startOf('day'),
            r = a.calendarFormat(this, i) || 'sameElse',
            o = t && (k(t[r]) ? t[r].call(this, n) : t[r]);
          return this.format(o || this.localeData().calendar(r, this, Zn(n)));
        }
        function Fi() {
          return new x(this);
        }
        function Ui(e, t) {
          var n = L(e) ? e : Zn(e);
          return (
            !(!this.isValid() || !n.isValid()) &&
            ((t = ae(t) || 'millisecond'),
            'millisecond' === t
              ? this.valueOf() > n.valueOf()
              : n.valueOf() < this.clone().startOf(t).valueOf())
          );
        }
        function Xi(e, t) {
          var n = L(e) ? e : Zn(e);
          return (
            !(!this.isValid() || !n.isValid()) &&
            ((t = ae(t) || 'millisecond'),
            'millisecond' === t
              ? this.valueOf() < n.valueOf()
              : this.clone().endOf(t).valueOf() < n.valueOf())
          );
        }
        function Vi(e, t, n, i) {
          var r = L(e) ? e : Zn(e),
            a = L(t) ? t : Zn(t);
          return (
            !!(this.isValid() && r.isValid() && a.isValid()) &&
            ((i = i || '()'),
            ('(' === i[0] ? this.isAfter(r, n) : !this.isBefore(r, n)) &&
              (')' === i[1] ? this.isBefore(a, n) : !this.isAfter(a, n)))
          );
        }
        function Gi(e, t) {
          var n,
            i = L(e) ? e : Zn(e);
          return (
            !(!this.isValid() || !i.isValid()) &&
            ((t = ae(t) || 'millisecond'),
            'millisecond' === t
              ? this.valueOf() === i.valueOf()
              : ((n = i.valueOf()),
                this.clone().startOf(t).valueOf() <= n &&
                  n <= this.clone().endOf(t).valueOf()))
          );
        }
        function Ji(e, t) {
          return this.isSame(e, t) || this.isAfter(e, t);
        }
        function Zi(e, t) {
          return this.isSame(e, t) || this.isBefore(e, t);
        }
        function Ki(e, t, n) {
          var i, r, a;
          if (!this.isValid()) return NaN;
          if (((i = mi(e, this)), !i.isValid())) return NaN;
          switch (
            ((r = 6e4 * (i.utcOffset() - this.utcOffset())), (t = ae(t)), t)
          ) {
            case 'year':
              a = Qi(this, i) / 12;
              break;
            case 'month':
              a = Qi(this, i);
              break;
            case 'quarter':
              a = Qi(this, i) / 3;
              break;
            case 'second':
              a = (this - i) / 1e3;
              break;
            case 'minute':
              a = (this - i) / 6e4;
              break;
            case 'hour':
              a = (this - i) / 36e5;
              break;
            case 'day':
              a = (this - i - r) / 864e5;
              break;
            case 'week':
              a = (this - i - r) / 6048e5;
              break;
            default:
              a = this - i;
          }
          return n ? a : de(a);
        }
        function Qi(e, t) {
          if (e.date() < t.date()) return -Qi(t, e);
          var n,
            i,
            r = 12 * (t.year() - e.year()) + (t.month() - e.month()),
            a = e.clone().add(r, 'months');
          return (
            t - a < 0
              ? ((n = e.clone().add(r - 1, 'months')), (i = (t - a) / (a - n)))
              : ((n = e.clone().add(r + 1, 'months')), (i = (t - a) / (n - a))),
            -(r + i) || 0
          );
        }
        function $i() {
          return this.clone()
            .locale('en')
            .format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
        }
        function er(e) {
          if (!this.isValid()) return null;
          var t = !0 !== e,
            n = t ? this.clone().utc() : this;
          return n.year() < 0 || n.year() > 9999
            ? U(
                n,
                t
                  ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
                  : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'
              )
            : k(Date.prototype.toISOString)
            ? t
              ? this.toDate().toISOString()
              : new Date(this.valueOf() + 60 * this.utcOffset() * 1e3)
                  .toISOString()
                  .replace('Z', U(n, 'Z'))
            : U(
                n,
                t
                  ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
                  : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'
              );
        }
        function tr() {
          if (!this.isValid()) return 'moment.invalid(/* ' + this._i + ' */)';
          var e,
            t,
            n,
            i,
            r = 'moment',
            a = '';
          return (
            this.isLocal() ||
              ((r = 0 === this.utcOffset() ? 'moment.utc' : 'moment.parseZone'),
              (a = 'Z')),
            (e = '[' + r + '("]'),
            (t = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY'),
            (n = '-MM-DD[T]HH:mm:ss.SSS'),
            (i = a + '[")]'),
            this.format(e + t + n + i)
          );
        }
        function nr(e) {
          e || (e = this.isUtc() ? a.defaultFormatUtc : a.defaultFormat);
          var t = U(this, e);
          return this.localeData().postformat(t);
        }
        function ir(e, t) {
          return this.isValid() && ((L(e) && e.isValid()) || Zn(e).isValid())
            ? Oi({ to: this, from: e }).locale(this.locale()).humanize(!t)
            : this.localeData().invalidDate();
        }
        function rr(e) {
          return this.from(Zn(), e);
        }
        function ar(e, t) {
          return this.isValid() && ((L(e) && e.isValid()) || Zn(e).isValid())
            ? Oi({ from: this, to: e }).locale(this.locale()).humanize(!t)
            : this.localeData().invalidDate();
        }
        function or(e) {
          return this.to(Zn(), e);
        }
        function sr(e) {
          var t;
          return void 0 === e
            ? this._locale._abbr
            : ((t = gn(e)), null != t && (this._locale = t), this);
        }
        (a.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ'),
          (a.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]');
        var cr = z(
          'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
          function (e) {
            return void 0 === e ? this.localeData() : this.locale(e);
          }
        );
        function ur() {
          return this._locale;
        }
        var lr = 1e3,
          dr = 60 * lr,
          hr = 60 * dr,
          pr = 24 * (365 * 400 + 97) * hr;
        function mr(e, t) {
          return ((e % t) + t) % t;
        }
        function fr(e, t, n) {
          return e < 100 && e >= 0
            ? new Date(e + 400, t, n) - pr
            : new Date(e, t, n).valueOf();
        }
        function _r(e, t, n) {
          return e < 100 && e >= 0
            ? Date.UTC(e + 400, t, n) - pr
            : Date.UTC(e, t, n);
        }
        function Mr(e) {
          var t, n;
          if (
            ((e = ae(e)),
            void 0 === e || 'millisecond' === e || !this.isValid())
          )
            return this;
          switch (((n = this._isUTC ? _r : fr), e)) {
            case 'year':
              t = n(this.year(), 0, 1);
              break;
            case 'quarter':
              t = n(this.year(), this.month() - (this.month() % 3), 1);
              break;
            case 'month':
              t = n(this.year(), this.month(), 1);
              break;
            case 'week':
              t = n(this.year(), this.month(), this.date() - this.weekday());
              break;
            case 'isoWeek':
              t = n(
                this.year(),
                this.month(),
                this.date() - (this.isoWeekday() - 1)
              );
              break;
            case 'day':
            case 'date':
              t = n(this.year(), this.month(), this.date());
              break;
            case 'hour':
              (t = this._d.valueOf()),
                (t -= mr(t + (this._isUTC ? 0 : this.utcOffset() * dr), hr));
              break;
            case 'minute':
              (t = this._d.valueOf()), (t -= mr(t, dr));
              break;
            case 'second':
              (t = this._d.valueOf()), (t -= mr(t, lr));
              break;
          }
          return this._d.setTime(t), a.updateOffset(this, !0), this;
        }
        function vr(e) {
          var t, n;
          if (
            ((e = ae(e)),
            void 0 === e || 'millisecond' === e || !this.isValid())
          )
            return this;
          switch (((n = this._isUTC ? _r : fr), e)) {
            case 'year':
              t = n(this.year() + 1, 0, 1) - 1;
              break;
            case 'quarter':
              t = n(this.year(), this.month() - (this.month() % 3) + 3, 1) - 1;
              break;
            case 'month':
              t = n(this.year(), this.month() + 1, 1) - 1;
              break;
            case 'week':
              t =
                n(this.year(), this.month(), this.date() - this.weekday() + 7) -
                1;
              break;
            case 'isoWeek':
              t =
                n(
                  this.year(),
                  this.month(),
                  this.date() - (this.isoWeekday() - 1) + 7
                ) - 1;
              break;
            case 'day':
            case 'date':
              t = n(this.year(), this.month(), this.date() + 1) - 1;
              break;
            case 'hour':
              (t = this._d.valueOf()),
                (t +=
                  hr -
                  mr(t + (this._isUTC ? 0 : this.utcOffset() * dr), hr) -
                  1);
              break;
            case 'minute':
              (t = this._d.valueOf()), (t += dr - mr(t, dr) - 1);
              break;
            case 'second':
              (t = this._d.valueOf()), (t += lr - mr(t, lr) - 1);
              break;
          }
          return this._d.setTime(t), a.updateOffset(this, !0), this;
        }
        function gr() {
          return this._d.valueOf() - 6e4 * (this._offset || 0);
        }
        function yr() {
          return Math.floor(this.valueOf() / 1e3);
        }
        function br() {
          return new Date(this.valueOf());
        }
        function wr() {
          var e = this;
          return [
            e.year(),
            e.month(),
            e.date(),
            e.hour(),
            e.minute(),
            e.second(),
            e.millisecond(),
          ];
        }
        function Ar() {
          var e = this;
          return {
            years: e.year(),
            months: e.month(),
            date: e.date(),
            hours: e.hours(),
            minutes: e.minutes(),
            seconds: e.seconds(),
            milliseconds: e.milliseconds(),
          };
        }
        function xr() {
          return this.isValid() ? this.toISOString() : null;
        }
        function Lr() {
          return g(this);
        }
        function Tr() {
          return f({}, v(this));
        }
        function zr() {
          return v(this).overflow;
        }
        function Sr() {
          return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict,
          };
        }
        function Or(e, t) {
          var n,
            i,
            r,
            o = this._eras || gn('en')._eras;
          for (n = 0, i = o.length; n < i; ++n) {
            switch (typeof o[n].since) {
              case 'string':
                (r = a(o[n].since).startOf('day')), (o[n].since = r.valueOf());
                break;
            }
            switch (typeof o[n].until) {
              case 'undefined':
                o[n].until = +1 / 0;
                break;
              case 'string':
                (r = a(o[n].until).startOf('day').valueOf()),
                  (o[n].until = r.valueOf());
                break;
            }
          }
          return o;
        }
        function Er(e, t, n) {
          var i,
            r,
            a,
            o,
            s,
            c = this.eras();
          for (e = e.toUpperCase(), i = 0, r = c.length; i < r; ++i)
            if (
              ((a = c[i].name.toUpperCase()),
              (o = c[i].abbr.toUpperCase()),
              (s = c[i].narrow.toUpperCase()),
              n)
            )
              switch (t) {
                case 'N':
                case 'NN':
                case 'NNN':
                  if (o === e) return c[i];
                  break;
                case 'NNNN':
                  if (a === e) return c[i];
                  break;
                case 'NNNNN':
                  if (s === e) return c[i];
                  break;
              }
            else if ([a, o, s].indexOf(e) >= 0) return c[i];
        }
        function kr(e, t) {
          var n = e.since <= e.until ? +1 : -1;
          return void 0 === t
            ? a(e.since).year()
            : a(e.since).year() + (t - e.offset) * n;
        }
        function Cr() {
          var e,
            t,
            n,
            i = this.localeData().eras();
          for (e = 0, t = i.length; e < t; ++e) {
            if (
              ((n = this.clone().startOf('day').valueOf()),
              i[e].since <= n && n <= i[e].until)
            )
              return i[e].name;
            if (i[e].until <= n && n <= i[e].since) return i[e].name;
          }
          return '';
        }
        function Dr() {
          var e,
            t,
            n,
            i = this.localeData().eras();
          for (e = 0, t = i.length; e < t; ++e) {
            if (
              ((n = this.clone().startOf('day').valueOf()),
              i[e].since <= n && n <= i[e].until)
            )
              return i[e].narrow;
            if (i[e].until <= n && n <= i[e].since) return i[e].narrow;
          }
          return '';
        }
        function Nr() {
          var e,
            t,
            n,
            i = this.localeData().eras();
          for (e = 0, t = i.length; e < t; ++e) {
            if (
              ((n = this.clone().startOf('day').valueOf()),
              i[e].since <= n && n <= i[e].until)
            )
              return i[e].abbr;
            if (i[e].until <= n && n <= i[e].since) return i[e].abbr;
          }
          return '';
        }
        function Pr() {
          var e,
            t,
            n,
            i,
            r = this.localeData().eras();
          for (e = 0, t = r.length; e < t; ++e)
            if (
              ((n = r[e].since <= r[e].until ? +1 : -1),
              (i = this.clone().startOf('day').valueOf()),
              (r[e].since <= i && i <= r[e].until) ||
                (r[e].until <= i && i <= r[e].since))
            )
              return (this.year() - a(r[e].since).year()) * n + r[e].offset;
          return this.year();
        }
        function jr(e) {
          return (
            u(this, '_erasNameRegex') || Hr.call(this),
            e ? this._erasNameRegex : this._erasRegex
          );
        }
        function Yr(e) {
          return (
            u(this, '_erasAbbrRegex') || Hr.call(this),
            e ? this._erasAbbrRegex : this._erasRegex
          );
        }
        function Rr(e) {
          return (
            u(this, '_erasNarrowRegex') || Hr.call(this),
            e ? this._erasNarrowRegex : this._erasRegex
          );
        }
        function Br(e, t) {
          return t.erasAbbrRegex(e);
        }
        function Wr(e, t) {
          return t.erasNameRegex(e);
        }
        function Ir(e, t) {
          return t.erasNarrowRegex(e);
        }
        function qr(e, t) {
          return t._eraYearOrdinalRegex || Ee;
        }
        function Hr() {
          var e,
            t,
            n = [],
            i = [],
            r = [],
            a = [],
            o = this.eras();
          for (e = 0, t = o.length; e < t; ++e)
            i.push(Be(o[e].name)),
              n.push(Be(o[e].abbr)),
              r.push(Be(o[e].narrow)),
              a.push(Be(o[e].name)),
              a.push(Be(o[e].abbr)),
              a.push(Be(o[e].narrow));
          (this._erasRegex = new RegExp('^(' + a.join('|') + ')', 'i')),
            (this._erasNameRegex = new RegExp('^(' + i.join('|') + ')', 'i')),
            (this._erasAbbrRegex = new RegExp('^(' + n.join('|') + ')', 'i')),
            (this._erasNarrowRegex = new RegExp('^(' + r.join('|') + ')', 'i'));
        }
        function Fr(e, t) {
          q(0, [e, e.length], 0, t);
        }
        function Ur(e) {
          return Kr.call(
            this,
            e,
            this.week(),
            this.weekday(),
            this.localeData()._week.dow,
            this.localeData()._week.doy
          );
        }
        function Xr(e) {
          return Kr.call(this, e, this.isoWeek(), this.isoWeekday(), 1, 4);
        }
        function Vr() {
          return Lt(this.year(), 1, 4);
        }
        function Gr() {
          return Lt(this.isoWeekYear(), 1, 4);
        }
        function Jr() {
          var e = this.localeData()._week;
          return Lt(this.year(), e.dow, e.doy);
        }
        function Zr() {
          var e = this.localeData()._week;
          return Lt(this.weekYear(), e.dow, e.doy);
        }
        function Kr(e, t, n, i, r) {
          var a;
          return null == e
            ? xt(this, i, r).year
            : ((a = Lt(e, i, r)),
              t > a && (t = a),
              Qr.call(this, e, t, n, i, r));
        }
        function Qr(e, t, n, i, r) {
          var a = At(e, t, n, i, r),
            o = bt(a.year, 0, a.dayOfYear);
          return (
            this.year(o.getUTCFullYear()),
            this.month(o.getUTCMonth()),
            this.date(o.getUTCDate()),
            this
          );
        }
        function $r(e) {
          return null == e
            ? Math.ceil((this.month() + 1) / 3)
            : this.month(3 * (e - 1) + (this.month() % 3));
        }
        q('N', 0, 0, 'eraAbbr'),
          q('NN', 0, 0, 'eraAbbr'),
          q('NNN', 0, 0, 'eraAbbr'),
          q('NNNN', 0, 0, 'eraName'),
          q('NNNNN', 0, 0, 'eraNarrow'),
          q('y', ['y', 1], 'yo', 'eraYear'),
          q('y', ['yy', 2], 0, 'eraYear'),
          q('y', ['yyy', 3], 0, 'eraYear'),
          q('y', ['yyyy', 4], 0, 'eraYear'),
          je('N', Br),
          je('NN', Br),
          je('NNN', Br),
          je('NNNN', Wr),
          je('NNNNN', Ir),
          Ie(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (e, t, n, i) {
            var r = n._locale.erasParse(e, i, n._strict);
            r ? (v(n).era = r) : (v(n).invalidEra = e);
          }),
          je('y', Ee),
          je('yy', Ee),
          je('yyy', Ee),
          je('yyyy', Ee),
          je('yo', qr),
          Ie(['y', 'yy', 'yyy', 'yyyy'], Ue),
          Ie(['yo'], function (e, t, n, i) {
            var r;
            n._locale._eraYearOrdinalRegex &&
              (r = e.match(n._locale._eraYearOrdinalRegex)),
              n._locale.eraYearOrdinalParse
                ? (t[Ue] = n._locale.eraYearOrdinalParse(e, r))
                : (t[Ue] = parseInt(e, 10));
          }),
          q(0, ['gg', 2], 0, function () {
            return this.weekYear() % 100;
          }),
          q(0, ['GG', 2], 0, function () {
            return this.isoWeekYear() % 100;
          }),
          Fr('gggg', 'weekYear'),
          Fr('ggggg', 'weekYear'),
          Fr('GGGG', 'isoWeekYear'),
          Fr('GGGGG', 'isoWeekYear'),
          re('weekYear', 'gg'),
          re('isoWeekYear', 'GG'),
          ce('weekYear', 1),
          ce('isoWeekYear', 1),
          je('G', ke),
          je('g', ke),
          je('GG', xe, ye),
          je('gg', xe, ye),
          je('GGGG', Se, we),
          je('gggg', Se, we),
          je('GGGGG', Oe, Ae),
          je('ggggg', Oe, Ae),
          qe(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (e, t, n, i) {
            t[i.substr(0, 2)] = he(e);
          }),
          qe(['gg', 'GG'], function (e, t, n, i) {
            t[i] = a.parseTwoDigitYear(e);
          }),
          q('Q', 0, 'Qo', 'quarter'),
          re('quarter', 'Q'),
          ce('quarter', 7),
          je('Q', ge),
          Ie('Q', function (e, t) {
            t[Xe] = 3 * (he(e) - 1);
          }),
          q('D', ['DD', 2], 'Do', 'date'),
          re('date', 'D'),
          ce('date', 9),
          je('D', xe),
          je('DD', xe, ye),
          je('Do', function (e, t) {
            return e
              ? t._dayOfMonthOrdinalParse || t._ordinalParse
              : t._dayOfMonthOrdinalParseLenient;
          }),
          Ie(['D', 'DD'], Ve),
          Ie('Do', function (e, t) {
            t[Ve] = he(e.match(xe)[0]);
          });
        var ea = pe('Date', !0);
        function ta(e) {
          var t =
            Math.round(
              (this.clone().startOf('day') - this.clone().startOf('year')) /
                864e5
            ) + 1;
          return null == e ? t : this.add(e - t, 'd');
        }
        q('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'),
          re('dayOfYear', 'DDD'),
          ce('dayOfYear', 4),
          je('DDD', ze),
          je('DDDD', be),
          Ie(['DDD', 'DDDD'], function (e, t, n) {
            n._dayOfYear = he(e);
          }),
          q('m', ['mm', 2], 0, 'minute'),
          re('minute', 'm'),
          ce('minute', 14),
          je('m', xe),
          je('mm', xe, ye),
          Ie(['m', 'mm'], Je);
        var na = pe('Minutes', !1);
        q('s', ['ss', 2], 0, 'second'),
          re('second', 's'),
          ce('second', 15),
          je('s', xe),
          je('ss', xe, ye),
          Ie(['s', 'ss'], Ze);
        var ia,
          ra,
          aa = pe('Seconds', !1);
        for (
          q('S', 0, 0, function () {
            return ~~(this.millisecond() / 100);
          }),
            q(0, ['SS', 2], 0, function () {
              return ~~(this.millisecond() / 10);
            }),
            q(0, ['SSS', 3], 0, 'millisecond'),
            q(0, ['SSSS', 4], 0, function () {
              return 10 * this.millisecond();
            }),
            q(0, ['SSSSS', 5], 0, function () {
              return 100 * this.millisecond();
            }),
            q(0, ['SSSSSS', 6], 0, function () {
              return 1e3 * this.millisecond();
            }),
            q(0, ['SSSSSSS', 7], 0, function () {
              return 1e4 * this.millisecond();
            }),
            q(0, ['SSSSSSSS', 8], 0, function () {
              return 1e5 * this.millisecond();
            }),
            q(0, ['SSSSSSSSS', 9], 0, function () {
              return 1e6 * this.millisecond();
            }),
            re('millisecond', 'ms'),
            ce('millisecond', 16),
            je('S', ze, ge),
            je('SS', ze, ye),
            je('SSS', ze, be),
            ia = 'SSSS';
          ia.length <= 9;
          ia += 'S'
        )
          je(ia, Ee);
        function oa(e, t) {
          t[Ke] = he(1e3 * ('0.' + e));
        }
        for (ia = 'S'; ia.length <= 9; ia += 'S') Ie(ia, oa);
        function sa() {
          return this._isUTC ? 'UTC' : '';
        }
        function ca() {
          return this._isUTC ? 'Coordinated Universal Time' : '';
        }
        (ra = pe('Milliseconds', !1)),
          q('z', 0, 0, 'zoneAbbr'),
          q('zz', 0, 0, 'zoneName');
        var ua = x.prototype;
        function la(e) {
          return Zn(1e3 * e);
        }
        function da() {
          return Zn.apply(null, arguments).parseZone();
        }
        function ha(e) {
          return e;
        }
        (ua.add = Pi),
          (ua.calendar = Hi),
          (ua.clone = Fi),
          (ua.diff = Ki),
          (ua.endOf = vr),
          (ua.format = nr),
          (ua.from = ir),
          (ua.fromNow = rr),
          (ua.to = ar),
          (ua.toNow = or),
          (ua.get = _e),
          (ua.invalidAt = zr),
          (ua.isAfter = Ui),
          (ua.isBefore = Xi),
          (ua.isBetween = Vi),
          (ua.isSame = Gi),
          (ua.isSameOrAfter = Ji),
          (ua.isSameOrBefore = Zi),
          (ua.isValid = Lr),
          (ua.lang = cr),
          (ua.locale = sr),
          (ua.localeData = ur),
          (ua.max = Qn),
          (ua.min = Kn),
          (ua.parsingFlags = Tr),
          (ua.set = Me),
          (ua.startOf = Mr),
          (ua.subtract = ji),
          (ua.toArray = wr),
          (ua.toObject = Ar),
          (ua.toDate = br),
          (ua.toISOString = er),
          (ua.inspect = tr),
          'undefined' !== typeof Symbol &&
            null != Symbol.for &&
            (ua[Symbol.for('nodejs.util.inspect.custom')] = function () {
              return 'Moment<' + this.format() + '>';
            }),
          (ua.toJSON = xr),
          (ua.toString = $i),
          (ua.unix = yr),
          (ua.valueOf = gr),
          (ua.creationData = Sr),
          (ua.eraName = Cr),
          (ua.eraNarrow = Dr),
          (ua.eraAbbr = Nr),
          (ua.eraYear = Pr),
          (ua.year = vt),
          (ua.isLeapYear = gt),
          (ua.weekYear = Ur),
          (ua.isoWeekYear = Xr),
          (ua.quarter = ua.quarters = $r),
          (ua.month = ht),
          (ua.daysInMonth = pt),
          (ua.week = ua.weeks = Et),
          (ua.isoWeek = ua.isoWeeks = kt),
          (ua.weeksInYear = Jr),
          (ua.weeksInWeekYear = Zr),
          (ua.isoWeeksInYear = Vr),
          (ua.isoWeeksInISOWeekYear = Gr),
          (ua.date = ea),
          (ua.day = ua.days = Xt),
          (ua.weekday = Vt),
          (ua.isoWeekday = Gt),
          (ua.dayOfYear = ta),
          (ua.hour = ua.hours = on),
          (ua.minute = ua.minutes = na),
          (ua.second = ua.seconds = aa),
          (ua.millisecond = ua.milliseconds = ra),
          (ua.utcOffset = _i),
          (ua.utc = vi),
          (ua.local = gi),
          (ua.parseZone = yi),
          (ua.hasAlignedHourOffset = bi),
          (ua.isDST = wi),
          (ua.isLocal = xi),
          (ua.isUtcOffset = Li),
          (ua.isUtc = Ti),
          (ua.isUTC = Ti),
          (ua.zoneAbbr = sa),
          (ua.zoneName = ca),
          (ua.dates = z('dates accessor is deprecated. Use date instead.', ea)),
          (ua.months = z(
            'months accessor is deprecated. Use month instead',
            ht
          )),
          (ua.years = z('years accessor is deprecated. Use year instead', vt)),
          (ua.zone = z(
            'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',
            Mi
          )),
          (ua.isDSTShifted = z(
            'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',
            Ai
          ));
        var pa = N.prototype;
        function ma(e, t, n, i) {
          var r = gn(),
            a = _().set(i, t);
          return r[n](a, e);
        }
        function fa(e, t, n) {
          if ((h(e) && ((t = e), (e = void 0)), (e = e || ''), null != t))
            return ma(e, t, n, 'month');
          var i,
            r = [];
          for (i = 0; i < 12; i++) r[i] = ma(e, i, n, 'month');
          return r;
        }
        function _a(e, t, n, i) {
          'boolean' === typeof e
            ? (h(t) && ((n = t), (t = void 0)), (t = t || ''))
            : ((t = e),
              (n = t),
              (e = !1),
              h(t) && ((n = t), (t = void 0)),
              (t = t || ''));
          var r,
            a = gn(),
            o = e ? a._week.dow : 0,
            s = [];
          if (null != n) return ma(t, (n + o) % 7, i, 'day');
          for (r = 0; r < 7; r++) s[r] = ma(t, (r + o) % 7, i, 'day');
          return s;
        }
        function Ma(e, t) {
          return fa(e, t, 'months');
        }
        function va(e, t) {
          return fa(e, t, 'monthsShort');
        }
        function ga(e, t, n) {
          return _a(e, t, n, 'weekdays');
        }
        function ya(e, t, n) {
          return _a(e, t, n, 'weekdaysShort');
        }
        function ba(e, t, n) {
          return _a(e, t, n, 'weekdaysMin');
        }
        (pa.calendar = j),
          (pa.longDateFormat = G),
          (pa.invalidDate = Z),
          (pa.ordinal = $),
          (pa.preparse = ha),
          (pa.postformat = ha),
          (pa.relativeTime = te),
          (pa.pastFuture = ne),
          (pa.set = C),
          (pa.eras = Or),
          (pa.erasParse = Er),
          (pa.erasConvertYear = kr),
          (pa.erasAbbrRegex = Yr),
          (pa.erasNameRegex = jr),
          (pa.erasNarrowRegex = Rr),
          (pa.months = st),
          (pa.monthsShort = ct),
          (pa.monthsParse = lt),
          (pa.monthsRegex = ft),
          (pa.monthsShortRegex = mt),
          (pa.week = Tt),
          (pa.firstDayOfYear = Ot),
          (pa.firstDayOfWeek = St),
          (pa.weekdays = It),
          (pa.weekdaysMin = Ht),
          (pa.weekdaysShort = qt),
          (pa.weekdaysParse = Ut),
          (pa.weekdaysRegex = Jt),
          (pa.weekdaysShortRegex = Zt),
          (pa.weekdaysMinRegex = Kt),
          (pa.isPM = rn),
          (pa.meridiem = sn),
          _n('en', {
            eras: [
              {
                since: '0001-01-01',
                until: +1 / 0,
                offset: 1,
                name: 'Anno Domini',
                narrow: 'AD',
                abbr: 'AD',
              },
              {
                since: '0000-12-31',
                until: -1 / 0,
                offset: 1,
                name: 'Before Christ',
                narrow: 'BC',
                abbr: 'BC',
              },
            ],
            dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
            ordinal: function (e) {
              var t = e % 10,
                n =
                  1 === he((e % 100) / 10)
                    ? 'th'
                    : 1 === t
                    ? 'st'
                    : 2 === t
                    ? 'nd'
                    : 3 === t
                    ? 'rd'
                    : 'th';
              return e + n;
            },
          }),
          (a.lang = z(
            'moment.lang is deprecated. Use moment.locale instead.',
            _n
          )),
          (a.langData = z(
            'moment.langData is deprecated. Use moment.localeData instead.',
            gn
          ));
        var wa = Math.abs;
        function Aa() {
          var e = this._data;
          return (
            (this._milliseconds = wa(this._milliseconds)),
            (this._days = wa(this._days)),
            (this._months = wa(this._months)),
            (e.milliseconds = wa(e.milliseconds)),
            (e.seconds = wa(e.seconds)),
            (e.minutes = wa(e.minutes)),
            (e.hours = wa(e.hours)),
            (e.months = wa(e.months)),
            (e.years = wa(e.years)),
            this
          );
        }
        function xa(e, t, n, i) {
          var r = Oi(t, n);
          return (
            (e._milliseconds += i * r._milliseconds),
            (e._days += i * r._days),
            (e._months += i * r._months),
            e._bubble()
          );
        }
        function La(e, t) {
          return xa(this, e, t, 1);
        }
        function Ta(e, t) {
          return xa(this, e, t, -1);
        }
        function za(e) {
          return e < 0 ? Math.floor(e) : Math.ceil(e);
        }
        function Sa() {
          var e,
            t,
            n,
            i,
            r,
            a = this._milliseconds,
            o = this._days,
            s = this._months,
            c = this._data;
          return (
            (a >= 0 && o >= 0 && s >= 0) ||
              (a <= 0 && o <= 0 && s <= 0) ||
              ((a += 864e5 * za(Ea(s) + o)), (o = 0), (s = 0)),
            (c.milliseconds = a % 1e3),
            (e = de(a / 1e3)),
            (c.seconds = e % 60),
            (t = de(e / 60)),
            (c.minutes = t % 60),
            (n = de(t / 60)),
            (c.hours = n % 24),
            (o += de(n / 24)),
            (r = de(Oa(o))),
            (s += r),
            (o -= za(Ea(r))),
            (i = de(s / 12)),
            (s %= 12),
            (c.days = o),
            (c.months = s),
            (c.years = i),
            this
          );
        }
        function Oa(e) {
          return (4800 * e) / 146097;
        }
        function Ea(e) {
          return (146097 * e) / 4800;
        }
        function ka(e) {
          if (!this.isValid()) return NaN;
          var t,
            n,
            i = this._milliseconds;
          if (((e = ae(e)), 'month' === e || 'quarter' === e || 'year' === e))
            switch (
              ((t = this._days + i / 864e5), (n = this._months + Oa(t)), e)
            ) {
              case 'month':
                return n;
              case 'quarter':
                return n / 3;
              case 'year':
                return n / 12;
            }
          else
            switch (((t = this._days + Math.round(Ea(this._months))), e)) {
              case 'week':
                return t / 7 + i / 6048e5;
              case 'day':
                return t + i / 864e5;
              case 'hour':
                return 24 * t + i / 36e5;
              case 'minute':
                return 1440 * t + i / 6e4;
              case 'second':
                return 86400 * t + i / 1e3;
              case 'millisecond':
                return Math.floor(864e5 * t) + i;
              default:
                throw new Error('Unknown unit ' + e);
            }
        }
        function Ca() {
          return this.isValid()
            ? this._milliseconds +
                864e5 * this._days +
                (this._months % 12) * 2592e6 +
                31536e6 * he(this._months / 12)
            : NaN;
        }
        function Da(e) {
          return function () {
            return this.as(e);
          };
        }
        var Na = Da('ms'),
          Pa = Da('s'),
          ja = Da('m'),
          Ya = Da('h'),
          Ra = Da('d'),
          Ba = Da('w'),
          Wa = Da('M'),
          Ia = Da('Q'),
          qa = Da('y');
        function Ha() {
          return Oi(this);
        }
        function Fa(e) {
          return (e = ae(e)), this.isValid() ? this[e + 's']() : NaN;
        }
        function Ua(e) {
          return function () {
            return this.isValid() ? this._data[e] : NaN;
          };
        }
        var Xa = Ua('milliseconds'),
          Va = Ua('seconds'),
          Ga = Ua('minutes'),
          Ja = Ua('hours'),
          Za = Ua('days'),
          Ka = Ua('months'),
          Qa = Ua('years');
        function $a() {
          return de(this.days() / 7);
        }
        var eo = Math.round,
          to = { ss: 44, s: 45, m: 45, h: 22, d: 26, w: null, M: 11 };
        function no(e, t, n, i, r) {
          return r.relativeTime(t || 1, !!n, e, i);
        }
        function io(e, t, n, i) {
          var r = Oi(e).abs(),
            a = eo(r.as('s')),
            o = eo(r.as('m')),
            s = eo(r.as('h')),
            c = eo(r.as('d')),
            u = eo(r.as('M')),
            l = eo(r.as('w')),
            d = eo(r.as('y')),
            h =
              (a <= n.ss && ['s', a]) ||
              (a < n.s && ['ss', a]) ||
              (o <= 1 && ['m']) ||
              (o < n.m && ['mm', o]) ||
              (s <= 1 && ['h']) ||
              (s < n.h && ['hh', s]) ||
              (c <= 1 && ['d']) ||
              (c < n.d && ['dd', c]);
          return (
            null != n.w &&
              (h = h || (l <= 1 && ['w']) || (l < n.w && ['ww', l])),
            (h = h ||
              (u <= 1 && ['M']) ||
              (u < n.M && ['MM', u]) ||
              (d <= 1 && ['y']) || ['yy', d]),
            (h[2] = t),
            (h[3] = +e > 0),
            (h[4] = i),
            no.apply(null, h)
          );
        }
        function ro(e) {
          return void 0 === e ? eo : 'function' === typeof e && ((eo = e), !0);
        }
        function ao(e, t) {
          return (
            void 0 !== to[e] &&
            (void 0 === t
              ? to[e]
              : ((to[e] = t), 's' === e && (to.ss = t - 1), !0))
          );
        }
        function oo(e, t) {
          if (!this.isValid()) return this.localeData().invalidDate();
          var n,
            i,
            r = !1,
            a = to;
          return (
            'object' === typeof e && ((t = e), (e = !1)),
            'boolean' === typeof e && (r = e),
            'object' === typeof t &&
              ((a = Object.assign({}, to, t)),
              null != t.s && null == t.ss && (a.ss = t.s - 1)),
            (n = this.localeData()),
            (i = io(this, !r, a, n)),
            r && (i = n.pastFuture(+this, i)),
            n.postformat(i)
          );
        }
        var so = Math.abs;
        function co(e) {
          return (e > 0) - (e < 0) || +e;
        }
        function uo() {
          if (!this.isValid()) return this.localeData().invalidDate();
          var e,
            t,
            n,
            i,
            r,
            a,
            o,
            s,
            c = so(this._milliseconds) / 1e3,
            u = so(this._days),
            l = so(this._months),
            d = this.asSeconds();
          return d
            ? ((e = de(c / 60)),
              (t = de(e / 60)),
              (c %= 60),
              (e %= 60),
              (n = de(l / 12)),
              (l %= 12),
              (i = c ? c.toFixed(3).replace(/\.?0+$/, '') : ''),
              (r = d < 0 ? '-' : ''),
              (a = co(this._months) !== co(d) ? '-' : ''),
              (o = co(this._days) !== co(d) ? '-' : ''),
              (s = co(this._milliseconds) !== co(d) ? '-' : ''),
              r +
                'P' +
                (n ? a + n + 'Y' : '') +
                (l ? a + l + 'M' : '') +
                (u ? o + u + 'D' : '') +
                (t || e || c ? 'T' : '') +
                (t ? s + t + 'H' : '') +
                (e ? s + e + 'M' : '') +
                (c ? s + i + 'S' : ''))
            : 'P0D';
        }
        var lo = si.prototype;
        return (
          (lo.isValid = ai),
          (lo.abs = Aa),
          (lo.add = La),
          (lo.subtract = Ta),
          (lo.as = ka),
          (lo.asMilliseconds = Na),
          (lo.asSeconds = Pa),
          (lo.asMinutes = ja),
          (lo.asHours = Ya),
          (lo.asDays = Ra),
          (lo.asWeeks = Ba),
          (lo.asMonths = Wa),
          (lo.asQuarters = Ia),
          (lo.asYears = qa),
          (lo.valueOf = Ca),
          (lo._bubble = Sa),
          (lo.clone = Ha),
          (lo.get = Fa),
          (lo.milliseconds = Xa),
          (lo.seconds = Va),
          (lo.minutes = Ga),
          (lo.hours = Ja),
          (lo.days = Za),
          (lo.weeks = $a),
          (lo.months = Ka),
          (lo.years = Qa),
          (lo.humanize = oo),
          (lo.toISOString = uo),
          (lo.toString = uo),
          (lo.toJSON = uo),
          (lo.locale = sr),
          (lo.localeData = ur),
          (lo.toIsoString = z(
            'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',
            uo
          )),
          (lo.lang = cr),
          q('X', 0, 0, 'unix'),
          q('x', 0, 0, 'valueOf'),
          je('x', ke),
          je('X', Ne),
          Ie('X', function (e, t, n) {
            n._d = new Date(1e3 * parseFloat(e));
          }),
          Ie('x', function (e, t, n) {
            n._d = new Date(he(e));
          }),
          (a.version = '2.29.0'),
          o(Zn),
          (a.fn = ua),
          (a.min = ei),
          (a.max = ti),
          (a.now = ni),
          (a.utc = _),
          (a.unix = la),
          (a.months = Ma),
          (a.isDate = p),
          (a.locale = _n),
          (a.invalid = y),
          (a.duration = Oi),
          (a.isMoment = L),
          (a.weekdays = ga),
          (a.parseZone = da),
          (a.localeData = gn),
          (a.isDuration = ci),
          (a.monthsShort = va),
          (a.weekdaysMin = ba),
          (a.defineLocale = Mn),
          (a.updateLocale = vn),
          (a.locales = yn),
          (a.weekdaysShort = ya),
          (a.normalizeUnits = ae),
          (a.relativeTimeRounding = ro),
          (a.relativeTimeThreshold = ao),
          (a.calendarFormat = qi),
          (a.prototype = ua),
          (a.HTML5_FMT = {
            DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',
            DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',
            DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',
            DATE: 'YYYY-MM-DD',
            TIME: 'HH:mm',
            TIME_SECONDS: 'HH:mm:ss',
            TIME_MS: 'HH:mm:ss.SSS',
            WEEK: 'GGGG-[W]WW',
            MONTH: 'YYYY-MM',
          }),
          a
        );
      });
    }.call(this, n('../../../node_modules/webpack/buildin/module.js')(e)));
  },
  '../../../node_modules/node-libs-browser/node_modules/buffer/index.js': function (
    e,
    t,
    n
  ) {
    'use strict';
    (function (e) {
      var i = n('../../../node_modules/base64-js/index.js'),
        r = n('../../../node_modules/ieee754/index.js'),
        a = n('../../../node_modules/isarray/index.js');
      function o() {
        try {
          var e = new Uint8Array(1);
          return (
            (e.__proto__ = {
              __proto__: Uint8Array.prototype,
              foo: function () {
                return 42;
              },
            }),
            42 === e.foo() &&
              'function' === typeof e.subarray &&
              0 === e.subarray(1, 1).byteLength
          );
        } catch (e) {
          return !1;
        }
      }
      function s() {
        return u.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
      }
      function c(e, t) {
        if (s() < t) throw new RangeError('Invalid typed array length');
        return (
          u.TYPED_ARRAY_SUPPORT
            ? ((e = new Uint8Array(t)), (e.__proto__ = u.prototype))
            : (null === e && (e = new u(t)), (e.length = t)),
          e
        );
      }
      function u(e, t, n) {
        if (!u.TYPED_ARRAY_SUPPORT && !(this instanceof u))
          return new u(e, t, n);
        if ('number' === typeof e) {
          if ('string' === typeof t)
            throw new Error(
              'If encoding is specified then the first argument must be a string'
            );
          return p(this, e);
        }
        return l(this, e, t, n);
      }
      function l(e, t, n, i) {
        if ('number' === typeof t)
          throw new TypeError('"value" argument must not be a number');
        return 'undefined' !== typeof ArrayBuffer && t instanceof ArrayBuffer
          ? _(e, t, n, i)
          : 'string' === typeof t
          ? m(e, t, n)
          : M(e, t);
      }
      function d(e) {
        if ('number' !== typeof e)
          throw new TypeError('"size" argument must be a number');
        if (e < 0) throw new RangeError('"size" argument must not be negative');
      }
      function h(e, t, n, i) {
        return (
          d(t),
          t <= 0
            ? c(e, t)
            : void 0 !== n
            ? 'string' === typeof i
              ? c(e, t).fill(n, i)
              : c(e, t).fill(n)
            : c(e, t)
        );
      }
      function p(e, t) {
        if ((d(t), (e = c(e, t < 0 ? 0 : 0 | v(t))), !u.TYPED_ARRAY_SUPPORT))
          for (var n = 0; n < t; ++n) e[n] = 0;
        return e;
      }
      function m(e, t, n) {
        if (
          (('string' === typeof n && '' !== n) || (n = 'utf8'),
          !u.isEncoding(n))
        )
          throw new TypeError('"encoding" must be a valid string encoding');
        var i = 0 | y(t, n);
        e = c(e, i);
        var r = e.write(t, n);
        return r !== i && (e = e.slice(0, r)), e;
      }
      function f(e, t) {
        var n = t.length < 0 ? 0 : 0 | v(t.length);
        e = c(e, n);
        for (var i = 0; i < n; i += 1) e[i] = 255 & t[i];
        return e;
      }
      function _(e, t, n, i) {
        if ((t.byteLength, n < 0 || t.byteLength < n))
          throw new RangeError("'offset' is out of bounds");
        if (t.byteLength < n + (i || 0))
          throw new RangeError("'length' is out of bounds");
        return (
          (t =
            void 0 === n && void 0 === i
              ? new Uint8Array(t)
              : void 0 === i
              ? new Uint8Array(t, n)
              : new Uint8Array(t, n, i)),
          u.TYPED_ARRAY_SUPPORT
            ? ((e = t), (e.__proto__ = u.prototype))
            : (e = f(e, t)),
          e
        );
      }
      function M(e, t) {
        if (u.isBuffer(t)) {
          var n = 0 | v(t.length);
          return (e = c(e, n)), 0 === e.length ? e : (t.copy(e, 0, 0, n), e);
        }
        if (t) {
          if (
            ('undefined' !== typeof ArrayBuffer &&
              t.buffer instanceof ArrayBuffer) ||
            'length' in t
          )
            return 'number' !== typeof t.length || te(t.length)
              ? c(e, 0)
              : f(e, t);
          if ('Buffer' === t.type && a(t.data)) return f(e, t.data);
        }
        throw new TypeError(
          'First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.'
        );
      }
      function v(e) {
        if (e >= s())
          throw new RangeError(
            'Attempt to allocate Buffer larger than maximum ' +
              'size: 0x' +
              s().toString(16) +
              ' bytes'
          );
        return 0 | e;
      }
      function g(e) {
        return +e != e && (e = 0), u.alloc(+e);
      }
      function y(e, t) {
        if (u.isBuffer(e)) return e.length;
        if (
          'undefined' !== typeof ArrayBuffer &&
          'function' === typeof ArrayBuffer.isView &&
          (ArrayBuffer.isView(e) || e instanceof ArrayBuffer)
        )
          return e.byteLength;
        'string' !== typeof e && (e = '' + e);
        var n = e.length;
        if (0 === n) return 0;
        for (var i = !1; ; )
          switch (t) {
            case 'ascii':
            case 'latin1':
            case 'binary':
              return n;
            case 'utf8':
            case 'utf-8':
            case void 0:
              return Z(e).length;
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
              return 2 * n;
            case 'hex':
              return n >>> 1;
            case 'base64':
              return $(e).length;
            default:
              if (i) return Z(e).length;
              (t = ('' + t).toLowerCase()), (i = !0);
          }
      }
      function b(e, t, n) {
        var i = !1;
        if (((void 0 === t || t < 0) && (t = 0), t > this.length)) return '';
        if (((void 0 === n || n > this.length) && (n = this.length), n <= 0))
          return '';
        if (((n >>>= 0), (t >>>= 0), n <= t)) return '';
        e || (e = 'utf8');
        while (1)
          switch (e) {
            case 'hex':
              return Y(this, t, n);
            case 'utf8':
            case 'utf-8':
              return C(this, t, n);
            case 'ascii':
              return P(this, t, n);
            case 'latin1':
            case 'binary':
              return j(this, t, n);
            case 'base64':
              return k(this, t, n);
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
              return R(this, t, n);
            default:
              if (i) throw new TypeError('Unknown encoding: ' + e);
              (e = (e + '').toLowerCase()), (i = !0);
          }
      }
      function w(e, t, n) {
        var i = e[t];
        (e[t] = e[n]), (e[n] = i);
      }
      function A(e, t, n, i, r) {
        if (0 === e.length) return -1;
        if (
          ('string' === typeof n
            ? ((i = n), (n = 0))
            : n > 2147483647
            ? (n = 2147483647)
            : n < -2147483648 && (n = -2147483648),
          (n = +n),
          isNaN(n) && (n = r ? 0 : e.length - 1),
          n < 0 && (n = e.length + n),
          n >= e.length)
        ) {
          if (r) return -1;
          n = e.length - 1;
        } else if (n < 0) {
          if (!r) return -1;
          n = 0;
        }
        if (('string' === typeof t && (t = u.from(t, i)), u.isBuffer(t)))
          return 0 === t.length ? -1 : x(e, t, n, i, r);
        if ('number' === typeof t)
          return (
            (t &= 255),
            u.TYPED_ARRAY_SUPPORT &&
            'function' === typeof Uint8Array.prototype.indexOf
              ? r
                ? Uint8Array.prototype.indexOf.call(e, t, n)
                : Uint8Array.prototype.lastIndexOf.call(e, t, n)
              : x(e, [t], n, i, r)
          );
        throw new TypeError('val must be string, number or Buffer');
      }
      function x(e, t, n, i, r) {
        var a,
          o = 1,
          s = e.length,
          c = t.length;
        if (
          void 0 !== i &&
          ((i = String(i).toLowerCase()),
          'ucs2' === i || 'ucs-2' === i || 'utf16le' === i || 'utf-16le' === i)
        ) {
          if (e.length < 2 || t.length < 2) return -1;
          (o = 2), (s /= 2), (c /= 2), (n /= 2);
        }
        function u(e, t) {
          return 1 === o ? e[t] : e.readUInt16BE(t * o);
        }
        if (r) {
          var l = -1;
          for (a = n; a < s; a++)
            if (u(e, a) === u(t, -1 === l ? 0 : a - l)) {
              if ((-1 === l && (l = a), a - l + 1 === c)) return l * o;
            } else -1 !== l && (a -= a - l), (l = -1);
        } else
          for (n + c > s && (n = s - c), a = n; a >= 0; a--) {
            for (var d = !0, h = 0; h < c; h++)
              if (u(e, a + h) !== u(t, h)) {
                d = !1;
                break;
              }
            if (d) return a;
          }
        return -1;
      }
      function L(e, t, n, i) {
        n = Number(n) || 0;
        var r = e.length - n;
        i ? ((i = Number(i)), i > r && (i = r)) : (i = r);
        var a = t.length;
        if (a % 2 !== 0) throw new TypeError('Invalid hex string');
        i > a / 2 && (i = a / 2);
        for (var o = 0; o < i; ++o) {
          var s = parseInt(t.substr(2 * o, 2), 16);
          if (isNaN(s)) return o;
          e[n + o] = s;
        }
        return o;
      }
      function T(e, t, n, i) {
        return ee(Z(t, e.length - n), e, n, i);
      }
      function z(e, t, n, i) {
        return ee(K(t), e, n, i);
      }
      function S(e, t, n, i) {
        return z(e, t, n, i);
      }
      function O(e, t, n, i) {
        return ee($(t), e, n, i);
      }
      function E(e, t, n, i) {
        return ee(Q(t, e.length - n), e, n, i);
      }
      function k(e, t, n) {
        return 0 === t && n === e.length
          ? i.fromByteArray(e)
          : i.fromByteArray(e.slice(t, n));
      }
      function C(e, t, n) {
        n = Math.min(e.length, n);
        var i = [],
          r = t;
        while (r < n) {
          var a,
            o,
            s,
            c,
            u = e[r],
            l = null,
            d = u > 239 ? 4 : u > 223 ? 3 : u > 191 ? 2 : 1;
          if (r + d <= n)
            switch (d) {
              case 1:
                u < 128 && (l = u);
                break;
              case 2:
                (a = e[r + 1]),
                  128 === (192 & a) &&
                    ((c = ((31 & u) << 6) | (63 & a)), c > 127 && (l = c));
                break;
              case 3:
                (a = e[r + 1]),
                  (o = e[r + 2]),
                  128 === (192 & a) &&
                    128 === (192 & o) &&
                    ((c = ((15 & u) << 12) | ((63 & a) << 6) | (63 & o)),
                    c > 2047 && (c < 55296 || c > 57343) && (l = c));
                break;
              case 4:
                (a = e[r + 1]),
                  (o = e[r + 2]),
                  (s = e[r + 3]),
                  128 === (192 & a) &&
                    128 === (192 & o) &&
                    128 === (192 & s) &&
                    ((c =
                      ((15 & u) << 18) |
                      ((63 & a) << 12) |
                      ((63 & o) << 6) |
                      (63 & s)),
                    c > 65535 && c < 1114112 && (l = c));
            }
          null === l
            ? ((l = 65533), (d = 1))
            : l > 65535 &&
              ((l -= 65536),
              i.push(((l >>> 10) & 1023) | 55296),
              (l = 56320 | (1023 & l))),
            i.push(l),
            (r += d);
        }
        return N(i);
      }
      (t.Buffer = u),
        (t.SlowBuffer = g),
        (t.INSPECT_MAX_BYTES = 50),
        (u.TYPED_ARRAY_SUPPORT =
          void 0 !== e.TYPED_ARRAY_SUPPORT ? e.TYPED_ARRAY_SUPPORT : o()),
        (t.kMaxLength = s()),
        (u.poolSize = 8192),
        (u._augment = function (e) {
          return (e.__proto__ = u.prototype), e;
        }),
        (u.from = function (e, t, n) {
          return l(null, e, t, n);
        }),
        u.TYPED_ARRAY_SUPPORT &&
          ((u.prototype.__proto__ = Uint8Array.prototype),
          (u.__proto__ = Uint8Array),
          'undefined' !== typeof Symbol &&
            Symbol.species &&
            u[Symbol.species] === u &&
            Object.defineProperty(u, Symbol.species, {
              value: null,
              configurable: !0,
            })),
        (u.alloc = function (e, t, n) {
          return h(null, e, t, n);
        }),
        (u.allocUnsafe = function (e) {
          return p(null, e);
        }),
        (u.allocUnsafeSlow = function (e) {
          return p(null, e);
        }),
        (u.isBuffer = function e(t) {
          return !(null == t || !t._isBuffer);
        }),
        (u.compare = function e(t, n) {
          if (!u.isBuffer(t) || !u.isBuffer(n))
            throw new TypeError('Arguments must be Buffers');
          if (t === n) return 0;
          for (
            var i = t.length, r = n.length, a = 0, o = Math.min(i, r);
            a < o;
            ++a
          )
            if (t[a] !== n[a]) {
              (i = t[a]), (r = n[a]);
              break;
            }
          return i < r ? -1 : r < i ? 1 : 0;
        }),
        (u.isEncoding = function e(t) {
          switch (String(t).toLowerCase()) {
            case 'hex':
            case 'utf8':
            case 'utf-8':
            case 'ascii':
            case 'latin1':
            case 'binary':
            case 'base64':
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
              return !0;
            default:
              return !1;
          }
        }),
        (u.concat = function e(t, n) {
          if (!a(t))
            throw new TypeError('"list" argument must be an Array of Buffers');
          if (0 === t.length) return u.alloc(0);
          var i;
          if (void 0 === n)
            for (n = 0, i = 0; i < t.length; ++i) n += t[i].length;
          var r = u.allocUnsafe(n),
            o = 0;
          for (i = 0; i < t.length; ++i) {
            var s = t[i];
            if (!u.isBuffer(s))
              throw new TypeError(
                '"list" argument must be an Array of Buffers'
              );
            s.copy(r, o), (o += s.length);
          }
          return r;
        }),
        (u.byteLength = y),
        (u.prototype._isBuffer = !0),
        (u.prototype.swap16 = function e() {
          var t = this.length;
          if (t % 2 !== 0)
            throw new RangeError('Buffer size must be a multiple of 16-bits');
          for (var n = 0; n < t; n += 2) w(this, n, n + 1);
          return this;
        }),
        (u.prototype.swap32 = function e() {
          var t = this.length;
          if (t % 4 !== 0)
            throw new RangeError('Buffer size must be a multiple of 32-bits');
          for (var n = 0; n < t; n += 4)
            w(this, n, n + 3), w(this, n + 1, n + 2);
          return this;
        }),
        (u.prototype.swap64 = function e() {
          var t = this.length;
          if (t % 8 !== 0)
            throw new RangeError('Buffer size must be a multiple of 64-bits');
          for (var n = 0; n < t; n += 8)
            w(this, n, n + 7),
              w(this, n + 1, n + 6),
              w(this, n + 2, n + 5),
              w(this, n + 3, n + 4);
          return this;
        }),
        (u.prototype.toString = function e() {
          var t = 0 | this.length;
          return 0 === t
            ? ''
            : 0 === arguments.length
            ? C(this, 0, t)
            : b.apply(this, arguments);
        }),
        (u.prototype.equals = function e(t) {
          if (!u.isBuffer(t)) throw new TypeError('Argument must be a Buffer');
          return this === t || 0 === u.compare(this, t);
        }),
        (u.prototype.inspect = function e() {
          var n = '',
            i = t.INSPECT_MAX_BYTES;
          return (
            this.length > 0 &&
              ((n = this.toString('hex', 0, i).match(/.{2}/g).join(' ')),
              this.length > i && (n += ' ... ')),
            '<Buffer ' + n + '>'
          );
        }),
        (u.prototype.compare = function e(t, n, i, r, a) {
          if (!u.isBuffer(t)) throw new TypeError('Argument must be a Buffer');
          if (
            (void 0 === n && (n = 0),
            void 0 === i && (i = t ? t.length : 0),
            void 0 === r && (r = 0),
            void 0 === a && (a = this.length),
            n < 0 || i > t.length || r < 0 || a > this.length)
          )
            throw new RangeError('out of range index');
          if (r >= a && n >= i) return 0;
          if (r >= a) return -1;
          if (n >= i) return 1;
          if (((n >>>= 0), (i >>>= 0), (r >>>= 0), (a >>>= 0), this === t))
            return 0;
          for (
            var o = a - r,
              s = i - n,
              c = Math.min(o, s),
              l = this.slice(r, a),
              d = t.slice(n, i),
              h = 0;
            h < c;
            ++h
          )
            if (l[h] !== d[h]) {
              (o = l[h]), (s = d[h]);
              break;
            }
          return o < s ? -1 : s < o ? 1 : 0;
        }),
        (u.prototype.includes = function e(t, n, i) {
          return -1 !== this.indexOf(t, n, i);
        }),
        (u.prototype.indexOf = function e(t, n, i) {
          return A(this, t, n, i, !0);
        }),
        (u.prototype.lastIndexOf = function e(t, n, i) {
          return A(this, t, n, i, !1);
        }),
        (u.prototype.write = function e(t, n, i, r) {
          if (void 0 === n) (r = 'utf8'), (i = this.length), (n = 0);
          else if (void 0 === i && 'string' === typeof n)
            (r = n), (i = this.length), (n = 0);
          else {
            if (!isFinite(n))
              throw new Error(
                'Buffer.write(string, encoding, offset[, length]) is no longer supported'
              );
            (n |= 0),
              isFinite(i)
                ? ((i |= 0), void 0 === r && (r = 'utf8'))
                : ((r = i), (i = void 0));
          }
          var a = this.length - n;
          if (
            ((void 0 === i || i > a) && (i = a),
            (t.length > 0 && (i < 0 || n < 0)) || n > this.length)
          )
            throw new RangeError('Attempt to write outside buffer bounds');
          r || (r = 'utf8');
          for (var o = !1; ; )
            switch (r) {
              case 'hex':
                return L(this, t, n, i);
              case 'utf8':
              case 'utf-8':
                return T(this, t, n, i);
              case 'ascii':
                return z(this, t, n, i);
              case 'latin1':
              case 'binary':
                return S(this, t, n, i);
              case 'base64':
                return O(this, t, n, i);
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return E(this, t, n, i);
              default:
                if (o) throw new TypeError('Unknown encoding: ' + r);
                (r = ('' + r).toLowerCase()), (o = !0);
            }
        }),
        (u.prototype.toJSON = function e() {
          return {
            type: 'Buffer',
            data: Array.prototype.slice.call(this._arr || this, 0),
          };
        });
      var D = 4096;
      function N(e) {
        var t = e.length;
        if (t <= D) return String.fromCharCode.apply(String, e);
        var n = '',
          i = 0;
        while (i < t)
          n += String.fromCharCode.apply(String, e.slice(i, (i += D)));
        return n;
      }
      function P(e, t, n) {
        var i = '';
        n = Math.min(e.length, n);
        for (var r = t; r < n; ++r) i += String.fromCharCode(127 & e[r]);
        return i;
      }
      function j(e, t, n) {
        var i = '';
        n = Math.min(e.length, n);
        for (var r = t; r < n; ++r) i += String.fromCharCode(e[r]);
        return i;
      }
      function Y(e, t, n) {
        var i = e.length;
        (!t || t < 0) && (t = 0), (!n || n < 0 || n > i) && (n = i);
        for (var r = '', a = t; a < n; ++a) r += J(e[a]);
        return r;
      }
      function R(e, t, n) {
        for (var i = e.slice(t, n), r = '', a = 0; a < i.length; a += 2)
          r += String.fromCharCode(i[a] + 256 * i[a + 1]);
        return r;
      }
      function B(e, t, n) {
        if (e % 1 !== 0 || e < 0) throw new RangeError('offset is not uint');
        if (e + t > n)
          throw new RangeError('Trying to access beyond buffer length');
      }
      function W(e, t, n, i, r, a) {
        if (!u.isBuffer(e))
          throw new TypeError('"buffer" argument must be a Buffer instance');
        if (t > r || t < a)
          throw new RangeError('"value" argument is out of bounds');
        if (n + i > e.length) throw new RangeError('Index out of range');
      }
      function I(e, t, n, i) {
        t < 0 && (t = 65535 + t + 1);
        for (var r = 0, a = Math.min(e.length - n, 2); r < a; ++r)
          e[n + r] =
            (t & (255 << (8 * (i ? r : 1 - r)))) >>> (8 * (i ? r : 1 - r));
      }
      function q(e, t, n, i) {
        t < 0 && (t = 4294967295 + t + 1);
        for (var r = 0, a = Math.min(e.length - n, 4); r < a; ++r)
          e[n + r] = (t >>> (8 * (i ? r : 3 - r))) & 255;
      }
      function H(e, t, n, i, r, a) {
        if (n + i > e.length) throw new RangeError('Index out of range');
        if (n < 0) throw new RangeError('Index out of range');
      }
      function F(e, t, n, i, a) {
        return (
          a || H(e, t, n, 4, 34028234663852886e22, -34028234663852886e22),
          r.write(e, t, n, i, 23, 4),
          n + 4
        );
      }
      function U(e, t, n, i, a) {
        return (
          a || H(e, t, n, 8, 17976931348623157e292, -17976931348623157e292),
          r.write(e, t, n, i, 52, 8),
          n + 8
        );
      }
      (u.prototype.slice = function e(t, n) {
        var i,
          r = this.length;
        if (
          ((t = ~~t),
          (n = void 0 === n ? r : ~~n),
          t < 0 ? ((t += r), t < 0 && (t = 0)) : t > r && (t = r),
          n < 0 ? ((n += r), n < 0 && (n = 0)) : n > r && (n = r),
          n < t && (n = t),
          u.TYPED_ARRAY_SUPPORT)
        )
          (i = this.subarray(t, n)), (i.__proto__ = u.prototype);
        else {
          var a = n - t;
          i = new u(a, void 0);
          for (var o = 0; o < a; ++o) i[o] = this[o + t];
        }
        return i;
      }),
        (u.prototype.readUIntLE = function e(t, n, i) {
          (t |= 0), (n |= 0), i || B(t, n, this.length);
          var r = this[t],
            a = 1,
            o = 0;
          while (++o < n && (a *= 256)) r += this[t + o] * a;
          return r;
        }),
        (u.prototype.readUIntBE = function e(t, n, i) {
          (t |= 0), (n |= 0), i || B(t, n, this.length);
          var r = this[t + --n],
            a = 1;
          while (n > 0 && (a *= 256)) r += this[t + --n] * a;
          return r;
        }),
        (u.prototype.readUInt8 = function e(t, n) {
          return n || B(t, 1, this.length), this[t];
        }),
        (u.prototype.readUInt16LE = function e(t, n) {
          return n || B(t, 2, this.length), this[t] | (this[t + 1] << 8);
        }),
        (u.prototype.readUInt16BE = function e(t, n) {
          return n || B(t, 2, this.length), (this[t] << 8) | this[t + 1];
        }),
        (u.prototype.readUInt32LE = function e(t, n) {
          return (
            n || B(t, 4, this.length),
            (this[t] | (this[t + 1] << 8) | (this[t + 2] << 16)) +
              16777216 * this[t + 3]
          );
        }),
        (u.prototype.readUInt32BE = function e(t, n) {
          return (
            n || B(t, 4, this.length),
            16777216 * this[t] +
              ((this[t + 1] << 16) | (this[t + 2] << 8) | this[t + 3])
          );
        }),
        (u.prototype.readIntLE = function e(t, n, i) {
          (t |= 0), (n |= 0), i || B(t, n, this.length);
          var r = this[t],
            a = 1,
            o = 0;
          while (++o < n && (a *= 256)) r += this[t + o] * a;
          return (a *= 128), r >= a && (r -= Math.pow(2, 8 * n)), r;
        }),
        (u.prototype.readIntBE = function e(t, n, i) {
          (t |= 0), (n |= 0), i || B(t, n, this.length);
          var r = n,
            a = 1,
            o = this[t + --r];
          while (r > 0 && (a *= 256)) o += this[t + --r] * a;
          return (a *= 128), o >= a && (o -= Math.pow(2, 8 * n)), o;
        }),
        (u.prototype.readInt8 = function e(t, n) {
          return (
            n || B(t, 1, this.length),
            128 & this[t] ? -1 * (255 - this[t] + 1) : this[t]
          );
        }),
        (u.prototype.readInt16LE = function e(t, n) {
          n || B(t, 2, this.length);
          var i = this[t] | (this[t + 1] << 8);
          return 32768 & i ? 4294901760 | i : i;
        }),
        (u.prototype.readInt16BE = function e(t, n) {
          n || B(t, 2, this.length);
          var i = this[t + 1] | (this[t] << 8);
          return 32768 & i ? 4294901760 | i : i;
        }),
        (u.prototype.readInt32LE = function e(t, n) {
          return (
            n || B(t, 4, this.length),
            this[t] |
              (this[t + 1] << 8) |
              (this[t + 2] << 16) |
              (this[t + 3] << 24)
          );
        }),
        (u.prototype.readInt32BE = function e(t, n) {
          return (
            n || B(t, 4, this.length),
            (this[t] << 24) |
              (this[t + 1] << 16) |
              (this[t + 2] << 8) |
              this[t + 3]
          );
        }),
        (u.prototype.readFloatLE = function e(t, n) {
          return n || B(t, 4, this.length), r.read(this, t, !0, 23, 4);
        }),
        (u.prototype.readFloatBE = function e(t, n) {
          return n || B(t, 4, this.length), r.read(this, t, !1, 23, 4);
        }),
        (u.prototype.readDoubleLE = function e(t, n) {
          return n || B(t, 8, this.length), r.read(this, t, !0, 52, 8);
        }),
        (u.prototype.readDoubleBE = function e(t, n) {
          return n || B(t, 8, this.length), r.read(this, t, !1, 52, 8);
        }),
        (u.prototype.writeUIntLE = function e(t, n, i, r) {
          if (((t = +t), (n |= 0), (i |= 0), !r)) {
            var a = Math.pow(2, 8 * i) - 1;
            W(this, t, n, i, a, 0);
          }
          var o = 1,
            s = 0;
          this[n] = 255 & t;
          while (++s < i && (o *= 256)) this[n + s] = (t / o) & 255;
          return n + i;
        }),
        (u.prototype.writeUIntBE = function e(t, n, i, r) {
          if (((t = +t), (n |= 0), (i |= 0), !r)) {
            var a = Math.pow(2, 8 * i) - 1;
            W(this, t, n, i, a, 0);
          }
          var o = i - 1,
            s = 1;
          this[n + o] = 255 & t;
          while (--o >= 0 && (s *= 256)) this[n + o] = (t / s) & 255;
          return n + i;
        }),
        (u.prototype.writeUInt8 = function e(t, n, i) {
          return (
            (t = +t),
            (n |= 0),
            i || W(this, t, n, 1, 255, 0),
            u.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)),
            (this[n] = 255 & t),
            n + 1
          );
        }),
        (u.prototype.writeUInt16LE = function e(t, n, i) {
          return (
            (t = +t),
            (n |= 0),
            i || W(this, t, n, 2, 65535, 0),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[n] = 255 & t), (this[n + 1] = t >>> 8))
              : I(this, t, n, !0),
            n + 2
          );
        }),
        (u.prototype.writeUInt16BE = function e(t, n, i) {
          return (
            (t = +t),
            (n |= 0),
            i || W(this, t, n, 2, 65535, 0),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[n] = t >>> 8), (this[n + 1] = 255 & t))
              : I(this, t, n, !1),
            n + 2
          );
        }),
        (u.prototype.writeUInt32LE = function e(t, n, i) {
          return (
            (t = +t),
            (n |= 0),
            i || W(this, t, n, 4, 4294967295, 0),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[n + 3] = t >>> 24),
                (this[n + 2] = t >>> 16),
                (this[n + 1] = t >>> 8),
                (this[n] = 255 & t))
              : q(this, t, n, !0),
            n + 4
          );
        }),
        (u.prototype.writeUInt32BE = function e(t, n, i) {
          return (
            (t = +t),
            (n |= 0),
            i || W(this, t, n, 4, 4294967295, 0),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[n] = t >>> 24),
                (this[n + 1] = t >>> 16),
                (this[n + 2] = t >>> 8),
                (this[n + 3] = 255 & t))
              : q(this, t, n, !1),
            n + 4
          );
        }),
        (u.prototype.writeIntLE = function e(t, n, i, r) {
          if (((t = +t), (n |= 0), !r)) {
            var a = Math.pow(2, 8 * i - 1);
            W(this, t, n, i, a - 1, -a);
          }
          var o = 0,
            s = 1,
            c = 0;
          this[n] = 255 & t;
          while (++o < i && (s *= 256))
            t < 0 && 0 === c && 0 !== this[n + o - 1] && (c = 1),
              (this[n + o] = (((t / s) >> 0) - c) & 255);
          return n + i;
        }),
        (u.prototype.writeIntBE = function e(t, n, i, r) {
          if (((t = +t), (n |= 0), !r)) {
            var a = Math.pow(2, 8 * i - 1);
            W(this, t, n, i, a - 1, -a);
          }
          var o = i - 1,
            s = 1,
            c = 0;
          this[n + o] = 255 & t;
          while (--o >= 0 && (s *= 256))
            t < 0 && 0 === c && 0 !== this[n + o + 1] && (c = 1),
              (this[n + o] = (((t / s) >> 0) - c) & 255);
          return n + i;
        }),
        (u.prototype.writeInt8 = function e(t, n, i) {
          return (
            (t = +t),
            (n |= 0),
            i || W(this, t, n, 1, 127, -128),
            u.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)),
            t < 0 && (t = 255 + t + 1),
            (this[n] = 255 & t),
            n + 1
          );
        }),
        (u.prototype.writeInt16LE = function e(t, n, i) {
          return (
            (t = +t),
            (n |= 0),
            i || W(this, t, n, 2, 32767, -32768),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[n] = 255 & t), (this[n + 1] = t >>> 8))
              : I(this, t, n, !0),
            n + 2
          );
        }),
        (u.prototype.writeInt16BE = function e(t, n, i) {
          return (
            (t = +t),
            (n |= 0),
            i || W(this, t, n, 2, 32767, -32768),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[n] = t >>> 8), (this[n + 1] = 255 & t))
              : I(this, t, n, !1),
            n + 2
          );
        }),
        (u.prototype.writeInt32LE = function e(t, n, i) {
          return (
            (t = +t),
            (n |= 0),
            i || W(this, t, n, 4, 2147483647, -2147483648),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[n] = 255 & t),
                (this[n + 1] = t >>> 8),
                (this[n + 2] = t >>> 16),
                (this[n + 3] = t >>> 24))
              : q(this, t, n, !0),
            n + 4
          );
        }),
        (u.prototype.writeInt32BE = function e(t, n, i) {
          return (
            (t = +t),
            (n |= 0),
            i || W(this, t, n, 4, 2147483647, -2147483648),
            t < 0 && (t = 4294967295 + t + 1),
            u.TYPED_ARRAY_SUPPORT
              ? ((this[n] = t >>> 24),
                (this[n + 1] = t >>> 16),
                (this[n + 2] = t >>> 8),
                (this[n + 3] = 255 & t))
              : q(this, t, n, !1),
            n + 4
          );
        }),
        (u.prototype.writeFloatLE = function e(t, n, i) {
          return F(this, t, n, !0, i);
        }),
        (u.prototype.writeFloatBE = function e(t, n, i) {
          return F(this, t, n, !1, i);
        }),
        (u.prototype.writeDoubleLE = function e(t, n, i) {
          return U(this, t, n, !0, i);
        }),
        (u.prototype.writeDoubleBE = function e(t, n, i) {
          return U(this, t, n, !1, i);
        }),
        (u.prototype.copy = function e(t, n, i, r) {
          if (
            (i || (i = 0),
            r || 0 === r || (r = this.length),
            n >= t.length && (n = t.length),
            n || (n = 0),
            r > 0 && r < i && (r = i),
            r === i)
          )
            return 0;
          if (0 === t.length || 0 === this.length) return 0;
          if (n < 0) throw new RangeError('targetStart out of bounds');
          if (i < 0 || i >= this.length)
            throw new RangeError('sourceStart out of bounds');
          if (r < 0) throw new RangeError('sourceEnd out of bounds');
          r > this.length && (r = this.length),
            t.length - n < r - i && (r = t.length - n + i);
          var a,
            o = r - i;
          if (this === t && i < n && n < r)
            for (a = o - 1; a >= 0; --a) t[a + n] = this[a + i];
          else if (o < 1e3 || !u.TYPED_ARRAY_SUPPORT)
            for (a = 0; a < o; ++a) t[a + n] = this[a + i];
          else Uint8Array.prototype.set.call(t, this.subarray(i, i + o), n);
          return o;
        }),
        (u.prototype.fill = function e(t, n, i, r) {
          if ('string' === typeof t) {
            if (
              ('string' === typeof n
                ? ((r = n), (n = 0), (i = this.length))
                : 'string' === typeof i && ((r = i), (i = this.length)),
              1 === t.length)
            ) {
              var a = t.charCodeAt(0);
              a < 256 && (t = a);
            }
            if (void 0 !== r && 'string' !== typeof r)
              throw new TypeError('encoding must be a string');
            if ('string' === typeof r && !u.isEncoding(r))
              throw new TypeError('Unknown encoding: ' + r);
          } else 'number' === typeof t && (t &= 255);
          if (n < 0 || this.length < n || this.length < i)
            throw new RangeError('Out of range index');
          if (i <= n) return this;
          var o;
          if (
            ((n >>>= 0),
            (i = void 0 === i ? this.length : i >>> 0),
            t || (t = 0),
            'number' === typeof t)
          )
            for (o = n; o < i; ++o) this[o] = t;
          else {
            var s = u.isBuffer(t) ? t : Z(new u(t, r).toString()),
              c = s.length;
            for (o = 0; o < i - n; ++o) this[o + n] = s[o % c];
          }
          return this;
        });
      var X = /[^+\/0-9A-Za-z-_]/g;
      function V(e) {
        if (((e = G(e).replace(X, '')), e.length < 2)) return '';
        while (e.length % 4 !== 0) e += '=';
        return e;
      }
      function G(e) {
        return e.trim ? e.trim() : e.replace(/^\s+|\s+$/g, '');
      }
      function J(e) {
        return e < 16 ? '0' + e.toString(16) : e.toString(16);
      }
      function Z(e, t) {
        var n;
        t = t || 1 / 0;
        for (var i = e.length, r = null, a = [], o = 0; o < i; ++o) {
          if (((n = e.charCodeAt(o)), n > 55295 && n < 57344)) {
            if (!r) {
              if (n > 56319) {
                (t -= 3) > -1 && a.push(239, 191, 189);
                continue;
              }
              if (o + 1 === i) {
                (t -= 3) > -1 && a.push(239, 191, 189);
                continue;
              }
              r = n;
              continue;
            }
            if (n < 56320) {
              (t -= 3) > -1 && a.push(239, 191, 189), (r = n);
              continue;
            }
            n = (((r - 55296) << 10) | (n - 56320)) + 65536;
          } else r && (t -= 3) > -1 && a.push(239, 191, 189);
          if (((r = null), n < 128)) {
            if ((t -= 1) < 0) break;
            a.push(n);
          } else if (n < 2048) {
            if ((t -= 2) < 0) break;
            a.push((n >> 6) | 192, (63 & n) | 128);
          } else if (n < 65536) {
            if ((t -= 3) < 0) break;
            a.push((n >> 12) | 224, ((n >> 6) & 63) | 128, (63 & n) | 128);
          } else {
            if (!(n < 1114112)) throw new Error('Invalid code point');
            if ((t -= 4) < 0) break;
            a.push(
              (n >> 18) | 240,
              ((n >> 12) & 63) | 128,
              ((n >> 6) & 63) | 128,
              (63 & n) | 128
            );
          }
        }
        return a;
      }
      function K(e) {
        for (var t = [], n = 0; n < e.length; ++n)
          t.push(255 & e.charCodeAt(n));
        return t;
      }
      function Q(e, t) {
        for (var n, i, r, a = [], o = 0; o < e.length; ++o) {
          if ((t -= 2) < 0) break;
          (n = e.charCodeAt(o)),
            (i = n >> 8),
            (r = n % 256),
            a.push(r),
            a.push(i);
        }
        return a;
      }
      function $(e) {
        return i.toByteArray(V(e));
      }
      function ee(e, t, n, i) {
        for (var r = 0; r < i; ++r) {
          if (r + n >= t.length || r >= e.length) break;
          t[r + n] = e[r];
        }
        return r;
      }
      function te(e) {
        return e !== e;
      }
    }.call(this, n('../../../node_modules/webpack/buildin/global.js')));
  },
  '../../../node_modules/node-libs-browser/node_modules/string_decoder/lib/string_decoder.js': function (
    e,
    t,
    n
  ) {
    'use strict';
    var i = n('../../../node_modules/safe-buffer/index.js').Buffer,
      r =
        i.isEncoding ||
        function (e) {
          switch (((e = '' + e), e && e.toLowerCase())) {
            case 'hex':
            case 'utf8':
            case 'utf-8':
            case 'ascii':
            case 'binary':
            case 'base64':
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
            case 'raw':
              return !0;
            default:
              return !1;
          }
        };
    function a(e) {
      if (!e) return 'utf8';
      var t;
      while (1)
        switch (e) {
          case 'utf8':
          case 'utf-8':
            return 'utf8';
          case 'ucs2':
          case 'ucs-2':
          case 'utf16le':
          case 'utf-16le':
            return 'utf16le';
          case 'latin1':
          case 'binary':
            return 'latin1';
          case 'base64':
          case 'ascii':
          case 'hex':
            return e;
          default:
            if (t) return;
            (e = ('' + e).toLowerCase()), (t = !0);
        }
    }
    function o(e) {
      var t = a(e);
      if ('string' !== typeof t && (i.isEncoding === r || !r(e)))
        throw new Error('Unknown encoding: ' + e);
      return t || e;
    }
    function s(e) {
      var t;
      switch (((this.encoding = o(e)), this.encoding)) {
        case 'utf16le':
          (this.text = m), (this.end = f), (t = 4);
          break;
        case 'utf8':
          (this.fillLast = d), (t = 4);
          break;
        case 'base64':
          (this.text = _), (this.end = M), (t = 3);
          break;
        default:
          return (this.write = v), (this.end = g), void 0;
      }
      (this.lastNeed = 0),
        (this.lastTotal = 0),
        (this.lastChar = i.allocUnsafe(t));
    }
    function c(e) {
      return e <= 127
        ? 0
        : e >> 5 === 6
        ? 2
        : e >> 4 === 14
        ? 3
        : e >> 3 === 30
        ? 4
        : e >> 6 === 2
        ? -1
        : -2;
    }
    function u(e, t, n) {
      var i = t.length - 1;
      if (i < n) return 0;
      var r = c(t[i]);
      return r >= 0
        ? (r > 0 && (e.lastNeed = r - 1), r)
        : --i < n || -2 === r
        ? 0
        : ((r = c(t[i])),
          r >= 0
            ? (r > 0 && (e.lastNeed = r - 2), r)
            : --i < n || -2 === r
            ? 0
            : ((r = c(t[i])),
              r >= 0
                ? (r > 0 && (2 === r ? (r = 0) : (e.lastNeed = r - 3)), r)
                : 0));
    }
    function l(e, t, n) {
      if (128 !== (192 & t[0])) return (e.lastNeed = 0), '�';
      if (e.lastNeed > 1 && t.length > 1) {
        if (128 !== (192 & t[1])) return (e.lastNeed = 1), '�';
        if (e.lastNeed > 2 && t.length > 2 && 128 !== (192 & t[2]))
          return (e.lastNeed = 2), '�';
      }
    }
    function d(e) {
      var t = this.lastTotal - this.lastNeed,
        n = l(this, e, t);
      return void 0 !== n
        ? n
        : this.lastNeed <= e.length
        ? (e.copy(this.lastChar, t, 0, this.lastNeed),
          this.lastChar.toString(this.encoding, 0, this.lastTotal))
        : (e.copy(this.lastChar, t, 0, e.length),
          (this.lastNeed -= e.length),
          void 0);
    }
    function h(e, t) {
      var n = u(this, e, t);
      if (!this.lastNeed) return e.toString('utf8', t);
      this.lastTotal = n;
      var i = e.length - (n - this.lastNeed);
      return e.copy(this.lastChar, 0, i), e.toString('utf8', t, i);
    }
    function p(e) {
      var t = e && e.length ? this.write(e) : '';
      return this.lastNeed ? t + '�' : t;
    }
    function m(e, t) {
      if ((e.length - t) % 2 === 0) {
        var n = e.toString('utf16le', t);
        if (n) {
          var i = n.charCodeAt(n.length - 1);
          if (i >= 55296 && i <= 56319)
            return (
              (this.lastNeed = 2),
              (this.lastTotal = 4),
              (this.lastChar[0] = e[e.length - 2]),
              (this.lastChar[1] = e[e.length - 1]),
              n.slice(0, -1)
            );
        }
        return n;
      }
      return (
        (this.lastNeed = 1),
        (this.lastTotal = 2),
        (this.lastChar[0] = e[e.length - 1]),
        e.toString('utf16le', t, e.length - 1)
      );
    }
    function f(e) {
      var t = e && e.length ? this.write(e) : '';
      if (this.lastNeed) {
        var n = this.lastTotal - this.lastNeed;
        return t + this.lastChar.toString('utf16le', 0, n);
      }
      return t;
    }
    function _(e, t) {
      var n = (e.length - t) % 3;
      return 0 === n
        ? e.toString('base64', t)
        : ((this.lastNeed = 3 - n),
          (this.lastTotal = 3),
          1 === n
            ? (this.lastChar[0] = e[e.length - 1])
            : ((this.lastChar[0] = e[e.length - 2]),
              (this.lastChar[1] = e[e.length - 1])),
          e.toString('base64', t, e.length - n));
    }
    function M(e) {
      var t = e && e.length ? this.write(e) : '';
      return this.lastNeed
        ? t + this.lastChar.toString('base64', 0, 3 - this.lastNeed)
        : t;
    }
    function v(e) {
      return e.toString(this.encoding);
    }
    function g(e) {
      return e && e.length ? this.write(e) : '';
    }
    (t.StringDecoder = s),
      (s.prototype.write = function (e) {
        if (0 === e.length) return '';
        var t, n;
        if (this.lastNeed) {
          if (((t = this.fillLast(e)), void 0 === t)) return '';
          (n = this.lastNeed), (this.lastNeed = 0);
        } else n = 0;
        return n < e.length
          ? t
            ? t + this.text(e, n)
            : this.text(e, n)
          : t || '';
      }),
      (s.prototype.end = p),
      (s.prototype.text = h),
      (s.prototype.fillLast = function (e) {
        if (this.lastNeed <= e.length)
          return (
            e.copy(
              this.lastChar,
              this.lastTotal - this.lastNeed,
              0,
              this.lastNeed
            ),
            this.lastChar.toString(this.encoding, 0, this.lastTotal)
          );
        e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, e.length),
          (this.lastNeed -= e.length);
      });
  },
  '../../../node_modules/pako/index.js': function (e, t, n) {
    'use strict';
    var i = n('../../../node_modules/pako/lib/utils/common.js').assign,
      r = n('../../../node_modules/pako/lib/deflate.js'),
      a = n('../../../node_modules/pako/lib/inflate.js'),
      o = n('../../../node_modules/pako/lib/zlib/constants.js'),
      s = {};
    i(s, r, a, o), (e.exports = s);
  },
  '../../../node_modules/pako/lib/deflate.js': function (e, t, n) {
    'use strict';
    var i = n('../../../node_modules/pako/lib/zlib/deflate.js'),
      r = n('../../../node_modules/pako/lib/utils/common.js'),
      a = n('../../../node_modules/pako/lib/utils/strings.js'),
      o = n('../../../node_modules/pako/lib/zlib/messages.js'),
      s = n('../../../node_modules/pako/lib/zlib/zstream.js'),
      c = Object.prototype.toString,
      u = 0,
      l = 4,
      d = 0,
      h = 1,
      p = 2,
      m = -1,
      f = 0,
      _ = 8;
    function M(e) {
      if (!(this instanceof M)) return new M(e);
      this.options = r.assign(
        {
          level: m,
          method: _,
          chunkSize: 16384,
          windowBits: 15,
          memLevel: 8,
          strategy: f,
          to: '',
        },
        e || {}
      );
      var t = this.options;
      t.raw && t.windowBits > 0
        ? (t.windowBits = -t.windowBits)
        : t.gzip &&
          t.windowBits > 0 &&
          t.windowBits < 16 &&
          (t.windowBits += 16),
        (this.err = 0),
        (this.msg = ''),
        (this.ended = !1),
        (this.chunks = []),
        (this.strm = new s()),
        (this.strm.avail_out = 0);
      var n = i.deflateInit2(
        this.strm,
        t.level,
        t.method,
        t.windowBits,
        t.memLevel,
        t.strategy
      );
      if (n !== d) throw new Error(o[n]);
      if ((t.header && i.deflateSetHeader(this.strm, t.header), t.dictionary)) {
        var u;
        if (
          ((u =
            'string' === typeof t.dictionary
              ? a.string2buf(t.dictionary)
              : '[object ArrayBuffer]' === c.call(t.dictionary)
              ? new Uint8Array(t.dictionary)
              : t.dictionary),
          (n = i.deflateSetDictionary(this.strm, u)),
          n !== d)
        )
          throw new Error(o[n]);
        this._dict_set = !0;
      }
    }
    function v(e, t) {
      var n = new M(t);
      if ((n.push(e, !0), n.err)) throw n.msg || o[n.err];
      return n.result;
    }
    function g(e, t) {
      return (t = t || {}), (t.raw = !0), v(e, t);
    }
    function y(e, t) {
      return (t = t || {}), (t.gzip = !0), v(e, t);
    }
    (M.prototype.push = function (e, t) {
      var n,
        o,
        s = this.strm,
        m = this.options.chunkSize;
      if (this.ended) return !1;
      (o = t === ~~t ? t : !0 === t ? l : u),
        'string' === typeof e
          ? (s.input = a.string2buf(e))
          : '[object ArrayBuffer]' === c.call(e)
          ? (s.input = new Uint8Array(e))
          : (s.input = e),
        (s.next_in = 0),
        (s.avail_in = s.input.length);
      do {
        if (
          (0 === s.avail_out &&
            ((s.output = new r.Buf8(m)), (s.next_out = 0), (s.avail_out = m)),
          (n = i.deflate(s, o)),
          n !== h && n !== d)
        )
          return this.onEnd(n), (this.ended = !0), !1;
        (0 !== s.avail_out && (0 !== s.avail_in || (o !== l && o !== p))) ||
          ('string' === this.options.to
            ? this.onData(a.buf2binstring(r.shrinkBuf(s.output, s.next_out)))
            : this.onData(r.shrinkBuf(s.output, s.next_out)));
      } while ((s.avail_in > 0 || 0 === s.avail_out) && n !== h);
      return o === l
        ? ((n = i.deflateEnd(this.strm)),
          this.onEnd(n),
          (this.ended = !0),
          n === d)
        : o !== p || (this.onEnd(d), (s.avail_out = 0), !0);
    }),
      (M.prototype.onData = function (e) {
        this.chunks.push(e);
      }),
      (M.prototype.onEnd = function (e) {
        e === d &&
          ('string' === this.options.to
            ? (this.result = this.chunks.join(''))
            : (this.result = r.flattenChunks(this.chunks))),
          (this.chunks = []),
          (this.err = e),
          (this.msg = this.strm.msg);
      }),
      (t.Deflate = M),
      (t.deflate = v),
      (t.deflateRaw = g),
      (t.gzip = y);
  },
  '../../../node_modules/pako/lib/inflate.js': function (e, t, n) {
    'use strict';
    var i = n('../../../node_modules/pako/lib/zlib/inflate.js'),
      r = n('../../../node_modules/pako/lib/utils/common.js'),
      a = n('../../../node_modules/pako/lib/utils/strings.js'),
      o = n('../../../node_modules/pako/lib/zlib/constants.js'),
      s = n('../../../node_modules/pako/lib/zlib/messages.js'),
      c = n('../../../node_modules/pako/lib/zlib/zstream.js'),
      u = n('../../../node_modules/pako/lib/zlib/gzheader.js'),
      l = Object.prototype.toString;
    function d(e) {
      if (!(this instanceof d)) return new d(e);
      this.options = r.assign(
        { chunkSize: 16384, windowBits: 0, to: '' },
        e || {}
      );
      var t = this.options;
      t.raw &&
        t.windowBits >= 0 &&
        t.windowBits < 16 &&
        ((t.windowBits = -t.windowBits),
        0 === t.windowBits && (t.windowBits = -15)),
        !(t.windowBits >= 0 && t.windowBits < 16) ||
          (e && e.windowBits) ||
          (t.windowBits += 32),
        t.windowBits > 15 &&
          t.windowBits < 48 &&
          0 === (15 & t.windowBits) &&
          (t.windowBits |= 15),
        (this.err = 0),
        (this.msg = ''),
        (this.ended = !1),
        (this.chunks = []),
        (this.strm = new c()),
        (this.strm.avail_out = 0);
      var n = i.inflateInit2(this.strm, t.windowBits);
      if (n !== o.Z_OK) throw new Error(s[n]);
      if (
        ((this.header = new u()),
        i.inflateGetHeader(this.strm, this.header),
        t.dictionary &&
          ('string' === typeof t.dictionary
            ? (t.dictionary = a.string2buf(t.dictionary))
            : '[object ArrayBuffer]' === l.call(t.dictionary) &&
              (t.dictionary = new Uint8Array(t.dictionary)),
          t.raw &&
            ((n = i.inflateSetDictionary(this.strm, t.dictionary)),
            n !== o.Z_OK)))
      )
        throw new Error(s[n]);
    }
    function h(e, t) {
      var n = new d(t);
      if ((n.push(e, !0), n.err)) throw n.msg || s[n.err];
      return n.result;
    }
    function p(e, t) {
      return (t = t || {}), (t.raw = !0), h(e, t);
    }
    (d.prototype.push = function (e, t) {
      var n,
        s,
        c,
        u,
        d,
        h = this.strm,
        p = this.options.chunkSize,
        m = this.options.dictionary,
        f = !1;
      if (this.ended) return !1;
      (s = t === ~~t ? t : !0 === t ? o.Z_FINISH : o.Z_NO_FLUSH),
        'string' === typeof e
          ? (h.input = a.binstring2buf(e))
          : '[object ArrayBuffer]' === l.call(e)
          ? (h.input = new Uint8Array(e))
          : (h.input = e),
        (h.next_in = 0),
        (h.avail_in = h.input.length);
      do {
        if (
          (0 === h.avail_out &&
            ((h.output = new r.Buf8(p)), (h.next_out = 0), (h.avail_out = p)),
          (n = i.inflate(h, o.Z_NO_FLUSH)),
          n === o.Z_NEED_DICT &&
            m &&
            (n = i.inflateSetDictionary(this.strm, m)),
          n === o.Z_BUF_ERROR && !0 === f && ((n = o.Z_OK), (f = !1)),
          n !== o.Z_STREAM_END && n !== o.Z_OK)
        )
          return this.onEnd(n), (this.ended = !0), !1;
        h.next_out &&
          ((0 !== h.avail_out &&
            n !== o.Z_STREAM_END &&
            (0 !== h.avail_in || (s !== o.Z_FINISH && s !== o.Z_SYNC_FLUSH))) ||
            ('string' === this.options.to
              ? ((c = a.utf8border(h.output, h.next_out)),
                (u = h.next_out - c),
                (d = a.buf2string(h.output, c)),
                (h.next_out = u),
                (h.avail_out = p - u),
                u && r.arraySet(h.output, h.output, c, u, 0),
                this.onData(d))
              : this.onData(r.shrinkBuf(h.output, h.next_out)))),
          0 === h.avail_in && 0 === h.avail_out && (f = !0);
      } while ((h.avail_in > 0 || 0 === h.avail_out) && n !== o.Z_STREAM_END);
      return (
        n === o.Z_STREAM_END && (s = o.Z_FINISH),
        s === o.Z_FINISH
          ? ((n = i.inflateEnd(this.strm)),
            this.onEnd(n),
            (this.ended = !0),
            n === o.Z_OK)
          : s !== o.Z_SYNC_FLUSH || (this.onEnd(o.Z_OK), (h.avail_out = 0), !0)
      );
    }),
      (d.prototype.onData = function (e) {
        this.chunks.push(e);
      }),
      (d.prototype.onEnd = function (e) {
        e === o.Z_OK &&
          ('string' === this.options.to
            ? (this.result = this.chunks.join(''))
            : (this.result = r.flattenChunks(this.chunks))),
          (this.chunks = []),
          (this.err = e),
          (this.msg = this.strm.msg);
      }),
      (t.Inflate = d),
      (t.inflate = h),
      (t.inflateRaw = p),
      (t.ungzip = h);
  },
  '../../../node_modules/pako/lib/utils/common.js': function (e, t, n) {
    'use strict';
    var i =
      'undefined' !== typeof Uint8Array &&
      'undefined' !== typeof Uint16Array &&
      'undefined' !== typeof Int32Array;
    function r(e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }
    (t.assign = function (e) {
      var t = Array.prototype.slice.call(arguments, 1);
      while (t.length) {
        var n = t.shift();
        if (n) {
          if ('object' !== typeof n)
            throw new TypeError(n + 'must be non-object');
          for (var i in n) r(n, i) && (e[i] = n[i]);
        }
      }
      return e;
    }),
      (t.shrinkBuf = function (e, t) {
        return e.length === t
          ? e
          : e.subarray
          ? e.subarray(0, t)
          : ((e.length = t), e);
      });
    var a = {
        arraySet: function (e, t, n, i, r) {
          if (t.subarray && e.subarray)
            return e.set(t.subarray(n, n + i), r), void 0;
          for (var a = 0; a < i; a++) e[r + a] = t[n + a];
        },
        flattenChunks: function (e) {
          var t, n, i, r, a, o;
          for (i = 0, t = 0, n = e.length; t < n; t++) i += e[t].length;
          for (o = new Uint8Array(i), r = 0, t = 0, n = e.length; t < n; t++)
            (a = e[t]), o.set(a, r), (r += a.length);
          return o;
        },
      },
      o = {
        arraySet: function (e, t, n, i, r) {
          for (var a = 0; a < i; a++) e[r + a] = t[n + a];
        },
        flattenChunks: function (e) {
          return [].concat.apply([], e);
        },
      };
    (t.setTyped = function (e) {
      e
        ? ((t.Buf8 = Uint8Array),
          (t.Buf16 = Uint16Array),
          (t.Buf32 = Int32Array),
          t.assign(t, a))
        : ((t.Buf8 = Array),
          (t.Buf16 = Array),
          (t.Buf32 = Array),
          t.assign(t, o));
    }),
      t.setTyped(i);
  },
  '../../../node_modules/pako/lib/utils/strings.js': function (e, t, n) {
    'use strict';
    var i = n('../../../node_modules/pako/lib/utils/common.js'),
      r = !0,
      a = !0;
    try {
      String.fromCharCode.apply(null, [0]);
    } catch (e) {
      r = !1;
    }
    try {
      String.fromCharCode.apply(null, new Uint8Array(1));
    } catch (e) {
      a = !1;
    }
    for (var o = new i.Buf8(256), s = 0; s < 256; s++)
      o[s] =
        s >= 252
          ? 6
          : s >= 248
          ? 5
          : s >= 240
          ? 4
          : s >= 224
          ? 3
          : s >= 192
          ? 2
          : 1;
    function c(e, t) {
      if (t < 65534 && ((e.subarray && a) || (!e.subarray && r)))
        return String.fromCharCode.apply(null, i.shrinkBuf(e, t));
      for (var n = '', o = 0; o < t; o++) n += String.fromCharCode(e[o]);
      return n;
    }
    (o[254] = o[254] = 1),
      (t.string2buf = function (e) {
        var t,
          n,
          r,
          a,
          o,
          s = e.length,
          c = 0;
        for (a = 0; a < s; a++)
          (n = e.charCodeAt(a)),
            55296 === (64512 & n) &&
              a + 1 < s &&
              ((r = e.charCodeAt(a + 1)),
              56320 === (64512 & r) &&
                ((n = 65536 + ((n - 55296) << 10) + (r - 56320)), a++)),
            (c += n < 128 ? 1 : n < 2048 ? 2 : n < 65536 ? 3 : 4);
        for (t = new i.Buf8(c), o = 0, a = 0; o < c; a++)
          (n = e.charCodeAt(a)),
            55296 === (64512 & n) &&
              a + 1 < s &&
              ((r = e.charCodeAt(a + 1)),
              56320 === (64512 & r) &&
                ((n = 65536 + ((n - 55296) << 10) + (r - 56320)), a++)),
            n < 128
              ? (t[o++] = n)
              : n < 2048
              ? ((t[o++] = 192 | (n >>> 6)), (t[o++] = 128 | (63 & n)))
              : n < 65536
              ? ((t[o++] = 224 | (n >>> 12)),
                (t[o++] = 128 | ((n >>> 6) & 63)),
                (t[o++] = 128 | (63 & n)))
              : ((t[o++] = 240 | (n >>> 18)),
                (t[o++] = 128 | ((n >>> 12) & 63)),
                (t[o++] = 128 | ((n >>> 6) & 63)),
                (t[o++] = 128 | (63 & n)));
        return t;
      }),
      (t.buf2binstring = function (e) {
        return c(e, e.length);
      }),
      (t.binstring2buf = function (e) {
        for (var t = new i.Buf8(e.length), n = 0, r = t.length; n < r; n++)
          t[n] = e.charCodeAt(n);
        return t;
      }),
      (t.buf2string = function (e, t) {
        var n,
          i,
          r,
          a,
          s = t || e.length,
          u = new Array(2 * s);
        for (i = 0, n = 0; n < s; )
          if (((r = e[n++]), r < 128)) u[i++] = r;
          else if (((a = o[r]), a > 4)) (u[i++] = 65533), (n += a - 1);
          else {
            r &= 2 === a ? 31 : 3 === a ? 15 : 7;
            while (a > 1 && n < s) (r = (r << 6) | (63 & e[n++])), a--;
            a > 1
              ? (u[i++] = 65533)
              : r < 65536
              ? (u[i++] = r)
              : ((r -= 65536),
                (u[i++] = 55296 | ((r >> 10) & 1023)),
                (u[i++] = 56320 | (1023 & r)));
          }
        return c(u, i);
      }),
      (t.utf8border = function (e, t) {
        var n;
        (t = t || e.length), t > e.length && (t = e.length), (n = t - 1);
        while (n >= 0 && 128 === (192 & e[n])) n--;
        return n < 0 || 0 === n ? t : n + o[e[n]] > t ? n : t;
      });
  },
  '../../../node_modules/pako/lib/zlib/adler32.js': function (e, t, n) {
    'use strict';
    function i(e, t, n, i) {
      var r = (65535 & e) | 0,
        a = ((e >>> 16) & 65535) | 0,
        o = 0;
      while (0 !== n) {
        (o = n > 2e3 ? 2e3 : n), (n -= o);
        do {
          (r = (r + t[i++]) | 0), (a = (a + r) | 0);
        } while (--o);
        (r %= 65521), (a %= 65521);
      }
      return r | (a << 16) | 0;
    }
    e.exports = i;
  },
  '../../../node_modules/pako/lib/zlib/constants.js': function (e, t, n) {
    'use strict';
    e.exports = {
      Z_NO_FLUSH: 0,
      Z_PARTIAL_FLUSH: 1,
      Z_SYNC_FLUSH: 2,
      Z_FULL_FLUSH: 3,
      Z_FINISH: 4,
      Z_BLOCK: 5,
      Z_TREES: 6,
      Z_OK: 0,
      Z_STREAM_END: 1,
      Z_NEED_DICT: 2,
      Z_ERRNO: -1,
      Z_STREAM_ERROR: -2,
      Z_DATA_ERROR: -3,
      Z_BUF_ERROR: -5,
      Z_NO_COMPRESSION: 0,
      Z_BEST_SPEED: 1,
      Z_BEST_COMPRESSION: 9,
      Z_DEFAULT_COMPRESSION: -1,
      Z_FILTERED: 1,
      Z_HUFFMAN_ONLY: 2,
      Z_RLE: 3,
      Z_FIXED: 4,
      Z_DEFAULT_STRATEGY: 0,
      Z_BINARY: 0,
      Z_TEXT: 1,
      Z_UNKNOWN: 2,
      Z_DEFLATED: 8,
    };
  },
  '../../../node_modules/pako/lib/zlib/crc32.js': function (e, t, n) {
    'use strict';
    function i() {
      for (var e, t = [], n = 0; n < 256; n++) {
        e = n;
        for (var i = 0; i < 8; i++)
          e = 1 & e ? 3988292384 ^ (e >>> 1) : e >>> 1;
        t[n] = e;
      }
      return t;
    }
    var r = i();
    function a(e, t, n, i) {
      var a = r,
        o = i + n;
      e ^= -1;
      for (var s = i; s < o; s++) e = (e >>> 8) ^ a[255 & (e ^ t[s])];
      return -1 ^ e;
    }
    e.exports = a;
  },
  '../../../node_modules/pako/lib/zlib/deflate.js': function (e, t, n) {
    'use strict';
    var i,
      r = n('../../../node_modules/pako/lib/utils/common.js'),
      a = n('../../../node_modules/pako/lib/zlib/trees.js'),
      o = n('../../../node_modules/pako/lib/zlib/adler32.js'),
      s = n('../../../node_modules/pako/lib/zlib/crc32.js'),
      c = n('../../../node_modules/pako/lib/zlib/messages.js'),
      u = 0,
      l = 1,
      d = 3,
      h = 4,
      p = 5,
      m = 0,
      f = 1,
      _ = -2,
      M = -3,
      v = -5,
      g = -1,
      y = 1,
      b = 2,
      w = 3,
      A = 4,
      x = 0,
      L = 2,
      T = 8,
      z = 9,
      S = 15,
      O = 8,
      E = 29,
      k = 256,
      C = k + 1 + E,
      D = 30,
      N = 19,
      P = 2 * C + 1,
      j = 15,
      Y = 3,
      R = 258,
      B = R + Y + 1,
      W = 32,
      I = 42,
      q = 69,
      H = 73,
      F = 91,
      U = 103,
      X = 113,
      V = 666,
      G = 1,
      J = 2,
      Z = 3,
      K = 4,
      Q = 3;
    function $(e, t) {
      return (e.msg = c[t]), t;
    }
    function ee(e) {
      return (e << 1) - (e > 4 ? 9 : 0);
    }
    function te(e) {
      var t = e.length;
      while (--t >= 0) e[t] = 0;
    }
    function ne(e) {
      var t = e.state,
        n = t.pending;
      n > e.avail_out && (n = e.avail_out),
        0 !== n &&
          (r.arraySet(e.output, t.pending_buf, t.pending_out, n, e.next_out),
          (e.next_out += n),
          (t.pending_out += n),
          (e.total_out += n),
          (e.avail_out -= n),
          (t.pending -= n),
          0 === t.pending && (t.pending_out = 0));
    }
    function ie(e, t) {
      a._tr_flush_block(
        e,
        e.block_start >= 0 ? e.block_start : -1,
        e.strstart - e.block_start,
        t
      ),
        (e.block_start = e.strstart),
        ne(e.strm);
    }
    function re(e, t) {
      e.pending_buf[e.pending++] = t;
    }
    function ae(e, t) {
      (e.pending_buf[e.pending++] = (t >>> 8) & 255),
        (e.pending_buf[e.pending++] = 255 & t);
    }
    function oe(e, t, n, i) {
      var a = e.avail_in;
      return (
        a > i && (a = i),
        0 === a
          ? 0
          : ((e.avail_in -= a),
            r.arraySet(t, e.input, e.next_in, a, n),
            1 === e.state.wrap
              ? (e.adler = o(e.adler, t, a, n))
              : 2 === e.state.wrap && (e.adler = s(e.adler, t, a, n)),
            (e.next_in += a),
            (e.total_in += a),
            a)
      );
    }
    function se(e, t) {
      var n,
        i,
        r = e.max_chain_length,
        a = e.strstart,
        o = e.prev_length,
        s = e.nice_match,
        c = e.strstart > e.w_size - B ? e.strstart - (e.w_size - B) : 0,
        u = e.window,
        l = e.w_mask,
        d = e.prev,
        h = e.strstart + R,
        p = u[a + o - 1],
        m = u[a + o];
      e.prev_length >= e.good_match && (r >>= 2),
        s > e.lookahead && (s = e.lookahead);
      do {
        if (
          ((n = t),
          u[n + o] === m &&
            u[n + o - 1] === p &&
            u[n] === u[a] &&
            u[++n] === u[a + 1])
        ) {
          (a += 2), n++;
          do {} while (
            u[++a] === u[++n] &&
            u[++a] === u[++n] &&
            u[++a] === u[++n] &&
            u[++a] === u[++n] &&
            u[++a] === u[++n] &&
            u[++a] === u[++n] &&
            u[++a] === u[++n] &&
            u[++a] === u[++n] &&
            a < h
          );
          if (((i = R - (h - a)), (a = h - R), i > o)) {
            if (((e.match_start = t), (o = i), i >= s)) break;
            (p = u[a + o - 1]), (m = u[a + o]);
          }
        }
      } while ((t = d[t & l]) > c && 0 !== --r);
      return o <= e.lookahead ? o : e.lookahead;
    }
    function ce(e) {
      var t,
        n,
        i,
        a,
        o,
        s = e.w_size;
      do {
        if (
          ((a = e.window_size - e.lookahead - e.strstart),
          e.strstart >= s + (s - B))
        ) {
          r.arraySet(e.window, e.window, s, s, 0),
            (e.match_start -= s),
            (e.strstart -= s),
            (e.block_start -= s),
            (n = e.hash_size),
            (t = n);
          do {
            (i = e.head[--t]), (e.head[t] = i >= s ? i - s : 0);
          } while (--n);
          (n = s), (t = n);
          do {
            (i = e.prev[--t]), (e.prev[t] = i >= s ? i - s : 0);
          } while (--n);
          a += s;
        }
        if (0 === e.strm.avail_in) break;
        if (
          ((n = oe(e.strm, e.window, e.strstart + e.lookahead, a)),
          (e.lookahead += n),
          e.lookahead + e.insert >= Y)
        ) {
          (o = e.strstart - e.insert),
            (e.ins_h = e.window[o]),
            (e.ins_h =
              ((e.ins_h << e.hash_shift) ^ e.window[o + 1]) & e.hash_mask);
          while (e.insert)
            if (
              ((e.ins_h =
                ((e.ins_h << e.hash_shift) ^ e.window[o + Y - 1]) &
                e.hash_mask),
              (e.prev[o & e.w_mask] = e.head[e.ins_h]),
              (e.head[e.ins_h] = o),
              o++,
              e.insert--,
              e.lookahead + e.insert < Y)
            )
              break;
        }
      } while (e.lookahead < B && 0 !== e.strm.avail_in);
    }
    function ue(e, t) {
      var n = 65535;
      for (n > e.pending_buf_size - 5 && (n = e.pending_buf_size - 5); ; ) {
        if (e.lookahead <= 1) {
          if ((ce(e), 0 === e.lookahead && t === u)) return G;
          if (0 === e.lookahead) break;
        }
        (e.strstart += e.lookahead), (e.lookahead = 0);
        var i = e.block_start + n;
        if (
          (0 === e.strstart || e.strstart >= i) &&
          ((e.lookahead = e.strstart - i),
          (e.strstart = i),
          ie(e, !1),
          0 === e.strm.avail_out)
        )
          return G;
        if (
          e.strstart - e.block_start >= e.w_size - B &&
          (ie(e, !1), 0 === e.strm.avail_out)
        )
          return G;
      }
      return (
        (e.insert = 0),
        t === h
          ? (ie(e, !0), 0 === e.strm.avail_out ? Z : K)
          : (e.strstart > e.block_start && (ie(e, !1), 0 === e.strm.avail_out),
            G)
      );
    }
    function le(e, t) {
      for (var n, i; ; ) {
        if (e.lookahead < B) {
          if ((ce(e), e.lookahead < B && t === u)) return G;
          if (0 === e.lookahead) break;
        }
        if (
          ((n = 0),
          e.lookahead >= Y &&
            ((e.ins_h =
              ((e.ins_h << e.hash_shift) ^ e.window[e.strstart + Y - 1]) &
              e.hash_mask),
            (n = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h]),
            (e.head[e.ins_h] = e.strstart)),
          0 !== n &&
            e.strstart - n <= e.w_size - B &&
            (e.match_length = se(e, n)),
          e.match_length >= Y)
        )
          if (
            ((i = a._tr_tally(
              e,
              e.strstart - e.match_start,
              e.match_length - Y
            )),
            (e.lookahead -= e.match_length),
            e.match_length <= e.max_lazy_match && e.lookahead >= Y)
          ) {
            e.match_length--;
            do {
              e.strstart++,
                (e.ins_h =
                  ((e.ins_h << e.hash_shift) ^ e.window[e.strstart + Y - 1]) &
                  e.hash_mask),
                (n = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h]),
                (e.head[e.ins_h] = e.strstart);
            } while (0 !== --e.match_length);
            e.strstart++;
          } else
            (e.strstart += e.match_length),
              (e.match_length = 0),
              (e.ins_h = e.window[e.strstart]),
              (e.ins_h =
                ((e.ins_h << e.hash_shift) ^ e.window[e.strstart + 1]) &
                e.hash_mask);
        else
          (i = a._tr_tally(e, 0, e.window[e.strstart])),
            e.lookahead--,
            e.strstart++;
        if (i && (ie(e, !1), 0 === e.strm.avail_out)) return G;
      }
      return (
        (e.insert = e.strstart < Y - 1 ? e.strstart : Y - 1),
        t === h
          ? (ie(e, !0), 0 === e.strm.avail_out ? Z : K)
          : e.last_lit && (ie(e, !1), 0 === e.strm.avail_out)
          ? G
          : J
      );
    }
    function de(e, t) {
      for (var n, i, r; ; ) {
        if (e.lookahead < B) {
          if ((ce(e), e.lookahead < B && t === u)) return G;
          if (0 === e.lookahead) break;
        }
        if (
          ((n = 0),
          e.lookahead >= Y &&
            ((e.ins_h =
              ((e.ins_h << e.hash_shift) ^ e.window[e.strstart + Y - 1]) &
              e.hash_mask),
            (n = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h]),
            (e.head[e.ins_h] = e.strstart)),
          (e.prev_length = e.match_length),
          (e.prev_match = e.match_start),
          (e.match_length = Y - 1),
          0 !== n &&
            e.prev_length < e.max_lazy_match &&
            e.strstart - n <= e.w_size - B &&
            ((e.match_length = se(e, n)),
            e.match_length <= 5 &&
              (e.strategy === y ||
                (e.match_length === Y && e.strstart - e.match_start > 4096)) &&
              (e.match_length = Y - 1)),
          e.prev_length >= Y && e.match_length <= e.prev_length)
        ) {
          (r = e.strstart + e.lookahead - Y),
            (i = a._tr_tally(
              e,
              e.strstart - 1 - e.prev_match,
              e.prev_length - Y
            )),
            (e.lookahead -= e.prev_length - 1),
            (e.prev_length -= 2);
          do {
            ++e.strstart <= r &&
              ((e.ins_h =
                ((e.ins_h << e.hash_shift) ^ e.window[e.strstart + Y - 1]) &
                e.hash_mask),
              (n = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h]),
              (e.head[e.ins_h] = e.strstart));
          } while (0 !== --e.prev_length);
          if (
            ((e.match_available = 0),
            (e.match_length = Y - 1),
            e.strstart++,
            i && (ie(e, !1), 0 === e.strm.avail_out))
          )
            return G;
        } else if (e.match_available) {
          if (
            ((i = a._tr_tally(e, 0, e.window[e.strstart - 1])),
            i && ie(e, !1),
            e.strstart++,
            e.lookahead--,
            0 === e.strm.avail_out)
          )
            return G;
        } else (e.match_available = 1), e.strstart++, e.lookahead--;
      }
      return (
        e.match_available &&
          ((i = a._tr_tally(e, 0, e.window[e.strstart - 1])),
          (e.match_available = 0)),
        (e.insert = e.strstart < Y - 1 ? e.strstart : Y - 1),
        t === h
          ? (ie(e, !0), 0 === e.strm.avail_out ? Z : K)
          : e.last_lit && (ie(e, !1), 0 === e.strm.avail_out)
          ? G
          : J
      );
    }
    function he(e, t) {
      for (var n, i, r, o, s = e.window; ; ) {
        if (e.lookahead <= R) {
          if ((ce(e), e.lookahead <= R && t === u)) return G;
          if (0 === e.lookahead) break;
        }
        if (
          ((e.match_length = 0),
          e.lookahead >= Y &&
            e.strstart > 0 &&
            ((r = e.strstart - 1),
            (i = s[r]),
            i === s[++r] && i === s[++r] && i === s[++r]))
        ) {
          o = e.strstart + R;
          do {} while (
            i === s[++r] &&
            i === s[++r] &&
            i === s[++r] &&
            i === s[++r] &&
            i === s[++r] &&
            i === s[++r] &&
            i === s[++r] &&
            i === s[++r] &&
            r < o
          );
          (e.match_length = R - (o - r)),
            e.match_length > e.lookahead && (e.match_length = e.lookahead);
        }
        if (
          (e.match_length >= Y
            ? ((n = a._tr_tally(e, 1, e.match_length - Y)),
              (e.lookahead -= e.match_length),
              (e.strstart += e.match_length),
              (e.match_length = 0))
            : ((n = a._tr_tally(e, 0, e.window[e.strstart])),
              e.lookahead--,
              e.strstart++),
          n && (ie(e, !1), 0 === e.strm.avail_out))
        )
          return G;
      }
      return (
        (e.insert = 0),
        t === h
          ? (ie(e, !0), 0 === e.strm.avail_out ? Z : K)
          : e.last_lit && (ie(e, !1), 0 === e.strm.avail_out)
          ? G
          : J
      );
    }
    function pe(e, t) {
      for (var n; ; ) {
        if (0 === e.lookahead && (ce(e), 0 === e.lookahead)) {
          if (t === u) return G;
          break;
        }
        if (
          ((e.match_length = 0),
          (n = a._tr_tally(e, 0, e.window[e.strstart])),
          e.lookahead--,
          e.strstart++,
          n && (ie(e, !1), 0 === e.strm.avail_out))
        )
          return G;
      }
      return (
        (e.insert = 0),
        t === h
          ? (ie(e, !0), 0 === e.strm.avail_out ? Z : K)
          : e.last_lit && (ie(e, !1), 0 === e.strm.avail_out)
          ? G
          : J
      );
    }
    function me(e, t, n, i, r) {
      (this.good_length = e),
        (this.max_lazy = t),
        (this.nice_length = n),
        (this.max_chain = i),
        (this.func = r);
    }
    function fe(e) {
      (e.window_size = 2 * e.w_size),
        te(e.head),
        (e.max_lazy_match = i[e.level].max_lazy),
        (e.good_match = i[e.level].good_length),
        (e.nice_match = i[e.level].nice_length),
        (e.max_chain_length = i[e.level].max_chain),
        (e.strstart = 0),
        (e.block_start = 0),
        (e.lookahead = 0),
        (e.insert = 0),
        (e.match_length = e.prev_length = Y - 1),
        (e.match_available = 0),
        (e.ins_h = 0);
    }
    function _e() {
      (this.strm = null),
        (this.status = 0),
        (this.pending_buf = null),
        (this.pending_buf_size = 0),
        (this.pending_out = 0),
        (this.pending = 0),
        (this.wrap = 0),
        (this.gzhead = null),
        (this.gzindex = 0),
        (this.method = T),
        (this.last_flush = -1),
        (this.w_size = 0),
        (this.w_bits = 0),
        (this.w_mask = 0),
        (this.window = null),
        (this.window_size = 0),
        (this.prev = null),
        (this.head = null),
        (this.ins_h = 0),
        (this.hash_size = 0),
        (this.hash_bits = 0),
        (this.hash_mask = 0),
        (this.hash_shift = 0),
        (this.block_start = 0),
        (this.match_length = 0),
        (this.prev_match = 0),
        (this.match_available = 0),
        (this.strstart = 0),
        (this.match_start = 0),
        (this.lookahead = 0),
        (this.prev_length = 0),
        (this.max_chain_length = 0),
        (this.max_lazy_match = 0),
        (this.level = 0),
        (this.strategy = 0),
        (this.good_match = 0),
        (this.nice_match = 0),
        (this.dyn_ltree = new r.Buf16(2 * P)),
        (this.dyn_dtree = new r.Buf16(2 * (2 * D + 1))),
        (this.bl_tree = new r.Buf16(2 * (2 * N + 1))),
        te(this.dyn_ltree),
        te(this.dyn_dtree),
        te(this.bl_tree),
        (this.l_desc = null),
        (this.d_desc = null),
        (this.bl_desc = null),
        (this.bl_count = new r.Buf16(j + 1)),
        (this.heap = new r.Buf16(2 * C + 1)),
        te(this.heap),
        (this.heap_len = 0),
        (this.heap_max = 0),
        (this.depth = new r.Buf16(2 * C + 1)),
        te(this.depth),
        (this.l_buf = 0),
        (this.lit_bufsize = 0),
        (this.last_lit = 0),
        (this.d_buf = 0),
        (this.opt_len = 0),
        (this.static_len = 0),
        (this.matches = 0),
        (this.insert = 0),
        (this.bi_buf = 0),
        (this.bi_valid = 0);
    }
    function Me(e) {
      var t;
      return e && e.state
        ? ((e.total_in = e.total_out = 0),
          (e.data_type = L),
          (t = e.state),
          (t.pending = 0),
          (t.pending_out = 0),
          t.wrap < 0 && (t.wrap = -t.wrap),
          (t.status = t.wrap ? I : X),
          (e.adler = 2 === t.wrap ? 0 : 1),
          (t.last_flush = u),
          a._tr_init(t),
          m)
        : $(e, _);
    }
    function ve(e) {
      var t = Me(e);
      return t === m && fe(e.state), t;
    }
    function ge(e, t) {
      return e && e.state
        ? 2 !== e.state.wrap
          ? _
          : ((e.state.gzhead = t), m)
        : _;
    }
    function ye(e, t, n, i, a, o) {
      if (!e) return _;
      var s = 1;
      if (
        (t === g && (t = 6),
        i < 0 ? ((s = 0), (i = -i)) : i > 15 && ((s = 2), (i -= 16)),
        a < 1 ||
          a > z ||
          n !== T ||
          i < 8 ||
          i > 15 ||
          t < 0 ||
          t > 9 ||
          o < 0 ||
          o > A)
      )
        return $(e, _);
      8 === i && (i = 9);
      var c = new _e();
      return (
        (e.state = c),
        (c.strm = e),
        (c.wrap = s),
        (c.gzhead = null),
        (c.w_bits = i),
        (c.w_size = 1 << c.w_bits),
        (c.w_mask = c.w_size - 1),
        (c.hash_bits = a + 7),
        (c.hash_size = 1 << c.hash_bits),
        (c.hash_mask = c.hash_size - 1),
        (c.hash_shift = ~~((c.hash_bits + Y - 1) / Y)),
        (c.window = new r.Buf8(2 * c.w_size)),
        (c.head = new r.Buf16(c.hash_size)),
        (c.prev = new r.Buf16(c.w_size)),
        (c.lit_bufsize = 1 << (a + 6)),
        (c.pending_buf_size = 4 * c.lit_bufsize),
        (c.pending_buf = new r.Buf8(c.pending_buf_size)),
        (c.d_buf = 1 * c.lit_bufsize),
        (c.l_buf = (1 + 2) * c.lit_bufsize),
        (c.level = t),
        (c.strategy = o),
        (c.method = n),
        ve(e)
      );
    }
    function be(e, t) {
      return ye(e, t, T, S, O, x);
    }
    function we(e, t) {
      var n, r, o, c;
      if (!e || !e.state || t > p || t < 0) return e ? $(e, _) : _;
      if (
        ((r = e.state),
        !e.output ||
          (!e.input && 0 !== e.avail_in) ||
          (r.status === V && t !== h))
      )
        return $(e, 0 === e.avail_out ? v : _);
      if (
        ((r.strm = e), (n = r.last_flush), (r.last_flush = t), r.status === I)
      )
        if (2 === r.wrap)
          (e.adler = 0),
            re(r, 31),
            re(r, 139),
            re(r, 8),
            r.gzhead
              ? (re(
                  r,
                  (r.gzhead.text ? 1 : 0) +
                    (r.gzhead.hcrc ? 2 : 0) +
                    (r.gzhead.extra ? 4 : 0) +
                    (r.gzhead.name ? 8 : 0) +
                    (r.gzhead.comment ? 16 : 0)
                ),
                re(r, 255 & r.gzhead.time),
                re(r, (r.gzhead.time >> 8) & 255),
                re(r, (r.gzhead.time >> 16) & 255),
                re(r, (r.gzhead.time >> 24) & 255),
                re(
                  r,
                  9 === r.level ? 2 : r.strategy >= b || r.level < 2 ? 4 : 0
                ),
                re(r, 255 & r.gzhead.os),
                r.gzhead.extra &&
                  r.gzhead.extra.length &&
                  (re(r, 255 & r.gzhead.extra.length),
                  re(r, (r.gzhead.extra.length >> 8) & 255)),
                r.gzhead.hcrc &&
                  (e.adler = s(e.adler, r.pending_buf, r.pending, 0)),
                (r.gzindex = 0),
                (r.status = q))
              : (re(r, 0),
                re(r, 0),
                re(r, 0),
                re(r, 0),
                re(r, 0),
                re(
                  r,
                  9 === r.level ? 2 : r.strategy >= b || r.level < 2 ? 4 : 0
                ),
                re(r, Q),
                (r.status = X));
        else {
          var M = (T + ((r.w_bits - 8) << 4)) << 8,
            g = -1;
          (g =
            r.strategy >= b || r.level < 2
              ? 0
              : r.level < 6
              ? 1
              : 6 === r.level
              ? 2
              : 3),
            (M |= g << 6),
            0 !== r.strstart && (M |= W),
            (M += 31 - (M % 31)),
            (r.status = X),
            ae(r, M),
            0 !== r.strstart && (ae(r, e.adler >>> 16), ae(r, 65535 & e.adler)),
            (e.adler = 1);
        }
      if (r.status === q)
        if (r.gzhead.extra) {
          o = r.pending;
          while (r.gzindex < (65535 & r.gzhead.extra.length)) {
            if (
              r.pending === r.pending_buf_size &&
              (r.gzhead.hcrc &&
                r.pending > o &&
                (e.adler = s(e.adler, r.pending_buf, r.pending - o, o)),
              ne(e),
              (o = r.pending),
              r.pending === r.pending_buf_size)
            )
              break;
            re(r, 255 & r.gzhead.extra[r.gzindex]), r.gzindex++;
          }
          r.gzhead.hcrc &&
            r.pending > o &&
            (e.adler = s(e.adler, r.pending_buf, r.pending - o, o)),
            r.gzindex === r.gzhead.extra.length &&
              ((r.gzindex = 0), (r.status = H));
        } else r.status = H;
      if (r.status === H)
        if (r.gzhead.name) {
          o = r.pending;
          do {
            if (
              r.pending === r.pending_buf_size &&
              (r.gzhead.hcrc &&
                r.pending > o &&
                (e.adler = s(e.adler, r.pending_buf, r.pending - o, o)),
              ne(e),
              (o = r.pending),
              r.pending === r.pending_buf_size)
            ) {
              c = 1;
              break;
            }
            (c =
              r.gzindex < r.gzhead.name.length
                ? 255 & r.gzhead.name.charCodeAt(r.gzindex++)
                : 0),
              re(r, c);
          } while (0 !== c);
          r.gzhead.hcrc &&
            r.pending > o &&
            (e.adler = s(e.adler, r.pending_buf, r.pending - o, o)),
            0 === c && ((r.gzindex = 0), (r.status = F));
        } else r.status = F;
      if (r.status === F)
        if (r.gzhead.comment) {
          o = r.pending;
          do {
            if (
              r.pending === r.pending_buf_size &&
              (r.gzhead.hcrc &&
                r.pending > o &&
                (e.adler = s(e.adler, r.pending_buf, r.pending - o, o)),
              ne(e),
              (o = r.pending),
              r.pending === r.pending_buf_size)
            ) {
              c = 1;
              break;
            }
            (c =
              r.gzindex < r.gzhead.comment.length
                ? 255 & r.gzhead.comment.charCodeAt(r.gzindex++)
                : 0),
              re(r, c);
          } while (0 !== c);
          r.gzhead.hcrc &&
            r.pending > o &&
            (e.adler = s(e.adler, r.pending_buf, r.pending - o, o)),
            0 === c && (r.status = U);
        } else r.status = U;
      if (
        (r.status === U &&
          (r.gzhead.hcrc
            ? (r.pending + 2 > r.pending_buf_size && ne(e),
              r.pending + 2 <= r.pending_buf_size &&
                (re(r, 255 & e.adler),
                re(r, (e.adler >> 8) & 255),
                (e.adler = 0),
                (r.status = X)))
            : (r.status = X)),
        0 !== r.pending)
      ) {
        if ((ne(e), 0 === e.avail_out)) return (r.last_flush = -1), m;
      } else if (0 === e.avail_in && ee(t) <= ee(n) && t !== h) return $(e, v);
      if (r.status === V && 0 !== e.avail_in) return $(e, v);
      if (
        0 !== e.avail_in ||
        0 !== r.lookahead ||
        (t !== u && r.status !== V)
      ) {
        var y =
          r.strategy === b
            ? pe(r, t)
            : r.strategy === w
            ? he(r, t)
            : i[r.level].func(r, t);
        if (((y !== Z && y !== K) || (r.status = V), y === G || y === Z))
          return 0 === e.avail_out && (r.last_flush = -1), m;
        if (
          y === J &&
          (t === l
            ? a._tr_align(r)
            : t !== p &&
              (a._tr_stored_block(r, 0, 0, !1),
              t === d &&
                (te(r.head),
                0 === r.lookahead &&
                  ((r.strstart = 0), (r.block_start = 0), (r.insert = 0)))),
          ne(e),
          0 === e.avail_out)
        )
          return (r.last_flush = -1), m;
      }
      return t !== h
        ? m
        : r.wrap <= 0
        ? f
        : (2 === r.wrap
            ? (re(r, 255 & e.adler),
              re(r, (e.adler >> 8) & 255),
              re(r, (e.adler >> 16) & 255),
              re(r, (e.adler >> 24) & 255),
              re(r, 255 & e.total_in),
              re(r, (e.total_in >> 8) & 255),
              re(r, (e.total_in >> 16) & 255),
              re(r, (e.total_in >> 24) & 255))
            : (ae(r, e.adler >>> 16), ae(r, 65535 & e.adler)),
          ne(e),
          r.wrap > 0 && (r.wrap = -r.wrap),
          0 !== r.pending ? m : f);
    }
    function Ae(e) {
      var t;
      return e && e.state
        ? ((t = e.state.status),
          t !== I &&
          t !== q &&
          t !== H &&
          t !== F &&
          t !== U &&
          t !== X &&
          t !== V
            ? $(e, _)
            : ((e.state = null), t === X ? $(e, M) : m))
        : _;
    }
    function xe(e, t) {
      var n,
        i,
        a,
        s,
        c,
        u,
        l,
        d,
        h = t.length;
      if (!e || !e.state) return _;
      if (
        ((n = e.state),
        (s = n.wrap),
        2 === s || (1 === s && n.status !== I) || n.lookahead)
      )
        return _;
      1 === s && (e.adler = o(e.adler, t, h, 0)),
        (n.wrap = 0),
        h >= n.w_size &&
          (0 === s &&
            (te(n.head), (n.strstart = 0), (n.block_start = 0), (n.insert = 0)),
          (d = new r.Buf8(n.w_size)),
          r.arraySet(d, t, h - n.w_size, n.w_size, 0),
          (t = d),
          (h = n.w_size)),
        (c = e.avail_in),
        (u = e.next_in),
        (l = e.input),
        (e.avail_in = h),
        (e.next_in = 0),
        (e.input = t),
        ce(n);
      while (n.lookahead >= Y) {
        (i = n.strstart), (a = n.lookahead - (Y - 1));
        do {
          (n.ins_h =
            ((n.ins_h << n.hash_shift) ^ n.window[i + Y - 1]) & n.hash_mask),
            (n.prev[i & n.w_mask] = n.head[n.ins_h]),
            (n.head[n.ins_h] = i),
            i++;
        } while (--a);
        (n.strstart = i), (n.lookahead = Y - 1), ce(n);
      }
      return (
        (n.strstart += n.lookahead),
        (n.block_start = n.strstart),
        (n.insert = n.lookahead),
        (n.lookahead = 0),
        (n.match_length = n.prev_length = Y - 1),
        (n.match_available = 0),
        (e.next_in = u),
        (e.input = l),
        (e.avail_in = c),
        (n.wrap = s),
        m
      );
    }
    (i = [
      new me(0, 0, 0, 0, ue),
      new me(4, 4, 8, 4, le),
      new me(4, 5, 16, 8, le),
      new me(4, 6, 32, 32, le),
      new me(4, 4, 16, 16, de),
      new me(8, 16, 32, 32, de),
      new me(8, 16, 128, 128, de),
      new me(8, 32, 128, 256, de),
      new me(32, 128, 258, 1024, de),
      new me(32, 258, 258, 4096, de),
    ]),
      (t.deflateInit = be),
      (t.deflateInit2 = ye),
      (t.deflateReset = ve),
      (t.deflateResetKeep = Me),
      (t.deflateSetHeader = ge),
      (t.deflate = we),
      (t.deflateEnd = Ae),
      (t.deflateSetDictionary = xe),
      (t.deflateInfo = 'pako deflate (from Nodeca project)');
  },
  '../../../node_modules/pako/lib/zlib/gzheader.js': function (e, t, n) {
    'use strict';
    function i() {
      (this.text = 0),
        (this.time = 0),
        (this.xflags = 0),
        (this.os = 0),
        (this.extra = null),
        (this.extra_len = 0),
        (this.name = ''),
        (this.comment = ''),
        (this.hcrc = 0),
        (this.done = !1);
    }
    e.exports = i;
  },
  '../../../node_modules/pako/lib/zlib/inffast.js': function (e, t, n) {
    'use strict';
    var i = 30,
      r = 12;
    e.exports = function e(t, n) {
      var a,
        o,
        s,
        c,
        u,
        l,
        d,
        h,
        p,
        m,
        f,
        _,
        M,
        v,
        g,
        y,
        b,
        w,
        A,
        x,
        L,
        T,
        z,
        S,
        O;
      (a = t.state),
        (o = t.next_in),
        (S = t.input),
        (s = o + (t.avail_in - 5)),
        (c = t.next_out),
        (O = t.output),
        (u = c - (n - t.avail_out)),
        (l = c + (t.avail_out - 257)),
        (d = a.dmax),
        (h = a.wsize),
        (p = a.whave),
        (m = a.wnext),
        (f = a.window),
        (_ = a.hold),
        (M = a.bits),
        (v = a.lencode),
        (g = a.distcode),
        (y = (1 << a.lenbits) - 1),
        (b = (1 << a.distbits) - 1);
      e: do {
        M < 15 && ((_ += S[o++] << M), (M += 8), (_ += S[o++] << M), (M += 8)),
          (w = v[_ & y]);
        t: for (;;) {
          if (
            ((A = w >>> 24),
            (_ >>>= A),
            (M -= A),
            (A = (w >>> 16) & 255),
            0 === A)
          )
            O[c++] = 65535 & w;
          else {
            if (!(16 & A)) {
              if (0 === (64 & A)) {
                w = v[(65535 & w) + (_ & ((1 << A) - 1))];
                continue t;
              }
              if (32 & A) {
                a.mode = r;
                break e;
              }
              (t.msg = 'invalid literal/length code'), (a.mode = i);
              break e;
            }
            (x = 65535 & w),
              (A &= 15),
              A &&
                (M < A && ((_ += S[o++] << M), (M += 8)),
                (x += _ & ((1 << A) - 1)),
                (_ >>>= A),
                (M -= A)),
              M < 15 &&
                ((_ += S[o++] << M), (M += 8), (_ += S[o++] << M), (M += 8)),
              (w = g[_ & b]);
            n: for (;;) {
              if (
                ((A = w >>> 24),
                (_ >>>= A),
                (M -= A),
                (A = (w >>> 16) & 255),
                !(16 & A))
              ) {
                if (0 === (64 & A)) {
                  w = g[(65535 & w) + (_ & ((1 << A) - 1))];
                  continue n;
                }
                (t.msg = 'invalid distance code'), (a.mode = i);
                break e;
              }
              if (
                ((L = 65535 & w),
                (A &= 15),
                M < A &&
                  ((_ += S[o++] << M),
                  (M += 8),
                  M < A && ((_ += S[o++] << M), (M += 8))),
                (L += _ & ((1 << A) - 1)),
                L > d)
              ) {
                (t.msg = 'invalid distance too far back'), (a.mode = i);
                break e;
              }
              if (((_ >>>= A), (M -= A), (A = c - u), L > A)) {
                if (((A = L - A), A > p && a.sane)) {
                  (t.msg = 'invalid distance too far back'), (a.mode = i);
                  break e;
                }
                if (((T = 0), (z = f), 0 === m)) {
                  if (((T += h - A), A < x)) {
                    x -= A;
                    do {
                      O[c++] = f[T++];
                    } while (--A);
                    (T = c - L), (z = O);
                  }
                } else if (m < A) {
                  if (((T += h + m - A), (A -= m), A < x)) {
                    x -= A;
                    do {
                      O[c++] = f[T++];
                    } while (--A);
                    if (((T = 0), m < x)) {
                      (A = m), (x -= A);
                      do {
                        O[c++] = f[T++];
                      } while (--A);
                      (T = c - L), (z = O);
                    }
                  }
                } else if (((T += m - A), A < x)) {
                  x -= A;
                  do {
                    O[c++] = f[T++];
                  } while (--A);
                  (T = c - L), (z = O);
                }
                while (x > 2)
                  (O[c++] = z[T++]),
                    (O[c++] = z[T++]),
                    (O[c++] = z[T++]),
                    (x -= 3);
                x && ((O[c++] = z[T++]), x > 1 && (O[c++] = z[T++]));
              } else {
                T = c - L;
                do {
                  (O[c++] = O[T++]),
                    (O[c++] = O[T++]),
                    (O[c++] = O[T++]),
                    (x -= 3);
                } while (x > 2);
                x && ((O[c++] = O[T++]), x > 1 && (O[c++] = O[T++]));
              }
              break;
            }
          }
          break;
        }
      } while (o < s && c < l);
      (x = M >> 3),
        (o -= x),
        (M -= x << 3),
        (_ &= (1 << M) - 1),
        (t.next_in = o),
        (t.next_out = c),
        (t.avail_in = o < s ? 5 + (s - o) : 5 - (o - s)),
        (t.avail_out = c < l ? 257 + (l - c) : 257 - (c - l)),
        (a.hold = _),
        (a.bits = M);
    };
  },
  '../../../node_modules/pako/lib/zlib/inflate.js': function (e, t, n) {
    'use strict';
    var i = n('../../../node_modules/pako/lib/utils/common.js'),
      r = n('../../../node_modules/pako/lib/zlib/adler32.js'),
      a = n('../../../node_modules/pako/lib/zlib/crc32.js'),
      o = n('../../../node_modules/pako/lib/zlib/inffast.js'),
      s = n('../../../node_modules/pako/lib/zlib/inftrees.js'),
      c = 0,
      u = 1,
      l = 2,
      d = 4,
      h = 5,
      p = 6,
      m = 0,
      f = 1,
      _ = 2,
      M = -2,
      v = -3,
      g = -4,
      y = -5,
      b = 8,
      w = 1,
      A = 2,
      x = 3,
      L = 4,
      T = 5,
      z = 6,
      S = 7,
      O = 8,
      E = 9,
      k = 10,
      C = 11,
      D = 12,
      N = 13,
      P = 14,
      j = 15,
      Y = 16,
      R = 17,
      B = 18,
      W = 19,
      I = 20,
      q = 21,
      H = 22,
      F = 23,
      U = 24,
      X = 25,
      V = 26,
      G = 27,
      J = 28,
      Z = 29,
      K = 30,
      Q = 31,
      $ = 32,
      ee = 852,
      te = 592,
      ne = 15,
      ie = ne;
    function re(e) {
      return (
        ((e >>> 24) & 255) +
        ((e >>> 8) & 65280) +
        ((65280 & e) << 8) +
        ((255 & e) << 24)
      );
    }
    function ae() {
      (this.mode = 0),
        (this.last = !1),
        (this.wrap = 0),
        (this.havedict = !1),
        (this.flags = 0),
        (this.dmax = 0),
        (this.check = 0),
        (this.total = 0),
        (this.head = null),
        (this.wbits = 0),
        (this.wsize = 0),
        (this.whave = 0),
        (this.wnext = 0),
        (this.window = null),
        (this.hold = 0),
        (this.bits = 0),
        (this.length = 0),
        (this.offset = 0),
        (this.extra = 0),
        (this.lencode = null),
        (this.distcode = null),
        (this.lenbits = 0),
        (this.distbits = 0),
        (this.ncode = 0),
        (this.nlen = 0),
        (this.ndist = 0),
        (this.have = 0),
        (this.next = null),
        (this.lens = new i.Buf16(320)),
        (this.work = new i.Buf16(288)),
        (this.lendyn = null),
        (this.distdyn = null),
        (this.sane = 0),
        (this.back = 0),
        (this.was = 0);
    }
    function oe(e) {
      var t;
      return e && e.state
        ? ((t = e.state),
          (e.total_in = e.total_out = t.total = 0),
          (e.msg = ''),
          t.wrap && (e.adler = 1 & t.wrap),
          (t.mode = w),
          (t.last = 0),
          (t.havedict = 0),
          (t.dmax = 32768),
          (t.head = null),
          (t.hold = 0),
          (t.bits = 0),
          (t.lencode = t.lendyn = new i.Buf32(ee)),
          (t.distcode = t.distdyn = new i.Buf32(te)),
          (t.sane = 1),
          (t.back = -1),
          m)
        : M;
    }
    function se(e) {
      var t;
      return e && e.state
        ? ((t = e.state), (t.wsize = 0), (t.whave = 0), (t.wnext = 0), oe(e))
        : M;
    }
    function ce(e, t) {
      var n, i;
      return e && e.state
        ? ((i = e.state),
          t < 0
            ? ((n = 0), (t = -t))
            : ((n = (t >> 4) + 1), t < 48 && (t &= 15)),
          t && (t < 8 || t > 15)
            ? M
            : (null !== i.window && i.wbits !== t && (i.window = null),
              (i.wrap = n),
              (i.wbits = t),
              se(e)))
        : M;
    }
    function ue(e, t) {
      var n, i;
      return e
        ? ((i = new ae()),
          (e.state = i),
          (i.window = null),
          (n = ce(e, t)),
          n !== m && (e.state = null),
          n)
        : M;
    }
    function le(e) {
      return ue(e, ie);
    }
    var de,
      he,
      pe = !0;
    function me(e) {
      if (pe) {
        var t;
        (de = new i.Buf32(512)), (he = new i.Buf32(32)), (t = 0);
        while (t < 144) e.lens[t++] = 8;
        while (t < 256) e.lens[t++] = 9;
        while (t < 280) e.lens[t++] = 7;
        while (t < 288) e.lens[t++] = 8;
        s(u, e.lens, 0, 288, de, 0, e.work, { bits: 9 }), (t = 0);
        while (t < 32) e.lens[t++] = 5;
        s(l, e.lens, 0, 32, he, 0, e.work, { bits: 5 }), (pe = !1);
      }
      (e.lencode = de), (e.lenbits = 9), (e.distcode = he), (e.distbits = 5);
    }
    function fe(e, t, n, r) {
      var a,
        o = e.state;
      return (
        null === o.window &&
          ((o.wsize = 1 << o.wbits),
          (o.wnext = 0),
          (o.whave = 0),
          (o.window = new i.Buf8(o.wsize))),
        r >= o.wsize
          ? (i.arraySet(o.window, t, n - o.wsize, o.wsize, 0),
            (o.wnext = 0),
            (o.whave = o.wsize))
          : ((a = o.wsize - o.wnext),
            a > r && (a = r),
            i.arraySet(o.window, t, n - r, a, o.wnext),
            (r -= a),
            r
              ? (i.arraySet(o.window, t, n - r, r, 0),
                (o.wnext = r),
                (o.whave = o.wsize))
              : ((o.wnext += a),
                o.wnext === o.wsize && (o.wnext = 0),
                o.whave < o.wsize && (o.whave += a))),
        0
      );
    }
    function _e(e, t) {
      var n,
        ee,
        te,
        ne,
        ie,
        ae,
        oe,
        se,
        ce,
        ue,
        le,
        de,
        he,
        pe,
        _e,
        Me,
        ve,
        ge,
        ye,
        be,
        we,
        Ae,
        xe,
        Le,
        Te = 0,
        ze = new i.Buf8(4),
        Se = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
      if (!e || !e.state || !e.output || (!e.input && 0 !== e.avail_in))
        return M;
      (n = e.state),
        n.mode === D && (n.mode = N),
        (ie = e.next_out),
        (te = e.output),
        (oe = e.avail_out),
        (ne = e.next_in),
        (ee = e.input),
        (ae = e.avail_in),
        (se = n.hold),
        (ce = n.bits),
        (ue = ae),
        (le = oe),
        (Ae = m);
      e: for (;;)
        switch (n.mode) {
          case w:
            if (0 === n.wrap) {
              n.mode = N;
              break;
            }
            while (ce < 16) {
              if (0 === ae) break e;
              ae--, (se += ee[ne++] << ce), (ce += 8);
            }
            if (2 & n.wrap && 35615 === se) {
              (n.check = 0),
                (ze[0] = 255 & se),
                (ze[1] = (se >>> 8) & 255),
                (n.check = a(n.check, ze, 2, 0)),
                (se = 0),
                (ce = 0),
                (n.mode = A);
              break;
            }
            if (
              ((n.flags = 0),
              n.head && (n.head.done = !1),
              !(1 & n.wrap) || (((255 & se) << 8) + (se >> 8)) % 31)
            ) {
              (e.msg = 'incorrect header check'), (n.mode = K);
              break;
            }
            if ((15 & se) !== b) {
              (e.msg = 'unknown compression method'), (n.mode = K);
              break;
            }
            if (((se >>>= 4), (ce -= 4), (we = (15 & se) + 8), 0 === n.wbits))
              n.wbits = we;
            else if (we > n.wbits) {
              (e.msg = 'invalid window size'), (n.mode = K);
              break;
            }
            (n.dmax = 1 << we),
              (e.adler = n.check = 1),
              (n.mode = 512 & se ? k : D),
              (se = 0),
              (ce = 0);
            break;
          case A:
            while (ce < 16) {
              if (0 === ae) break e;
              ae--, (se += ee[ne++] << ce), (ce += 8);
            }
            if (((n.flags = se), (255 & n.flags) !== b)) {
              (e.msg = 'unknown compression method'), (n.mode = K);
              break;
            }
            if (57344 & n.flags) {
              (e.msg = 'unknown header flags set'), (n.mode = K);
              break;
            }
            n.head && (n.head.text = (se >> 8) & 1),
              512 & n.flags &&
                ((ze[0] = 255 & se),
                (ze[1] = (se >>> 8) & 255),
                (n.check = a(n.check, ze, 2, 0))),
              (se = 0),
              (ce = 0),
              (n.mode = x);
          case x:
            while (ce < 32) {
              if (0 === ae) break e;
              ae--, (se += ee[ne++] << ce), (ce += 8);
            }
            n.head && (n.head.time = se),
              512 & n.flags &&
                ((ze[0] = 255 & se),
                (ze[1] = (se >>> 8) & 255),
                (ze[2] = (se >>> 16) & 255),
                (ze[3] = (se >>> 24) & 255),
                (n.check = a(n.check, ze, 4, 0))),
              (se = 0),
              (ce = 0),
              (n.mode = L);
          case L:
            while (ce < 16) {
              if (0 === ae) break e;
              ae--, (se += ee[ne++] << ce), (ce += 8);
            }
            n.head && ((n.head.xflags = 255 & se), (n.head.os = se >> 8)),
              512 & n.flags &&
                ((ze[0] = 255 & se),
                (ze[1] = (se >>> 8) & 255),
                (n.check = a(n.check, ze, 2, 0))),
              (se = 0),
              (ce = 0),
              (n.mode = T);
          case T:
            if (1024 & n.flags) {
              while (ce < 16) {
                if (0 === ae) break e;
                ae--, (se += ee[ne++] << ce), (ce += 8);
              }
              (n.length = se),
                n.head && (n.head.extra_len = se),
                512 & n.flags &&
                  ((ze[0] = 255 & se),
                  (ze[1] = (se >>> 8) & 255),
                  (n.check = a(n.check, ze, 2, 0))),
                (se = 0),
                (ce = 0);
            } else n.head && (n.head.extra = null);
            n.mode = z;
          case z:
            if (
              1024 & n.flags &&
              ((de = n.length),
              de > ae && (de = ae),
              de &&
                (n.head &&
                  ((we = n.head.extra_len - n.length),
                  n.head.extra || (n.head.extra = new Array(n.head.extra_len)),
                  i.arraySet(n.head.extra, ee, ne, de, we)),
                512 & n.flags && (n.check = a(n.check, ee, de, ne)),
                (ae -= de),
                (ne += de),
                (n.length -= de)),
              n.length)
            )
              break e;
            (n.length = 0), (n.mode = S);
          case S:
            if (2048 & n.flags) {
              if (0 === ae) break e;
              de = 0;
              do {
                (we = ee[ne + de++]),
                  n.head &&
                    we &&
                    n.length < 65536 &&
                    (n.head.name += String.fromCharCode(we));
              } while (we && de < ae);
              if (
                (512 & n.flags && (n.check = a(n.check, ee, de, ne)),
                (ae -= de),
                (ne += de),
                we)
              )
                break e;
            } else n.head && (n.head.name = null);
            (n.length = 0), (n.mode = O);
          case O:
            if (4096 & n.flags) {
              if (0 === ae) break e;
              de = 0;
              do {
                (we = ee[ne + de++]),
                  n.head &&
                    we &&
                    n.length < 65536 &&
                    (n.head.comment += String.fromCharCode(we));
              } while (we && de < ae);
              if (
                (512 & n.flags && (n.check = a(n.check, ee, de, ne)),
                (ae -= de),
                (ne += de),
                we)
              )
                break e;
            } else n.head && (n.head.comment = null);
            n.mode = E;
          case E:
            if (512 & n.flags) {
              while (ce < 16) {
                if (0 === ae) break e;
                ae--, (se += ee[ne++] << ce), (ce += 8);
              }
              if (se !== (65535 & n.check)) {
                (e.msg = 'header crc mismatch'), (n.mode = K);
                break;
              }
              (se = 0), (ce = 0);
            }
            n.head && ((n.head.hcrc = (n.flags >> 9) & 1), (n.head.done = !0)),
              (e.adler = n.check = 0),
              (n.mode = D);
            break;
          case k:
            while (ce < 32) {
              if (0 === ae) break e;
              ae--, (se += ee[ne++] << ce), (ce += 8);
            }
            (e.adler = n.check = re(se)), (se = 0), (ce = 0), (n.mode = C);
          case C:
            if (0 === n.havedict)
              return (
                (e.next_out = ie),
                (e.avail_out = oe),
                (e.next_in = ne),
                (e.avail_in = ae),
                (n.hold = se),
                (n.bits = ce),
                _
              );
            (e.adler = n.check = 1), (n.mode = D);
          case D:
            if (t === h || t === p) break e;
          case N:
            if (n.last) {
              (se >>>= 7 & ce), (ce -= 7 & ce), (n.mode = G);
              break;
            }
            while (ce < 3) {
              if (0 === ae) break e;
              ae--, (se += ee[ne++] << ce), (ce += 8);
            }
            switch (((n.last = 1 & se), (se >>>= 1), (ce -= 1), 3 & se)) {
              case 0:
                n.mode = P;
                break;
              case 1:
                if ((me(n), (n.mode = I), t === p)) {
                  (se >>>= 2), (ce -= 2);
                  break e;
                }
                break;
              case 2:
                n.mode = R;
                break;
              case 3:
                (e.msg = 'invalid block type'), (n.mode = K);
            }
            (se >>>= 2), (ce -= 2);
            break;
          case P:
            (se >>>= 7 & ce), (ce -= 7 & ce);
            while (ce < 32) {
              if (0 === ae) break e;
              ae--, (se += ee[ne++] << ce), (ce += 8);
            }
            if ((65535 & se) !== ((se >>> 16) ^ 65535)) {
              (e.msg = 'invalid stored block lengths'), (n.mode = K);
              break;
            }
            if (
              ((n.length = 65535 & se),
              (se = 0),
              (ce = 0),
              (n.mode = j),
              t === p)
            )
              break e;
          case j:
            n.mode = Y;
          case Y:
            if (((de = n.length), de)) {
              if ((de > ae && (de = ae), de > oe && (de = oe), 0 === de))
                break e;
              i.arraySet(te, ee, ne, de, ie),
                (ae -= de),
                (ne += de),
                (oe -= de),
                (ie += de),
                (n.length -= de);
              break;
            }
            n.mode = D;
            break;
          case R:
            while (ce < 14) {
              if (0 === ae) break e;
              ae--, (se += ee[ne++] << ce), (ce += 8);
            }
            if (
              ((n.nlen = (31 & se) + 257),
              (se >>>= 5),
              (ce -= 5),
              (n.ndist = (31 & se) + 1),
              (se >>>= 5),
              (ce -= 5),
              (n.ncode = (15 & se) + 4),
              (se >>>= 4),
              (ce -= 4),
              n.nlen > 286 || n.ndist > 30)
            ) {
              (e.msg = 'too many length or distance symbols'), (n.mode = K);
              break;
            }
            (n.have = 0), (n.mode = B);
          case B:
            while (n.have < n.ncode) {
              while (ce < 3) {
                if (0 === ae) break e;
                ae--, (se += ee[ne++] << ce), (ce += 8);
              }
              (n.lens[Se[n.have++]] = 7 & se), (se >>>= 3), (ce -= 3);
            }
            while (n.have < 19) n.lens[Se[n.have++]] = 0;
            if (
              ((n.lencode = n.lendyn),
              (n.lenbits = 7),
              (xe = { bits: n.lenbits }),
              (Ae = s(c, n.lens, 0, 19, n.lencode, 0, n.work, xe)),
              (n.lenbits = xe.bits),
              Ae)
            ) {
              (e.msg = 'invalid code lengths set'), (n.mode = K);
              break;
            }
            (n.have = 0), (n.mode = W);
          case W:
            while (n.have < n.nlen + n.ndist) {
              for (;;) {
                if (
                  ((Te = n.lencode[se & ((1 << n.lenbits) - 1)]),
                  (_e = Te >>> 24),
                  (Me = (Te >>> 16) & 255),
                  (ve = 65535 & Te),
                  _e <= ce)
                )
                  break;
                if (0 === ae) break e;
                ae--, (se += ee[ne++] << ce), (ce += 8);
              }
              if (ve < 16) (se >>>= _e), (ce -= _e), (n.lens[n.have++] = ve);
              else {
                if (16 === ve) {
                  Le = _e + 2;
                  while (ce < Le) {
                    if (0 === ae) break e;
                    ae--, (se += ee[ne++] << ce), (ce += 8);
                  }
                  if (((se >>>= _e), (ce -= _e), 0 === n.have)) {
                    (e.msg = 'invalid bit length repeat'), (n.mode = K);
                    break;
                  }
                  (we = n.lens[n.have - 1]),
                    (de = 3 + (3 & se)),
                    (se >>>= 2),
                    (ce -= 2);
                } else if (17 === ve) {
                  Le = _e + 3;
                  while (ce < Le) {
                    if (0 === ae) break e;
                    ae--, (se += ee[ne++] << ce), (ce += 8);
                  }
                  (se >>>= _e),
                    (ce -= _e),
                    (we = 0),
                    (de = 3 + (7 & se)),
                    (se >>>= 3),
                    (ce -= 3);
                } else {
                  Le = _e + 7;
                  while (ce < Le) {
                    if (0 === ae) break e;
                    ae--, (se += ee[ne++] << ce), (ce += 8);
                  }
                  (se >>>= _e),
                    (ce -= _e),
                    (we = 0),
                    (de = 11 + (127 & se)),
                    (se >>>= 7),
                    (ce -= 7);
                }
                if (n.have + de > n.nlen + n.ndist) {
                  (e.msg = 'invalid bit length repeat'), (n.mode = K);
                  break;
                }
                while (de--) n.lens[n.have++] = we;
              }
            }
            if (n.mode === K) break;
            if (0 === n.lens[256]) {
              (e.msg = 'invalid code -- missing end-of-block'), (n.mode = K);
              break;
            }
            if (
              ((n.lenbits = 9),
              (xe = { bits: n.lenbits }),
              (Ae = s(u, n.lens, 0, n.nlen, n.lencode, 0, n.work, xe)),
              (n.lenbits = xe.bits),
              Ae)
            ) {
              (e.msg = 'invalid literal/lengths set'), (n.mode = K);
              break;
            }
            if (
              ((n.distbits = 6),
              (n.distcode = n.distdyn),
              (xe = { bits: n.distbits }),
              (Ae = s(l, n.lens, n.nlen, n.ndist, n.distcode, 0, n.work, xe)),
              (n.distbits = xe.bits),
              Ae)
            ) {
              (e.msg = 'invalid distances set'), (n.mode = K);
              break;
            }
            if (((n.mode = I), t === p)) break e;
          case I:
            n.mode = q;
          case q:
            if (ae >= 6 && oe >= 258) {
              (e.next_out = ie),
                (e.avail_out = oe),
                (e.next_in = ne),
                (e.avail_in = ae),
                (n.hold = se),
                (n.bits = ce),
                o(e, le),
                (ie = e.next_out),
                (te = e.output),
                (oe = e.avail_out),
                (ne = e.next_in),
                (ee = e.input),
                (ae = e.avail_in),
                (se = n.hold),
                (ce = n.bits),
                n.mode === D && (n.back = -1);
              break;
            }
            for (n.back = 0; ; ) {
              if (
                ((Te = n.lencode[se & ((1 << n.lenbits) - 1)]),
                (_e = Te >>> 24),
                (Me = (Te >>> 16) & 255),
                (ve = 65535 & Te),
                _e <= ce)
              )
                break;
              if (0 === ae) break e;
              ae--, (se += ee[ne++] << ce), (ce += 8);
            }
            if (Me && 0 === (240 & Me)) {
              for (ge = _e, ye = Me, be = ve; ; ) {
                if (
                  ((Te = n.lencode[be + ((se & ((1 << (ge + ye)) - 1)) >> ge)]),
                  (_e = Te >>> 24),
                  (Me = (Te >>> 16) & 255),
                  (ve = 65535 & Te),
                  ge + _e <= ce)
                )
                  break;
                if (0 === ae) break e;
                ae--, (se += ee[ne++] << ce), (ce += 8);
              }
              (se >>>= ge), (ce -= ge), (n.back += ge);
            }
            if (
              ((se >>>= _e),
              (ce -= _e),
              (n.back += _e),
              (n.length = ve),
              0 === Me)
            ) {
              n.mode = V;
              break;
            }
            if (32 & Me) {
              (n.back = -1), (n.mode = D);
              break;
            }
            if (64 & Me) {
              (e.msg = 'invalid literal/length code'), (n.mode = K);
              break;
            }
            (n.extra = 15 & Me), (n.mode = H);
          case H:
            if (n.extra) {
              Le = n.extra;
              while (ce < Le) {
                if (0 === ae) break e;
                ae--, (se += ee[ne++] << ce), (ce += 8);
              }
              (n.length += se & ((1 << n.extra) - 1)),
                (se >>>= n.extra),
                (ce -= n.extra),
                (n.back += n.extra);
            }
            (n.was = n.length), (n.mode = F);
          case F:
            for (;;) {
              if (
                ((Te = n.distcode[se & ((1 << n.distbits) - 1)]),
                (_e = Te >>> 24),
                (Me = (Te >>> 16) & 255),
                (ve = 65535 & Te),
                _e <= ce)
              )
                break;
              if (0 === ae) break e;
              ae--, (se += ee[ne++] << ce), (ce += 8);
            }
            if (0 === (240 & Me)) {
              for (ge = _e, ye = Me, be = ve; ; ) {
                if (
                  ((Te =
                    n.distcode[be + ((se & ((1 << (ge + ye)) - 1)) >> ge)]),
                  (_e = Te >>> 24),
                  (Me = (Te >>> 16) & 255),
                  (ve = 65535 & Te),
                  ge + _e <= ce)
                )
                  break;
                if (0 === ae) break e;
                ae--, (se += ee[ne++] << ce), (ce += 8);
              }
              (se >>>= ge), (ce -= ge), (n.back += ge);
            }
            if (((se >>>= _e), (ce -= _e), (n.back += _e), 64 & Me)) {
              (e.msg = 'invalid distance code'), (n.mode = K);
              break;
            }
            (n.offset = ve), (n.extra = 15 & Me), (n.mode = U);
          case U:
            if (n.extra) {
              Le = n.extra;
              while (ce < Le) {
                if (0 === ae) break e;
                ae--, (se += ee[ne++] << ce), (ce += 8);
              }
              (n.offset += se & ((1 << n.extra) - 1)),
                (se >>>= n.extra),
                (ce -= n.extra),
                (n.back += n.extra);
            }
            if (n.offset > n.dmax) {
              (e.msg = 'invalid distance too far back'), (n.mode = K);
              break;
            }
            n.mode = X;
          case X:
            if (0 === oe) break e;
            if (((de = le - oe), n.offset > de)) {
              if (((de = n.offset - de), de > n.whave && n.sane)) {
                (e.msg = 'invalid distance too far back'), (n.mode = K);
                break;
              }
              de > n.wnext
                ? ((de -= n.wnext), (he = n.wsize - de))
                : (he = n.wnext - de),
                de > n.length && (de = n.length),
                (pe = n.window);
            } else (pe = te), (he = ie - n.offset), (de = n.length);
            de > oe && (de = oe), (oe -= de), (n.length -= de);
            do {
              te[ie++] = pe[he++];
            } while (--de);
            0 === n.length && (n.mode = q);
            break;
          case V:
            if (0 === oe) break e;
            (te[ie++] = n.length), oe--, (n.mode = q);
            break;
          case G:
            if (n.wrap) {
              while (ce < 32) {
                if (0 === ae) break e;
                ae--, (se |= ee[ne++] << ce), (ce += 8);
              }
              if (
                ((le -= oe),
                (e.total_out += le),
                (n.total += le),
                le &&
                  (e.adler = n.check = n.flags
                    ? a(n.check, te, le, ie - le)
                    : r(n.check, te, le, ie - le)),
                (le = oe),
                (n.flags ? se : re(se)) !== n.check)
              ) {
                (e.msg = 'incorrect data check'), (n.mode = K);
                break;
              }
              (se = 0), (ce = 0);
            }
            n.mode = J;
          case J:
            if (n.wrap && n.flags) {
              while (ce < 32) {
                if (0 === ae) break e;
                ae--, (se += ee[ne++] << ce), (ce += 8);
              }
              if (se !== (4294967295 & n.total)) {
                (e.msg = 'incorrect length check'), (n.mode = K);
                break;
              }
              (se = 0), (ce = 0);
            }
            n.mode = Z;
          case Z:
            Ae = f;
            break e;
          case K:
            Ae = v;
            break e;
          case Q:
            return g;
          case $:
          default:
            return M;
        }
      return (
        (e.next_out = ie),
        (e.avail_out = oe),
        (e.next_in = ne),
        (e.avail_in = ae),
        (n.hold = se),
        (n.bits = ce),
        (n.wsize ||
          (le !== e.avail_out && n.mode < K && (n.mode < G || t !== d))) &&
        fe(e, e.output, e.next_out, le - e.avail_out)
          ? ((n.mode = Q), g)
          : ((ue -= e.avail_in),
            (le -= e.avail_out),
            (e.total_in += ue),
            (e.total_out += le),
            (n.total += le),
            n.wrap &&
              le &&
              (e.adler = n.check = n.flags
                ? a(n.check, te, le, e.next_out - le)
                : r(n.check, te, le, e.next_out - le)),
            (e.data_type =
              n.bits +
              (n.last ? 64 : 0) +
              (n.mode === D ? 128 : 0) +
              (n.mode === I || n.mode === j ? 256 : 0)),
            ((0 === ue && 0 === le) || t === d) && Ae === m && (Ae = y),
            Ae)
      );
    }
    function Me(e) {
      if (!e || !e.state) return M;
      var t = e.state;
      return t.window && (t.window = null), (e.state = null), m;
    }
    function ve(e, t) {
      var n;
      return e && e.state
        ? ((n = e.state),
          0 === (2 & n.wrap) ? M : ((n.head = t), (t.done = !1), m))
        : M;
    }
    function ge(e, t) {
      var n,
        i,
        a,
        o = t.length;
      return e && e.state
        ? ((n = e.state),
          0 !== n.wrap && n.mode !== C
            ? M
            : n.mode === C && ((i = 1), (i = r(i, t, o, 0)), i !== n.check)
            ? v
            : ((a = fe(e, t, o, o)),
              a ? ((n.mode = Q), g) : ((n.havedict = 1), m)))
        : M;
    }
    (t.inflateReset = se),
      (t.inflateReset2 = ce),
      (t.inflateResetKeep = oe),
      (t.inflateInit = le),
      (t.inflateInit2 = ue),
      (t.inflate = _e),
      (t.inflateEnd = Me),
      (t.inflateGetHeader = ve),
      (t.inflateSetDictionary = ge),
      (t.inflateInfo = 'pako inflate (from Nodeca project)');
  },
  '../../../node_modules/pako/lib/zlib/inftrees.js': function (e, t, n) {
    'use strict';
    var i = n('../../../node_modules/pako/lib/utils/common.js'),
      r = 15,
      a = 852,
      o = 592,
      s = 0,
      c = 1,
      u = 2,
      l = [
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        13,
        15,
        17,
        19,
        23,
        27,
        31,
        35,
        43,
        51,
        59,
        67,
        83,
        99,
        115,
        131,
        163,
        195,
        227,
        258,
        0,
        0,
      ],
      d = [
        16,
        16,
        16,
        16,
        16,
        16,
        16,
        16,
        17,
        17,
        17,
        17,
        18,
        18,
        18,
        18,
        19,
        19,
        19,
        19,
        20,
        20,
        20,
        20,
        21,
        21,
        21,
        21,
        16,
        72,
        78,
      ],
      h = [
        1,
        2,
        3,
        4,
        5,
        7,
        9,
        13,
        17,
        25,
        33,
        49,
        65,
        97,
        129,
        193,
        257,
        385,
        513,
        769,
        1025,
        1537,
        2049,
        3073,
        4097,
        6145,
        8193,
        12289,
        16385,
        24577,
        0,
        0,
      ],
      p = [
        16,
        16,
        16,
        16,
        17,
        17,
        18,
        18,
        19,
        19,
        20,
        20,
        21,
        21,
        22,
        22,
        23,
        23,
        24,
        24,
        25,
        25,
        26,
        26,
        27,
        27,
        28,
        28,
        29,
        29,
        64,
        64,
      ];
    e.exports = function e(t, n, m, f, _, M, v, g) {
      var y,
        b,
        w,
        A,
        x,
        L,
        T,
        z,
        S,
        O = g.bits,
        E = 0,
        k = 0,
        C = 0,
        D = 0,
        N = 0,
        P = 0,
        j = 0,
        Y = 0,
        R = 0,
        B = 0,
        W = null,
        I = 0,
        q = new i.Buf16(r + 1),
        H = new i.Buf16(r + 1),
        F = null,
        U = 0;
      for (E = 0; E <= r; E++) q[E] = 0;
      for (k = 0; k < f; k++) q[n[m + k]]++;
      for (N = O, D = r; D >= 1; D--) if (0 !== q[D]) break;
      if ((N > D && (N = D), 0 === D))
        return (
          (_[M++] = (1 << 24) | (64 << 16) | 0),
          (_[M++] = (1 << 24) | (64 << 16) | 0),
          (g.bits = 1),
          0
        );
      for (C = 1; C < D; C++) if (0 !== q[C]) break;
      for (N < C && (N = C), Y = 1, E = 1; E <= r; E++)
        if (((Y <<= 1), (Y -= q[E]), Y < 0)) return -1;
      if (Y > 0 && (t === s || 1 !== D)) return -1;
      for (H[1] = 0, E = 1; E < r; E++) H[E + 1] = H[E] + q[E];
      for (k = 0; k < f; k++) 0 !== n[m + k] && (v[H[n[m + k]]++] = k);
      if (
        (t === s
          ? ((W = F = v), (L = 19))
          : t === c
          ? ((W = l), (I -= 257), (F = d), (U -= 257), (L = 256))
          : ((W = h), (F = p), (L = -1)),
        (B = 0),
        (k = 0),
        (E = C),
        (x = M),
        (P = N),
        (j = 0),
        (w = -1),
        (R = 1 << N),
        (A = R - 1),
        (t === c && R > a) || (t === u && R > o))
      )
        return 1;
      for (;;) {
        (T = E - j),
          v[k] < L
            ? ((z = 0), (S = v[k]))
            : v[k] > L
            ? ((z = F[U + v[k]]), (S = W[I + v[k]]))
            : ((z = 32 + 64), (S = 0)),
          (y = 1 << (E - j)),
          (b = 1 << P),
          (C = b);
        do {
          (b -= y), (_[x + (B >> j) + b] = (T << 24) | (z << 16) | S | 0);
        } while (0 !== b);
        y = 1 << (E - 1);
        while (B & y) y >>= 1;
        if ((0 !== y ? ((B &= y - 1), (B += y)) : (B = 0), k++, 0 === --q[E])) {
          if (E === D) break;
          E = n[m + v[k]];
        }
        if (E > N && (B & A) !== w) {
          0 === j && (j = N), (x += C), (P = E - j), (Y = 1 << P);
          while (P + j < D) {
            if (((Y -= q[P + j]), Y <= 0)) break;
            P++, (Y <<= 1);
          }
          if (((R += 1 << P), (t === c && R > a) || (t === u && R > o)))
            return 1;
          (w = B & A), (_[w] = (N << 24) | (P << 16) | (x - M) | 0);
        }
      }
      return (
        0 !== B && (_[x + B] = ((E - j) << 24) | (64 << 16) | 0),
        (g.bits = N),
        0
      );
    };
  },
  '../../../node_modules/pako/lib/zlib/messages.js': function (e, t, n) {
    'use strict';
    e.exports = {
      2: 'need dictionary',
      1: 'stream end',
      0: '',
      '-1': 'file error',
      '-2': 'stream error',
      '-3': 'data error',
      '-4': 'insufficient memory',
      '-5': 'buffer error',
      '-6': 'incompatible version',
    };
  },
  '../../../node_modules/pako/lib/zlib/trees.js': function (e, t, n) {
    'use strict';
    var i = n('../../../node_modules/pako/lib/utils/common.js'),
      r = 4,
      a = 0,
      o = 1,
      s = 2;
    function c(e) {
      var t = e.length;
      while (--t >= 0) e[t] = 0;
    }
    var u = 0,
      l = 1,
      d = 2,
      h = 3,
      p = 258,
      m = 29,
      f = 256,
      _ = f + 1 + m,
      M = 30,
      v = 19,
      g = 2 * _ + 1,
      y = 15,
      b = 16,
      w = 7,
      A = 256,
      x = 16,
      L = 17,
      T = 18,
      z = [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        2,
        2,
        2,
        2,
        3,
        3,
        3,
        3,
        4,
        4,
        4,
        4,
        5,
        5,
        5,
        5,
        0,
      ],
      S = [
        0,
        0,
        0,
        0,
        1,
        1,
        2,
        2,
        3,
        3,
        4,
        4,
        5,
        5,
        6,
        6,
        7,
        7,
        8,
        8,
        9,
        9,
        10,
        10,
        11,
        11,
        12,
        12,
        13,
        13,
      ],
      O = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7],
      E = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
      k = 512,
      C = new Array(2 * (_ + 2));
    c(C);
    var D = new Array(2 * M);
    c(D);
    var N = new Array(k);
    c(N);
    var P = new Array(p - h + 1);
    c(P);
    var j = new Array(m);
    c(j);
    var Y,
      R,
      B,
      W = new Array(M);
    function I(e, t, n, i, r) {
      (this.static_tree = e),
        (this.extra_bits = t),
        (this.extra_base = n),
        (this.elems = i),
        (this.max_length = r),
        (this.has_stree = e && e.length);
    }
    function q(e, t) {
      (this.dyn_tree = e), (this.max_code = 0), (this.stat_desc = t);
    }
    function H(e) {
      return e < 256 ? N[e] : N[256 + (e >>> 7)];
    }
    function F(e, t) {
      (e.pending_buf[e.pending++] = 255 & t),
        (e.pending_buf[e.pending++] = (t >>> 8) & 255);
    }
    function U(e, t, n) {
      e.bi_valid > b - n
        ? ((e.bi_buf |= (t << e.bi_valid) & 65535),
          F(e, e.bi_buf),
          (e.bi_buf = t >> (b - e.bi_valid)),
          (e.bi_valid += n - b))
        : ((e.bi_buf |= (t << e.bi_valid) & 65535), (e.bi_valid += n));
    }
    function X(e, t, n) {
      U(e, n[2 * t], n[2 * t + 1]);
    }
    function V(e, t) {
      var n = 0;
      do {
        (n |= 1 & e), (e >>>= 1), (n <<= 1);
      } while (--t > 0);
      return n >>> 1;
    }
    function G(e) {
      16 === e.bi_valid
        ? (F(e, e.bi_buf), (e.bi_buf = 0), (e.bi_valid = 0))
        : e.bi_valid >= 8 &&
          ((e.pending_buf[e.pending++] = 255 & e.bi_buf),
          (e.bi_buf >>= 8),
          (e.bi_valid -= 8));
    }
    function J(e, t) {
      var n,
        i,
        r,
        a,
        o,
        s,
        c = t.dyn_tree,
        u = t.max_code,
        l = t.stat_desc.static_tree,
        d = t.stat_desc.has_stree,
        h = t.stat_desc.extra_bits,
        p = t.stat_desc.extra_base,
        m = t.stat_desc.max_length,
        f = 0;
      for (a = 0; a <= y; a++) e.bl_count[a] = 0;
      for (c[2 * e.heap[e.heap_max] + 1] = 0, n = e.heap_max + 1; n < g; n++)
        (i = e.heap[n]),
          (a = c[2 * c[2 * i + 1] + 1] + 1),
          a > m && ((a = m), f++),
          (c[2 * i + 1] = a),
          i > u ||
            (e.bl_count[a]++,
            (o = 0),
            i >= p && (o = h[i - p]),
            (s = c[2 * i]),
            (e.opt_len += s * (a + o)),
            d && (e.static_len += s * (l[2 * i + 1] + o)));
      if (0 !== f) {
        do {
          a = m - 1;
          while (0 === e.bl_count[a]) a--;
          e.bl_count[a]--, (e.bl_count[a + 1] += 2), e.bl_count[m]--, (f -= 2);
        } while (f > 0);
        for (a = m; 0 !== a; a--) {
          i = e.bl_count[a];
          while (0 !== i)
            (r = e.heap[--n]),
              r > u ||
                (c[2 * r + 1] !== a &&
                  ((e.opt_len += (a - c[2 * r + 1]) * c[2 * r]),
                  (c[2 * r + 1] = a)),
                i--);
        }
      }
    }
    function Z(e, t, n) {
      var i,
        r,
        a = new Array(y + 1),
        o = 0;
      for (i = 1; i <= y; i++) a[i] = o = (o + n[i - 1]) << 1;
      for (r = 0; r <= t; r++) {
        var s = e[2 * r + 1];
        0 !== s && (e[2 * r] = V(a[s]++, s));
      }
    }
    function K() {
      var e,
        t,
        n,
        i,
        r,
        a = new Array(y + 1);
      for (n = 0, i = 0; i < m - 1; i++)
        for (j[i] = n, e = 0; e < 1 << z[i]; e++) P[n++] = i;
      for (P[n - 1] = i, r = 0, i = 0; i < 16; i++)
        for (W[i] = r, e = 0; e < 1 << S[i]; e++) N[r++] = i;
      for (r >>= 7; i < M; i++)
        for (W[i] = r << 7, e = 0; e < 1 << (S[i] - 7); e++) N[256 + r++] = i;
      for (t = 0; t <= y; t++) a[t] = 0;
      e = 0;
      while (e <= 143) (C[2 * e + 1] = 8), e++, a[8]++;
      while (e <= 255) (C[2 * e + 1] = 9), e++, a[9]++;
      while (e <= 279) (C[2 * e + 1] = 7), e++, a[7]++;
      while (e <= 287) (C[2 * e + 1] = 8), e++, a[8]++;
      for (Z(C, _ + 1, a), e = 0; e < M; e++)
        (D[2 * e + 1] = 5), (D[2 * e] = V(e, 5));
      (Y = new I(C, z, f + 1, _, y)),
        (R = new I(D, S, 0, M, y)),
        (B = new I(new Array(0), O, 0, v, w));
    }
    function Q(e) {
      var t;
      for (t = 0; t < _; t++) e.dyn_ltree[2 * t] = 0;
      for (t = 0; t < M; t++) e.dyn_dtree[2 * t] = 0;
      for (t = 0; t < v; t++) e.bl_tree[2 * t] = 0;
      (e.dyn_ltree[2 * A] = 1),
        (e.opt_len = e.static_len = 0),
        (e.last_lit = e.matches = 0);
    }
    function $(e) {
      e.bi_valid > 8
        ? F(e, e.bi_buf)
        : e.bi_valid > 0 && (e.pending_buf[e.pending++] = e.bi_buf),
        (e.bi_buf = 0),
        (e.bi_valid = 0);
    }
    function ee(e, t, n, r) {
      $(e),
        r && (F(e, n), F(e, ~n)),
        i.arraySet(e.pending_buf, e.window, t, n, e.pending),
        (e.pending += n);
    }
    function te(e, t, n, i) {
      var r = 2 * t,
        a = 2 * n;
      return e[r] < e[a] || (e[r] === e[a] && i[t] <= i[n]);
    }
    function ne(e, t, n) {
      var i = e.heap[n],
        r = n << 1;
      while (r <= e.heap_len) {
        if (
          (r < e.heap_len && te(t, e.heap[r + 1], e.heap[r], e.depth) && r++,
          te(t, i, e.heap[r], e.depth))
        )
          break;
        (e.heap[n] = e.heap[r]), (n = r), (r <<= 1);
      }
      e.heap[n] = i;
    }
    function ie(e, t, n) {
      var i,
        r,
        a,
        o,
        s = 0;
      if (0 !== e.last_lit)
        do {
          (i =
            (e.pending_buf[e.d_buf + 2 * s] << 8) |
            e.pending_buf[e.d_buf + 2 * s + 1]),
            (r = e.pending_buf[e.l_buf + s]),
            s++,
            0 === i
              ? X(e, r, t)
              : ((a = P[r]),
                X(e, a + f + 1, t),
                (o = z[a]),
                0 !== o && ((r -= j[a]), U(e, r, o)),
                i--,
                (a = H(i)),
                X(e, a, n),
                (o = S[a]),
                0 !== o && ((i -= W[a]), U(e, i, o)));
        } while (s < e.last_lit);
      X(e, A, t);
    }
    function re(e, t) {
      var n,
        i,
        r,
        a = t.dyn_tree,
        o = t.stat_desc.static_tree,
        s = t.stat_desc.has_stree,
        c = t.stat_desc.elems,
        u = -1;
      for (e.heap_len = 0, e.heap_max = g, n = 0; n < c; n++)
        0 !== a[2 * n]
          ? ((e.heap[++e.heap_len] = u = n), (e.depth[n] = 0))
          : (a[2 * n + 1] = 0);
      while (e.heap_len < 2)
        (r = e.heap[++e.heap_len] = u < 2 ? ++u : 0),
          (a[2 * r] = 1),
          (e.depth[r] = 0),
          e.opt_len--,
          s && (e.static_len -= o[2 * r + 1]);
      for (t.max_code = u, n = e.heap_len >> 1; n >= 1; n--) ne(e, a, n);
      r = c;
      do {
        (n = e.heap[1]),
          (e.heap[1] = e.heap[e.heap_len--]),
          ne(e, a, 1),
          (i = e.heap[1]),
          (e.heap[--e.heap_max] = n),
          (e.heap[--e.heap_max] = i),
          (a[2 * r] = a[2 * n] + a[2 * i]),
          (e.depth[r] =
            (e.depth[n] >= e.depth[i] ? e.depth[n] : e.depth[i]) + 1),
          (a[2 * n + 1] = a[2 * i + 1] = r),
          (e.heap[1] = r++),
          ne(e, a, 1);
      } while (e.heap_len >= 2);
      (e.heap[--e.heap_max] = e.heap[1]), J(e, t), Z(a, u, e.bl_count);
    }
    function ae(e, t, n) {
      var i,
        r,
        a = -1,
        o = t[0 * 2 + 1],
        s = 0,
        c = 7,
        u = 4;
      for (
        0 === o && ((c = 138), (u = 3)), t[2 * (n + 1) + 1] = 65535, i = 0;
        i <= n;
        i++
      )
        (r = o),
          (o = t[2 * (i + 1) + 1]),
          (++s < c && r === o) ||
            (s < u
              ? (e.bl_tree[2 * r] += s)
              : 0 !== r
              ? (r !== a && e.bl_tree[2 * r]++, e.bl_tree[2 * x]++)
              : s <= 10
              ? e.bl_tree[2 * L]++
              : e.bl_tree[2 * T]++,
            (s = 0),
            (a = r),
            0 === o
              ? ((c = 138), (u = 3))
              : r === o
              ? ((c = 6), (u = 3))
              : ((c = 7), (u = 4)));
    }
    function oe(e, t, n) {
      var i,
        r,
        a = -1,
        o = t[0 * 2 + 1],
        s = 0,
        c = 7,
        u = 4;
      for (0 === o && ((c = 138), (u = 3)), i = 0; i <= n; i++)
        if (((r = o), (o = t[2 * (i + 1) + 1]), !(++s < c && r === o))) {
          if (s < u)
            do {
              X(e, r, e.bl_tree);
            } while (0 !== --s);
          else
            0 !== r
              ? (r !== a && (X(e, r, e.bl_tree), s--),
                X(e, x, e.bl_tree),
                U(e, s - 3, 2))
              : s <= 10
              ? (X(e, L, e.bl_tree), U(e, s - 3, 3))
              : (X(e, T, e.bl_tree), U(e, s - 11, 7));
          (s = 0),
            (a = r),
            0 === o
              ? ((c = 138), (u = 3))
              : r === o
              ? ((c = 6), (u = 3))
              : ((c = 7), (u = 4));
        }
    }
    function se(e) {
      var t;
      for (
        ae(e, e.dyn_ltree, e.l_desc.max_code),
          ae(e, e.dyn_dtree, e.d_desc.max_code),
          re(e, e.bl_desc),
          t = v - 1;
        t >= 3;
        t--
      )
        if (0 !== e.bl_tree[2 * E[t] + 1]) break;
      return (e.opt_len += 3 * (t + 1) + 5 + 5 + 4), t;
    }
    function ce(e, t, n, i) {
      var r;
      for (U(e, t - 257, 5), U(e, n - 1, 5), U(e, i - 4, 4), r = 0; r < i; r++)
        U(e, e.bl_tree[2 * E[r] + 1], 3);
      oe(e, e.dyn_ltree, t - 1), oe(e, e.dyn_dtree, n - 1);
    }
    function ue(e) {
      var t,
        n = 4093624447;
      for (t = 0; t <= 31; t++, n >>>= 1)
        if (1 & n && 0 !== e.dyn_ltree[2 * t]) return a;
      if (
        0 !== e.dyn_ltree[9 * 2] ||
        0 !== e.dyn_ltree[10 * 2] ||
        0 !== e.dyn_ltree[13 * 2]
      )
        return o;
      for (t = 32; t < f; t++) if (0 !== e.dyn_ltree[2 * t]) return o;
      return a;
    }
    c(W);
    var le = !1;
    function de(e) {
      le || (K(), (le = !0)),
        (e.l_desc = new q(e.dyn_ltree, Y)),
        (e.d_desc = new q(e.dyn_dtree, R)),
        (e.bl_desc = new q(e.bl_tree, B)),
        (e.bi_buf = 0),
        (e.bi_valid = 0),
        Q(e);
    }
    function he(e, t, n, i) {
      U(e, (u << 1) + (i ? 1 : 0), 3), ee(e, t, n, !0);
    }
    function pe(e) {
      U(e, l << 1, 3), X(e, A, C), G(e);
    }
    function me(e, t, n, i) {
      var a,
        o,
        c = 0;
      e.level > 0
        ? (e.strm.data_type === s && (e.strm.data_type = ue(e)),
          re(e, e.l_desc),
          re(e, e.d_desc),
          (c = se(e)),
          (a = (e.opt_len + 3 + 7) >>> 3),
          (o = (e.static_len + 3 + 7) >>> 3),
          o <= a && (a = o))
        : (a = o = n + 5),
        n + 4 <= a && -1 !== t
          ? he(e, t, n, i)
          : e.strategy === r || o === a
          ? (U(e, (l << 1) + (i ? 1 : 0), 3), ie(e, C, D))
          : (U(e, (d << 1) + (i ? 1 : 0), 3),
            ce(e, e.l_desc.max_code + 1, e.d_desc.max_code + 1, c + 1),
            ie(e, e.dyn_ltree, e.dyn_dtree)),
        Q(e),
        i && $(e);
    }
    function fe(e, t, n) {
      return (
        (e.pending_buf[e.d_buf + 2 * e.last_lit] = (t >>> 8) & 255),
        (e.pending_buf[e.d_buf + 2 * e.last_lit + 1] = 255 & t),
        (e.pending_buf[e.l_buf + e.last_lit] = 255 & n),
        e.last_lit++,
        0 === t
          ? e.dyn_ltree[2 * n]++
          : (e.matches++,
            t--,
            e.dyn_ltree[2 * (P[n] + f + 1)]++,
            e.dyn_dtree[2 * H(t)]++),
        e.last_lit === e.lit_bufsize - 1
      );
    }
    (t._tr_init = de),
      (t._tr_stored_block = he),
      (t._tr_flush_block = me),
      (t._tr_tally = fe),
      (t._tr_align = pe);
  },
  '../../../node_modules/pako/lib/zlib/zstream.js': function (e, t, n) {
    'use strict';
    function i() {
      (this.input = null),
        (this.next_in = 0),
        (this.avail_in = 0),
        (this.total_in = 0),
        (this.output = null),
        (this.next_out = 0),
        (this.avail_out = 0),
        (this.total_out = 0),
        (this.msg = ''),
        (this.state = null),
        (this.data_type = 2),
        (this.adler = 0);
    }
    e.exports = i;
  },
  '../../../node_modules/process-nextick-args/index.js': function (e, t, n) {
    'use strict';
    (function (t) {
      function n(e, n, i, r) {
        if ('function' !== typeof e)
          throw new TypeError('"callback" argument must be a function');
        var a,
          o,
          s = arguments.length;
        switch (s) {
          case 0:
          case 1:
            return t.nextTick(e);
          case 2:
            return t.nextTick(function t() {
              e.call(null, n);
            });
          case 3:
            return t.nextTick(function t() {
              e.call(null, n, i);
            });
          case 4:
            return t.nextTick(function t() {
              e.call(null, n, i, r);
            });
          default:
            (a = new Array(s - 1)), (o = 0);
            while (o < a.length) a[o++] = arguments[o];
            return t.nextTick(function t() {
              e.apply(null, a);
            });
        }
      }
      'undefined' === typeof t ||
      !t.version ||
      0 === t.version.indexOf('v0.') ||
      (0 === t.version.indexOf('v1.') && 0 !== t.version.indexOf('v1.8.'))
        ? (e.exports = { nextTick: n })
        : (e.exports = t);
    }.call(this, n('../../../node_modules/process/browser.js')));
  },
  '../../../node_modules/process/browser.js': function (e, t) {
    var n,
      i,
      r = (e.exports = {});
    function a() {
      throw new Error('setTimeout has not been defined');
    }
    function o() {
      throw new Error('clearTimeout has not been defined');
    }
    function s(e) {
      if (n === setTimeout) return setTimeout(e, 0);
      if ((n === a || !n) && setTimeout)
        return (n = setTimeout), setTimeout(e, 0);
      try {
        return n(e, 0);
      } catch (t) {
        try {
          return n.call(null, e, 0);
        } catch (t) {
          return n.call(this, e, 0);
        }
      }
    }
    function c(e) {
      if (i === clearTimeout) return clearTimeout(e);
      if ((i === o || !i) && clearTimeout)
        return (i = clearTimeout), clearTimeout(e);
      try {
        return i(e);
      } catch (t) {
        try {
          return i.call(null, e);
        } catch (t) {
          return i.call(this, e);
        }
      }
    }
    (function () {
      try {
        n = 'function' === typeof setTimeout ? setTimeout : a;
      } catch (e) {
        n = a;
      }
      try {
        i = 'function' === typeof clearTimeout ? clearTimeout : o;
      } catch (e) {
        i = o;
      }
    })();
    var u,
      l = [],
      d = !1,
      h = -1;
    function p() {
      d &&
        u &&
        ((d = !1), u.length ? (l = u.concat(l)) : (h = -1), l.length && m());
    }
    function m() {
      if (!d) {
        var e = s(p);
        d = !0;
        var t = l.length;
        while (t) {
          (u = l), (l = []);
          while (++h < t) u && u[h].run();
          (h = -1), (t = l.length);
        }
        (u = null), (d = !1), c(e);
      }
    }
    function f(e, t) {
      (this.fun = e), (this.array = t);
    }
    function _() {}
    (r.nextTick = function (e) {
      var t = new Array(arguments.length - 1);
      if (arguments.length > 1)
        for (var n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
      l.push(new f(e, t)), 1 !== l.length || d || s(m);
    }),
      (f.prototype.run = function () {
        this.fun.apply(null, this.array);
      }),
      (r.title = 'browser'),
      (r.browser = !0),
      (r.env = {}),
      (r.argv = []),
      (r.version = ''),
      (r.versions = {}),
      (r.on = _),
      (r.addListener = _),
      (r.once = _),
      (r.off = _),
      (r.removeListener = _),
      (r.removeAllListeners = _),
      (r.emit = _),
      (r.prependListener = _),
      (r.prependOnceListener = _),
      (r.listeners = function (e) {
        return [];
      }),
      (r.binding = function (e) {
        throw new Error('process.binding is not supported');
      }),
      (r.cwd = function () {
        return '/';
      }),
      (r.chdir = function (e) {
        throw new Error('process.chdir is not supported');
      }),
      (r.umask = function () {
        return 0;
      });
  },
  '../../../node_modules/qrcode/lib/browser.js': function (e, t, n) {
    var i = n('../../../node_modules/qrcode/lib/can-promise.js'),
      r = n('../../../node_modules/qrcode/lib/core/qrcode.js'),
      a = n('../../../node_modules/qrcode/lib/renderer/canvas.js'),
      o = n('../../../node_modules/qrcode/lib/renderer/svg-tag.js');
    function s(e, t, n, a, o) {
      var s = [].slice.call(arguments, 1),
        c = s.length,
        u = 'function' === typeof s[c - 1];
      if (!u && !i()) throw new Error('Callback required as last argument');
      if (!u) {
        if (c < 1) throw new Error('Too few arguments provided');
        return (
          1 === c
            ? ((n = t), (t = a = void 0))
            : 2 !== c || t.getContext || ((a = n), (n = t), (t = void 0)),
          new Promise(function (i, o) {
            try {
              var s = r.create(n, a);
              i(e(s, t, a));
            } catch (e) {
              o(e);
            }
          })
        );
      }
      if (c < 2) throw new Error('Too few arguments provided');
      2 === c
        ? ((o = n), (n = t), (t = a = void 0))
        : 3 === c &&
          (t.getContext && 'undefined' === typeof o
            ? ((o = a), (a = void 0))
            : ((o = a), (a = n), (n = t), (t = void 0)));
      try {
        var l = r.create(n, a);
        o(null, e(l, t, a));
      } catch (e) {
        o(e);
      }
    }
    (t.create = r.create),
      (t.toCanvas = s.bind(null, a.render)),
      (t.toDataURL = s.bind(null, a.renderToDataURL)),
      (t.toString = s.bind(null, function (e, t, n) {
        return o.render(e, n);
      }));
  },
  '../../../node_modules/qrcode/lib/can-promise.js': function (e, t) {
    e.exports = function () {
      return (
        'function' === typeof Promise &&
        Promise.prototype &&
        Promise.prototype.then
      );
    };
  },
  '../../../node_modules/qrcode/lib/core/alignment-pattern.js': function (
    e,
    t,
    n
  ) {
    var i = n('../../../node_modules/qrcode/lib/core/utils.js').getSymbolSize;
    (t.getRowColCoords = function e(t) {
      if (1 === t) return [];
      for (
        var n = Math.floor(t / 7) + 2,
          r = i(t),
          a = 145 === r ? 26 : 2 * Math.ceil((r - 13) / (2 * n - 2)),
          o = [r - 7],
          s = 1;
        s < n - 1;
        s++
      )
        o[s] = o[s - 1] - a;
      return o.push(6), o.reverse();
    }),
      (t.getPositions = function e(n) {
        for (
          var i = [], r = t.getRowColCoords(n), a = r.length, o = 0;
          o < a;
          o++
        )
          for (var s = 0; s < a; s++)
            (0 === o && 0 === s) ||
              (0 === o && s === a - 1) ||
              (o === a - 1 && 0 === s) ||
              i.push([r[o], r[s]]);
        return i;
      });
  },
  '../../../node_modules/qrcode/lib/core/alphanumeric-data.js': function (
    e,
    t,
    n
  ) {
    var i = n('../../../node_modules/qrcode/lib/core/mode.js'),
      r = [
        '0',
        '1',
        '2',
        '3',
        '4',
        '5',
        '6',
        '7',
        '8',
        '9',
        'A',
        'B',
        'C',
        'D',
        'E',
        'F',
        'G',
        'H',
        'I',
        'J',
        'K',
        'L',
        'M',
        'N',
        'O',
        'P',
        'Q',
        'R',
        'S',
        'T',
        'U',
        'V',
        'W',
        'X',
        'Y',
        'Z',
        ' ',
        '$',
        '%',
        '*',
        '+',
        '-',
        '.',
        '/',
        ':',
      ];
    function a(e) {
      (this.mode = i.ALPHANUMERIC), (this.data = e);
    }
    (a.getBitsLength = function e(t) {
      return 11 * Math.floor(t / 2) + 6 * (t % 2);
    }),
      (a.prototype.getLength = function e() {
        return this.data.length;
      }),
      (a.prototype.getBitsLength = function e() {
        return a.getBitsLength(this.data.length);
      }),
      (a.prototype.write = function e(t) {
        var n;
        for (n = 0; n + 2 <= this.data.length; n += 2) {
          var i = 45 * r.indexOf(this.data[n]);
          (i += r.indexOf(this.data[n + 1])), t.put(i, 11);
        }
        this.data.length % 2 && t.put(r.indexOf(this.data[n]), 6);
      }),
      (e.exports = a);
  },
  '../../../node_modules/qrcode/lib/core/bit-buffer.js': function (e, t) {
    function n() {
      (this.buffer = []), (this.length = 0);
    }
    (n.prototype = {
      get: function (e) {
        var t = Math.floor(e / 8);
        return 1 === ((this.buffer[t] >>> (7 - (e % 8))) & 1);
      },
      put: function (e, t) {
        for (var n = 0; n < t; n++)
          this.putBit(1 === ((e >>> (t - n - 1)) & 1));
      },
      getLengthInBits: function () {
        return this.length;
      },
      putBit: function (e) {
        var t = Math.floor(this.length / 8);
        this.buffer.length <= t && this.buffer.push(0),
          e && (this.buffer[t] |= 128 >>> this.length % 8),
          this.length++;
      },
    }),
      (e.exports = n);
  },
  '../../../node_modules/qrcode/lib/core/bit-matrix.js': function (e, t, n) {
    var i = n('../../../node_modules/qrcode/lib/utils/typedarray-buffer.js');
    function r(e) {
      if (!e || e < 1)
        throw new Error('BitMatrix size must be defined and greater than 0');
      (this.size = e),
        (this.data = i.alloc(e * e)),
        (this.reservedBit = i.alloc(e * e));
    }
    (r.prototype.set = function (e, t, n, i) {
      var r = e * this.size + t;
      (this.data[r] = n), i && (this.reservedBit[r] = !0);
    }),
      (r.prototype.get = function (e, t) {
        return this.data[e * this.size + t];
      }),
      (r.prototype.xor = function (e, t, n) {
        this.data[e * this.size + t] ^= n;
      }),
      (r.prototype.isReserved = function (e, t) {
        return this.reservedBit[e * this.size + t];
      }),
      (e.exports = r);
  },
  '../../../node_modules/qrcode/lib/core/byte-data.js': function (e, t, n) {
    var i = n('../../../node_modules/qrcode/lib/utils/typedarray-buffer.js'),
      r = n('../../../node_modules/qrcode/lib/core/mode.js');
    function a(e) {
      (this.mode = r.BYTE), (this.data = i.from(e));
    }
    (a.getBitsLength = function e(t) {
      return 8 * t;
    }),
      (a.prototype.getLength = function e() {
        return this.data.length;
      }),
      (a.prototype.getBitsLength = function e() {
        return a.getBitsLength(this.data.length);
      }),
      (a.prototype.write = function (e) {
        for (var t = 0, n = this.data.length; t < n; t++)
          e.put(this.data[t], 8);
      }),
      (e.exports = a);
  },
  '../../../node_modules/qrcode/lib/core/error-correction-code.js': function (
    e,
    t,
    n
  ) {
    var i = n(
        '../../../node_modules/qrcode/lib/core/error-correction-level.js'
      ),
      r = [
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        2,
        2,
        1,
        2,
        2,
        4,
        1,
        2,
        4,
        4,
        2,
        4,
        4,
        4,
        2,
        4,
        6,
        5,
        2,
        4,
        6,
        6,
        2,
        5,
        8,
        8,
        4,
        5,
        8,
        8,
        4,
        5,
        8,
        11,
        4,
        8,
        10,
        11,
        4,
        9,
        12,
        16,
        4,
        9,
        16,
        16,
        6,
        10,
        12,
        18,
        6,
        10,
        17,
        16,
        6,
        11,
        16,
        19,
        6,
        13,
        18,
        21,
        7,
        14,
        21,
        25,
        8,
        16,
        20,
        25,
        8,
        17,
        23,
        25,
        9,
        17,
        23,
        34,
        9,
        18,
        25,
        30,
        10,
        20,
        27,
        32,
        12,
        21,
        29,
        35,
        12,
        23,
        34,
        37,
        12,
        25,
        34,
        40,
        13,
        26,
        35,
        42,
        14,
        28,
        38,
        45,
        15,
        29,
        40,
        48,
        16,
        31,
        43,
        51,
        17,
        33,
        45,
        54,
        18,
        35,
        48,
        57,
        19,
        37,
        51,
        60,
        19,
        38,
        53,
        63,
        20,
        40,
        56,
        66,
        21,
        43,
        59,
        70,
        22,
        45,
        62,
        74,
        24,
        47,
        65,
        77,
        25,
        49,
        68,
        81,
      ],
      a = [
        7,
        10,
        13,
        17,
        10,
        16,
        22,
        28,
        15,
        26,
        36,
        44,
        20,
        36,
        52,
        64,
        26,
        48,
        72,
        88,
        36,
        64,
        96,
        112,
        40,
        72,
        108,
        130,
        48,
        88,
        132,
        156,
        60,
        110,
        160,
        192,
        72,
        130,
        192,
        224,
        80,
        150,
        224,
        264,
        96,
        176,
        260,
        308,
        104,
        198,
        288,
        352,
        120,
        216,
        320,
        384,
        132,
        240,
        360,
        432,
        144,
        280,
        408,
        480,
        168,
        308,
        448,
        532,
        180,
        338,
        504,
        588,
        196,
        364,
        546,
        650,
        224,
        416,
        600,
        700,
        224,
        442,
        644,
        750,
        252,
        476,
        690,
        816,
        270,
        504,
        750,
        900,
        300,
        560,
        810,
        960,
        312,
        588,
        870,
        1050,
        336,
        644,
        952,
        1110,
        360,
        700,
        1020,
        1200,
        390,
        728,
        1050,
        1260,
        420,
        784,
        1140,
        1350,
        450,
        812,
        1200,
        1440,
        480,
        868,
        1290,
        1530,
        510,
        924,
        1350,
        1620,
        540,
        980,
        1440,
        1710,
        570,
        1036,
        1530,
        1800,
        570,
        1064,
        1590,
        1890,
        600,
        1120,
        1680,
        1980,
        630,
        1204,
        1770,
        2100,
        660,
        1260,
        1860,
        2220,
        720,
        1316,
        1950,
        2310,
        750,
        1372,
        2040,
        2430,
      ];
    (t.getBlocksCount = function e(t, n) {
      switch (n) {
        case i.L:
          return r[4 * (t - 1) + 0];
        case i.M:
          return r[4 * (t - 1) + 1];
        case i.Q:
          return r[4 * (t - 1) + 2];
        case i.H:
          return r[4 * (t - 1) + 3];
        default:
          return;
      }
    }),
      (t.getTotalCodewordsCount = function e(t, n) {
        switch (n) {
          case i.L:
            return a[4 * (t - 1) + 0];
          case i.M:
            return a[4 * (t - 1) + 1];
          case i.Q:
            return a[4 * (t - 1) + 2];
          case i.H:
            return a[4 * (t - 1) + 3];
          default:
            return;
        }
      });
  },
  '../../../node_modules/qrcode/lib/core/error-correction-level.js': function (
    e,
    t
  ) {
    function n(e) {
      if ('string' !== typeof e) throw new Error('Param is not a string');
      var n = e.toLowerCase();
      switch (n) {
        case 'l':
        case 'low':
          return t.L;
        case 'm':
        case 'medium':
          return t.M;
        case 'q':
        case 'quartile':
          return t.Q;
        case 'h':
        case 'high':
          return t.H;
        default:
          throw new Error('Unknown EC Level: ' + e);
      }
    }
    (t.L = { bit: 1 }),
      (t.M = { bit: 0 }),
      (t.Q = { bit: 3 }),
      (t.H = { bit: 2 }),
      (t.isValid = function e(t) {
        return t && 'undefined' !== typeof t.bit && t.bit >= 0 && t.bit < 4;
      }),
      (t.from = function e(i, r) {
        if (t.isValid(i)) return i;
        try {
          return n(i);
        } catch (e) {
          return r;
        }
      });
  },
  '../../../node_modules/qrcode/lib/core/finder-pattern.js': function (
    e,
    t,
    n
  ) {
    var i = n('../../../node_modules/qrcode/lib/core/utils.js').getSymbolSize,
      r = 7;
    t.getPositions = function e(t) {
      var n = i(t);
      return [
        [0, 0],
        [n - r, 0],
        [0, n - r],
      ];
    };
  },
  '../../../node_modules/qrcode/lib/core/format-info.js': function (e, t, n) {
    var i = n('../../../node_modules/qrcode/lib/core/utils.js'),
      r =
        (1 << 10) |
        (1 << 8) |
        (1 << 5) |
        (1 << 4) |
        (1 << 2) |
        (1 << 1) |
        (1 << 0),
      a = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1),
      o = i.getBCHDigit(r);
    t.getEncodedBits = function e(t, n) {
      var s = (t.bit << 3) | n,
        c = s << 10;
      while (i.getBCHDigit(c) - o >= 0) c ^= r << (i.getBCHDigit(c) - o);
      return ((s << 10) | c) ^ a;
    };
  },
  '../../../node_modules/qrcode/lib/core/galois-field.js': function (e, t, n) {
    var i = n('../../../node_modules/qrcode/lib/utils/typedarray-buffer.js'),
      r = i.alloc(512),
      a = i.alloc(256);
    (function e() {
      for (var t = 1, n = 0; n < 255; n++)
        (r[n] = t), (a[t] = n), (t <<= 1), 256 & t && (t ^= 285);
      for (n = 255; n < 512; n++) r[n] = r[n - 255];
    })(),
      (t.log = function e(t) {
        if (t < 1) throw new Error('log(' + t + ')');
        return a[t];
      }),
      (t.exp = function e(t) {
        return r[t];
      }),
      (t.mul = function e(t, n) {
        return 0 === t || 0 === n ? 0 : r[a[t] + a[n]];
      });
  },
  '../../../node_modules/qrcode/lib/core/kanji-data.js': function (e, t, n) {
    var i = n('../../../node_modules/qrcode/lib/core/mode.js'),
      r = n('../../../node_modules/qrcode/lib/core/utils.js');
    function a(e) {
      (this.mode = i.KANJI), (this.data = e);
    }
    (a.getBitsLength = function e(t) {
      return 13 * t;
    }),
      (a.prototype.getLength = function e() {
        return this.data.length;
      }),
      (a.prototype.getBitsLength = function e() {
        return a.getBitsLength(this.data.length);
      }),
      (a.prototype.write = function (e) {
        var t;
        for (t = 0; t < this.data.length; t++) {
          var n = r.toSJIS(this.data[t]);
          if (n >= 33088 && n <= 40956) n -= 33088;
          else {
            if (!(n >= 57408 && n <= 60351))
              throw new Error(
                'Invalid SJIS character: ' +
                  this.data[t] +
                  '\n' +
                  'Make sure your charset is UTF-8'
              );
            n -= 49472;
          }
          (n = 192 * ((n >>> 8) & 255) + (255 & n)), e.put(n, 13);
        }
      }),
      (e.exports = a);
  },
  '../../../node_modules/qrcode/lib/core/mask-pattern.js': function (e, t) {
    t.Patterns = {
      PATTERN000: 0,
      PATTERN001: 1,
      PATTERN010: 2,
      PATTERN011: 3,
      PATTERN100: 4,
      PATTERN101: 5,
      PATTERN110: 6,
      PATTERN111: 7,
    };
    var n = { N1: 3, N2: 3, N3: 40, N4: 10 };
    function i(e, n, i) {
      switch (e) {
        case t.Patterns.PATTERN000:
          return (n + i) % 2 === 0;
        case t.Patterns.PATTERN001:
          return n % 2 === 0;
        case t.Patterns.PATTERN010:
          return i % 3 === 0;
        case t.Patterns.PATTERN011:
          return (n + i) % 3 === 0;
        case t.Patterns.PATTERN100:
          return (Math.floor(n / 2) + Math.floor(i / 3)) % 2 === 0;
        case t.Patterns.PATTERN101:
          return ((n * i) % 2) + ((n * i) % 3) === 0;
        case t.Patterns.PATTERN110:
          return (((n * i) % 2) + ((n * i) % 3)) % 2 === 0;
        case t.Patterns.PATTERN111:
          return (((n * i) % 3) + ((n + i) % 2)) % 2 === 0;
        default:
          throw new Error('bad maskPattern:' + e);
      }
    }
    (t.isValid = function e(t) {
      return null != t && '' !== t && !isNaN(t) && t >= 0 && t <= 7;
    }),
      (t.from = function e(n) {
        return t.isValid(n) ? parseInt(n, 10) : void 0;
      }),
      (t.getPenaltyN1 = function e(t) {
        for (
          var i = t.size, r = 0, a = 0, o = 0, s = null, c = null, u = 0;
          u < i;
          u++
        ) {
          (a = o = 0), (s = c = null);
          for (var l = 0; l < i; l++) {
            var d = t.get(u, l);
            d === s ? a++ : (a >= 5 && (r += n.N1 + (a - 5)), (s = d), (a = 1)),
              (d = t.get(l, u)),
              d === c
                ? o++
                : (o >= 5 && (r += n.N1 + (o - 5)), (c = d), (o = 1));
          }
          a >= 5 && (r += n.N1 + (a - 5)), o >= 5 && (r += n.N1 + (o - 5));
        }
        return r;
      }),
      (t.getPenaltyN2 = function e(t) {
        for (var i = t.size, r = 0, a = 0; a < i - 1; a++)
          for (var o = 0; o < i - 1; o++) {
            var s =
              t.get(a, o) +
              t.get(a, o + 1) +
              t.get(a + 1, o) +
              t.get(a + 1, o + 1);
            (4 !== s && 0 !== s) || r++;
          }
        return r * n.N2;
      }),
      (t.getPenaltyN3 = function e(t) {
        for (var i = t.size, r = 0, a = 0, o = 0, s = 0; s < i; s++) {
          a = o = 0;
          for (var c = 0; c < i; c++)
            (a = ((a << 1) & 2047) | t.get(s, c)),
              c >= 10 && (1488 === a || 93 === a) && r++,
              (o = ((o << 1) & 2047) | t.get(c, s)),
              c >= 10 && (1488 === o || 93 === o) && r++;
        }
        return r * n.N3;
      }),
      (t.getPenaltyN4 = function e(t) {
        for (var i = 0, r = t.data.length, a = 0; a < r; a++) i += t.data[a];
        var o = Math.abs(Math.ceil((100 * i) / r / 5) - 10);
        return o * n.N4;
      }),
      (t.applyMask = function e(t, n) {
        for (var r = n.size, a = 0; a < r; a++)
          for (var o = 0; o < r; o++)
            n.isReserved(o, a) || n.xor(o, a, i(t, o, a));
      }),
      (t.getBestMask = function e(n, i) {
        for (
          var r = Object.keys(t.Patterns).length, a = 0, o = 1 / 0, s = 0;
          s < r;
          s++
        ) {
          i(s), t.applyMask(s, n);
          var c =
            t.getPenaltyN1(n) +
            t.getPenaltyN2(n) +
            t.getPenaltyN3(n) +
            t.getPenaltyN4(n);
          t.applyMask(s, n), c < o && ((o = c), (a = s));
        }
        return a;
      });
  },
  '../../../node_modules/qrcode/lib/core/mode.js': function (e, t, n) {
    var i = n('../../../node_modules/qrcode/lib/core/version-check.js'),
      r = n('../../../node_modules/qrcode/lib/core/regex.js');
    function a(e) {
      if ('string' !== typeof e) throw new Error('Param is not a string');
      var n = e.toLowerCase();
      switch (n) {
        case 'numeric':
          return t.NUMERIC;
        case 'alphanumeric':
          return t.ALPHANUMERIC;
        case 'kanji':
          return t.KANJI;
        case 'byte':
          return t.BYTE;
        default:
          throw new Error('Unknown mode: ' + e);
      }
    }
    (t.NUMERIC = { id: 'Numeric', bit: 1 << 0, ccBits: [10, 12, 14] }),
      (t.ALPHANUMERIC = {
        id: 'Alphanumeric',
        bit: 1 << 1,
        ccBits: [9, 11, 13],
      }),
      (t.BYTE = { id: 'Byte', bit: 1 << 2, ccBits: [8, 16, 16] }),
      (t.KANJI = { id: 'Kanji', bit: 1 << 3, ccBits: [8, 10, 12] }),
      (t.MIXED = { bit: -1 }),
      (t.getCharCountIndicator = function e(t, n) {
        if (!t.ccBits) throw new Error('Invalid mode: ' + t);
        if (!i.isValid(n)) throw new Error('Invalid version: ' + n);
        return n >= 1 && n < 10
          ? t.ccBits[0]
          : n < 27
          ? t.ccBits[1]
          : t.ccBits[2];
      }),
      (t.getBestModeForData = function e(n) {
        return r.testNumeric(n)
          ? t.NUMERIC
          : r.testAlphanumeric(n)
          ? t.ALPHANUMERIC
          : r.testKanji(n)
          ? t.KANJI
          : t.BYTE;
      }),
      (t.toString = function e(t) {
        if (t && t.id) return t.id;
        throw new Error('Invalid mode');
      }),
      (t.isValid = function e(t) {
        return t && t.bit && t.ccBits;
      }),
      (t.from = function e(n, i) {
        if (t.isValid(n)) return n;
        try {
          return a(n);
        } catch (e) {
          return i;
        }
      });
  },
  '../../../node_modules/qrcode/lib/core/numeric-data.js': function (e, t, n) {
    var i = n('../../../node_modules/qrcode/lib/core/mode.js');
    function r(e) {
      (this.mode = i.NUMERIC), (this.data = e.toString());
    }
    (r.getBitsLength = function e(t) {
      return 10 * Math.floor(t / 3) + (t % 3 ? (t % 3) * 3 + 1 : 0);
    }),
      (r.prototype.getLength = function e() {
        return this.data.length;
      }),
      (r.prototype.getBitsLength = function e() {
        return r.getBitsLength(this.data.length);
      }),
      (r.prototype.write = function e(t) {
        var n, i, r;
        for (n = 0; n + 3 <= this.data.length; n += 3)
          (i = this.data.substr(n, 3)), (r = parseInt(i, 10)), t.put(r, 10);
        var a = this.data.length - n;
        a > 0 &&
          ((i = this.data.substr(n)),
          (r = parseInt(i, 10)),
          t.put(r, 3 * a + 1));
      }),
      (e.exports = r);
  },
  '../../../node_modules/qrcode/lib/core/polynomial.js': function (e, t, n) {
    var i = n('../../../node_modules/qrcode/lib/utils/typedarray-buffer.js'),
      r = n('../../../node_modules/qrcode/lib/core/galois-field.js');
    (t.mul = function e(t, n) {
      for (var a = i.alloc(t.length + n.length - 1), o = 0; o < t.length; o++)
        for (var s = 0; s < n.length; s++) a[o + s] ^= r.mul(t[o], n[s]);
      return a;
    }),
      (t.mod = function e(t, n) {
        var a = i.from(t);
        while (a.length - n.length >= 0) {
          for (var o = a[0], s = 0; s < n.length; s++) a[s] ^= r.mul(n[s], o);
          var c = 0;
          while (c < a.length && 0 === a[c]) c++;
          a = a.slice(c);
        }
        return a;
      }),
      (t.generateECPolynomial = function e(n) {
        for (var a = i.from([1]), o = 0; o < n; o++)
          a = t.mul(a, [1, r.exp(o)]);
        return a;
      });
  },
  '../../../node_modules/qrcode/lib/core/qrcode.js': function (e, t, n) {
    var i = n('../../../node_modules/qrcode/lib/utils/typedarray-buffer.js'),
      r = n('../../../node_modules/qrcode/lib/core/utils.js'),
      a = n('../../../node_modules/qrcode/lib/core/error-correction-level.js'),
      o = n('../../../node_modules/qrcode/lib/core/bit-buffer.js'),
      s = n('../../../node_modules/qrcode/lib/core/bit-matrix.js'),
      c = n('../../../node_modules/qrcode/lib/core/alignment-pattern.js'),
      u = n('../../../node_modules/qrcode/lib/core/finder-pattern.js'),
      l = n('../../../node_modules/qrcode/lib/core/mask-pattern.js'),
      d = n('../../../node_modules/qrcode/lib/core/error-correction-code.js'),
      h = n('../../../node_modules/qrcode/lib/core/reed-solomon-encoder.js'),
      p = n('../../../node_modules/qrcode/lib/core/version.js'),
      m = n('../../../node_modules/qrcode/lib/core/format-info.js'),
      f = n('../../../node_modules/qrcode/lib/core/mode.js'),
      _ = n('../../../node_modules/qrcode/lib/core/segments.js'),
      M = n('../../../node_modules/qrcode/node_modules/isarray/index.js');
    function v(e, t) {
      for (var n = e.size, i = u.getPositions(t), r = 0; r < i.length; r++)
        for (var a = i[r][0], o = i[r][1], s = -1; s <= 7; s++)
          if (!(a + s <= -1 || n <= a + s))
            for (var c = -1; c <= 7; c++)
              o + c <= -1 ||
                n <= o + c ||
                ((s >= 0 && s <= 6 && (0 === c || 6 === c)) ||
                (c >= 0 && c <= 6 && (0 === s || 6 === s)) ||
                (s >= 2 && s <= 4 && c >= 2 && c <= 4)
                  ? e.set(a + s, o + c, !0, !0)
                  : e.set(a + s, o + c, !1, !0));
    }
    function g(e) {
      for (var t = e.size, n = 8; n < t - 8; n++) {
        var i = n % 2 === 0;
        e.set(n, 6, i, !0), e.set(6, n, i, !0);
      }
    }
    function y(e, t) {
      for (var n = c.getPositions(t), i = 0; i < n.length; i++)
        for (var r = n[i][0], a = n[i][1], o = -2; o <= 2; o++)
          for (var s = -2; s <= 2; s++)
            -2 === o || 2 === o || -2 === s || 2 === s || (0 === o && 0 === s)
              ? e.set(r + o, a + s, !0, !0)
              : e.set(r + o, a + s, !1, !0);
    }
    function b(e, t) {
      for (var n, i, r, a = e.size, o = p.getEncodedBits(t), s = 0; s < 18; s++)
        (n = Math.floor(s / 3)),
          (i = (s % 3) + a - 8 - 3),
          (r = 1 === ((o >> s) & 1)),
          e.set(n, i, r, !0),
          e.set(i, n, r, !0);
    }
    function w(e, t, n) {
      var i,
        r,
        a = e.size,
        o = m.getEncodedBits(t, n);
      for (i = 0; i < 15; i++)
        (r = 1 === ((o >> i) & 1)),
          i < 6
            ? e.set(i, 8, r, !0)
            : i < 8
            ? e.set(i + 1, 8, r, !0)
            : e.set(a - 15 + i, 8, r, !0),
          i < 8
            ? e.set(8, a - i - 1, r, !0)
            : i < 9
            ? e.set(8, 15 - i - 1 + 1, r, !0)
            : e.set(8, 15 - i - 1, r, !0);
      e.set(a - 8, 8, 1, !0);
    }
    function A(e, t) {
      for (
        var n = e.size, i = -1, r = n - 1, a = 7, o = 0, s = n - 1;
        s > 0;
        s -= 2
      ) {
        6 === s && s--;
        while (1) {
          for (var c = 0; c < 2; c++)
            if (!e.isReserved(r, s - c)) {
              var u = !1;
              o < t.length && (u = 1 === ((t[o] >>> a) & 1)),
                e.set(r, s - c, u),
                a--,
                -1 === a && (o++, (a = 7));
            }
          if (((r += i), r < 0 || n <= r)) {
            (r -= i), (i = -i);
            break;
          }
        }
      }
    }
    function x(e, t, n) {
      var i = new o();
      n.forEach(function (t) {
        i.put(t.mode.bit, 4),
          i.put(t.getLength(), f.getCharCountIndicator(t.mode, e)),
          t.write(i);
      });
      var a = r.getSymbolTotalCodewords(e),
        s = d.getTotalCodewordsCount(e, t),
        c = 8 * (a - s);
      i.getLengthInBits() + 4 <= c && i.put(0, 4);
      while (i.getLengthInBits() % 8 !== 0) i.putBit(0);
      for (var u = (c - i.getLengthInBits()) / 8, l = 0; l < u; l++)
        i.put(l % 2 ? 17 : 236, 8);
      return L(i, e, t);
    }
    function L(e, t, n) {
      for (
        var a = r.getSymbolTotalCodewords(t),
          o = d.getTotalCodewordsCount(t, n),
          s = a - o,
          c = d.getBlocksCount(t, n),
          u = a % c,
          l = c - u,
          p = Math.floor(a / c),
          m = Math.floor(s / c),
          f = m + 1,
          _ = p - m,
          M = new h(_),
          v = 0,
          g = new Array(c),
          y = new Array(c),
          b = 0,
          w = i.from(e.buffer),
          A = 0;
        A < c;
        A++
      ) {
        var x = A < l ? m : f;
        (g[A] = w.slice(v, v + x)),
          (y[A] = M.encode(g[A])),
          (v += x),
          (b = Math.max(b, x));
      }
      var L,
        T,
        z = i.alloc(a),
        S = 0;
      for (L = 0; L < b; L++)
        for (T = 0; T < c; T++) L < g[T].length && (z[S++] = g[T][L]);
      for (L = 0; L < _; L++) for (T = 0; T < c; T++) z[S++] = y[T][L];
      return z;
    }
    function T(e, t, n, i) {
      var a;
      if (M(e)) a = _.fromArray(e);
      else {
        if ('string' !== typeof e) throw new Error('Invalid data');
        var o = t;
        if (!o) {
          var c = _.rawSplit(e);
          o = p.getBestVersionForData(c, n);
        }
        a = _.fromString(e, o || 40);
      }
      var u = p.getBestVersionForData(a, n);
      if (!u)
        throw new Error(
          'The amount of data is too big to be stored in a QR Code'
        );
      if (t) {
        if (t < u)
          throw new Error(
            '\n' +
              'The chosen QR Code version cannot contain this amount of data.\n' +
              'Minimum version required to store current data is: ' +
              u +
              '.\n'
          );
      } else t = u;
      var d = x(t, n, a),
        h = r.getSymbolSize(t),
        m = new s(h);
      return (
        v(m, t),
        g(m),
        y(m, t),
        w(m, n, 0),
        t >= 7 && b(m, t),
        A(m, d),
        isNaN(i) && (i = l.getBestMask(m, w.bind(null, m, n))),
        l.applyMask(i, m),
        w(m, n, i),
        {
          modules: m,
          version: t,
          errorCorrectionLevel: n,
          maskPattern: i,
          segments: a,
        }
      );
    }
    t.create = function e(t, n) {
      if ('undefined' === typeof t || '' === t)
        throw new Error('No input text');
      var i,
        o,
        s = a.M;
      return (
        'undefined' !== typeof n &&
          ((s = a.from(n.errorCorrectionLevel, a.M)),
          (i = p.from(n.version)),
          (o = l.from(n.maskPattern)),
          n.toSJISFunc && r.setToSJISFunction(n.toSJISFunc)),
        T(t, i, s, o)
      );
    };
  },
  '../../../node_modules/qrcode/lib/core/reed-solomon-encoder.js': function (
    e,
    t,
    n
  ) {
    var i = n('../../../node_modules/qrcode/lib/utils/typedarray-buffer.js'),
      r = n('../../../node_modules/qrcode/lib/core/polynomial.js'),
      a = n(
        '../../../node_modules/node-libs-browser/node_modules/buffer/index.js'
      ).Buffer;
    function o(e) {
      (this.genPoly = void 0),
        (this.degree = e),
        this.degree && this.initialize(this.degree);
    }
    (o.prototype.initialize = function e(t) {
      (this.degree = t), (this.genPoly = r.generateECPolynomial(this.degree));
    }),
      (o.prototype.encode = function e(t) {
        if (!this.genPoly) throw new Error('Encoder not initialized');
        var n = i.alloc(this.degree),
          o = a.concat([t, n], t.length + this.degree),
          s = r.mod(o, this.genPoly),
          c = this.degree - s.length;
        if (c > 0) {
          var u = i.alloc(this.degree);
          return s.copy(u, c), u;
        }
        return s;
      }),
      (e.exports = o);
  },
  '../../../node_modules/qrcode/lib/core/regex.js': function (e, t) {
    var n = '[0-9]+',
      i = '[A-Z $%*+\\-./:]+',
      r =
        '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +
        '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +
        '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +
        '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+';
    r = r.replace(/u/g, '\\u');
    var a = '(?:(?![A-Z0-9 $%*+\\-./:]|' + r + ')(?:.|[\r\n]))+';
    (t.KANJI = new RegExp(r, 'g')),
      (t.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\-./:]+', 'g')),
      (t.BYTE = new RegExp(a, 'g')),
      (t.NUMERIC = new RegExp(n, 'g')),
      (t.ALPHANUMERIC = new RegExp(i, 'g'));
    var o = new RegExp('^' + r + '$'),
      s = new RegExp('^' + n + '$'),
      c = new RegExp('^[A-Z0-9 $%*+\\-./:]+$');
    (t.testKanji = function e(t) {
      return o.test(t);
    }),
      (t.testNumeric = function e(t) {
        return s.test(t);
      }),
      (t.testAlphanumeric = function e(t) {
        return c.test(t);
      });
  },
  '../../../node_modules/qrcode/lib/core/segments.js': function (e, t, n) {
    var i = n('../../../node_modules/qrcode/lib/core/mode.js'),
      r = n('../../../node_modules/qrcode/lib/core/numeric-data.js'),
      a = n('../../../node_modules/qrcode/lib/core/alphanumeric-data.js'),
      o = n('../../../node_modules/qrcode/lib/core/byte-data.js'),
      s = n('../../../node_modules/qrcode/lib/core/kanji-data.js'),
      c = n('../../../node_modules/qrcode/lib/core/regex.js'),
      u = n('../../../node_modules/qrcode/lib/core/utils.js'),
      l = n('../../../node_modules/dijkstrajs/dijkstra.js');
    function d(e) {
      return unescape(encodeURIComponent(e)).length;
    }
    function h(e, t, n) {
      var i,
        r = [];
      while (null !== (i = e.exec(n)))
        r.push({ data: i[0], index: i.index, mode: t, length: i[0].length });
      return r;
    }
    function p(e) {
      var t,
        n,
        r = h(c.NUMERIC, i.NUMERIC, e),
        a = h(c.ALPHANUMERIC, i.ALPHANUMERIC, e);
      u.isKanjiModeEnabled()
        ? ((t = h(c.BYTE, i.BYTE, e)), (n = h(c.KANJI, i.KANJI, e)))
        : ((t = h(c.BYTE_KANJI, i.BYTE, e)), (n = []));
      var o = r.concat(a, t, n);
      return o
        .sort(function (e, t) {
          return e.index - t.index;
        })
        .map(function (e) {
          return { data: e.data, mode: e.mode, length: e.length };
        });
    }
    function m(e, t) {
      switch (t) {
        case i.NUMERIC:
          return r.getBitsLength(e);
        case i.ALPHANUMERIC:
          return a.getBitsLength(e);
        case i.KANJI:
          return s.getBitsLength(e);
        case i.BYTE:
          return o.getBitsLength(e);
      }
    }
    function f(e) {
      return e.reduce(function (e, t) {
        var n = e.length - 1 >= 0 ? e[e.length - 1] : null;
        return n && n.mode === t.mode
          ? ((e[e.length - 1].data += t.data), e)
          : (e.push(t), e);
      }, []);
    }
    function _(e) {
      for (var t = [], n = 0; n < e.length; n++) {
        var r = e[n];
        switch (r.mode) {
          case i.NUMERIC:
            t.push([
              r,
              { data: r.data, mode: i.ALPHANUMERIC, length: r.length },
              { data: r.data, mode: i.BYTE, length: r.length },
            ]);
            break;
          case i.ALPHANUMERIC:
            t.push([r, { data: r.data, mode: i.BYTE, length: r.length }]);
            break;
          case i.KANJI:
            t.push([r, { data: r.data, mode: i.BYTE, length: d(r.data) }]);
            break;
          case i.BYTE:
            t.push([{ data: r.data, mode: i.BYTE, length: d(r.data) }]);
        }
      }
      return t;
    }
    function M(e, t) {
      for (
        var n = {}, r = { start: {} }, a = ['start'], o = 0;
        o < e.length;
        o++
      ) {
        for (var s = e[o], c = [], u = 0; u < s.length; u++) {
          var l = s[u],
            d = '' + o + u;
          c.push(d), (n[d] = { node: l, lastCount: 0 }), (r[d] = {});
          for (var h = 0; h < a.length; h++) {
            var p = a[h];
            n[p] && n[p].node.mode === l.mode
              ? ((r[p][d] =
                  m(n[p].lastCount + l.length, l.mode) -
                  m(n[p].lastCount, l.mode)),
                (n[p].lastCount += l.length))
              : (n[p] && (n[p].lastCount = l.length),
                (r[p][d] =
                  m(l.length, l.mode) +
                  4 +
                  i.getCharCountIndicator(l.mode, t)));
          }
        }
        a = c;
      }
      for (h = 0; h < a.length; h++) r[a[h]]['end'] = 0;
      return { map: r, table: n };
    }
    function v(e, t) {
      var n,
        c = i.getBestModeForData(e);
      if (((n = i.from(t, c)), n !== i.BYTE && n.bit < c.bit))
        throw new Error(
          '"' +
            e +
            '"' +
            ' cannot be encoded with mode ' +
            i.toString(n) +
            '.\n Suggested mode is: ' +
            i.toString(c)
        );
      switch ((n !== i.KANJI || u.isKanjiModeEnabled() || (n = i.BYTE), n)) {
        case i.NUMERIC:
          return new r(e);
        case i.ALPHANUMERIC:
          return new a(e);
        case i.KANJI:
          return new s(e);
        case i.BYTE:
          return new o(e);
      }
    }
    (t.fromArray = function e(t) {
      return t.reduce(function (e, t) {
        return (
          'string' === typeof t
            ? e.push(v(t, null))
            : t.data && e.push(v(t.data, t.mode)),
          e
        );
      }, []);
    }),
      (t.fromString = function e(n, i) {
        for (
          var r = p(n, u.isKanjiModeEnabled()),
            a = _(r),
            o = M(a, i),
            s = l.find_path(o.map, 'start', 'end'),
            c = [],
            d = 1;
          d < s.length - 1;
          d++
        )
          c.push(o.table[s[d]].node);
        return t.fromArray(f(c));
      }),
      (t.rawSplit = function e(n) {
        return t.fromArray(p(n, u.isKanjiModeEnabled()));
      });
  },
  '../../../node_modules/qrcode/lib/core/utils.js': function (e, t) {
    var n,
      i = [
        0,
        26,
        44,
        70,
        100,
        134,
        172,
        196,
        242,
        292,
        346,
        404,
        466,
        532,
        581,
        655,
        733,
        815,
        901,
        991,
        1085,
        1156,
        1258,
        1364,
        1474,
        1588,
        1706,
        1828,
        1921,
        2051,
        2185,
        2323,
        2465,
        2611,
        2761,
        2876,
        3034,
        3196,
        3362,
        3532,
        3706,
      ];
    (t.getSymbolSize = function e(t) {
      if (!t) throw new Error('"version" cannot be null or undefined');
      if (t < 1 || t > 40)
        throw new Error('"version" should be in range from 1 to 40');
      return 4 * t + 17;
    }),
      (t.getSymbolTotalCodewords = function e(t) {
        return i[t];
      }),
      (t.getBCHDigit = function (e) {
        var t = 0;
        while (0 !== e) t++, (e >>>= 1);
        return t;
      }),
      (t.setToSJISFunction = function e(t) {
        if ('function' !== typeof t)
          throw new Error('"toSJISFunc" is not a valid function.');
        n = t;
      }),
      (t.isKanjiModeEnabled = function () {
        return 'undefined' !== typeof n;
      }),
      (t.toSJIS = function e(t) {
        return n(t);
      });
  },
  '../../../node_modules/qrcode/lib/core/version-check.js': function (e, t) {
    t.isValid = function e(t) {
      return !isNaN(t) && t >= 1 && t <= 40;
    };
  },
  '../../../node_modules/qrcode/lib/core/version.js': function (e, t, n) {
    var i = n('../../../node_modules/qrcode/lib/core/utils.js'),
      r = n('../../../node_modules/qrcode/lib/core/error-correction-code.js'),
      a = n('../../../node_modules/qrcode/lib/core/error-correction-level.js'),
      o = n('../../../node_modules/qrcode/lib/core/mode.js'),
      s = n('../../../node_modules/qrcode/lib/core/version-check.js'),
      c = n('../../../node_modules/qrcode/node_modules/isarray/index.js'),
      u =
        (1 << 12) |
        (1 << 11) |
        (1 << 10) |
        (1 << 9) |
        (1 << 8) |
        (1 << 5) |
        (1 << 2) |
        (1 << 0),
      l = i.getBCHDigit(u);
    function d(e, n, i) {
      for (var r = 1; r <= 40; r++) if (n <= t.getCapacity(r, i, e)) return r;
    }
    function h(e, t) {
      return o.getCharCountIndicator(e, t) + 4;
    }
    function p(e, t) {
      var n = 0;
      return (
        e.forEach(function (e) {
          var i = h(e.mode, t);
          n += i + e.getBitsLength();
        }),
        n
      );
    }
    function m(e, n) {
      for (var i = 1; i <= 40; i++) {
        var r = p(e, i);
        if (r <= t.getCapacity(i, n, o.MIXED)) return i;
      }
    }
    (t.from = function e(t, n) {
      return s.isValid(t) ? parseInt(t, 10) : n;
    }),
      (t.getCapacity = function e(t, n, a) {
        if (!s.isValid(t)) throw new Error('Invalid QR Code version');
        'undefined' === typeof a && (a = o.BYTE);
        var c = i.getSymbolTotalCodewords(t),
          u = r.getTotalCodewordsCount(t, n),
          l = 8 * (c - u);
        if (a === o.MIXED) return l;
        var d = l - h(a, t);
        switch (a) {
          case o.NUMERIC:
            return Math.floor((d / 10) * 3);
          case o.ALPHANUMERIC:
            return Math.floor((d / 11) * 2);
          case o.KANJI:
            return Math.floor(d / 13);
          case o.BYTE:
          default:
            return Math.floor(d / 8);
        }
      }),
      (t.getBestVersionForData = function e(t, n) {
        var i,
          r = a.from(n, a.M);
        if (c(t)) {
          if (t.length > 1) return m(t, r);
          if (0 === t.length) return 1;
          i = t[0];
        } else i = t;
        return d(i.mode, i.getLength(), r);
      }),
      (t.getEncodedBits = function e(t) {
        if (!s.isValid(t) || t < 7) throw new Error('Invalid QR Code version');
        var n = t << 12;
        while (i.getBCHDigit(n) - l >= 0) n ^= u << (i.getBCHDigit(n) - l);
        return (t << 12) | n;
      });
  },
  '../../../node_modules/qrcode/lib/renderer/canvas.js': function (e, t, n) {
    var i = n('../../../node_modules/qrcode/lib/renderer/utils.js');
    function r(e, t, n) {
      e.clearRect(0, 0, t.width, t.height),
        t.style || (t.style = {}),
        (t.height = n),
        (t.width = n),
        (t.style.height = n + 'px'),
        (t.style.width = n + 'px');
    }
    function a() {
      try {
        return document.createElement('canvas');
      } catch (e) {
        throw new Error('You need to specify a canvas element');
      }
    }
    (t.render = function e(t, n, o) {
      var s = o,
        c = n;
      'undefined' !== typeof s ||
        (n && n.getContext) ||
        ((s = n), (n = void 0)),
        n || (c = a()),
        (s = i.getOptions(s));
      var u = i.getImageWidth(t.modules.size, s),
        l = c.getContext('2d'),
        d = l.createImageData(u, u);
      return (
        i.qrToImageData(d.data, t, s), r(l, c, u), l.putImageData(d, 0, 0), c
      );
    }),
      (t.renderToDataURL = function e(n, i, r) {
        var a = r;
        'undefined' !== typeof a ||
          (i && i.getContext) ||
          ((a = i), (i = void 0)),
          a || (a = {});
        var o = t.render(n, i, a),
          s = a.type || 'image/png',
          c = a.rendererOpts || {};
        return o.toDataURL(s, c.quality);
      });
  },
  '../../../node_modules/qrcode/lib/renderer/svg-tag.js': function (e, t, n) {
    var i = n('../../../node_modules/qrcode/lib/renderer/utils.js');
    function r(e, t) {
      var n = e.a / 255,
        i = t + '="' + e.hex + '"';
      return n < 1
        ? i + ' ' + t + '-opacity="' + n.toFixed(2).slice(1) + '"'
        : i;
    }
    function a(e, t, n) {
      var i = e + t;
      return 'undefined' !== typeof n && (i += ' ' + n), i;
    }
    function o(e, t, n) {
      for (var i = '', r = 0, o = !1, s = 0, c = 0; c < e.length; c++) {
        var u = Math.floor(c % t),
          l = Math.floor(c / t);
        u || o || (o = !0),
          e[c]
            ? (s++,
              (c > 0 && u > 0 && e[c - 1]) ||
                ((i += o ? a('M', u + n, 0.5 + l + n) : a('m', r, 0)),
                (r = 0),
                (o = !1)),
              (u + 1 < t && e[c + 1]) || ((i += a('h', s)), (s = 0)))
            : r++;
      }
      return i;
    }
    t.render = function e(t, n, a) {
      var s = i.getOptions(n),
        c = t.modules.size,
        u = t.modules.data,
        l = c + 2 * s.margin,
        d = s.color.light.a
          ? '<path ' +
            r(s.color.light, 'fill') +
            ' d="M0 0h' +
            l +
            'v' +
            l +
            'H0z"/>'
          : '',
        h =
          '<path ' +
          r(s.color.dark, 'stroke') +
          ' d="' +
          o(u, c, s.margin) +
          '"/>',
        p = 'viewBox="' + '0 0 ' + l + ' ' + l + '"',
        m = s.width ? 'width="' + s.width + '" height="' + s.width + '" ' : '',
        f =
          '<svg xmlns="http://www.w3.org/2000/svg" ' +
          m +
          p +
          ' shape-rendering="crispEdges">' +
          d +
          h +
          '</svg>\n';
      return 'function' === typeof a && a(null, f), f;
    };
  },
  '../../../node_modules/qrcode/lib/renderer/utils.js': function (e, t) {
    function n(e) {
      if (('number' === typeof e && (e = e.toString()), 'string' !== typeof e))
        throw new Error('Color should be defined as hex string');
      var t = e.slice().replace('#', '').split('');
      if (t.length < 3 || 5 === t.length || t.length > 8)
        throw new Error('Invalid hex color: ' + e);
      (3 !== t.length && 4 !== t.length) ||
        (t = Array.prototype.concat.apply(
          [],
          t.map(function (e) {
            return [e, e];
          })
        )),
        6 === t.length && t.push('F', 'F');
      var n = parseInt(t.join(''), 16);
      return {
        r: (n >> 24) & 255,
        g: (n >> 16) & 255,
        b: (n >> 8) & 255,
        a: 255 & n,
        hex: '#' + t.slice(0, 6).join(''),
      };
    }
    (t.getOptions = function e(t) {
      t || (t = {}), t.color || (t.color = {});
      var i =
          'undefined' === typeof t.margin || null === t.margin || t.margin < 0
            ? 4
            : t.margin,
        r = t.width && t.width >= 21 ? t.width : void 0,
        a = t.scale || 4;
      return {
        width: r,
        scale: r ? 4 : a,
        margin: i,
        color: {
          dark: n(t.color.dark || '#000000ff'),
          light: n(t.color.light || '#ffffffff'),
        },
        type: t.type,
        rendererOpts: t.rendererOpts || {},
      };
    }),
      (t.getScale = function e(t, n) {
        return n.width && n.width >= t + 2 * n.margin
          ? n.width / (t + 2 * n.margin)
          : n.scale;
      }),
      (t.getImageWidth = function e(n, i) {
        var r = t.getScale(n, i);
        return Math.floor((n + 2 * i.margin) * r);
      }),
      (t.qrToImageData = function e(n, i, r) {
        for (
          var a = i.modules.size,
            o = i.modules.data,
            s = t.getScale(a, r),
            c = Math.floor((a + 2 * r.margin) * s),
            u = r.margin * s,
            l = [r.color.light, r.color.dark],
            d = 0;
          d < c;
          d++
        )
          for (var h = 0; h < c; h++) {
            var p = 4 * (d * c + h),
              m = r.color.light;
            if (d >= u && h >= u && d < c - u && h < c - u) {
              var f = Math.floor((d - u) / s),
                _ = Math.floor((h - u) / s);
              m = l[o[f * a + _] ? 1 : 0];
            }
            (n[p++] = m.r), (n[p++] = m.g), (n[p++] = m.b), (n[p] = m.a);
          }
      });
  },
  '../../../node_modules/qrcode/lib/utils/typedarray-buffer.js': function (
    e,
    t,
    n
  ) {
    'use strict';
    var i = n('../../../node_modules/qrcode/node_modules/isarray/index.js');
    function r() {
      try {
        var e = new Uint8Array(1);
        return (
          (e.__proto__ = {
            __proto__: Uint8Array.prototype,
            foo: function () {
              return 42;
            },
          }),
          42 === e.foo()
        );
      } catch (e) {
        return !1;
      }
    }
    o.TYPED_ARRAY_SUPPORT = r();
    var a = o.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
    function o(e, t, n) {
      return o.TYPED_ARRAY_SUPPORT || this instanceof o
        ? 'number' === typeof e
          ? l(this, e)
          : g(this, e, t, n)
        : new o(e, t, n);
    }
    function s(e) {
      if (e >= a)
        throw new RangeError(
          'Attempt to allocate Buffer larger than maximum ' +
            'size: 0x' +
            a.toString(16) +
            ' bytes'
        );
      return 0 | e;
    }
    function c(e) {
      return e !== e;
    }
    function u(e, t) {
      var n;
      return (
        o.TYPED_ARRAY_SUPPORT
          ? ((n = new Uint8Array(t)), (n.__proto__ = o.prototype))
          : ((n = e), null === n && (n = new o(t)), (n.length = t)),
        n
      );
    }
    function l(e, t) {
      var n = u(e, t < 0 ? 0 : 0 | s(t));
      if (!o.TYPED_ARRAY_SUPPORT) for (var i = 0; i < t; ++i) n[i] = 0;
      return n;
    }
    function d(e, t) {
      var n = 0 | _(t),
        i = u(e, n),
        r = i.write(t);
      return r !== n && (i = i.slice(0, r)), i;
    }
    function h(e, t) {
      for (
        var n = t.length < 0 ? 0 : 0 | s(t.length), i = u(e, n), r = 0;
        r < n;
        r += 1
      )
        i[r] = 255 & t[r];
      return i;
    }
    function p(e, t, n, i) {
      if (n < 0 || t.byteLength < n)
        throw new RangeError("'offset' is out of bounds");
      if (t.byteLength < n + (i || 0))
        throw new RangeError("'length' is out of bounds");
      var r;
      return (
        (r =
          void 0 === n && void 0 === i
            ? new Uint8Array(t)
            : void 0 === i
            ? new Uint8Array(t, n)
            : new Uint8Array(t, n, i)),
        o.TYPED_ARRAY_SUPPORT ? (r.__proto__ = o.prototype) : (r = h(e, r)),
        r
      );
    }
    function m(e, t) {
      if (o.isBuffer(t)) {
        var n = 0 | s(t.length),
          i = u(e, n);
        return 0 === i.length || t.copy(i, 0, 0, n), i;
      }
      if (t) {
        if (
          ('undefined' !== typeof ArrayBuffer &&
            t.buffer instanceof ArrayBuffer) ||
          'length' in t
        )
          return 'number' !== typeof t.length || c(t.length)
            ? u(e, 0)
            : h(e, t);
        if ('Buffer' === t.type && Array.isArray(t.data)) return h(e, t.data);
      }
      throw new TypeError(
        'First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.'
      );
    }
    function f(e, t) {
      var n;
      t = t || 1 / 0;
      for (var i = e.length, r = null, a = [], o = 0; o < i; ++o) {
        if (((n = e.charCodeAt(o)), n > 55295 && n < 57344)) {
          if (!r) {
            if (n > 56319) {
              (t -= 3) > -1 && a.push(239, 191, 189);
              continue;
            }
            if (o + 1 === i) {
              (t -= 3) > -1 && a.push(239, 191, 189);
              continue;
            }
            r = n;
            continue;
          }
          if (n < 56320) {
            (t -= 3) > -1 && a.push(239, 191, 189), (r = n);
            continue;
          }
          n = (((r - 55296) << 10) | (n - 56320)) + 65536;
        } else r && (t -= 3) > -1 && a.push(239, 191, 189);
        if (((r = null), n < 128)) {
          if ((t -= 1) < 0) break;
          a.push(n);
        } else if (n < 2048) {
          if ((t -= 2) < 0) break;
          a.push((n >> 6) | 192, (63 & n) | 128);
        } else if (n < 65536) {
          if ((t -= 3) < 0) break;
          a.push((n >> 12) | 224, ((n >> 6) & 63) | 128, (63 & n) | 128);
        } else {
          if (!(n < 1114112)) throw new Error('Invalid code point');
          if ((t -= 4) < 0) break;
          a.push(
            (n >> 18) | 240,
            ((n >> 12) & 63) | 128,
            ((n >> 6) & 63) | 128,
            (63 & n) | 128
          );
        }
      }
      return a;
    }
    function _(e) {
      if (o.isBuffer(e)) return e.length;
      if (
        'undefined' !== typeof ArrayBuffer &&
        'function' === typeof ArrayBuffer.isView &&
        (ArrayBuffer.isView(e) || e instanceof ArrayBuffer)
      )
        return e.byteLength;
      'string' !== typeof e && (e = '' + e);
      var t = e.length;
      return 0 === t ? 0 : f(e).length;
    }
    function M(e, t, n, i) {
      for (var r = 0; r < i; ++r) {
        if (r + n >= t.length || r >= e.length) break;
        t[r + n] = e[r];
      }
      return r;
    }
    function v(e, t, n, i) {
      return M(f(t, e.length - n), e, n, i);
    }
    function g(e, t, n, i) {
      if ('number' === typeof t)
        throw new TypeError('"value" argument must not be a number');
      return 'undefined' !== typeof ArrayBuffer && t instanceof ArrayBuffer
        ? p(e, t, n, i)
        : 'string' === typeof t
        ? d(e, t, n)
        : m(e, t);
    }
    o.TYPED_ARRAY_SUPPORT &&
      ((o.prototype.__proto__ = Uint8Array.prototype),
      (o.__proto__ = Uint8Array),
      'undefined' !== typeof Symbol &&
        Symbol.species &&
        o[Symbol.species] === o &&
        Object.defineProperty(o, Symbol.species, {
          value: null,
          configurable: !0,
          enumerable: !1,
          writable: !1,
        })),
      (o.prototype.write = function e(t, n, i) {
        void 0 === n || (void 0 === i && 'string' === typeof n)
          ? ((i = this.length), (n = 0))
          : isFinite(n) && ((n |= 0), isFinite(i) ? (i |= 0) : (i = void 0));
        var r = this.length - n;
        if (
          ((void 0 === i || i > r) && (i = r),
          (t.length > 0 && (i < 0 || n < 0)) || n > this.length)
        )
          throw new RangeError('Attempt to write outside buffer bounds');
        return v(this, t, n, i);
      }),
      (o.prototype.slice = function e(t, n) {
        var i,
          r = this.length;
        if (
          ((t = ~~t),
          (n = void 0 === n ? r : ~~n),
          t < 0 ? ((t += r), t < 0 && (t = 0)) : t > r && (t = r),
          n < 0 ? ((n += r), n < 0 && (n = 0)) : n > r && (n = r),
          n < t && (n = t),
          o.TYPED_ARRAY_SUPPORT)
        )
          (i = this.subarray(t, n)), (i.__proto__ = o.prototype);
        else {
          var a = n - t;
          i = new o(a, void 0);
          for (var s = 0; s < a; ++s) i[s] = this[s + t];
        }
        return i;
      }),
      (o.prototype.copy = function e(t, n, i, r) {
        if (
          (i || (i = 0),
          r || 0 === r || (r = this.length),
          n >= t.length && (n = t.length),
          n || (n = 0),
          r > 0 && r < i && (r = i),
          r === i)
        )
          return 0;
        if (0 === t.length || 0 === this.length) return 0;
        if (n < 0) throw new RangeError('targetStart out of bounds');
        if (i < 0 || i >= this.length)
          throw new RangeError('sourceStart out of bounds');
        if (r < 0) throw new RangeError('sourceEnd out of bounds');
        r > this.length && (r = this.length),
          t.length - n < r - i && (r = t.length - n + i);
        var a,
          s = r - i;
        if (this === t && i < n && n < r)
          for (a = s - 1; a >= 0; --a) t[a + n] = this[a + i];
        else if (s < 1e3 || !o.TYPED_ARRAY_SUPPORT)
          for (a = 0; a < s; ++a) t[a + n] = this[a + i];
        else Uint8Array.prototype.set.call(t, this.subarray(i, i + s), n);
        return s;
      }),
      (o.prototype.fill = function e(t, n, i) {
        if ('string' === typeof t) {
          if (
            ('string' === typeof n
              ? ((n = 0), (i = this.length))
              : 'string' === typeof i && (i = this.length),
            1 === t.length)
          ) {
            var r = t.charCodeAt(0);
            r < 256 && (t = r);
          }
        } else 'number' === typeof t && (t &= 255);
        if (n < 0 || this.length < n || this.length < i)
          throw new RangeError('Out of range index');
        if (i <= n) return this;
        var a;
        if (
          ((n >>>= 0),
          (i = void 0 === i ? this.length : i >>> 0),
          t || (t = 0),
          'number' === typeof t)
        )
          for (a = n; a < i; ++a) this[a] = t;
        else {
          var s = o.isBuffer(t) ? t : new o(t),
            c = s.length;
          for (a = 0; a < i - n; ++a) this[a + n] = s[a % c];
        }
        return this;
      }),
      (o.concat = function e(t, n) {
        if (!i(t))
          throw new TypeError('"list" argument must be an Array of Buffers');
        if (0 === t.length) return u(null, 0);
        var r;
        if (void 0 === n)
          for (n = 0, r = 0; r < t.length; ++r) n += t[r].length;
        var a = l(null, n),
          s = 0;
        for (r = 0; r < t.length; ++r) {
          var c = t[r];
          if (!o.isBuffer(c))
            throw new TypeError('"list" argument must be an Array of Buffers');
          c.copy(a, s), (s += c.length);
        }
        return a;
      }),
      (o.byteLength = _),
      (o.prototype._isBuffer = !0),
      (o.isBuffer = function e(t) {
        return !(null == t || !t._isBuffer);
      }),
      (e.exports.alloc = function (e) {
        var t = new o(e);
        return t.fill(0), t;
      }),
      (e.exports.from = function (e) {
        return new o(e);
      });
  },
  '../../../node_modules/qrcode/node_modules/isarray/index.js': function (
    e,
    t
  ) {
    var n = {}.toString;
    e.exports =
      Array.isArray ||
      function (e) {
        return '[object Array]' == n.call(e);
      };
  },
  '../../../node_modules/readable-stream/duplex-browser.js': function (
    e,
    t,
    n
  ) {
    e.exports = n(
      '../../../node_modules/readable-stream/lib/_stream_duplex.js'
    );
  },
  '../../../node_modules/readable-stream/lib/_stream_duplex.js': function (
    e,
    t,
    n
  ) {
    'use strict';
    var i = n('../../../node_modules/process-nextick-args/index.js'),
      r =
        Object.keys ||
        function (e) {
          var t = [];
          for (var n in e) t.push(n);
          return t;
        };
    e.exports = d;
    var a = Object.create(n('../../../node_modules/core-util-is/lib/util.js'));
    a.inherits = n('../../../node_modules/inherits/inherits_browser.js');
    var o = n('../../../node_modules/readable-stream/lib/_stream_readable.js'),
      s = n('../../../node_modules/readable-stream/lib/_stream_writable.js');
    a.inherits(d, o);
    for (var c = r(s.prototype), u = 0; u < c.length; u++) {
      var l = c[u];
      d.prototype[l] || (d.prototype[l] = s.prototype[l]);
    }
    function d(e) {
      if (!(this instanceof d)) return new d(e);
      o.call(this, e),
        s.call(this, e),
        e && !1 === e.readable && (this.readable = !1),
        e && !1 === e.writable && (this.writable = !1),
        (this.allowHalfOpen = !0),
        e && !1 === e.allowHalfOpen && (this.allowHalfOpen = !1),
        this.once('end', h);
    }
    function h() {
      this.allowHalfOpen || this._writableState.ended || i.nextTick(p, this);
    }
    function p(e) {
      e.end();
    }
    Object.defineProperty(d.prototype, 'writableHighWaterMark', {
      enumerable: !1,
      get: function () {
        return this._writableState.highWaterMark;
      },
    }),
      Object.defineProperty(d.prototype, 'destroyed', {
        get: function () {
          return (
            void 0 !== this._readableState &&
            void 0 !== this._writableState &&
            this._readableState.destroyed &&
            this._writableState.destroyed
          );
        },
        set: function (e) {
          void 0 !== this._readableState &&
            void 0 !== this._writableState &&
            ((this._readableState.destroyed = e),
            (this._writableState.destroyed = e));
        },
      }),
      (d.prototype._destroy = function (e, t) {
        this.push(null), this.end(), i.nextTick(t, e);
      });
  },
  '../../../node_modules/readable-stream/lib/_stream_passthrough.js': function (
    e,
    t,
    n
  ) {
    'use strict';
    e.exports = a;
    var i = n('../../../node_modules/readable-stream/lib/_stream_transform.js'),
      r = Object.create(n('../../../node_modules/core-util-is/lib/util.js'));
    function a(e) {
      if (!(this instanceof a)) return new a(e);
      i.call(this, e);
    }
    (r.inherits = n('../../../node_modules/inherits/inherits_browser.js')),
      r.inherits(a, i),
      (a.prototype._transform = function (e, t, n) {
        n(null, e);
      });
  },
  '../../../node_modules/readable-stream/lib/_stream_readable.js': function (
    e,
    t,
    n
  ) {
    'use strict';
    (function (t, i) {
      var r = n('../../../node_modules/process-nextick-args/index.js');
      e.exports = w;
      var a,
        o = n('../../../node_modules/isarray/index.js');
      w.ReadableState = b;
      n('../../../node_modules/events/events.js').EventEmitter;
      var s = function (e, t) {
          return e.listeners(t).length;
        },
        c = n(
          '../../../node_modules/readable-stream/lib/internal/streams/stream-browser.js'
        ),
        u = n(
          '../../../node_modules/readable-stream/node_modules/safe-buffer/index.js'
        ).Buffer,
        l = t.Uint8Array || function () {};
      function d(e) {
        return u.from(e);
      }
      function h(e) {
        return u.isBuffer(e) || e instanceof l;
      }
      var p = Object.create(
        n('../../../node_modules/core-util-is/lib/util.js')
      );
      p.inherits = n('../../../node_modules/inherits/inherits_browser.js');
      var m = n(0),
        f = void 0;
      f = m && m.debuglog ? m.debuglog('stream') : function () {};
      var _,
        M = n(
          '../../../node_modules/readable-stream/lib/internal/streams/BufferList.js'
        ),
        v = n(
          '../../../node_modules/readable-stream/lib/internal/streams/destroy.js'
        );
      p.inherits(w, c);
      var g = ['error', 'close', 'destroy', 'pause', 'resume'];
      function y(e, t, n) {
        if ('function' === typeof e.prependListener)
          return e.prependListener(t, n);
        e._events && e._events[t]
          ? o(e._events[t])
            ? e._events[t].unshift(n)
            : (e._events[t] = [n, e._events[t]])
          : e.on(t, n);
      }
      function b(e, t) {
        (a =
          a ||
          n('../../../node_modules/readable-stream/lib/_stream_duplex.js')),
          (e = e || {});
        var i = t instanceof a;
        (this.objectMode = !!e.objectMode),
          i && (this.objectMode = this.objectMode || !!e.readableObjectMode);
        var r = e.highWaterMark,
          o = e.readableHighWaterMark,
          s = this.objectMode ? 16 : 16 * 1024;
        (this.highWaterMark = r || 0 === r ? r : i && (o || 0 === o) ? o : s),
          (this.highWaterMark = Math.floor(this.highWaterMark)),
          (this.buffer = new M()),
          (this.length = 0),
          (this.pipes = null),
          (this.pipesCount = 0),
          (this.flowing = null),
          (this.ended = !1),
          (this.endEmitted = !1),
          (this.reading = !1),
          (this.sync = !0),
          (this.needReadable = !1),
          (this.emittedReadable = !1),
          (this.readableListening = !1),
          (this.resumeScheduled = !1),
          (this.destroyed = !1),
          (this.defaultEncoding = e.defaultEncoding || 'utf8'),
          (this.awaitDrain = 0),
          (this.readingMore = !1),
          (this.decoder = null),
          (this.encoding = null),
          e.encoding &&
            (_ ||
              (_ = n(
                '../../../node_modules/node-libs-browser/node_modules/string_decoder/lib/string_decoder.js'
              ).StringDecoder),
            (this.decoder = new _(e.encoding)),
            (this.encoding = e.encoding));
      }
      function w(e) {
        if (
          ((a =
            a ||
            n('../../../node_modules/readable-stream/lib/_stream_duplex.js')),
          !(this instanceof w))
        )
          return new w(e);
        (this._readableState = new b(e, this)),
          (this.readable = !0),
          e &&
            ('function' === typeof e.read && (this._read = e.read),
            'function' === typeof e.destroy && (this._destroy = e.destroy)),
          c.call(this);
      }
      function A(e, t, n, i, r) {
        var a,
          o = e._readableState;
        null === t
          ? ((o.reading = !1), E(e, o))
          : (r || (a = L(o, t)),
            a
              ? e.emit('error', a)
              : o.objectMode || (t && t.length > 0)
              ? ('string' === typeof t ||
                  o.objectMode ||
                  Object.getPrototypeOf(t) === u.prototype ||
                  (t = d(t)),
                i
                  ? o.endEmitted
                    ? e.emit(
                        'error',
                        new Error('stream.unshift() after end event')
                      )
                    : x(e, o, t, !0)
                  : o.ended
                  ? e.emit('error', new Error('stream.push() after EOF'))
                  : ((o.reading = !1),
                    o.decoder && !n
                      ? ((t = o.decoder.write(t)),
                        o.objectMode || 0 !== t.length
                          ? x(e, o, t, !1)
                          : D(e, o))
                      : x(e, o, t, !1)))
              : i || (o.reading = !1));
        return T(o);
      }
      function x(e, t, n, i) {
        t.flowing && 0 === t.length && !t.sync
          ? (e.emit('data', n), e.read(0))
          : ((t.length += t.objectMode ? 1 : n.length),
            i ? t.buffer.unshift(n) : t.buffer.push(n),
            t.needReadable && k(e)),
          D(e, t);
      }
      function L(e, t) {
        var n;
        return (
          h(t) ||
            'string' === typeof t ||
            void 0 === t ||
            e.objectMode ||
            (n = new TypeError('Invalid non-string/buffer chunk')),
          n
        );
      }
      function T(e) {
        return (
          !e.ended &&
          (e.needReadable || e.length < e.highWaterMark || 0 === e.length)
        );
      }
      Object.defineProperty(w.prototype, 'destroyed', {
        get: function () {
          return (
            void 0 !== this._readableState && this._readableState.destroyed
          );
        },
        set: function (e) {
          this._readableState && (this._readableState.destroyed = e);
        },
      }),
        (w.prototype.destroy = v.destroy),
        (w.prototype._undestroy = v.undestroy),
        (w.prototype._destroy = function (e, t) {
          this.push(null), t(e);
        }),
        (w.prototype.push = function (e, t) {
          var n,
            i = this._readableState;
          return (
            i.objectMode
              ? (n = !0)
              : 'string' === typeof e &&
                ((t = t || i.defaultEncoding),
                t !== i.encoding && ((e = u.from(e, t)), (t = '')),
                (n = !0)),
            A(this, e, t, !1, n)
          );
        }),
        (w.prototype.unshift = function (e) {
          return A(this, e, null, !0, !1);
        }),
        (w.prototype.isPaused = function () {
          return !1 === this._readableState.flowing;
        }),
        (w.prototype.setEncoding = function (e) {
          return (
            _ ||
              (_ = n(
                '../../../node_modules/node-libs-browser/node_modules/string_decoder/lib/string_decoder.js'
              ).StringDecoder),
            (this._readableState.decoder = new _(e)),
            (this._readableState.encoding = e),
            this
          );
        });
      var z = 8388608;
      function S(e) {
        return (
          e >= z
            ? (e = z)
            : (e--,
              (e |= e >>> 1),
              (e |= e >>> 2),
              (e |= e >>> 4),
              (e |= e >>> 8),
              (e |= e >>> 16),
              e++),
          e
        );
      }
      function O(e, t) {
        return e <= 0 || (0 === t.length && t.ended)
          ? 0
          : t.objectMode
          ? 1
          : e !== e
          ? t.flowing && t.length
            ? t.buffer.head.data.length
            : t.length
          : (e > t.highWaterMark && (t.highWaterMark = S(e)),
            e <= t.length
              ? e
              : t.ended
              ? t.length
              : ((t.needReadable = !0), 0));
      }
      function E(e, t) {
        if (!t.ended) {
          if (t.decoder) {
            var n = t.decoder.end();
            n &&
              n.length &&
              (t.buffer.push(n), (t.length += t.objectMode ? 1 : n.length));
          }
          (t.ended = !0), k(e);
        }
      }
      function k(e) {
        var t = e._readableState;
        (t.needReadable = !1),
          t.emittedReadable ||
            (f('emitReadable', t.flowing),
            (t.emittedReadable = !0),
            t.sync ? r.nextTick(C, e) : C(e));
      }
      function C(e) {
        f('emit readable'), e.emit('readable'), B(e);
      }
      function D(e, t) {
        t.readingMore || ((t.readingMore = !0), r.nextTick(N, e, t));
      }
      function N(e, t) {
        var n = t.length;
        while (
          !t.reading &&
          !t.flowing &&
          !t.ended &&
          t.length < t.highWaterMark
        ) {
          if ((f('maybeReadMore read 0'), e.read(0), n === t.length)) break;
          n = t.length;
        }
        t.readingMore = !1;
      }
      function P(e) {
        return function () {
          var t = e._readableState;
          f('pipeOnDrain', t.awaitDrain),
            t.awaitDrain && t.awaitDrain--,
            0 === t.awaitDrain && s(e, 'data') && ((t.flowing = !0), B(e));
        };
      }
      function j(e) {
        f('readable nexttick read 0'), e.read(0);
      }
      function Y(e, t) {
        t.resumeScheduled || ((t.resumeScheduled = !0), r.nextTick(R, e, t));
      }
      function R(e, t) {
        t.reading || (f('resume read 0'), e.read(0)),
          (t.resumeScheduled = !1),
          (t.awaitDrain = 0),
          e.emit('resume'),
          B(e),
          t.flowing && !t.reading && e.read(0);
      }
      function B(e) {
        var t = e._readableState;
        f('flow', t.flowing);
        while (t.flowing && null !== e.read());
      }
      function W(e, t) {
        return 0 === t.length
          ? null
          : (t.objectMode
              ? (n = t.buffer.shift())
              : !e || e >= t.length
              ? ((n = t.decoder
                  ? t.buffer.join('')
                  : 1 === t.buffer.length
                  ? t.buffer.head.data
                  : t.buffer.concat(t.length)),
                t.buffer.clear())
              : (n = I(e, t.buffer, t.decoder)),
            n);
        var n;
      }
      function I(e, t, n) {
        var i;
        return (
          e < t.head.data.length
            ? ((i = t.head.data.slice(0, e)),
              (t.head.data = t.head.data.slice(e)))
            : (i =
                e === t.head.data.length ? t.shift() : n ? q(e, t) : H(e, t)),
          i
        );
      }
      function q(e, t) {
        var n = t.head,
          i = 1,
          r = n.data;
        e -= r.length;
        while ((n = n.next)) {
          var a = n.data,
            o = e > a.length ? a.length : e;
          if (
            (o === a.length ? (r += a) : (r += a.slice(0, e)),
            (e -= o),
            0 === e)
          ) {
            o === a.length
              ? (++i, n.next ? (t.head = n.next) : (t.head = t.tail = null))
              : ((t.head = n), (n.data = a.slice(o)));
            break;
          }
          ++i;
        }
        return (t.length -= i), r;
      }
      function H(e, t) {
        var n = u.allocUnsafe(e),
          i = t.head,
          r = 1;
        i.data.copy(n), (e -= i.data.length);
        while ((i = i.next)) {
          var a = i.data,
            o = e > a.length ? a.length : e;
          if ((a.copy(n, n.length - e, 0, o), (e -= o), 0 === e)) {
            o === a.length
              ? (++r, i.next ? (t.head = i.next) : (t.head = t.tail = null))
              : ((t.head = i), (i.data = a.slice(o)));
            break;
          }
          ++r;
        }
        return (t.length -= r), n;
      }
      function F(e) {
        var t = e._readableState;
        if (t.length > 0)
          throw new Error('"endReadable()" called on non-empty stream');
        t.endEmitted || ((t.ended = !0), r.nextTick(U, t, e));
      }
      function U(e, t) {
        e.endEmitted ||
          0 !== e.length ||
          ((e.endEmitted = !0), (t.readable = !1), t.emit('end'));
      }
      function X(e, t) {
        for (var n = 0, i = e.length; n < i; n++) if (e[n] === t) return n;
        return -1;
      }
      (w.prototype.read = function (e) {
        f('read', e), (e = parseInt(e, 10));
        var t = this._readableState,
          n = e;
        if (
          (0 !== e && (t.emittedReadable = !1),
          0 === e && t.needReadable && (t.length >= t.highWaterMark || t.ended))
        )
          return (
            f('read: emitReadable', t.length, t.ended),
            0 === t.length && t.ended ? F(this) : k(this),
            null
          );
        if (((e = O(e, t)), 0 === e && t.ended))
          return 0 === t.length && F(this), null;
        var i,
          r = t.needReadable;
        return (
          f('need readable', r),
          (0 === t.length || t.length - e < t.highWaterMark) &&
            ((r = !0), f('length less than watermark', r)),
          t.ended || t.reading
            ? ((r = !1), f('reading or ended', r))
            : r &&
              (f('do read'),
              (t.reading = !0),
              (t.sync = !0),
              0 === t.length && (t.needReadable = !0),
              this._read(t.highWaterMark),
              (t.sync = !1),
              t.reading || (e = O(n, t))),
          (i = e > 0 ? W(e, t) : null),
          null === i ? ((t.needReadable = !0), (e = 0)) : (t.length -= e),
          0 === t.length &&
            (t.ended || (t.needReadable = !0), n !== e && t.ended && F(this)),
          null !== i && this.emit('data', i),
          i
        );
      }),
        (w.prototype._read = function (e) {
          this.emit('error', new Error('_read() is not implemented'));
        }),
        (w.prototype.pipe = function (e, t) {
          var n = this,
            a = this._readableState;
          switch (a.pipesCount) {
            case 0:
              a.pipes = e;
              break;
            case 1:
              a.pipes = [a.pipes, e];
              break;
            default:
              a.pipes.push(e);
              break;
          }
          (a.pipesCount += 1), f('pipe count=%d opts=%j', a.pipesCount, t);
          var o = (!t || !1 !== t.end) && e !== i.stdout && e !== i.stderr,
            c = o ? l : b;
          function u(e, t) {
            f('onunpipe'),
              e === n && t && !1 === t.hasUnpiped && ((t.hasUnpiped = !0), p());
          }
          function l() {
            f('onend'), e.end();
          }
          a.endEmitted ? r.nextTick(c) : n.once('end', c), e.on('unpipe', u);
          var d = P(n);
          e.on('drain', d);
          var h = !1;
          function p() {
            f('cleanup'),
              e.removeListener('close', v),
              e.removeListener('finish', g),
              e.removeListener('drain', d),
              e.removeListener('error', M),
              e.removeListener('unpipe', u),
              n.removeListener('end', l),
              n.removeListener('end', b),
              n.removeListener('data', _),
              (h = !0),
              !a.awaitDrain ||
                (e._writableState && !e._writableState.needDrain) ||
                d();
          }
          var m = !1;
          function _(t) {
            f('ondata'), (m = !1);
            var i = e.write(t);
            !1 !== i ||
              m ||
              (((1 === a.pipesCount && a.pipes === e) ||
                (a.pipesCount > 1 && -1 !== X(a.pipes, e))) &&
                !h &&
                (f('false write response, pause', n._readableState.awaitDrain),
                n._readableState.awaitDrain++,
                (m = !0)),
              n.pause());
          }
          function M(t) {
            f('onerror', t),
              b(),
              e.removeListener('error', M),
              0 === s(e, 'error') && e.emit('error', t);
          }
          function v() {
            e.removeListener('finish', g), b();
          }
          function g() {
            f('onfinish'), e.removeListener('close', v), b();
          }
          function b() {
            f('unpipe'), n.unpipe(e);
          }
          return (
            n.on('data', _),
            y(e, 'error', M),
            e.once('close', v),
            e.once('finish', g),
            e.emit('pipe', n),
            a.flowing || (f('pipe resume'), n.resume()),
            e
          );
        }),
        (w.prototype.unpipe = function (e) {
          var t = this._readableState,
            n = { hasUnpiped: !1 };
          if (0 === t.pipesCount) return this;
          if (1 === t.pipesCount)
            return (
              (e && e !== t.pipes) ||
                (e || (e = t.pipes),
                (t.pipes = null),
                (t.pipesCount = 0),
                (t.flowing = !1),
                e && e.emit('unpipe', this, n)),
              this
            );
          if (!e) {
            var i = t.pipes,
              r = t.pipesCount;
            (t.pipes = null), (t.pipesCount = 0), (t.flowing = !1);
            for (var a = 0; a < r; a++) i[a].emit('unpipe', this, n);
            return this;
          }
          var o = X(t.pipes, e);
          return (
            -1 === o ||
              (t.pipes.splice(o, 1),
              (t.pipesCount -= 1),
              1 === t.pipesCount && (t.pipes = t.pipes[0]),
              e.emit('unpipe', this, n)),
            this
          );
        }),
        (w.prototype.on = function (e, t) {
          var n = c.prototype.on.call(this, e, t);
          if ('data' === e) !1 !== this._readableState.flowing && this.resume();
          else if ('readable' === e) {
            var i = this._readableState;
            i.endEmitted ||
              i.readableListening ||
              ((i.readableListening = i.needReadable = !0),
              (i.emittedReadable = !1),
              i.reading ? i.length && k(this) : r.nextTick(j, this));
          }
          return n;
        }),
        (w.prototype.addListener = w.prototype.on),
        (w.prototype.resume = function () {
          var e = this._readableState;
          return e.flowing || (f('resume'), (e.flowing = !0), Y(this, e)), this;
        }),
        (w.prototype.pause = function () {
          return (
            f('call pause flowing=%j', this._readableState.flowing),
            !1 !== this._readableState.flowing &&
              (f('pause'),
              (this._readableState.flowing = !1),
              this.emit('pause')),
            this
          );
        }),
        (w.prototype.wrap = function (e) {
          var t = this,
            n = this._readableState,
            i = !1;
          for (var r in (e.on('end', function () {
            if ((f('wrapped end'), n.decoder && !n.ended)) {
              var e = n.decoder.end();
              e && e.length && t.push(e);
            }
            t.push(null);
          }),
          e.on('data', function (r) {
            if (
              (f('wrapped data'),
              n.decoder && (r = n.decoder.write(r)),
              (!n.objectMode || (null !== r && void 0 !== r)) &&
                (n.objectMode || (r && r.length)))
            ) {
              var a = t.push(r);
              a || ((i = !0), e.pause());
            }
          }),
          e))
            void 0 === this[r] &&
              'function' === typeof e[r] &&
              (this[r] = (function (t) {
                return function () {
                  return e[t].apply(e, arguments);
                };
              })(r));
          for (var a = 0; a < g.length; a++)
            e.on(g[a], this.emit.bind(this, g[a]));
          return (
            (this._read = function (t) {
              f('wrapped _read', t), i && ((i = !1), e.resume());
            }),
            this
          );
        }),
        Object.defineProperty(w.prototype, 'readableHighWaterMark', {
          enumerable: !1,
          get: function () {
            return this._readableState.highWaterMark;
          },
        }),
        (w._fromList = W);
    }.call(
      this,
      n('../../../node_modules/webpack/buildin/global.js'),
      n('../../../node_modules/process/browser.js')
    ));
  },
  '../../../node_modules/readable-stream/lib/_stream_transform.js': function (
    e,
    t,
    n
  ) {
    'use strict';
    e.exports = o;
    var i = n('../../../node_modules/readable-stream/lib/_stream_duplex.js'),
      r = Object.create(n('../../../node_modules/core-util-is/lib/util.js'));
    function a(e, t) {
      var n = this._transformState;
      n.transforming = !1;
      var i = n.writecb;
      if (!i)
        return this.emit(
          'error',
          new Error('write callback called multiple times')
        );
      (n.writechunk = null),
        (n.writecb = null),
        null != t && this.push(t),
        i(e);
      var r = this._readableState;
      (r.reading = !1),
        (r.needReadable || r.length < r.highWaterMark) &&
          this._read(r.highWaterMark);
    }
    function o(e) {
      if (!(this instanceof o)) return new o(e);
      i.call(this, e),
        (this._transformState = {
          afterTransform: a.bind(this),
          needTransform: !1,
          transforming: !1,
          writecb: null,
          writechunk: null,
          writeencoding: null,
        }),
        (this._readableState.needReadable = !0),
        (this._readableState.sync = !1),
        e &&
          ('function' === typeof e.transform && (this._transform = e.transform),
          'function' === typeof e.flush && (this._flush = e.flush)),
        this.on('prefinish', s);
    }
    function s() {
      var e = this;
      'function' === typeof this._flush
        ? this._flush(function (t, n) {
            c(e, t, n);
          })
        : c(this, null, null);
    }
    function c(e, t, n) {
      if (t) return e.emit('error', t);
      if ((null != n && e.push(n), e._writableState.length))
        throw new Error('Calling transform done when ws.length != 0');
      if (e._transformState.transforming)
        throw new Error('Calling transform done when still transforming');
      return e.push(null);
    }
    (r.inherits = n('../../../node_modules/inherits/inherits_browser.js')),
      r.inherits(o, i),
      (o.prototype.push = function (e, t) {
        return (
          (this._transformState.needTransform = !1),
          i.prototype.push.call(this, e, t)
        );
      }),
      (o.prototype._transform = function (e, t, n) {
        throw new Error('_transform() is not implemented');
      }),
      (o.prototype._write = function (e, t, n) {
        var i = this._transformState;
        if (
          ((i.writecb = n),
          (i.writechunk = e),
          (i.writeencoding = t),
          !i.transforming)
        ) {
          var r = this._readableState;
          (i.needTransform || r.needReadable || r.length < r.highWaterMark) &&
            this._read(r.highWaterMark);
        }
      }),
      (o.prototype._read = function (e) {
        var t = this._transformState;
        null !== t.writechunk && t.writecb && !t.transforming
          ? ((t.transforming = !0),
            this._transform(t.writechunk, t.writeencoding, t.afterTransform))
          : (t.needTransform = !0);
      }),
      (o.prototype._destroy = function (e, t) {
        var n = this;
        i.prototype._destroy.call(this, e, function (e) {
          t(e), n.emit('close');
        });
      });
  },
  '../../../node_modules/readable-stream/lib/_stream_writable.js': function (
    e,
    t,
    n
  ) {
    'use strict';
    (function (t, i, r) {
      var a = n('../../../node_modules/process-nextick-args/index.js');
      function o(e) {
        var t = this;
        (this.next = null),
          (this.entry = null),
          (this.finish = function () {
            Y(t, e);
          });
      }
      e.exports = y;
      var s,
        c =
          !t.browser && ['v0.10', 'v0.9.'].indexOf(t.version.slice(0, 5)) > -1
            ? i
            : a.nextTick;
      y.WritableState = g;
      var u = Object.create(
        n('../../../node_modules/core-util-is/lib/util.js')
      );
      u.inherits = n('../../../node_modules/inherits/inherits_browser.js');
      var l = {
          deprecate: n('../../../node_modules/util-deprecate/browser.js'),
        },
        d = n(
          '../../../node_modules/readable-stream/lib/internal/streams/stream-browser.js'
        ),
        h = n(
          '../../../node_modules/readable-stream/node_modules/safe-buffer/index.js'
        ).Buffer,
        p = r.Uint8Array || function () {};
      function m(e) {
        return h.from(e);
      }
      function f(e) {
        return h.isBuffer(e) || e instanceof p;
      }
      var _,
        M = n(
          '../../../node_modules/readable-stream/lib/internal/streams/destroy.js'
        );
      function v() {}
      function g(e, t) {
        (s =
          s ||
          n('../../../node_modules/readable-stream/lib/_stream_duplex.js')),
          (e = e || {});
        var i = t instanceof s;
        (this.objectMode = !!e.objectMode),
          i && (this.objectMode = this.objectMode || !!e.writableObjectMode);
        var r = e.highWaterMark,
          a = e.writableHighWaterMark,
          c = this.objectMode ? 16 : 16 * 1024;
        (this.highWaterMark = r || 0 === r ? r : i && (a || 0 === a) ? a : c),
          (this.highWaterMark = Math.floor(this.highWaterMark)),
          (this.finalCalled = !1),
          (this.needDrain = !1),
          (this.ending = !1),
          (this.ended = !1),
          (this.finished = !1),
          (this.destroyed = !1);
        var u = !1 === e.decodeStrings;
        (this.decodeStrings = !u),
          (this.defaultEncoding = e.defaultEncoding || 'utf8'),
          (this.length = 0),
          (this.writing = !1),
          (this.corked = 0),
          (this.sync = !0),
          (this.bufferProcessing = !1),
          (this.onwrite = function (e) {
            S(t, e);
          }),
          (this.writecb = null),
          (this.writelen = 0),
          (this.bufferedRequest = null),
          (this.lastBufferedRequest = null),
          (this.pendingcb = 0),
          (this.prefinished = !1),
          (this.errorEmitted = !1),
          (this.bufferedRequestCount = 0),
          (this.corkedRequestsFree = new o(this));
      }
      function y(e) {
        if (
          ((s =
            s ||
            n('../../../node_modules/readable-stream/lib/_stream_duplex.js')),
          !_.call(y, this) && !(this instanceof s))
        )
          return new y(e);
        (this._writableState = new g(e, this)),
          (this.writable = !0),
          e &&
            ('function' === typeof e.write && (this._write = e.write),
            'function' === typeof e.writev && (this._writev = e.writev),
            'function' === typeof e.destroy && (this._destroy = e.destroy),
            'function' === typeof e.final && (this._final = e.final)),
          d.call(this);
      }
      function b(e, t) {
        var n = new Error('write after end');
        e.emit('error', n), a.nextTick(t, n);
      }
      function w(e, t, n, i) {
        var r = !0,
          o = !1;
        return (
          null === n
            ? (o = new TypeError('May not write null values to stream'))
            : 'string' === typeof n ||
              void 0 === n ||
              t.objectMode ||
              (o = new TypeError('Invalid non-string/buffer chunk')),
          o && (e.emit('error', o), a.nextTick(i, o), (r = !1)),
          r
        );
      }
      function A(e, t, n) {
        return (
          e.objectMode ||
            !1 === e.decodeStrings ||
            'string' !== typeof t ||
            (t = h.from(t, n)),
          t
        );
      }
      function x(e, t, n, i, r, a) {
        if (!n) {
          var o = A(t, i, r);
          i !== o && ((n = !0), (r = 'buffer'), (i = o));
        }
        var s = t.objectMode ? 1 : i.length;
        t.length += s;
        var c = t.length < t.highWaterMark;
        if ((c || (t.needDrain = !0), t.writing || t.corked)) {
          var u = t.lastBufferedRequest;
          (t.lastBufferedRequest = {
            chunk: i,
            encoding: r,
            isBuf: n,
            callback: a,
            next: null,
          }),
            u
              ? (u.next = t.lastBufferedRequest)
              : (t.bufferedRequest = t.lastBufferedRequest),
            (t.bufferedRequestCount += 1);
        } else L(e, t, !1, s, i, r, a);
        return c;
      }
      function L(e, t, n, i, r, a, o) {
        (t.writelen = i),
          (t.writecb = o),
          (t.writing = !0),
          (t.sync = !0),
          n ? e._writev(r, t.onwrite) : e._write(r, a, t.onwrite),
          (t.sync = !1);
      }
      function T(e, t, n, i, r) {
        --t.pendingcb,
          n
            ? (a.nextTick(r, i),
              a.nextTick(P, e, t),
              (e._writableState.errorEmitted = !0),
              e.emit('error', i))
            : (r(i),
              (e._writableState.errorEmitted = !0),
              e.emit('error', i),
              P(e, t));
      }
      function z(e) {
        (e.writing = !1),
          (e.writecb = null),
          (e.length -= e.writelen),
          (e.writelen = 0);
      }
      function S(e, t) {
        var n = e._writableState,
          i = n.sync,
          r = n.writecb;
        if ((z(n), t)) T(e, n, i, t, r);
        else {
          var a = C(n);
          a || n.corked || n.bufferProcessing || !n.bufferedRequest || k(e, n),
            i ? c(O, e, n, a, r) : O(e, n, a, r);
        }
      }
      function O(e, t, n, i) {
        n || E(e, t), t.pendingcb--, i(), P(e, t);
      }
      function E(e, t) {
        0 === t.length && t.needDrain && ((t.needDrain = !1), e.emit('drain'));
      }
      function k(e, t) {
        t.bufferProcessing = !0;
        var n = t.bufferedRequest;
        if (e._writev && n && n.next) {
          var i = t.bufferedRequestCount,
            r = new Array(i),
            a = t.corkedRequestsFree;
          a.entry = n;
          var s = 0,
            c = !0;
          while (n) (r[s] = n), n.isBuf || (c = !1), (n = n.next), (s += 1);
          (r.allBuffers = c),
            L(e, t, !0, t.length, r, '', a.finish),
            t.pendingcb++,
            (t.lastBufferedRequest = null),
            a.next
              ? ((t.corkedRequestsFree = a.next), (a.next = null))
              : (t.corkedRequestsFree = new o(t)),
            (t.bufferedRequestCount = 0);
        } else {
          while (n) {
            var u = n.chunk,
              l = n.encoding,
              d = n.callback,
              h = t.objectMode ? 1 : u.length;
            if (
              (L(e, t, !1, h, u, l, d),
              (n = n.next),
              t.bufferedRequestCount--,
              t.writing)
            )
              break;
          }
          null === n && (t.lastBufferedRequest = null);
        }
        (t.bufferedRequest = n), (t.bufferProcessing = !1);
      }
      function C(e) {
        return (
          e.ending &&
          0 === e.length &&
          null === e.bufferedRequest &&
          !e.finished &&
          !e.writing
        );
      }
      function D(e, t) {
        e._final(function (n) {
          t.pendingcb--,
            n && e.emit('error', n),
            (t.prefinished = !0),
            e.emit('prefinish'),
            P(e, t);
        });
      }
      function N(e, t) {
        t.prefinished ||
          t.finalCalled ||
          ('function' === typeof e._final
            ? (t.pendingcb++, (t.finalCalled = !0), a.nextTick(D, e, t))
            : ((t.prefinished = !0), e.emit('prefinish')));
      }
      function P(e, t) {
        var n = C(t);
        return (
          n &&
            (N(e, t),
            0 === t.pendingcb && ((t.finished = !0), e.emit('finish'))),
          n
        );
      }
      function j(e, t, n) {
        (t.ending = !0),
          P(e, t),
          n && (t.finished ? a.nextTick(n) : e.once('finish', n)),
          (t.ended = !0),
          (e.writable = !1);
      }
      function Y(e, t, n) {
        var i = e.entry;
        e.entry = null;
        while (i) {
          var r = i.callback;
          t.pendingcb--, r(n), (i = i.next);
        }
        t.corkedRequestsFree
          ? (t.corkedRequestsFree.next = e)
          : (t.corkedRequestsFree = e);
      }
      u.inherits(y, d),
        (g.prototype.getBuffer = function e() {
          var t = this.bufferedRequest,
            n = [];
          while (t) n.push(t), (t = t.next);
          return n;
        }),
        (function () {
          try {
            Object.defineProperty(g.prototype, 'buffer', {
              get: l.deprecate(
                function () {
                  return this.getBuffer();
                },
                '_writableState.buffer is deprecated. Use _writableState.getBuffer ' +
                  'instead.',
                'DEP0003'
              ),
            });
          } catch (e) {}
        })(),
        'function' === typeof Symbol &&
        Symbol.hasInstance &&
        'function' === typeof Function.prototype[Symbol.hasInstance]
          ? ((_ = Function.prototype[Symbol.hasInstance]),
            Object.defineProperty(y, Symbol.hasInstance, {
              value: function (e) {
                return (
                  !!_.call(this, e) ||
                  (this === y && e && e._writableState instanceof g)
                );
              },
            }))
          : (_ = function (e) {
              return e instanceof this;
            }),
        (y.prototype.pipe = function () {
          this.emit('error', new Error('Cannot pipe, not readable'));
        }),
        (y.prototype.write = function (e, t, n) {
          var i = this._writableState,
            r = !1,
            a = !i.objectMode && f(e);
          return (
            a && !h.isBuffer(e) && (e = m(e)),
            'function' === typeof t && ((n = t), (t = null)),
            a ? (t = 'buffer') : t || (t = i.defaultEncoding),
            'function' !== typeof n && (n = v),
            i.ended
              ? b(this, n)
              : (a || w(this, i, e, n)) &&
                (i.pendingcb++, (r = x(this, i, a, e, t, n))),
            r
          );
        }),
        (y.prototype.cork = function () {
          var e = this._writableState;
          e.corked++;
        }),
        (y.prototype.uncork = function () {
          var e = this._writableState;
          e.corked &&
            (e.corked--,
            e.writing ||
              e.corked ||
              e.finished ||
              e.bufferProcessing ||
              !e.bufferedRequest ||
              k(this, e));
        }),
        (y.prototype.setDefaultEncoding = function e(t) {
          if (
            ('string' === typeof t && (t = t.toLowerCase()),
            !(
              [
                'hex',
                'utf8',
                'utf-8',
                'ascii',
                'binary',
                'base64',
                'ucs2',
                'ucs-2',
                'utf16le',
                'utf-16le',
                'raw',
              ].indexOf((t + '').toLowerCase()) > -1
            ))
          )
            throw new TypeError('Unknown encoding: ' + t);
          return (this._writableState.defaultEncoding = t), this;
        }),
        Object.defineProperty(y.prototype, 'writableHighWaterMark', {
          enumerable: !1,
          get: function () {
            return this._writableState.highWaterMark;
          },
        }),
        (y.prototype._write = function (e, t, n) {
          n(new Error('_write() is not implemented'));
        }),
        (y.prototype._writev = null),
        (y.prototype.end = function (e, t, n) {
          var i = this._writableState;
          'function' === typeof e
            ? ((n = e), (e = null), (t = null))
            : 'function' === typeof t && ((n = t), (t = null)),
            null !== e && void 0 !== e && this.write(e, t),
            i.corked && ((i.corked = 1), this.uncork()),
            i.ending || i.finished || j(this, i, n);
        }),
        Object.defineProperty(y.prototype, 'destroyed', {
          get: function () {
            return (
              void 0 !== this._writableState && this._writableState.destroyed
            );
          },
          set: function (e) {
            this._writableState && (this._writableState.destroyed = e);
          },
        }),
        (y.prototype.destroy = M.destroy),
        (y.prototype._undestroy = M.undestroy),
        (y.prototype._destroy = function (e, t) {
          this.end(), t(e);
        });
    }.call(
      this,
      n('../../../node_modules/process/browser.js'),
      n('../../../node_modules/timers-browserify/main.js').setImmediate,
      n('../../../node_modules/webpack/buildin/global.js')
    ));
  },
  '../../../node_modules/readable-stream/lib/internal/streams/BufferList.js': function (
    e,
    t,
    n
  ) {
    'use strict';
    function i(e, t) {
      if (!(e instanceof t))
        throw new TypeError('Cannot call a class as a function');
    }
    var r = n(
        '../../../node_modules/readable-stream/node_modules/safe-buffer/index.js'
      ).Buffer,
      a = n(1);
    function o(e, t, n) {
      e.copy(t, n);
    }
    (e.exports = (function () {
      function e() {
        i(this, e), (this.head = null), (this.tail = null), (this.length = 0);
      }
      return (
        (e.prototype.push = function e(t) {
          var n = { data: t, next: null };
          this.length > 0 ? (this.tail.next = n) : (this.head = n),
            (this.tail = n),
            ++this.length;
        }),
        (e.prototype.unshift = function e(t) {
          var n = { data: t, next: this.head };
          0 === this.length && (this.tail = n), (this.head = n), ++this.length;
        }),
        (e.prototype.shift = function e() {
          if (0 !== this.length) {
            var t = this.head.data;
            return (
              1 === this.length
                ? (this.head = this.tail = null)
                : (this.head = this.head.next),
              --this.length,
              t
            );
          }
        }),
        (e.prototype.clear = function e() {
          (this.head = this.tail = null), (this.length = 0);
        }),
        (e.prototype.join = function e(t) {
          if (0 === this.length) return '';
          var n = this.head,
            i = '' + n.data;
          while ((n = n.next)) i += t + n.data;
          return i;
        }),
        (e.prototype.concat = function e(t) {
          if (0 === this.length) return r.alloc(0);
          if (1 === this.length) return this.head.data;
          var n = r.allocUnsafe(t >>> 0),
            i = this.head,
            a = 0;
          while (i) o(i.data, n, a), (a += i.data.length), (i = i.next);
          return n;
        }),
        e
      );
    })()),
      a &&
        a.inspect &&
        a.inspect.custom &&
        (e.exports.prototype[a.inspect.custom] = function () {
          var e = a.inspect({ length: this.length });
          return this.constructor.name + ' ' + e;
        });
  },
  '../../../node_modules/readable-stream/lib/internal/streams/destroy.js': function (
    e,
    t,
    n
  ) {
    'use strict';
    var i = n('../../../node_modules/process-nextick-args/index.js');
    function r(e, t) {
      var n = this,
        r = this._readableState && this._readableState.destroyed,
        a = this._writableState && this._writableState.destroyed;
      return r || a
        ? (t
            ? t(e)
            : !e ||
              (this._writableState && this._writableState.errorEmitted) ||
              i.nextTick(o, this, e),
          this)
        : (this._readableState && (this._readableState.destroyed = !0),
          this._writableState && (this._writableState.destroyed = !0),
          this._destroy(e || null, function (e) {
            !t && e
              ? (i.nextTick(o, n, e),
                n._writableState && (n._writableState.errorEmitted = !0))
              : t && t(e);
          }),
          this);
    }
    function a() {
      this._readableState &&
        ((this._readableState.destroyed = !1),
        (this._readableState.reading = !1),
        (this._readableState.ended = !1),
        (this._readableState.endEmitted = !1)),
        this._writableState &&
          ((this._writableState.destroyed = !1),
          (this._writableState.ended = !1),
          (this._writableState.ending = !1),
          (this._writableState.finished = !1),
          (this._writableState.errorEmitted = !1));
    }
    function o(e, t) {
      e.emit('error', t);
    }
    e.exports = { destroy: r, undestroy: a };
  },
  '../../../node_modules/readable-stream/lib/internal/streams/stream-browser.js': function (
    e,
    t,
    n
  ) {
    e.exports = n('../../../node_modules/events/events.js').EventEmitter;
  },
  '../../../node_modules/readable-stream/node_modules/safe-buffer/index.js': function (
    e,
    t,
    n
  ) {
    var i = n(
        '../../../node_modules/node-libs-browser/node_modules/buffer/index.js'
      ),
      r = i.Buffer;
    function a(e, t) {
      for (var n in e) t[n] = e[n];
    }
    function o(e, t, n) {
      return r(e, t, n);
    }
    r.from && r.alloc && r.allocUnsafe && r.allocUnsafeSlow
      ? (e.exports = i)
      : (a(i, t), (t.Buffer = o)),
      a(r, o),
      (o.from = function (e, t, n) {
        if ('number' === typeof e)
          throw new TypeError('Argument must not be a number');
        return r(e, t, n);
      }),
      (o.alloc = function (e, t, n) {
        if ('number' !== typeof e)
          throw new TypeError('Argument must be a number');
        var i = r(e);
        return (
          void 0 !== t
            ? 'string' === typeof n
              ? i.fill(t, n)
              : i.fill(t)
            : i.fill(0),
          i
        );
      }),
      (o.allocUnsafe = function (e) {
        if ('number' !== typeof e)
          throw new TypeError('Argument must be a number');
        return r(e);
      }),
      (o.allocUnsafeSlow = function (e) {
        if ('number' !== typeof e)
          throw new TypeError('Argument must be a number');
        return i.SlowBuffer(e);
      });
  },
  '../../../node_modules/readable-stream/passthrough.js': function (e, t, n) {
    e.exports = n(
      '../../../node_modules/readable-stream/readable-browser.js'
    ).PassThrough;
  },
  '../../../node_modules/readable-stream/readable-browser.js': function (
    e,
    t,
    n
  ) {
    (t = e.exports = n(
      '../../../node_modules/readable-stream/lib/_stream_readable.js'
    )),
      (t.Stream = t),
      (t.Readable = t),
      (t.Writable = n(
        '../../../node_modules/readable-stream/lib/_stream_writable.js'
      )),
      (t.Duplex = n(
        '../../../node_modules/readable-stream/lib/_stream_duplex.js'
      )),
      (t.Transform = n(
        '../../../node_modules/readable-stream/lib/_stream_transform.js'
      )),
      (t.PassThrough = n(
        '../../../node_modules/readable-stream/lib/_stream_passthrough.js'
      ));
  },
  '../../../node_modules/readable-stream/transform.js': function (e, t, n) {
    e.exports = n(
      '../../../node_modules/readable-stream/readable-browser.js'
    ).Transform;
  },
  '../../../node_modules/readable-stream/writable-browser.js': function (
    e,
    t,
    n
  ) {
    e.exports = n(
      '../../../node_modules/readable-stream/lib/_stream_writable.js'
    );
  },
  '../../../node_modules/safe-buffer/index.js': function (e, t, n) {
    var i = n(
        '../../../node_modules/node-libs-browser/node_modules/buffer/index.js'
      ),
      r = i.Buffer;
    function a(e, t) {
      for (var n in e) t[n] = e[n];
    }
    function o(e, t, n) {
      return r(e, t, n);
    }
    r.from && r.alloc && r.allocUnsafe && r.allocUnsafeSlow
      ? (e.exports = i)
      : (a(i, t), (t.Buffer = o)),
      (o.prototype = Object.create(r.prototype)),
      a(r, o),
      (o.from = function (e, t, n) {
        if ('number' === typeof e)
          throw new TypeError('Argument must not be a number');
        return r(e, t, n);
      }),
      (o.alloc = function (e, t, n) {
        if ('number' !== typeof e)
          throw new TypeError('Argument must be a number');
        var i = r(e);
        return (
          void 0 !== t
            ? 'string' === typeof n
              ? i.fill(t, n)
              : i.fill(t)
            : i.fill(0),
          i
        );
      }),
      (o.allocUnsafe = function (e) {
        if ('number' !== typeof e)
          throw new TypeError('Argument must be a number');
        return r(e);
      }),
      (o.allocUnsafeSlow = function (e) {
        if ('number' !== typeof e)
          throw new TypeError('Argument must be a number');
        return i.SlowBuffer(e);
      });
  },
  '../../../node_modules/set-immediate-shim/index.js': function (e, t, n) {
    'use strict';
    (function (t) {
      e.exports =
        'function' === typeof t
          ? t
          : function e() {
              var t = [].slice.apply(arguments);
              t.splice(1, 0, 0), setTimeout.apply(null, t);
            };
    }.call(
      this,
      n('../../../node_modules/timers-browserify/main.js').setImmediate
    ));
  },
  '../../../node_modules/setimmediate/setImmediate.js': function (e, t, n) {
    (function (e, t) {
      (function (e, n) {
        'use strict';
        if (!e.setImmediate) {
          var i,
            r = 1,
            a = {},
            o = !1,
            s = e.document,
            c = Object.getPrototypeOf && Object.getPrototypeOf(e);
          (c = c && c.setTimeout ? c : e),
            '[object process]' === {}.toString.call(e.process)
              ? p()
              : m()
              ? f()
              : e.MessageChannel
              ? _()
              : s && 'onreadystatechange' in s.createElement('script')
              ? M()
              : v(),
            (c.setImmediate = u),
            (c.clearImmediate = l);
        }
        function u(e) {
          'function' !== typeof e && (e = new Function('' + e));
          for (
            var t = new Array(arguments.length - 1), n = 0;
            n < t.length;
            n++
          )
            t[n] = arguments[n + 1];
          var o = { callback: e, args: t };
          return (a[r] = o), i(r), r++;
        }
        function l(e) {
          delete a[e];
        }
        function d(e) {
          var t = e.callback,
            i = e.args;
          switch (i.length) {
            case 0:
              t();
              break;
            case 1:
              t(i[0]);
              break;
            case 2:
              t(i[0], i[1]);
              break;
            case 3:
              t(i[0], i[1], i[2]);
              break;
            default:
              t.apply(n, i);
              break;
          }
        }
        function h(e) {
          if (o) setTimeout(h, 0, e);
          else {
            var t = a[e];
            if (t) {
              o = !0;
              try {
                d(t);
              } finally {
                l(e), (o = !1);
              }
            }
          }
        }
        function p() {
          i = function (e) {
            t.nextTick(function () {
              h(e);
            });
          };
        }
        function m() {
          if (e.postMessage && !e.importScripts) {
            var t = !0,
              n = e.onmessage;
            return (
              (e.onmessage = function () {
                t = !1;
              }),
              e.postMessage('', '*'),
              (e.onmessage = n),
              t
            );
          }
        }
        function f() {
          var t = 'setImmediate$' + Math.random() + '$',
            n = function (n) {
              n.source === e &&
                'string' === typeof n.data &&
                0 === n.data.indexOf(t) &&
                h(+n.data.slice(t.length));
            };
          e.addEventListener
            ? e.addEventListener('message', n, !1)
            : e.attachEvent('onmessage', n),
            (i = function (n) {
              e.postMessage(t + n, '*');
            });
        }
        function _() {
          var e = new MessageChannel();
          (e.port1.onmessage = function (e) {
            var t = e.data;
            h(t);
          }),
            (i = function (t) {
              e.port2.postMessage(t);
            });
        }
        function M() {
          var e = s.documentElement;
          i = function (t) {
            var n = s.createElement('script');
            (n.onreadystatechange = function () {
              h(t), (n.onreadystatechange = null), e.removeChild(n), (n = null);
            }),
              e.appendChild(n);
          };
        }
        function v() {
          i = function (e) {
            setTimeout(h, 0, e);
          };
        }
      })(
        'undefined' === typeof self
          ? 'undefined' === typeof e
            ? this
            : e
          : self
      );
    }.call(
      this,
      n('../../../node_modules/webpack/buildin/global.js'),
      n('../../../node_modules/process/browser.js')
    ));
  },
  '../../../node_modules/stream-browserify/index.js': function (e, t, n) {
    e.exports = a;
    var i = n('../../../node_modules/events/events.js').EventEmitter,
      r = n('../../../node_modules/inherits/inherits_browser.js');
    function a() {
      i.call(this);
    }
    r(a, i),
      (a.Readable = n(
        '../../../node_modules/readable-stream/readable-browser.js'
      )),
      (a.Writable = n(
        '../../../node_modules/readable-stream/writable-browser.js'
      )),
      (a.Duplex = n('../../../node_modules/readable-stream/duplex-browser.js')),
      (a.Transform = n('../../../node_modules/readable-stream/transform.js')),
      (a.PassThrough = n(
        '../../../node_modules/readable-stream/passthrough.js'
      )),
      (a.Stream = a),
      (a.prototype.pipe = function (e, t) {
        var n = this;
        function r(t) {
          e.writable && !1 === e.write(t) && n.pause && n.pause();
        }
        function a() {
          n.readable && n.resume && n.resume();
        }
        n.on('data', r),
          e.on('drain', a),
          e._isStdio ||
            (t && !1 === t.end) ||
            (n.on('end', s), n.on('close', c));
        var o = !1;
        function s() {
          o || ((o = !0), e.end());
        }
        function c() {
          o || ((o = !0), 'function' === typeof e.destroy && e.destroy());
        }
        function u(e) {
          if ((l(), 0 === i.listenerCount(this, 'error'))) throw e;
        }
        function l() {
          n.removeListener('data', r),
            e.removeListener('drain', a),
            n.removeListener('end', s),
            n.removeListener('close', c),
            n.removeListener('error', u),
            e.removeListener('error', u),
            n.removeListener('end', l),
            n.removeListener('close', l),
            e.removeListener('close', l);
        }
        return (
          n.on('error', u),
          e.on('error', u),
          n.on('end', l),
          n.on('close', l),
          e.on('close', l),
          e.emit('pipe', n),
          e
        );
      });
  },
  '../../../node_modules/three/build/three.module.js': function (e, t, n) {
    'use strict';
    n.d(t, 'a', function () {
      return Rh;
    }),
      n.d(t, 'b', function () {
        return Im;
      }),
      n.d(t, 'c', function () {
        return p;
      }),
      n.d(t, 'd', function () {
        return Ml;
      }),
      n.d(t, 'e', function () {
        return di;
      }),
      n.d(t, 'f', function () {
        return qr;
      }),
      n.d(t, 'g', function () {
        return Lf;
      }),
      n.d(t, 'h', function () {
        return Zi;
      }),
      n.d(t, 'i', function () {
        return fr;
      }),
      n.d(t, 'j', function () {
        return Jr;
      }),
      n.d(t, 'k', function () {
        return $;
      }),
      n.d(t, 'l', function () {
        return le;
      }),
      n.d(t, 'm', function () {
        return pm;
      }),
      n.d(t, 'n', function () {
        return Ii;
      }),
      n.d(t, 'o', function () {
        return ta;
      }),
      n.d(t, 'p', function () {
        return Jh;
      }),
      n.d(t, 'q', function () {
        return Rp;
      }),
      n.d(t, 'r', function () {
        return m;
      }),
      n.d(t, 's', function () {
        return Pn;
      }),
      n.d(t, 't', function () {
        return cn;
      }),
      n.d(t, 'u', function () {
        return Xh;
      }),
      n.d(t, 'v', function () {
        return rr;
      }),
      n.d(t, 'w', function () {
        return Le;
      }),
      n.d(t, 'x', function () {
        return h;
      }),
      n.d(t, 'y', function () {
        return Vt;
      }),
      n.d(t, 'z', function () {
        return Bu;
      }),
      n.d(t, 'A', function () {
        return Te;
      }),
      n.d(t, 'B', function () {
        return Ep;
      }),
      n.d(t, 'C', function () {
        return Uu;
      }),
      n.d(t, 'D', function () {
        return Gu;
      }),
      n.d(t, 'E', function () {
        return Th;
      }),
      n.d(t, 'F', function () {
        return Nt;
      }),
      n.d(t, 'G', function () {
        return Pt;
      }),
      n.d(t, 'H', function () {
        return Op;
      }),
      n.d(t, 'I', function () {
        return Ol;
      }),
      n.d(t, 'J', function () {
        return Al;
      }),
      n.d(t, 'K', function () {
        return Dl;
      }),
      n.d(t, 'L', function () {
        return Cl;
      }),
      n.d(t, 'M', function () {
        return Ut;
      }),
      n.d(t, 'N', function () {
        return fe;
      }),
      n.d(t, 'O', function () {
        return ve;
      }),
      n.d(t, 'P', function () {
        return Me;
      }),
      n.d(t, 'Q', function () {
        return _e;
      }),
      n.d(t, 'R', function () {
        return Z;
      }),
      n.d(t, 'S', function () {
        return Fh;
      }),
      n.d(t, 'T', function () {
        return Fp;
      }),
      n.d(t, 'U', function () {
        return kt;
      }),
      n.d(t, 'V', function () {
        return r;
      }),
      n.d(t, 'W', function () {
        return Vi;
      }),
      n.d(t, 'X', function () {
        return hn;
      }),
      n.d(t, 'Y', function () {
        return Cn;
      }),
      n.d(t, 'Z', function () {
        return Dr;
      }),
      n.d(t, 'ab', function () {
        return Gi;
      }),
      n.d(t, 'bb', function () {
        return Mh;
      }),
      n.d(t, 'cb', function () {
        return _h;
      }),
      n.d(t, 'db', function () {
        return de;
      }),
      n.d(t, 'eb', function () {
        return he;
      }),
      n.d(t, 'fb', function () {
        return me;
      }),
      n.d(t, 'gb', function () {
        return pe;
      }),
      n.d(t, 'hb', function () {
        return _;
      }),
      n.d(t, 'ib', function () {
        return J;
      }),
      n.d(t, 'jb', function () {
        return Dh;
      }),
      n.d(t, 'kb', function () {
        return Zn;
      }),
      n.d(t, 'lb', function () {
        return jp;
      }),
      n.d(t, 'mb', function () {
        return Zr;
      }),
      n.d(t, 'nb', function () {
        return Pp;
      }),
      n.d(t, 'ob', function () {
        return Bl;
      }),
      n.d(t, 'pb', function () {
        return Nl;
      }),
      n.d(t, 'qb', function () {
        return Rm;
      }),
      n.d(t, 'rb', function () {
        return bn;
      }),
      n.d(t, 'sb', function () {
        return Ph;
      }),
      n.d(t, 'tb', function () {
        return De;
      }),
      n.d(t, 'ub', function () {
        return Gt;
      }),
      n.d(t, 'vb', function () {
        return je;
      }),
      n.d(t, 'wb', function () {
        return Ce;
      }),
      n.d(t, 'xb', function () {
        return Fm;
      }),
      n.d(t, 'yb', function () {
        return Wp;
      }),
      n.d(t, 'zb', function () {
        return K;
      }),
      n.d(t, 'Ab', function () {
        return ue;
      }),
      n.d(t, 'Bb', function () {
        return Kn;
      }),
      n.d(t, 'Cb', function () {
        return ks;
      }),
      n.d(t, 'Db', function () {
        return Gr;
      }),
      n.d(t, 'Eb', function () {
        return _l;
      }),
      n.d(t, 'Fb', function () {
        return pl;
      }),
      n.d(t, 'Gb', function () {
        return mi;
      }),
      n.d(t, 'Hb', function () {
        return Vm;
      }),
      n.d(t, 'Ib', function () {
        return Dp;
      }),
      n.d(t, 'Jb', function () {
        return a;
      }),
      n.d(t, 'Kb', function () {
        return tn;
      }),
      n.d(t, 'Lb', function () {
        return Qh;
      }),
      n.d(t, 'Mb', function () {
        return Ft;
      }),
      n.d(t, 'Nb', function () {
        return Ht;
      }),
      n.d(t, 'Ob', function () {
        return te;
      }),
      n.d(t, 'Pb', function () {
        return Q;
      }),
      n.d(t, 'Qb', function () {
        return aa;
      }),
      n.d(t, 'Rb', function () {
        return ge;
      }),
      n.d(t, 'Sb', function () {
        return pn;
      }),
      n.d(t, 'Tb', function () {
        return xn;
      }),
      n.d(t, 'Ub', function () {
        return Yh;
      }),
      n.d(t, 'Vb', function () {
        return Il;
      }),
      n.d(t, 'Wb', function () {
        return ea;
      }),
      n.d(t, 'Xb', function () {
        return qu;
      }),
      n.d(t, 'Yb', function () {
        return Xt;
      }),
      void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)),
      void 0 === Number.isInteger &&
        (Number.isInteger = function (e) {
          return 'number' === typeof e && isFinite(e) && Math.floor(e) === e;
        }),
      void 0 === Math.sign &&
        (Math.sign = function (e) {
          return e < 0 ? -1 : e > 0 ? 1 : +e;
        }),
      'name' in Function.prototype === !1 &&
        Object.defineProperty(Function.prototype, 'name', {
          get: function () {
            return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1];
          },
        }),
      void 0 === Object.assign &&
        (Object.assign = function (e) {
          if (void 0 === e || null === e)
            throw new TypeError('Cannot convert undefined or null to object');
          for (var t = Object(e), n = 1; n < arguments.length; n++) {
            var i = arguments[n];
            if (void 0 !== i && null !== i)
              for (var r in i)
                Object.prototype.hasOwnProperty.call(i, r) && (t[r] = i[r]);
          }
          return t;
        });
    var i = '116',
      r = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 },
      a = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 },
      o = 0,
      s = 1,
      c = 2,
      u = 1,
      l = 2,
      d = 3,
      h = 0,
      p = 1,
      m = 2,
      f = 1,
      _ = 0,
      M = 1,
      v = 2,
      g = 3,
      y = 4,
      b = 5,
      w = 100,
      A = 101,
      x = 102,
      L = 103,
      T = 104,
      z = 200,
      S = 201,
      O = 202,
      E = 203,
      k = 204,
      C = 205,
      D = 206,
      N = 207,
      P = 208,
      j = 209,
      Y = 210,
      R = 0,
      B = 1,
      W = 2,
      I = 3,
      q = 4,
      H = 5,
      F = 6,
      U = 7,
      X = 0,
      V = 1,
      G = 2,
      J = 0,
      Z = 1,
      K = 2,
      Q = 3,
      $ = 4,
      ee = 5,
      te = 300,
      ne = 301,
      ie = 302,
      re = 303,
      ae = 304,
      oe = 305,
      se = 306,
      ce = 307,
      ue = 1e3,
      le = 1001,
      de = 1002,
      he = 1003,
      pe = 1004,
      me = 1005,
      fe = 1006,
      _e = 1007,
      Me = 1008,
      ve = 1008,
      ge = 1009,
      ye = 1010,
      be = 1011,
      we = 1012,
      Ae = 1013,
      xe = 1014,
      Le = 1015,
      Te = 1016,
      ze = 1017,
      Se = 1018,
      Oe = 1019,
      Ee = 1020,
      ke = 1021,
      Ce = 1022,
      De = 1023,
      Ne = 1024,
      Pe = 1025,
      je = De,
      Ye = 1026,
      Re = 1027,
      Be = 1028,
      We = 1029,
      Ie = 1030,
      qe = 1031,
      He = 1032,
      Fe = 1033,
      Ue = 33776,
      Xe = 33777,
      Ve = 33778,
      Ge = 33779,
      Je = 35840,
      Ze = 35841,
      Ke = 35842,
      Qe = 35843,
      $e = 36196,
      et = 37492,
      tt = 37496,
      nt = 37808,
      it = 37809,
      rt = 37810,
      at = 37811,
      ot = 37812,
      st = 37813,
      ct = 37814,
      ut = 37815,
      lt = 37816,
      dt = 37817,
      ht = 37818,
      pt = 37819,
      mt = 37820,
      ft = 37821,
      _t = 36492,
      Mt = 37840,
      vt = 37841,
      gt = 37842,
      yt = 37843,
      bt = 37844,
      wt = 37845,
      At = 37846,
      xt = 37847,
      Lt = 37848,
      Tt = 37849,
      zt = 37850,
      St = 37851,
      Ot = 37852,
      Et = 37853,
      kt = 2200,
      Ct = 2201,
      Dt = 2202,
      Nt = 2300,
      Pt = 2301,
      jt = 2302,
      Yt = 2400,
      Rt = 2401,
      Bt = 2402,
      Wt = 2500,
      It = 2501,
      qt = 0,
      Ht = 1,
      Ft = 2,
      Ut = 3e3,
      Xt = 3001,
      Vt = 3007,
      Gt = 3002,
      Jt = 3003,
      Zt = 3004,
      Kt = 3005,
      Qt = 3006,
      $t = 3200,
      en = 3201,
      tn = 0,
      nn = 1,
      rn = 7680,
      an = 519,
      on = 35044,
      sn = 35048;
    function cn() {}
    Object.assign(cn.prototype, {
      addEventListener: function (e, t) {
        void 0 === this._listeners && (this._listeners = {});
        var n = this._listeners;
        void 0 === n[e] && (n[e] = []), -1 === n[e].indexOf(t) && n[e].push(t);
      },
      hasEventListener: function (e, t) {
        if (void 0 === this._listeners) return !1;
        var n = this._listeners;
        return void 0 !== n[e] && -1 !== n[e].indexOf(t);
      },
      removeEventListener: function (e, t) {
        if (void 0 !== this._listeners) {
          var n = this._listeners,
            i = n[e];
          if (void 0 !== i) {
            var r = i.indexOf(t);
            -1 !== r && i.splice(r, 1);
          }
        }
      },
      dispatchEvent: function (e) {
        if (void 0 !== this._listeners) {
          var t = this._listeners,
            n = t[e.type];
          if (void 0 !== n) {
            e.target = this;
            for (var i = n.slice(0), r = 0, a = i.length; r < a; r++)
              i[r].call(this, e);
          }
        }
      },
    });
    for (var un = [], ln = 0; ln < 256; ln++)
      un[ln] = (ln < 16 ? '0' : '') + ln.toString(16);
    var dn,
      hn = {
        DEG2RAD: Math.PI / 180,
        RAD2DEG: 180 / Math.PI,
        generateUUID: function () {
          var e = (4294967295 * Math.random()) | 0,
            t = (4294967295 * Math.random()) | 0,
            n = (4294967295 * Math.random()) | 0,
            i = (4294967295 * Math.random()) | 0,
            r =
              un[255 & e] +
              un[(e >> 8) & 255] +
              un[(e >> 16) & 255] +
              un[(e >> 24) & 255] +
              '-' +
              un[255 & t] +
              un[(t >> 8) & 255] +
              '-' +
              un[((t >> 16) & 15) | 64] +
              un[(t >> 24) & 255] +
              '-' +
              un[(63 & n) | 128] +
              un[(n >> 8) & 255] +
              '-' +
              un[(n >> 16) & 255] +
              un[(n >> 24) & 255] +
              un[255 & i] +
              un[(i >> 8) & 255] +
              un[(i >> 16) & 255] +
              un[(i >> 24) & 255];
          return r.toUpperCase();
        },
        clamp: function (e, t, n) {
          return Math.max(t, Math.min(n, e));
        },
        euclideanModulo: function (e, t) {
          return ((e % t) + t) % t;
        },
        mapLinear: function (e, t, n, i, r) {
          return i + ((e - t) * (r - i)) / (n - t);
        },
        lerp: function (e, t, n) {
          return (1 - n) * e + n * t;
        },
        smoothstep: function (e, t, n) {
          return e <= t
            ? 0
            : e >= n
            ? 1
            : ((e = (e - t) / (n - t)), e * e * (3 - 2 * e));
        },
        smootherstep: function (e, t, n) {
          return e <= t
            ? 0
            : e >= n
            ? 1
            : ((e = (e - t) / (n - t)), e * e * e * (e * (6 * e - 15) + 10));
        },
        randInt: function (e, t) {
          return e + Math.floor(Math.random() * (t - e + 1));
        },
        randFloat: function (e, t) {
          return e + Math.random() * (t - e);
        },
        randFloatSpread: function (e) {
          return e * (0.5 - Math.random());
        },
        degToRad: function (e) {
          return e * hn.DEG2RAD;
        },
        radToDeg: function (e) {
          return e * hn.RAD2DEG;
        },
        isPowerOfTwo: function (e) {
          return 0 === (e & (e - 1)) && 0 !== e;
        },
        ceilPowerOfTwo: function (e) {
          return Math.pow(2, Math.ceil(Math.log(e) / Math.LN2));
        },
        floorPowerOfTwo: function (e) {
          return Math.pow(2, Math.floor(Math.log(e) / Math.LN2));
        },
        setQuaternionFromProperEuler: function (e, t, n, i, r) {
          var a = Math.cos,
            o = Math.sin,
            s = a(n / 2),
            c = o(n / 2),
            u = a((t + i) / 2),
            l = o((t + i) / 2),
            d = a((t - i) / 2),
            h = o((t - i) / 2),
            p = a((i - t) / 2),
            m = o((i - t) / 2);
          switch (r) {
            case 'XYX':
              e.set(s * l, c * d, c * h, s * u);
              break;
            case 'YZY':
              e.set(c * h, s * l, c * d, s * u);
              break;
            case 'ZXZ':
              e.set(c * d, c * h, s * l, s * u);
              break;
            case 'XZX':
              e.set(s * l, c * m, c * p, s * u);
              break;
            case 'YXY':
              e.set(c * p, s * l, c * m, s * u);
              break;
            case 'ZYZ':
              e.set(c * m, c * p, s * l, s * u);
              break;
            default:
              void 0;
          }
        },
      };
    function pn(e, t) {
      (this.x = e || 0), (this.y = t || 0);
    }
    function mn() {
      (this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1]), arguments.length;
    }
    Object.defineProperties(pn.prototype, {
      width: {
        get: function () {
          return this.x;
        },
        set: function (e) {
          this.x = e;
        },
      },
      height: {
        get: function () {
          return this.y;
        },
        set: function (e) {
          this.y = e;
        },
      },
    }),
      Object.assign(pn.prototype, {
        isVector2: !0,
        set: function (e, t) {
          return (this.x = e), (this.y = t), this;
        },
        setScalar: function (e) {
          return (this.x = e), (this.y = e), this;
        },
        setX: function (e) {
          return (this.x = e), this;
        },
        setY: function (e) {
          return (this.y = e), this;
        },
        setComponent: function (e, t) {
          switch (e) {
            case 0:
              this.x = t;
              break;
            case 1:
              this.y = t;
              break;
            default:
              throw new Error('index is out of range: ' + e);
          }
          return this;
        },
        getComponent: function (e) {
          switch (e) {
            case 0:
              return this.x;
            case 1:
              return this.y;
            default:
              throw new Error('index is out of range: ' + e);
          }
        },
        clone: function () {
          return new this.constructor(this.x, this.y);
        },
        copy: function (e) {
          return (this.x = e.x), (this.y = e.y), this;
        },
        add: function (e, t) {
          return void 0 !== t
            ? (void 0, this.addVectors(e, t))
            : ((this.x += e.x), (this.y += e.y), this);
        },
        addScalar: function (e) {
          return (this.x += e), (this.y += e), this;
        },
        addVectors: function (e, t) {
          return (this.x = e.x + t.x), (this.y = e.y + t.y), this;
        },
        addScaledVector: function (e, t) {
          return (this.x += e.x * t), (this.y += e.y * t), this;
        },
        sub: function (e, t) {
          return void 0 !== t
            ? (void 0, this.subVectors(e, t))
            : ((this.x -= e.x), (this.y -= e.y), this);
        },
        subScalar: function (e) {
          return (this.x -= e), (this.y -= e), this;
        },
        subVectors: function (e, t) {
          return (this.x = e.x - t.x), (this.y = e.y - t.y), this;
        },
        multiply: function (e) {
          return (this.x *= e.x), (this.y *= e.y), this;
        },
        multiplyScalar: function (e) {
          return (this.x *= e), (this.y *= e), this;
        },
        divide: function (e) {
          return (this.x /= e.x), (this.y /= e.y), this;
        },
        divideScalar: function (e) {
          return this.multiplyScalar(1 / e);
        },
        applyMatrix3: function (e) {
          var t = this.x,
            n = this.y,
            i = e.elements;
          return (
            (this.x = i[0] * t + i[3] * n + i[6]),
            (this.y = i[1] * t + i[4] * n + i[7]),
            this
          );
        },
        min: function (e) {
          return (
            (this.x = Math.min(this.x, e.x)),
            (this.y = Math.min(this.y, e.y)),
            this
          );
        },
        max: function (e) {
          return (
            (this.x = Math.max(this.x, e.x)),
            (this.y = Math.max(this.y, e.y)),
            this
          );
        },
        clamp: function (e, t) {
          return (
            (this.x = Math.max(e.x, Math.min(t.x, this.x))),
            (this.y = Math.max(e.y, Math.min(t.y, this.y))),
            this
          );
        },
        clampScalar: function (e, t) {
          return (
            (this.x = Math.max(e, Math.min(t, this.x))),
            (this.y = Math.max(e, Math.min(t, this.y))),
            this
          );
        },
        clampLength: function (e, t) {
          var n = this.length();
          return this.divideScalar(n || 1).multiplyScalar(
            Math.max(e, Math.min(t, n))
          );
        },
        floor: function () {
          return (
            (this.x = Math.floor(this.x)), (this.y = Math.floor(this.y)), this
          );
        },
        ceil: function () {
          return (
            (this.x = Math.ceil(this.x)), (this.y = Math.ceil(this.y)), this
          );
        },
        round: function () {
          return (
            (this.x = Math.round(this.x)), (this.y = Math.round(this.y)), this
          );
        },
        roundToZero: function () {
          return (
            (this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
            (this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
            this
          );
        },
        negate: function () {
          return (this.x = -this.x), (this.y = -this.y), this;
        },
        dot: function (e) {
          return this.x * e.x + this.y * e.y;
        },
        cross: function (e) {
          return this.x * e.y - this.y * e.x;
        },
        lengthSq: function () {
          return this.x * this.x + this.y * this.y;
        },
        length: function () {
          return Math.sqrt(this.x * this.x + this.y * this.y);
        },
        manhattanLength: function () {
          return Math.abs(this.x) + Math.abs(this.y);
        },
        normalize: function () {
          return this.divideScalar(this.length() || 1);
        },
        angle: function () {
          var e = Math.atan2(-this.y, -this.x) + Math.PI;
          return e;
        },
        distanceTo: function (e) {
          return Math.sqrt(this.distanceToSquared(e));
        },
        distanceToSquared: function (e) {
          var t = this.x - e.x,
            n = this.y - e.y;
          return t * t + n * n;
        },
        manhattanDistanceTo: function (e) {
          return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
        },
        setLength: function (e) {
          return this.normalize().multiplyScalar(e);
        },
        lerp: function (e, t) {
          return (
            (this.x += (e.x - this.x) * t), (this.y += (e.y - this.y) * t), this
          );
        },
        lerpVectors: function (e, t, n) {
          return this.subVectors(t, e).multiplyScalar(n).add(e);
        },
        equals: function (e) {
          return e.x === this.x && e.y === this.y;
        },
        fromArray: function (e, t) {
          return (
            void 0 === t && (t = 0), (this.x = e[t]), (this.y = e[t + 1]), this
          );
        },
        toArray: function (e, t) {
          return (
            void 0 === e && (e = []),
            void 0 === t && (t = 0),
            (e[t] = this.x),
            (e[t + 1] = this.y),
            e
          );
        },
        fromBufferAttribute: function (e, t, n) {
          return (
            void 0 !== n && void 0,
            (this.x = e.getX(t)),
            (this.y = e.getY(t)),
            this
          );
        },
        rotateAround: function (e, t) {
          var n = Math.cos(t),
            i = Math.sin(t),
            r = this.x - e.x,
            a = this.y - e.y;
          return (
            (this.x = r * n - a * i + e.x), (this.y = r * i + a * n + e.y), this
          );
        },
        random: function () {
          return (this.x = Math.random()), (this.y = Math.random()), this;
        },
      }),
      Object.assign(mn.prototype, {
        isMatrix3: !0,
        set: function (e, t, n, i, r, a, o, s, c) {
          var u = this.elements;
          return (
            (u[0] = e),
            (u[1] = i),
            (u[2] = o),
            (u[3] = t),
            (u[4] = r),
            (u[5] = s),
            (u[6] = n),
            (u[7] = a),
            (u[8] = c),
            this
          );
        },
        identity: function () {
          return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
        },
        clone: function () {
          return new this.constructor().fromArray(this.elements);
        },
        copy: function (e) {
          var t = this.elements,
            n = e.elements;
          return (
            (t[0] = n[0]),
            (t[1] = n[1]),
            (t[2] = n[2]),
            (t[3] = n[3]),
            (t[4] = n[4]),
            (t[5] = n[5]),
            (t[6] = n[6]),
            (t[7] = n[7]),
            (t[8] = n[8]),
            this
          );
        },
        extractBasis: function (e, t, n) {
          return (
            e.setFromMatrix3Column(this, 0),
            t.setFromMatrix3Column(this, 1),
            n.setFromMatrix3Column(this, 2),
            this
          );
        },
        setFromMatrix4: function (e) {
          var t = e.elements;
          return (
            this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]),
            this
          );
        },
        multiply: function (e) {
          return this.multiplyMatrices(this, e);
        },
        premultiply: function (e) {
          return this.multiplyMatrices(e, this);
        },
        multiplyMatrices: function (e, t) {
          var n = e.elements,
            i = t.elements,
            r = this.elements,
            a = n[0],
            o = n[3],
            s = n[6],
            c = n[1],
            u = n[4],
            l = n[7],
            d = n[2],
            h = n[5],
            p = n[8],
            m = i[0],
            f = i[3],
            _ = i[6],
            M = i[1],
            v = i[4],
            g = i[7],
            y = i[2],
            b = i[5],
            w = i[8];
          return (
            (r[0] = a * m + o * M + s * y),
            (r[3] = a * f + o * v + s * b),
            (r[6] = a * _ + o * g + s * w),
            (r[1] = c * m + u * M + l * y),
            (r[4] = c * f + u * v + l * b),
            (r[7] = c * _ + u * g + l * w),
            (r[2] = d * m + h * M + p * y),
            (r[5] = d * f + h * v + p * b),
            (r[8] = d * _ + h * g + p * w),
            this
          );
        },
        multiplyScalar: function (e) {
          var t = this.elements;
          return (
            (t[0] *= e),
            (t[3] *= e),
            (t[6] *= e),
            (t[1] *= e),
            (t[4] *= e),
            (t[7] *= e),
            (t[2] *= e),
            (t[5] *= e),
            (t[8] *= e),
            this
          );
        },
        determinant: function () {
          var e = this.elements,
            t = e[0],
            n = e[1],
            i = e[2],
            r = e[3],
            a = e[4],
            o = e[5],
            s = e[6],
            c = e[7],
            u = e[8];
          return (
            t * a * u -
            t * o * c -
            n * r * u +
            n * o * s +
            i * r * c -
            i * a * s
          );
        },
        getInverse: function (e, t) {
          void 0 !== t && void 0;
          var n = e.elements,
            i = this.elements,
            r = n[0],
            a = n[1],
            o = n[2],
            s = n[3],
            c = n[4],
            u = n[5],
            l = n[6],
            d = n[7],
            h = n[8],
            p = h * c - u * d,
            m = u * l - h * s,
            f = d * s - c * l,
            _ = r * p + a * m + o * f;
          if (0 === _) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
          var M = 1 / _;
          return (
            (i[0] = p * M),
            (i[1] = (o * d - h * a) * M),
            (i[2] = (u * a - o * c) * M),
            (i[3] = m * M),
            (i[4] = (h * r - o * l) * M),
            (i[5] = (o * s - u * r) * M),
            (i[6] = f * M),
            (i[7] = (a * l - d * r) * M),
            (i[8] = (c * r - a * s) * M),
            this
          );
        },
        transpose: function () {
          var e,
            t = this.elements;
          return (
            (e = t[1]),
            (t[1] = t[3]),
            (t[3] = e),
            (e = t[2]),
            (t[2] = t[6]),
            (t[6] = e),
            (e = t[5]),
            (t[5] = t[7]),
            (t[7] = e),
            this
          );
        },
        getNormalMatrix: function (e) {
          return this.setFromMatrix4(e).getInverse(this).transpose();
        },
        transposeIntoArray: function (e) {
          var t = this.elements;
          return (
            (e[0] = t[0]),
            (e[1] = t[3]),
            (e[2] = t[6]),
            (e[3] = t[1]),
            (e[4] = t[4]),
            (e[5] = t[7]),
            (e[6] = t[2]),
            (e[7] = t[5]),
            (e[8] = t[8]),
            this
          );
        },
        setUvTransform: function (e, t, n, i, r, a, o) {
          var s = Math.cos(r),
            c = Math.sin(r);
          this.set(
            n * s,
            n * c,
            -n * (s * a + c * o) + a + e,
            -i * c,
            i * s,
            -i * (-c * a + s * o) + o + t,
            0,
            0,
            1
          );
        },
        scale: function (e, t) {
          var n = this.elements;
          return (
            (n[0] *= e),
            (n[3] *= e),
            (n[6] *= e),
            (n[1] *= t),
            (n[4] *= t),
            (n[7] *= t),
            this
          );
        },
        rotate: function (e) {
          var t = Math.cos(e),
            n = Math.sin(e),
            i = this.elements,
            r = i[0],
            a = i[3],
            o = i[6],
            s = i[1],
            c = i[4],
            u = i[7];
          return (
            (i[0] = t * r + n * s),
            (i[3] = t * a + n * c),
            (i[6] = t * o + n * u),
            (i[1] = -n * r + t * s),
            (i[4] = -n * a + t * c),
            (i[7] = -n * o + t * u),
            this
          );
        },
        translate: function (e, t) {
          var n = this.elements;
          return (
            (n[0] += e * n[2]),
            (n[3] += e * n[5]),
            (n[6] += e * n[8]),
            (n[1] += t * n[2]),
            (n[4] += t * n[5]),
            (n[7] += t * n[8]),
            this
          );
        },
        equals: function (e) {
          for (var t = this.elements, n = e.elements, i = 0; i < 9; i++)
            if (t[i] !== n[i]) return !1;
          return !0;
        },
        fromArray: function (e, t) {
          void 0 === t && (t = 0);
          for (var n = 0; n < 9; n++) this.elements[n] = e[n + t];
          return this;
        },
        toArray: function (e, t) {
          void 0 === e && (e = []), void 0 === t && (t = 0);
          var n = this.elements;
          return (
            (e[t] = n[0]),
            (e[t + 1] = n[1]),
            (e[t + 2] = n[2]),
            (e[t + 3] = n[3]),
            (e[t + 4] = n[4]),
            (e[t + 5] = n[5]),
            (e[t + 6] = n[6]),
            (e[t + 7] = n[7]),
            (e[t + 8] = n[8]),
            e
          );
        },
      });
    var fn = {
        getDataURL: function (e) {
          var t;
          if ('undefined' == typeof HTMLCanvasElement) return e.src;
          if (e instanceof HTMLCanvasElement) t = e;
          else {
            void 0 === dn &&
              (dn = document.createElementNS(
                'http://www.w3.org/1999/xhtml',
                'canvas'
              )),
              (dn.width = e.width),
              (dn.height = e.height);
            var n = dn.getContext('2d');
            e instanceof ImageData
              ? n.putImageData(e, 0, 0)
              : n.drawImage(e, 0, 0, e.width, e.height),
              (t = dn);
          }
          return t.width > 2048 || t.height > 2048
            ? t.toDataURL('image/jpeg', 0.6)
            : t.toDataURL('image/png');
        },
      },
      _n = 0;
    function Mn(e, t, n, i, r, a, o, s, c, u) {
      Object.defineProperty(this, 'id', { value: _n++ }),
        (this.uuid = hn.generateUUID()),
        (this.name = ''),
        (this.image = void 0 !== e ? e : Mn.DEFAULT_IMAGE),
        (this.mipmaps = []),
        (this.mapping = void 0 !== t ? t : Mn.DEFAULT_MAPPING),
        (this.wrapS = void 0 !== n ? n : le),
        (this.wrapT = void 0 !== i ? i : le),
        (this.magFilter = void 0 !== r ? r : fe),
        (this.minFilter = void 0 !== a ? a : Me),
        (this.anisotropy = void 0 !== c ? c : 1),
        (this.format = void 0 !== o ? o : De),
        (this.internalFormat = null),
        (this.type = void 0 !== s ? s : ge),
        (this.offset = new pn(0, 0)),
        (this.repeat = new pn(1, 1)),
        (this.center = new pn(0, 0)),
        (this.rotation = 0),
        (this.matrixAutoUpdate = !0),
        (this.matrix = new mn()),
        (this.generateMipmaps = !0),
        (this.premultiplyAlpha = !1),
        (this.flipY = !0),
        (this.unpackAlignment = 4),
        (this.encoding = void 0 !== u ? u : Ut),
        (this.version = 0),
        (this.onUpdate = null);
    }
    function vn(e, t, n, i) {
      (this.x = e || 0),
        (this.y = t || 0),
        (this.z = n || 0),
        (this.w = void 0 !== i ? i : 1);
    }
    function gn(e, t, n) {
      (this.width = e),
        (this.height = t),
        (this.scissor = new vn(0, 0, e, t)),
        (this.scissorTest = !1),
        (this.viewport = new vn(0, 0, e, t)),
        (n = n || {}),
        (this.texture = new Mn(
          void 0,
          n.mapping,
          n.wrapS,
          n.wrapT,
          n.magFilter,
          n.minFilter,
          n.format,
          n.type,
          n.anisotropy,
          n.encoding
        )),
        (this.texture.image = {}),
        (this.texture.image.width = e),
        (this.texture.image.height = t),
        (this.texture.generateMipmaps =
          void 0 !== n.generateMipmaps && n.generateMipmaps),
        (this.texture.minFilter = void 0 !== n.minFilter ? n.minFilter : fe),
        (this.depthBuffer = void 0 === n.depthBuffer || n.depthBuffer),
        (this.stencilBuffer = void 0 === n.stencilBuffer || n.stencilBuffer),
        (this.depthTexture = void 0 !== n.depthTexture ? n.depthTexture : null);
    }
    function yn(e, t, n) {
      gn.call(this, e, t, n), (this.samples = 4);
    }
    function bn(e, t, n, i) {
      (this._x = e || 0),
        (this._y = t || 0),
        (this._z = n || 0),
        (this._w = void 0 !== i ? i : 1);
    }
    (Mn.DEFAULT_IMAGE = void 0),
      (Mn.DEFAULT_MAPPING = te),
      (Mn.prototype = Object.assign(Object.create(cn.prototype), {
        constructor: Mn,
        isTexture: !0,
        updateMatrix: function () {
          this.matrix.setUvTransform(
            this.offset.x,
            this.offset.y,
            this.repeat.x,
            this.repeat.y,
            this.rotation,
            this.center.x,
            this.center.y
          );
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          return (
            (this.name = e.name),
            (this.image = e.image),
            (this.mipmaps = e.mipmaps.slice(0)),
            (this.mapping = e.mapping),
            (this.wrapS = e.wrapS),
            (this.wrapT = e.wrapT),
            (this.magFilter = e.magFilter),
            (this.minFilter = e.minFilter),
            (this.anisotropy = e.anisotropy),
            (this.format = e.format),
            (this.internalFormat = e.internalFormat),
            (this.type = e.type),
            this.offset.copy(e.offset),
            this.repeat.copy(e.repeat),
            this.center.copy(e.center),
            (this.rotation = e.rotation),
            (this.matrixAutoUpdate = e.matrixAutoUpdate),
            this.matrix.copy(e.matrix),
            (this.generateMipmaps = e.generateMipmaps),
            (this.premultiplyAlpha = e.premultiplyAlpha),
            (this.flipY = e.flipY),
            (this.unpackAlignment = e.unpackAlignment),
            (this.encoding = e.encoding),
            this
          );
        },
        toJSON: function (e) {
          var t = void 0 === e || 'string' === typeof e;
          if (!t && void 0 !== e.textures[this.uuid])
            return e.textures[this.uuid];
          var n = {
            metadata: {
              version: 4.5,
              type: 'Texture',
              generator: 'Texture.toJSON',
            },
            uuid: this.uuid,
            name: this.name,
            mapping: this.mapping,
            repeat: [this.repeat.x, this.repeat.y],
            offset: [this.offset.x, this.offset.y],
            center: [this.center.x, this.center.y],
            rotation: this.rotation,
            wrap: [this.wrapS, this.wrapT],
            format: this.format,
            type: this.type,
            encoding: this.encoding,
            minFilter: this.minFilter,
            magFilter: this.magFilter,
            anisotropy: this.anisotropy,
            flipY: this.flipY,
            premultiplyAlpha: this.premultiplyAlpha,
            unpackAlignment: this.unpackAlignment,
          };
          if (void 0 !== this.image) {
            var i = this.image;
            if (
              (void 0 === i.uuid && (i.uuid = hn.generateUUID()),
              !t && void 0 === e.images[i.uuid])
            ) {
              var r;
              if (Array.isArray(i)) {
                r = [];
                for (var a = 0, o = i.length; a < o; a++)
                  r.push(fn.getDataURL(i[a]));
              } else r = fn.getDataURL(i);
              e.images[i.uuid] = { uuid: i.uuid, url: r };
            }
            n.image = i.uuid;
          }
          return t || (e.textures[this.uuid] = n), n;
        },
        dispose: function () {
          this.dispatchEvent({ type: 'dispose' });
        },
        transformUv: function (e) {
          if (this.mapping !== te) return e;
          if ((e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1))
            switch (this.wrapS) {
              case ue:
                e.x = e.x - Math.floor(e.x);
                break;
              case le:
                e.x = e.x < 0 ? 0 : 1;
                break;
              case de:
                1 === Math.abs(Math.floor(e.x) % 2)
                  ? (e.x = Math.ceil(e.x) - e.x)
                  : (e.x = e.x - Math.floor(e.x));
                break;
            }
          if (e.y < 0 || e.y > 1)
            switch (this.wrapT) {
              case ue:
                e.y = e.y - Math.floor(e.y);
                break;
              case le:
                e.y = e.y < 0 ? 0 : 1;
                break;
              case de:
                1 === Math.abs(Math.floor(e.y) % 2)
                  ? (e.y = Math.ceil(e.y) - e.y)
                  : (e.y = e.y - Math.floor(e.y));
                break;
            }
          return this.flipY && (e.y = 1 - e.y), e;
        },
      })),
      Object.defineProperty(Mn.prototype, 'needsUpdate', {
        set: function (e) {
          !0 === e && this.version++;
        },
      }),
      Object.defineProperties(vn.prototype, {
        width: {
          get: function () {
            return this.z;
          },
          set: function (e) {
            this.z = e;
          },
        },
        height: {
          get: function () {
            return this.w;
          },
          set: function (e) {
            this.w = e;
          },
        },
      }),
      Object.assign(vn.prototype, {
        isVector4: !0,
        set: function (e, t, n, i) {
          return (this.x = e), (this.y = t), (this.z = n), (this.w = i), this;
        },
        setScalar: function (e) {
          return (this.x = e), (this.y = e), (this.z = e), (this.w = e), this;
        },
        setX: function (e) {
          return (this.x = e), this;
        },
        setY: function (e) {
          return (this.y = e), this;
        },
        setZ: function (e) {
          return (this.z = e), this;
        },
        setW: function (e) {
          return (this.w = e), this;
        },
        setComponent: function (e, t) {
          switch (e) {
            case 0:
              this.x = t;
              break;
            case 1:
              this.y = t;
              break;
            case 2:
              this.z = t;
              break;
            case 3:
              this.w = t;
              break;
            default:
              throw new Error('index is out of range: ' + e);
          }
          return this;
        },
        getComponent: function (e) {
          switch (e) {
            case 0:
              return this.x;
            case 1:
              return this.y;
            case 2:
              return this.z;
            case 3:
              return this.w;
            default:
              throw new Error('index is out of range: ' + e);
          }
        },
        clone: function () {
          return new this.constructor(this.x, this.y, this.z, this.w);
        },
        copy: function (e) {
          return (
            (this.x = e.x),
            (this.y = e.y),
            (this.z = e.z),
            (this.w = void 0 !== e.w ? e.w : 1),
            this
          );
        },
        add: function (e, t) {
          return void 0 !== t
            ? (void 0, this.addVectors(e, t))
            : ((this.x += e.x),
              (this.y += e.y),
              (this.z += e.z),
              (this.w += e.w),
              this);
        },
        addScalar: function (e) {
          return (
            (this.x += e), (this.y += e), (this.z += e), (this.w += e), this
          );
        },
        addVectors: function (e, t) {
          return (
            (this.x = e.x + t.x),
            (this.y = e.y + t.y),
            (this.z = e.z + t.z),
            (this.w = e.w + t.w),
            this
          );
        },
        addScaledVector: function (e, t) {
          return (
            (this.x += e.x * t),
            (this.y += e.y * t),
            (this.z += e.z * t),
            (this.w += e.w * t),
            this
          );
        },
        sub: function (e, t) {
          return void 0 !== t
            ? (void 0, this.subVectors(e, t))
            : ((this.x -= e.x),
              (this.y -= e.y),
              (this.z -= e.z),
              (this.w -= e.w),
              this);
        },
        subScalar: function (e) {
          return (
            (this.x -= e), (this.y -= e), (this.z -= e), (this.w -= e), this
          );
        },
        subVectors: function (e, t) {
          return (
            (this.x = e.x - t.x),
            (this.y = e.y - t.y),
            (this.z = e.z - t.z),
            (this.w = e.w - t.w),
            this
          );
        },
        multiplyScalar: function (e) {
          return (
            (this.x *= e), (this.y *= e), (this.z *= e), (this.w *= e), this
          );
        },
        applyMatrix4: function (e) {
          var t = this.x,
            n = this.y,
            i = this.z,
            r = this.w,
            a = e.elements;
          return (
            (this.x = a[0] * t + a[4] * n + a[8] * i + a[12] * r),
            (this.y = a[1] * t + a[5] * n + a[9] * i + a[13] * r),
            (this.z = a[2] * t + a[6] * n + a[10] * i + a[14] * r),
            (this.w = a[3] * t + a[7] * n + a[11] * i + a[15] * r),
            this
          );
        },
        divideScalar: function (e) {
          return this.multiplyScalar(1 / e);
        },
        setAxisAngleFromQuaternion: function (e) {
          this.w = 2 * Math.acos(e.w);
          var t = Math.sqrt(1 - e.w * e.w);
          return (
            t < 1e-4
              ? ((this.x = 1), (this.y = 0), (this.z = 0))
              : ((this.x = e.x / t), (this.y = e.y / t), (this.z = e.z / t)),
            this
          );
        },
        setAxisAngleFromRotationMatrix: function (e) {
          var t,
            n,
            i,
            r,
            a = 0.01,
            o = 0.1,
            s = e.elements,
            c = s[0],
            u = s[4],
            l = s[8],
            d = s[1],
            h = s[5],
            p = s[9],
            m = s[2],
            f = s[6],
            _ = s[10];
          if (
            Math.abs(u - d) < a &&
            Math.abs(l - m) < a &&
            Math.abs(p - f) < a
          ) {
            if (
              Math.abs(u + d) < o &&
              Math.abs(l + m) < o &&
              Math.abs(p + f) < o &&
              Math.abs(c + h + _ - 3) < o
            )
              return this.set(1, 0, 0, 0), this;
            t = Math.PI;
            var M = (c + 1) / 2,
              v = (h + 1) / 2,
              g = (_ + 1) / 2,
              y = (u + d) / 4,
              b = (l + m) / 4,
              w = (p + f) / 4;
            return (
              M > v && M > g
                ? M < a
                  ? ((n = 0), (i = 0.707106781), (r = 0.707106781))
                  : ((n = Math.sqrt(M)), (i = y / n), (r = b / n))
                : v > g
                ? v < a
                  ? ((n = 0.707106781), (i = 0), (r = 0.707106781))
                  : ((i = Math.sqrt(v)), (n = y / i), (r = w / i))
                : g < a
                ? ((n = 0.707106781), (i = 0.707106781), (r = 0))
                : ((r = Math.sqrt(g)), (n = b / r), (i = w / r)),
              this.set(n, i, r, t),
              this
            );
          }
          var A = Math.sqrt(
            (f - p) * (f - p) + (l - m) * (l - m) + (d - u) * (d - u)
          );
          return (
            Math.abs(A) < 0.001 && (A = 1),
            (this.x = (f - p) / A),
            (this.y = (l - m) / A),
            (this.z = (d - u) / A),
            (this.w = Math.acos((c + h + _ - 1) / 2)),
            this
          );
        },
        min: function (e) {
          return (
            (this.x = Math.min(this.x, e.x)),
            (this.y = Math.min(this.y, e.y)),
            (this.z = Math.min(this.z, e.z)),
            (this.w = Math.min(this.w, e.w)),
            this
          );
        },
        max: function (e) {
          return (
            (this.x = Math.max(this.x, e.x)),
            (this.y = Math.max(this.y, e.y)),
            (this.z = Math.max(this.z, e.z)),
            (this.w = Math.max(this.w, e.w)),
            this
          );
        },
        clamp: function (e, t) {
          return (
            (this.x = Math.max(e.x, Math.min(t.x, this.x))),
            (this.y = Math.max(e.y, Math.min(t.y, this.y))),
            (this.z = Math.max(e.z, Math.min(t.z, this.z))),
            (this.w = Math.max(e.w, Math.min(t.w, this.w))),
            this
          );
        },
        clampScalar: function (e, t) {
          return (
            (this.x = Math.max(e, Math.min(t, this.x))),
            (this.y = Math.max(e, Math.min(t, this.y))),
            (this.z = Math.max(e, Math.min(t, this.z))),
            (this.w = Math.max(e, Math.min(t, this.w))),
            this
          );
        },
        clampLength: function (e, t) {
          var n = this.length();
          return this.divideScalar(n || 1).multiplyScalar(
            Math.max(e, Math.min(t, n))
          );
        },
        floor: function () {
          return (
            (this.x = Math.floor(this.x)),
            (this.y = Math.floor(this.y)),
            (this.z = Math.floor(this.z)),
            (this.w = Math.floor(this.w)),
            this
          );
        },
        ceil: function () {
          return (
            (this.x = Math.ceil(this.x)),
            (this.y = Math.ceil(this.y)),
            (this.z = Math.ceil(this.z)),
            (this.w = Math.ceil(this.w)),
            this
          );
        },
        round: function () {
          return (
            (this.x = Math.round(this.x)),
            (this.y = Math.round(this.y)),
            (this.z = Math.round(this.z)),
            (this.w = Math.round(this.w)),
            this
          );
        },
        roundToZero: function () {
          return (
            (this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
            (this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
            (this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z)),
            (this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w)),
            this
          );
        },
        negate: function () {
          return (
            (this.x = -this.x),
            (this.y = -this.y),
            (this.z = -this.z),
            (this.w = -this.w),
            this
          );
        },
        dot: function (e) {
          return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;
        },
        lengthSq: function () {
          return (
            this.x * this.x +
            this.y * this.y +
            this.z * this.z +
            this.w * this.w
          );
        },
        length: function () {
          return Math.sqrt(
            this.x * this.x +
              this.y * this.y +
              this.z * this.z +
              this.w * this.w
          );
        },
        manhattanLength: function () {
          return (
            Math.abs(this.x) +
            Math.abs(this.y) +
            Math.abs(this.z) +
            Math.abs(this.w)
          );
        },
        normalize: function () {
          return this.divideScalar(this.length() || 1);
        },
        setLength: function (e) {
          return this.normalize().multiplyScalar(e);
        },
        lerp: function (e, t) {
          return (
            (this.x += (e.x - this.x) * t),
            (this.y += (e.y - this.y) * t),
            (this.z += (e.z - this.z) * t),
            (this.w += (e.w - this.w) * t),
            this
          );
        },
        lerpVectors: function (e, t, n) {
          return this.subVectors(t, e).multiplyScalar(n).add(e);
        },
        equals: function (e) {
          return (
            e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w
          );
        },
        fromArray: function (e, t) {
          return (
            void 0 === t && (t = 0),
            (this.x = e[t]),
            (this.y = e[t + 1]),
            (this.z = e[t + 2]),
            (this.w = e[t + 3]),
            this
          );
        },
        toArray: function (e, t) {
          return (
            void 0 === e && (e = []),
            void 0 === t && (t = 0),
            (e[t] = this.x),
            (e[t + 1] = this.y),
            (e[t + 2] = this.z),
            (e[t + 3] = this.w),
            e
          );
        },
        fromBufferAttribute: function (e, t, n) {
          return (
            void 0 !== n && void 0,
            (this.x = e.getX(t)),
            (this.y = e.getY(t)),
            (this.z = e.getZ(t)),
            (this.w = e.getW(t)),
            this
          );
        },
        random: function () {
          return (
            (this.x = Math.random()),
            (this.y = Math.random()),
            (this.z = Math.random()),
            (this.w = Math.random()),
            this
          );
        },
      }),
      (gn.prototype = Object.assign(Object.create(cn.prototype), {
        constructor: gn,
        isWebGLRenderTarget: !0,
        setSize: function (e, t) {
          (this.width === e && this.height === t) ||
            ((this.width = e),
            (this.height = t),
            (this.texture.image.width = e),
            (this.texture.image.height = t),
            this.dispose()),
            this.viewport.set(0, 0, e, t),
            this.scissor.set(0, 0, e, t);
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          return (
            (this.width = e.width),
            (this.height = e.height),
            this.viewport.copy(e.viewport),
            (this.texture = e.texture.clone()),
            (this.depthBuffer = e.depthBuffer),
            (this.stencilBuffer = e.stencilBuffer),
            (this.depthTexture = e.depthTexture),
            this
          );
        },
        dispose: function () {
          this.dispatchEvent({ type: 'dispose' });
        },
      })),
      (yn.prototype = Object.assign(Object.create(gn.prototype), {
        constructor: yn,
        isWebGLMultisampleRenderTarget: !0,
        copy: function (e) {
          return (
            gn.prototype.copy.call(this, e), (this.samples = e.samples), this
          );
        },
      })),
      Object.assign(bn, {
        slerp: function (e, t, n, i) {
          return n.copy(e).slerp(t, i);
        },
        slerpFlat: function (e, t, n, i, r, a, o) {
          var s = n[i + 0],
            c = n[i + 1],
            u = n[i + 2],
            l = n[i + 3],
            d = r[a + 0],
            h = r[a + 1],
            p = r[a + 2],
            m = r[a + 3];
          if (l !== m || s !== d || c !== h || u !== p) {
            var f = 1 - o,
              _ = s * d + c * h + u * p + l * m,
              M = _ >= 0 ? 1 : -1,
              v = 1 - _ * _;
            if (v > Number.EPSILON) {
              var g = Math.sqrt(v),
                y = Math.atan2(g, _ * M);
              (f = Math.sin(f * y) / g), (o = Math.sin(o * y) / g);
            }
            var b = o * M;
            if (
              ((s = s * f + d * b),
              (c = c * f + h * b),
              (u = u * f + p * b),
              (l = l * f + m * b),
              f === 1 - o)
            ) {
              var w = 1 / Math.sqrt(s * s + c * c + u * u + l * l);
              (s *= w), (c *= w), (u *= w), (l *= w);
            }
          }
          (e[t] = s), (e[t + 1] = c), (e[t + 2] = u), (e[t + 3] = l);
        },
        multiplyQuaternionsFlat: function (e, t, n, i, r, a) {
          var o = n[i],
            s = n[i + 1],
            c = n[i + 2],
            u = n[i + 3],
            l = r[a],
            d = r[a + 1],
            h = r[a + 2],
            p = r[a + 3];
          return (
            (e[t] = o * p + u * l + s * h - c * d),
            (e[t + 1] = s * p + u * d + c * l - o * h),
            (e[t + 2] = c * p + u * h + o * d - s * l),
            (e[t + 3] = u * p - o * l - s * d - c * h),
            e
          );
        },
      }),
      Object.defineProperties(bn.prototype, {
        x: {
          get: function () {
            return this._x;
          },
          set: function (e) {
            (this._x = e), this._onChangeCallback();
          },
        },
        y: {
          get: function () {
            return this._y;
          },
          set: function (e) {
            (this._y = e), this._onChangeCallback();
          },
        },
        z: {
          get: function () {
            return this._z;
          },
          set: function (e) {
            (this._z = e), this._onChangeCallback();
          },
        },
        w: {
          get: function () {
            return this._w;
          },
          set: function (e) {
            (this._w = e), this._onChangeCallback();
          },
        },
      }),
      Object.assign(bn.prototype, {
        isQuaternion: !0,
        set: function (e, t, n, i) {
          return (
            (this._x = e),
            (this._y = t),
            (this._z = n),
            (this._w = i),
            this._onChangeCallback(),
            this
          );
        },
        clone: function () {
          return new this.constructor(this._x, this._y, this._z, this._w);
        },
        copy: function (e) {
          return (
            (this._x = e.x),
            (this._y = e.y),
            (this._z = e.z),
            (this._w = e.w),
            this._onChangeCallback(),
            this
          );
        },
        setFromEuler: function (e, t) {
          if (!e || !e.isEuler)
            throw new Error(
              'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.'
            );
          var n = e._x,
            i = e._y,
            r = e._z,
            a = e.order,
            o = Math.cos,
            s = Math.sin,
            c = o(n / 2),
            u = o(i / 2),
            l = o(r / 2),
            d = s(n / 2),
            h = s(i / 2),
            p = s(r / 2);
          switch (a) {
            case 'XYZ':
              (this._x = d * u * l + c * h * p),
                (this._y = c * h * l - d * u * p),
                (this._z = c * u * p + d * h * l),
                (this._w = c * u * l - d * h * p);
              break;
            case 'YXZ':
              (this._x = d * u * l + c * h * p),
                (this._y = c * h * l - d * u * p),
                (this._z = c * u * p - d * h * l),
                (this._w = c * u * l + d * h * p);
              break;
            case 'ZXY':
              (this._x = d * u * l - c * h * p),
                (this._y = c * h * l + d * u * p),
                (this._z = c * u * p + d * h * l),
                (this._w = c * u * l - d * h * p);
              break;
            case 'ZYX':
              (this._x = d * u * l - c * h * p),
                (this._y = c * h * l + d * u * p),
                (this._z = c * u * p - d * h * l),
                (this._w = c * u * l + d * h * p);
              break;
            case 'YZX':
              (this._x = d * u * l + c * h * p),
                (this._y = c * h * l + d * u * p),
                (this._z = c * u * p - d * h * l),
                (this._w = c * u * l - d * h * p);
              break;
            case 'XZY':
              (this._x = d * u * l - c * h * p),
                (this._y = c * h * l - d * u * p),
                (this._z = c * u * p + d * h * l),
                (this._w = c * u * l + d * h * p);
              break;
            default:
              void 0;
          }
          return !1 !== t && this._onChangeCallback(), this;
        },
        setFromAxisAngle: function (e, t) {
          var n = t / 2,
            i = Math.sin(n);
          return (
            (this._x = e.x * i),
            (this._y = e.y * i),
            (this._z = e.z * i),
            (this._w = Math.cos(n)),
            this._onChangeCallback(),
            this
          );
        },
        setFromRotationMatrix: function (e) {
          var t,
            n = e.elements,
            i = n[0],
            r = n[4],
            a = n[8],
            o = n[1],
            s = n[5],
            c = n[9],
            u = n[2],
            l = n[6],
            d = n[10],
            h = i + s + d;
          return (
            h > 0
              ? ((t = 0.5 / Math.sqrt(h + 1)),
                (this._w = 0.25 / t),
                (this._x = (l - c) * t),
                (this._y = (a - u) * t),
                (this._z = (o - r) * t))
              : i > s && i > d
              ? ((t = 2 * Math.sqrt(1 + i - s - d)),
                (this._w = (l - c) / t),
                (this._x = 0.25 * t),
                (this._y = (r + o) / t),
                (this._z = (a + u) / t))
              : s > d
              ? ((t = 2 * Math.sqrt(1 + s - i - d)),
                (this._w = (a - u) / t),
                (this._x = (r + o) / t),
                (this._y = 0.25 * t),
                (this._z = (c + l) / t))
              : ((t = 2 * Math.sqrt(1 + d - i - s)),
                (this._w = (o - r) / t),
                (this._x = (a + u) / t),
                (this._y = (c + l) / t),
                (this._z = 0.25 * t)),
            this._onChangeCallback(),
            this
          );
        },
        setFromUnitVectors: function (e, t) {
          var n = 1e-6,
            i = e.dot(t) + 1;
          return (
            i < n
              ? ((i = 0),
                Math.abs(e.x) > Math.abs(e.z)
                  ? ((this._x = -e.y),
                    (this._y = e.x),
                    (this._z = 0),
                    (this._w = i))
                  : ((this._x = 0),
                    (this._y = -e.z),
                    (this._z = e.y),
                    (this._w = i)))
              : ((this._x = e.y * t.z - e.z * t.y),
                (this._y = e.z * t.x - e.x * t.z),
                (this._z = e.x * t.y - e.y * t.x),
                (this._w = i)),
            this.normalize()
          );
        },
        angleTo: function (e) {
          return 2 * Math.acos(Math.abs(hn.clamp(this.dot(e), -1, 1)));
        },
        rotateTowards: function (e, t) {
          var n = this.angleTo(e);
          if (0 === n) return this;
          var i = Math.min(1, t / n);
          return this.slerp(e, i), this;
        },
        inverse: function () {
          return this.conjugate();
        },
        conjugate: function () {
          return (
            (this._x *= -1),
            (this._y *= -1),
            (this._z *= -1),
            this._onChangeCallback(),
            this
          );
        },
        dot: function (e) {
          return (
            this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w
          );
        },
        lengthSq: function () {
          return (
            this._x * this._x +
            this._y * this._y +
            this._z * this._z +
            this._w * this._w
          );
        },
        length: function () {
          return Math.sqrt(
            this._x * this._x +
              this._y * this._y +
              this._z * this._z +
              this._w * this._w
          );
        },
        normalize: function () {
          var e = this.length();
          return (
            0 === e
              ? ((this._x = 0), (this._y = 0), (this._z = 0), (this._w = 1))
              : ((e = 1 / e),
                (this._x = this._x * e),
                (this._y = this._y * e),
                (this._z = this._z * e),
                (this._w = this._w * e)),
            this._onChangeCallback(),
            this
          );
        },
        multiply: function (e, t) {
          return void 0 !== t
            ? (void 0, this.multiplyQuaternions(e, t))
            : this.multiplyQuaternions(this, e);
        },
        premultiply: function (e) {
          return this.multiplyQuaternions(e, this);
        },
        multiplyQuaternions: function (e, t) {
          var n = e._x,
            i = e._y,
            r = e._z,
            a = e._w,
            o = t._x,
            s = t._y,
            c = t._z,
            u = t._w;
          return (
            (this._x = n * u + a * o + i * c - r * s),
            (this._y = i * u + a * s + r * o - n * c),
            (this._z = r * u + a * c + n * s - i * o),
            (this._w = a * u - n * o - i * s - r * c),
            this._onChangeCallback(),
            this
          );
        },
        slerp: function (e, t) {
          if (0 === t) return this;
          if (1 === t) return this.copy(e);
          var n = this._x,
            i = this._y,
            r = this._z,
            a = this._w,
            o = a * e._w + n * e._x + i * e._y + r * e._z;
          if (
            (o < 0
              ? ((this._w = -e._w),
                (this._x = -e._x),
                (this._y = -e._y),
                (this._z = -e._z),
                (o = -o))
              : this.copy(e),
            o >= 1)
          )
            return (
              (this._w = a), (this._x = n), (this._y = i), (this._z = r), this
            );
          var s = 1 - o * o;
          if (s <= Number.EPSILON) {
            var c = 1 - t;
            return (
              (this._w = c * a + t * this._w),
              (this._x = c * n + t * this._x),
              (this._y = c * i + t * this._y),
              (this._z = c * r + t * this._z),
              this.normalize(),
              this._onChangeCallback(),
              this
            );
          }
          var u = Math.sqrt(s),
            l = Math.atan2(u, o),
            d = Math.sin((1 - t) * l) / u,
            h = Math.sin(t * l) / u;
          return (
            (this._w = a * d + this._w * h),
            (this._x = n * d + this._x * h),
            (this._y = i * d + this._y * h),
            (this._z = r * d + this._z * h),
            this._onChangeCallback(),
            this
          );
        },
        equals: function (e) {
          return (
            e._x === this._x &&
            e._y === this._y &&
            e._z === this._z &&
            e._w === this._w
          );
        },
        fromArray: function (e, t) {
          return (
            void 0 === t && (t = 0),
            (this._x = e[t]),
            (this._y = e[t + 1]),
            (this._z = e[t + 2]),
            (this._w = e[t + 3]),
            this._onChangeCallback(),
            this
          );
        },
        toArray: function (e, t) {
          return (
            void 0 === e && (e = []),
            void 0 === t && (t = 0),
            (e[t] = this._x),
            (e[t + 1] = this._y),
            (e[t + 2] = this._z),
            (e[t + 3] = this._w),
            e
          );
        },
        fromBufferAttribute: function (e, t) {
          return (
            (this._x = e.getX(t)),
            (this._y = e.getY(t)),
            (this._z = e.getZ(t)),
            (this._w = e.getW(t)),
            this
          );
        },
        _onChange: function (e) {
          return (this._onChangeCallback = e), this;
        },
        _onChangeCallback: function () {},
      });
    var wn = new xn(),
      An = new bn();
    function xn(e, t, n) {
      (this.x = e || 0), (this.y = t || 0), (this.z = n || 0);
    }
    Object.assign(xn.prototype, {
      isVector3: !0,
      set: function (e, t, n) {
        return (this.x = e), (this.y = t), (this.z = n), this;
      },
      setScalar: function (e) {
        return (this.x = e), (this.y = e), (this.z = e), this;
      },
      setX: function (e) {
        return (this.x = e), this;
      },
      setY: function (e) {
        return (this.y = e), this;
      },
      setZ: function (e) {
        return (this.z = e), this;
      },
      setComponent: function (e, t) {
        switch (e) {
          case 0:
            this.x = t;
            break;
          case 1:
            this.y = t;
            break;
          case 2:
            this.z = t;
            break;
          default:
            throw new Error('index is out of range: ' + e);
        }
        return this;
      },
      getComponent: function (e) {
        switch (e) {
          case 0:
            return this.x;
          case 1:
            return this.y;
          case 2:
            return this.z;
          default:
            throw new Error('index is out of range: ' + e);
        }
      },
      clone: function () {
        return new this.constructor(this.x, this.y, this.z);
      },
      copy: function (e) {
        return (this.x = e.x), (this.y = e.y), (this.z = e.z), this;
      },
      add: function (e, t) {
        return void 0 !== t
          ? (void 0, this.addVectors(e, t))
          : ((this.x += e.x), (this.y += e.y), (this.z += e.z), this);
      },
      addScalar: function (e) {
        return (this.x += e), (this.y += e), (this.z += e), this;
      },
      addVectors: function (e, t) {
        return (
          (this.x = e.x + t.x), (this.y = e.y + t.y), (this.z = e.z + t.z), this
        );
      },
      addScaledVector: function (e, t) {
        return (
          (this.x += e.x * t), (this.y += e.y * t), (this.z += e.z * t), this
        );
      },
      sub: function (e, t) {
        return void 0 !== t
          ? (void 0, this.subVectors(e, t))
          : ((this.x -= e.x), (this.y -= e.y), (this.z -= e.z), this);
      },
      subScalar: function (e) {
        return (this.x -= e), (this.y -= e), (this.z -= e), this;
      },
      subVectors: function (e, t) {
        return (
          (this.x = e.x - t.x), (this.y = e.y - t.y), (this.z = e.z - t.z), this
        );
      },
      multiply: function (e, t) {
        return void 0 !== t
          ? (void 0, this.multiplyVectors(e, t))
          : ((this.x *= e.x), (this.y *= e.y), (this.z *= e.z), this);
      },
      multiplyScalar: function (e) {
        return (this.x *= e), (this.y *= e), (this.z *= e), this;
      },
      multiplyVectors: function (e, t) {
        return (
          (this.x = e.x * t.x), (this.y = e.y * t.y), (this.z = e.z * t.z), this
        );
      },
      applyEuler: function (e) {
        return (
          (e && e.isEuler) || void 0, this.applyQuaternion(An.setFromEuler(e))
        );
      },
      applyAxisAngle: function (e, t) {
        return this.applyQuaternion(An.setFromAxisAngle(e, t));
      },
      applyMatrix3: function (e) {
        var t = this.x,
          n = this.y,
          i = this.z,
          r = e.elements;
        return (
          (this.x = r[0] * t + r[3] * n + r[6] * i),
          (this.y = r[1] * t + r[4] * n + r[7] * i),
          (this.z = r[2] * t + r[5] * n + r[8] * i),
          this
        );
      },
      applyNormalMatrix: function (e) {
        return this.applyMatrix3(e).normalize();
      },
      applyMatrix4: function (e) {
        var t = this.x,
          n = this.y,
          i = this.z,
          r = e.elements,
          a = 1 / (r[3] * t + r[7] * n + r[11] * i + r[15]);
        return (
          (this.x = (r[0] * t + r[4] * n + r[8] * i + r[12]) * a),
          (this.y = (r[1] * t + r[5] * n + r[9] * i + r[13]) * a),
          (this.z = (r[2] * t + r[6] * n + r[10] * i + r[14]) * a),
          this
        );
      },
      applyQuaternion: function (e) {
        var t = this.x,
          n = this.y,
          i = this.z,
          r = e.x,
          a = e.y,
          o = e.z,
          s = e.w,
          c = s * t + a * i - o * n,
          u = s * n + o * t - r * i,
          l = s * i + r * n - a * t,
          d = -r * t - a * n - o * i;
        return (
          (this.x = c * s + d * -r + u * -o - l * -a),
          (this.y = u * s + d * -a + l * -r - c * -o),
          (this.z = l * s + d * -o + c * -a - u * -r),
          this
        );
      },
      project: function (e) {
        return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(
          e.projectionMatrix
        );
      },
      unproject: function (e) {
        return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(
          e.matrixWorld
        );
      },
      transformDirection: function (e) {
        var t = this.x,
          n = this.y,
          i = this.z,
          r = e.elements;
        return (
          (this.x = r[0] * t + r[4] * n + r[8] * i),
          (this.y = r[1] * t + r[5] * n + r[9] * i),
          (this.z = r[2] * t + r[6] * n + r[10] * i),
          this.normalize()
        );
      },
      divide: function (e) {
        return (this.x /= e.x), (this.y /= e.y), (this.z /= e.z), this;
      },
      divideScalar: function (e) {
        return this.multiplyScalar(1 / e);
      },
      min: function (e) {
        return (
          (this.x = Math.min(this.x, e.x)),
          (this.y = Math.min(this.y, e.y)),
          (this.z = Math.min(this.z, e.z)),
          this
        );
      },
      max: function (e) {
        return (
          (this.x = Math.max(this.x, e.x)),
          (this.y = Math.max(this.y, e.y)),
          (this.z = Math.max(this.z, e.z)),
          this
        );
      },
      clamp: function (e, t) {
        return (
          (this.x = Math.max(e.x, Math.min(t.x, this.x))),
          (this.y = Math.max(e.y, Math.min(t.y, this.y))),
          (this.z = Math.max(e.z, Math.min(t.z, this.z))),
          this
        );
      },
      clampScalar: function (e, t) {
        return (
          (this.x = Math.max(e, Math.min(t, this.x))),
          (this.y = Math.max(e, Math.min(t, this.y))),
          (this.z = Math.max(e, Math.min(t, this.z))),
          this
        );
      },
      clampLength: function (e, t) {
        var n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(
          Math.max(e, Math.min(t, n))
        );
      },
      floor: function () {
        return (
          (this.x = Math.floor(this.x)),
          (this.y = Math.floor(this.y)),
          (this.z = Math.floor(this.z)),
          this
        );
      },
      ceil: function () {
        return (
          (this.x = Math.ceil(this.x)),
          (this.y = Math.ceil(this.y)),
          (this.z = Math.ceil(this.z)),
          this
        );
      },
      round: function () {
        return (
          (this.x = Math.round(this.x)),
          (this.y = Math.round(this.y)),
          (this.z = Math.round(this.z)),
          this
        );
      },
      roundToZero: function () {
        return (
          (this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
          (this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
          (this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z)),
          this
        );
      },
      negate: function () {
        return (this.x = -this.x), (this.y = -this.y), (this.z = -this.z), this;
      },
      dot: function (e) {
        return this.x * e.x + this.y * e.y + this.z * e.z;
      },
      lengthSq: function () {
        return this.x * this.x + this.y * this.y + this.z * this.z;
      },
      length: function () {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
      },
      manhattanLength: function () {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
      },
      normalize: function () {
        return this.divideScalar(this.length() || 1);
      },
      setLength: function (e) {
        return this.normalize().multiplyScalar(e);
      },
      lerp: function (e, t) {
        return (
          (this.x += (e.x - this.x) * t),
          (this.y += (e.y - this.y) * t),
          (this.z += (e.z - this.z) * t),
          this
        );
      },
      lerpVectors: function (e, t, n) {
        return this.subVectors(t, e).multiplyScalar(n).add(e);
      },
      cross: function (e, t) {
        return void 0 !== t
          ? (void 0, this.crossVectors(e, t))
          : this.crossVectors(this, e);
      },
      crossVectors: function (e, t) {
        var n = e.x,
          i = e.y,
          r = e.z,
          a = t.x,
          o = t.y,
          s = t.z;
        return (
          (this.x = i * s - r * o),
          (this.y = r * a - n * s),
          (this.z = n * o - i * a),
          this
        );
      },
      projectOnVector: function (e) {
        var t = e.lengthSq();
        if (0 === t) return this.set(0, 0, 0);
        var n = e.dot(this) / t;
        return this.copy(e).multiplyScalar(n);
      },
      projectOnPlane: function (e) {
        return wn.copy(this).projectOnVector(e), this.sub(wn);
      },
      reflect: function (e) {
        return this.sub(wn.copy(e).multiplyScalar(2 * this.dot(e)));
      },
      angleTo: function (e) {
        var t = Math.sqrt(this.lengthSq() * e.lengthSq());
        if (0 === t) return Math.PI / 2;
        var n = this.dot(e) / t;
        return Math.acos(hn.clamp(n, -1, 1));
      },
      distanceTo: function (e) {
        return Math.sqrt(this.distanceToSquared(e));
      },
      distanceToSquared: function (e) {
        var t = this.x - e.x,
          n = this.y - e.y,
          i = this.z - e.z;
        return t * t + n * n + i * i;
      },
      manhattanDistanceTo: function (e) {
        return (
          Math.abs(this.x - e.x) +
          Math.abs(this.y - e.y) +
          Math.abs(this.z - e.z)
        );
      },
      setFromSpherical: function (e) {
        return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
      },
      setFromSphericalCoords: function (e, t, n) {
        var i = Math.sin(t) * e;
        return (
          (this.x = i * Math.sin(n)),
          (this.y = Math.cos(t) * e),
          (this.z = i * Math.cos(n)),
          this
        );
      },
      setFromCylindrical: function (e) {
        return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
      },
      setFromCylindricalCoords: function (e, t, n) {
        return (
          (this.x = e * Math.sin(t)),
          (this.y = n),
          (this.z = e * Math.cos(t)),
          this
        );
      },
      setFromMatrixPosition: function (e) {
        var t = e.elements;
        return (this.x = t[12]), (this.y = t[13]), (this.z = t[14]), this;
      },
      setFromMatrixScale: function (e) {
        var t = this.setFromMatrixColumn(e, 0).length(),
          n = this.setFromMatrixColumn(e, 1).length(),
          i = this.setFromMatrixColumn(e, 2).length();
        return (this.x = t), (this.y = n), (this.z = i), this;
      },
      setFromMatrixColumn: function (e, t) {
        return this.fromArray(e.elements, 4 * t);
      },
      setFromMatrix3Column: function (e, t) {
        return this.fromArray(e.elements, 3 * t);
      },
      equals: function (e) {
        return e.x === this.x && e.y === this.y && e.z === this.z;
      },
      fromArray: function (e, t) {
        return (
          void 0 === t && (t = 0),
          (this.x = e[t]),
          (this.y = e[t + 1]),
          (this.z = e[t + 2]),
          this
        );
      },
      toArray: function (e, t) {
        return (
          void 0 === e && (e = []),
          void 0 === t && (t = 0),
          (e[t] = this.x),
          (e[t + 1] = this.y),
          (e[t + 2] = this.z),
          e
        );
      },
      fromBufferAttribute: function (e, t, n) {
        return (
          void 0 !== n && void 0,
          (this.x = e.getX(t)),
          (this.y = e.getY(t)),
          (this.z = e.getZ(t)),
          this
        );
      },
      random: function () {
        return (
          (this.x = Math.random()),
          (this.y = Math.random()),
          (this.z = Math.random()),
          this
        );
      },
    });
    var Ln = new xn(),
      Tn = new Cn(),
      zn = new xn(0, 0, 0),
      Sn = new xn(1, 1, 1),
      On = new xn(),
      En = new xn(),
      kn = new xn();
    function Cn() {
      (this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
        arguments.length;
    }
    Object.assign(Cn.prototype, {
      isMatrix4: !0,
      set: function (e, t, n, i, r, a, o, s, c, u, l, d, h, p, m, f) {
        var _ = this.elements;
        return (
          (_[0] = e),
          (_[4] = t),
          (_[8] = n),
          (_[12] = i),
          (_[1] = r),
          (_[5] = a),
          (_[9] = o),
          (_[13] = s),
          (_[2] = c),
          (_[6] = u),
          (_[10] = l),
          (_[14] = d),
          (_[3] = h),
          (_[7] = p),
          (_[11] = m),
          (_[15] = f),
          this
        );
      },
      identity: function () {
        return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
      },
      clone: function () {
        return new Cn().fromArray(this.elements);
      },
      copy: function (e) {
        var t = this.elements,
          n = e.elements;
        return (
          (t[0] = n[0]),
          (t[1] = n[1]),
          (t[2] = n[2]),
          (t[3] = n[3]),
          (t[4] = n[4]),
          (t[5] = n[5]),
          (t[6] = n[6]),
          (t[7] = n[7]),
          (t[8] = n[8]),
          (t[9] = n[9]),
          (t[10] = n[10]),
          (t[11] = n[11]),
          (t[12] = n[12]),
          (t[13] = n[13]),
          (t[14] = n[14]),
          (t[15] = n[15]),
          this
        );
      },
      copyPosition: function (e) {
        var t = this.elements,
          n = e.elements;
        return (t[12] = n[12]), (t[13] = n[13]), (t[14] = n[14]), this;
      },
      extractBasis: function (e, t, n) {
        return (
          e.setFromMatrixColumn(this, 0),
          t.setFromMatrixColumn(this, 1),
          n.setFromMatrixColumn(this, 2),
          this
        );
      },
      makeBasis: function (e, t, n) {
        return (
          this.set(
            e.x,
            t.x,
            n.x,
            0,
            e.y,
            t.y,
            n.y,
            0,
            e.z,
            t.z,
            n.z,
            0,
            0,
            0,
            0,
            1
          ),
          this
        );
      },
      extractRotation: function (e) {
        var t = this.elements,
          n = e.elements,
          i = 1 / Ln.setFromMatrixColumn(e, 0).length(),
          r = 1 / Ln.setFromMatrixColumn(e, 1).length(),
          a = 1 / Ln.setFromMatrixColumn(e, 2).length();
        return (
          (t[0] = n[0] * i),
          (t[1] = n[1] * i),
          (t[2] = n[2] * i),
          (t[3] = 0),
          (t[4] = n[4] * r),
          (t[5] = n[5] * r),
          (t[6] = n[6] * r),
          (t[7] = 0),
          (t[8] = n[8] * a),
          (t[9] = n[9] * a),
          (t[10] = n[10] * a),
          (t[11] = 0),
          (t[12] = 0),
          (t[13] = 0),
          (t[14] = 0),
          (t[15] = 1),
          this
        );
      },
      makeRotationFromEuler: function (e) {
        (e && e.isEuler) || void 0;
        var t = this.elements,
          n = e.x,
          i = e.y,
          r = e.z,
          a = Math.cos(n),
          o = Math.sin(n),
          s = Math.cos(i),
          c = Math.sin(i),
          u = Math.cos(r),
          l = Math.sin(r);
        if ('XYZ' === e.order) {
          var d = a * u,
            h = a * l,
            p = o * u,
            m = o * l;
          (t[0] = s * u),
            (t[4] = -s * l),
            (t[8] = c),
            (t[1] = h + p * c),
            (t[5] = d - m * c),
            (t[9] = -o * s),
            (t[2] = m - d * c),
            (t[6] = p + h * c),
            (t[10] = a * s);
        } else if ('YXZ' === e.order) {
          var f = s * u,
            _ = s * l,
            M = c * u,
            v = c * l;
          (t[0] = f + v * o),
            (t[4] = M * o - _),
            (t[8] = a * c),
            (t[1] = a * l),
            (t[5] = a * u),
            (t[9] = -o),
            (t[2] = _ * o - M),
            (t[6] = v + f * o),
            (t[10] = a * s);
        } else if ('ZXY' === e.order) {
          (f = s * u), (_ = s * l), (M = c * u), (v = c * l);
          (t[0] = f - v * o),
            (t[4] = -a * l),
            (t[8] = M + _ * o),
            (t[1] = _ + M * o),
            (t[5] = a * u),
            (t[9] = v - f * o),
            (t[2] = -a * c),
            (t[6] = o),
            (t[10] = a * s);
        } else if ('ZYX' === e.order) {
          (d = a * u), (h = a * l), (p = o * u), (m = o * l);
          (t[0] = s * u),
            (t[4] = p * c - h),
            (t[8] = d * c + m),
            (t[1] = s * l),
            (t[5] = m * c + d),
            (t[9] = h * c - p),
            (t[2] = -c),
            (t[6] = o * s),
            (t[10] = a * s);
        } else if ('YZX' === e.order) {
          var g = a * s,
            y = a * c,
            b = o * s,
            w = o * c;
          (t[0] = s * u),
            (t[4] = w - g * l),
            (t[8] = b * l + y),
            (t[1] = l),
            (t[5] = a * u),
            (t[9] = -o * u),
            (t[2] = -c * u),
            (t[6] = y * l + b),
            (t[10] = g - w * l);
        } else if ('XZY' === e.order) {
          (g = a * s), (y = a * c), (b = o * s), (w = o * c);
          (t[0] = s * u),
            (t[4] = -l),
            (t[8] = c * u),
            (t[1] = g * l + w),
            (t[5] = a * u),
            (t[9] = y * l - b),
            (t[2] = b * l - y),
            (t[6] = o * u),
            (t[10] = w * l + g);
        }
        return (
          (t[3] = 0),
          (t[7] = 0),
          (t[11] = 0),
          (t[12] = 0),
          (t[13] = 0),
          (t[14] = 0),
          (t[15] = 1),
          this
        );
      },
      makeRotationFromQuaternion: function (e) {
        return this.compose(zn, e, Sn);
      },
      lookAt: function (e, t, n) {
        var i = this.elements;
        return (
          kn.subVectors(e, t),
          0 === kn.lengthSq() && (kn.z = 1),
          kn.normalize(),
          On.crossVectors(n, kn),
          0 === On.lengthSq() &&
            (1 === Math.abs(n.z) ? (kn.x += 1e-4) : (kn.z += 1e-4),
            kn.normalize(),
            On.crossVectors(n, kn)),
          On.normalize(),
          En.crossVectors(kn, On),
          (i[0] = On.x),
          (i[4] = En.x),
          (i[8] = kn.x),
          (i[1] = On.y),
          (i[5] = En.y),
          (i[9] = kn.y),
          (i[2] = On.z),
          (i[6] = En.z),
          (i[10] = kn.z),
          this
        );
      },
      multiply: function (e, t) {
        return void 0 !== t
          ? (void 0, this.multiplyMatrices(e, t))
          : this.multiplyMatrices(this, e);
      },
      premultiply: function (e) {
        return this.multiplyMatrices(e, this);
      },
      multiplyMatrices: function (e, t) {
        var n = e.elements,
          i = t.elements,
          r = this.elements,
          a = n[0],
          o = n[4],
          s = n[8],
          c = n[12],
          u = n[1],
          l = n[5],
          d = n[9],
          h = n[13],
          p = n[2],
          m = n[6],
          f = n[10],
          _ = n[14],
          M = n[3],
          v = n[7],
          g = n[11],
          y = n[15],
          b = i[0],
          w = i[4],
          A = i[8],
          x = i[12],
          L = i[1],
          T = i[5],
          z = i[9],
          S = i[13],
          O = i[2],
          E = i[6],
          k = i[10],
          C = i[14],
          D = i[3],
          N = i[7],
          P = i[11],
          j = i[15];
        return (
          (r[0] = a * b + o * L + s * O + c * D),
          (r[4] = a * w + o * T + s * E + c * N),
          (r[8] = a * A + o * z + s * k + c * P),
          (r[12] = a * x + o * S + s * C + c * j),
          (r[1] = u * b + l * L + d * O + h * D),
          (r[5] = u * w + l * T + d * E + h * N),
          (r[9] = u * A + l * z + d * k + h * P),
          (r[13] = u * x + l * S + d * C + h * j),
          (r[2] = p * b + m * L + f * O + _ * D),
          (r[6] = p * w + m * T + f * E + _ * N),
          (r[10] = p * A + m * z + f * k + _ * P),
          (r[14] = p * x + m * S + f * C + _ * j),
          (r[3] = M * b + v * L + g * O + y * D),
          (r[7] = M * w + v * T + g * E + y * N),
          (r[11] = M * A + v * z + g * k + y * P),
          (r[15] = M * x + v * S + g * C + y * j),
          this
        );
      },
      multiplyScalar: function (e) {
        var t = this.elements;
        return (
          (t[0] *= e),
          (t[4] *= e),
          (t[8] *= e),
          (t[12] *= e),
          (t[1] *= e),
          (t[5] *= e),
          (t[9] *= e),
          (t[13] *= e),
          (t[2] *= e),
          (t[6] *= e),
          (t[10] *= e),
          (t[14] *= e),
          (t[3] *= e),
          (t[7] *= e),
          (t[11] *= e),
          (t[15] *= e),
          this
        );
      },
      determinant: function () {
        var e = this.elements,
          t = e[0],
          n = e[4],
          i = e[8],
          r = e[12],
          a = e[1],
          o = e[5],
          s = e[9],
          c = e[13],
          u = e[2],
          l = e[6],
          d = e[10],
          h = e[14],
          p = e[3],
          m = e[7],
          f = e[11],
          _ = e[15];
        return (
          p *
            (+r * s * l -
              i * c * l -
              r * o * d +
              n * c * d +
              i * o * h -
              n * s * h) +
          m *
            (+t * s * h -
              t * c * d +
              r * a * d -
              i * a * h +
              i * c * u -
              r * s * u) +
          f *
            (+t * c * l -
              t * o * h -
              r * a * l +
              n * a * h +
              r * o * u -
              n * c * u) +
          _ *
            (-i * o * u -
              t * s * l +
              t * o * d +
              i * a * l -
              n * a * d +
              n * s * u)
        );
      },
      transpose: function () {
        var e,
          t = this.elements;
        return (
          (e = t[1]),
          (t[1] = t[4]),
          (t[4] = e),
          (e = t[2]),
          (t[2] = t[8]),
          (t[8] = e),
          (e = t[6]),
          (t[6] = t[9]),
          (t[9] = e),
          (e = t[3]),
          (t[3] = t[12]),
          (t[12] = e),
          (e = t[7]),
          (t[7] = t[13]),
          (t[13] = e),
          (e = t[11]),
          (t[11] = t[14]),
          (t[14] = e),
          this
        );
      },
      setPosition: function (e, t, n) {
        var i = this.elements;
        return (
          e.isVector3
            ? ((i[12] = e.x), (i[13] = e.y), (i[14] = e.z))
            : ((i[12] = e), (i[13] = t), (i[14] = n)),
          this
        );
      },
      getInverse: function (e, t) {
        void 0 !== t && void 0;
        var n = this.elements,
          i = e.elements,
          r = i[0],
          a = i[1],
          o = i[2],
          s = i[3],
          c = i[4],
          u = i[5],
          l = i[6],
          d = i[7],
          h = i[8],
          p = i[9],
          m = i[10],
          f = i[11],
          _ = i[12],
          M = i[13],
          v = i[14],
          g = i[15],
          y =
            p * v * d -
            M * m * d +
            M * l * f -
            u * v * f -
            p * l * g +
            u * m * g,
          b =
            _ * m * d -
            h * v * d -
            _ * l * f +
            c * v * f +
            h * l * g -
            c * m * g,
          w =
            h * M * d -
            _ * p * d +
            _ * u * f -
            c * M * f -
            h * u * g +
            c * p * g,
          A =
            _ * p * l -
            h * M * l -
            _ * u * m +
            c * M * m +
            h * u * v -
            c * p * v,
          x = r * y + a * b + o * w + s * A;
        if (0 === x)
          return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        var L = 1 / x;
        return (
          (n[0] = y * L),
          (n[1] =
            (M * m * s -
              p * v * s -
              M * o * f +
              a * v * f +
              p * o * g -
              a * m * g) *
            L),
          (n[2] =
            (u * v * s -
              M * l * s +
              M * o * d -
              a * v * d -
              u * o * g +
              a * l * g) *
            L),
          (n[3] =
            (p * l * s -
              u * m * s -
              p * o * d +
              a * m * d +
              u * o * f -
              a * l * f) *
            L),
          (n[4] = b * L),
          (n[5] =
            (h * v * s -
              _ * m * s +
              _ * o * f -
              r * v * f -
              h * o * g +
              r * m * g) *
            L),
          (n[6] =
            (_ * l * s -
              c * v * s -
              _ * o * d +
              r * v * d +
              c * o * g -
              r * l * g) *
            L),
          (n[7] =
            (c * m * s -
              h * l * s +
              h * o * d -
              r * m * d -
              c * o * f +
              r * l * f) *
            L),
          (n[8] = w * L),
          (n[9] =
            (_ * p * s -
              h * M * s -
              _ * a * f +
              r * M * f +
              h * a * g -
              r * p * g) *
            L),
          (n[10] =
            (c * M * s -
              _ * u * s +
              _ * a * d -
              r * M * d -
              c * a * g +
              r * u * g) *
            L),
          (n[11] =
            (h * u * s -
              c * p * s -
              h * a * d +
              r * p * d +
              c * a * f -
              r * u * f) *
            L),
          (n[12] = A * L),
          (n[13] =
            (h * M * o -
              _ * p * o +
              _ * a * m -
              r * M * m -
              h * a * v +
              r * p * v) *
            L),
          (n[14] =
            (_ * u * o -
              c * M * o -
              _ * a * l +
              r * M * l +
              c * a * v -
              r * u * v) *
            L),
          (n[15] =
            (c * p * o -
              h * u * o +
              h * a * l -
              r * p * l -
              c * a * m +
              r * u * m) *
            L),
          this
        );
      },
      scale: function (e) {
        var t = this.elements,
          n = e.x,
          i = e.y,
          r = e.z;
        return (
          (t[0] *= n),
          (t[4] *= i),
          (t[8] *= r),
          (t[1] *= n),
          (t[5] *= i),
          (t[9] *= r),
          (t[2] *= n),
          (t[6] *= i),
          (t[10] *= r),
          (t[3] *= n),
          (t[7] *= i),
          (t[11] *= r),
          this
        );
      },
      getMaxScaleOnAxis: function () {
        var e = this.elements,
          t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],
          n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6],
          i = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
        return Math.sqrt(Math.max(t, n, i));
      },
      makeTranslation: function (e, t, n) {
        return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1), this;
      },
      makeRotationX: function (e) {
        var t = Math.cos(e),
          n = Math.sin(e);
        return this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1), this;
      },
      makeRotationY: function (e) {
        var t = Math.cos(e),
          n = Math.sin(e);
        return this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1), this;
      },
      makeRotationZ: function (e) {
        var t = Math.cos(e),
          n = Math.sin(e);
        return this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
      },
      makeRotationAxis: function (e, t) {
        var n = Math.cos(t),
          i = Math.sin(t),
          r = 1 - n,
          a = e.x,
          o = e.y,
          s = e.z,
          c = r * a,
          u = r * o;
        return (
          this.set(
            c * a + n,
            c * o - i * s,
            c * s + i * o,
            0,
            c * o + i * s,
            u * o + n,
            u * s - i * a,
            0,
            c * s - i * o,
            u * s + i * a,
            r * s * s + n,
            0,
            0,
            0,
            0,
            1
          ),
          this
        );
      },
      makeScale: function (e, t, n) {
        return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1), this;
      },
      makeShear: function (e, t, n) {
        return this.set(1, t, n, 0, e, 1, n, 0, e, t, 1, 0, 0, 0, 0, 1), this;
      },
      compose: function (e, t, n) {
        var i = this.elements,
          r = t._x,
          a = t._y,
          o = t._z,
          s = t._w,
          c = r + r,
          u = a + a,
          l = o + o,
          d = r * c,
          h = r * u,
          p = r * l,
          m = a * u,
          f = a * l,
          _ = o * l,
          M = s * c,
          v = s * u,
          g = s * l,
          y = n.x,
          b = n.y,
          w = n.z;
        return (
          (i[0] = (1 - (m + _)) * y),
          (i[1] = (h + g) * y),
          (i[2] = (p - v) * y),
          (i[3] = 0),
          (i[4] = (h - g) * b),
          (i[5] = (1 - (d + _)) * b),
          (i[6] = (f + M) * b),
          (i[7] = 0),
          (i[8] = (p + v) * w),
          (i[9] = (f - M) * w),
          (i[10] = (1 - (d + m)) * w),
          (i[11] = 0),
          (i[12] = e.x),
          (i[13] = e.y),
          (i[14] = e.z),
          (i[15] = 1),
          this
        );
      },
      decompose: function (e, t, n) {
        var i = this.elements,
          r = Ln.set(i[0], i[1], i[2]).length(),
          a = Ln.set(i[4], i[5], i[6]).length(),
          o = Ln.set(i[8], i[9], i[10]).length(),
          s = this.determinant();
        s < 0 && (r = -r),
          (e.x = i[12]),
          (e.y = i[13]),
          (e.z = i[14]),
          Tn.copy(this);
        var c = 1 / r,
          u = 1 / a,
          l = 1 / o;
        return (
          (Tn.elements[0] *= c),
          (Tn.elements[1] *= c),
          (Tn.elements[2] *= c),
          (Tn.elements[4] *= u),
          (Tn.elements[5] *= u),
          (Tn.elements[6] *= u),
          (Tn.elements[8] *= l),
          (Tn.elements[9] *= l),
          (Tn.elements[10] *= l),
          t.setFromRotationMatrix(Tn),
          (n.x = r),
          (n.y = a),
          (n.z = o),
          this
        );
      },
      makePerspective: function (e, t, n, i, r, a) {
        void 0 === a && void 0;
        var o = this.elements,
          s = (2 * r) / (t - e),
          c = (2 * r) / (n - i),
          u = (t + e) / (t - e),
          l = (n + i) / (n - i),
          d = -(a + r) / (a - r),
          h = (-2 * a * r) / (a - r);
        return (
          (o[0] = s),
          (o[4] = 0),
          (o[8] = u),
          (o[12] = 0),
          (o[1] = 0),
          (o[5] = c),
          (o[9] = l),
          (o[13] = 0),
          (o[2] = 0),
          (o[6] = 0),
          (o[10] = d),
          (o[14] = h),
          (o[3] = 0),
          (o[7] = 0),
          (o[11] = -1),
          (o[15] = 0),
          this
        );
      },
      makeOrthographic: function (e, t, n, i, r, a) {
        var o = this.elements,
          s = 1 / (t - e),
          c = 1 / (n - i),
          u = 1 / (a - r),
          l = (t + e) * s,
          d = (n + i) * c,
          h = (a + r) * u;
        return (
          (o[0] = 2 * s),
          (o[4] = 0),
          (o[8] = 0),
          (o[12] = -l),
          (o[1] = 0),
          (o[5] = 2 * c),
          (o[9] = 0),
          (o[13] = -d),
          (o[2] = 0),
          (o[6] = 0),
          (o[10] = -2 * u),
          (o[14] = -h),
          (o[3] = 0),
          (o[7] = 0),
          (o[11] = 0),
          (o[15] = 1),
          this
        );
      },
      equals: function (e) {
        for (var t = this.elements, n = e.elements, i = 0; i < 16; i++)
          if (t[i] !== n[i]) return !1;
        return !0;
      },
      fromArray: function (e, t) {
        void 0 === t && (t = 0);
        for (var n = 0; n < 16; n++) this.elements[n] = e[n + t];
        return this;
      },
      toArray: function (e, t) {
        void 0 === e && (e = []), void 0 === t && (t = 0);
        var n = this.elements;
        return (
          (e[t] = n[0]),
          (e[t + 1] = n[1]),
          (e[t + 2] = n[2]),
          (e[t + 3] = n[3]),
          (e[t + 4] = n[4]),
          (e[t + 5] = n[5]),
          (e[t + 6] = n[6]),
          (e[t + 7] = n[7]),
          (e[t + 8] = n[8]),
          (e[t + 9] = n[9]),
          (e[t + 10] = n[10]),
          (e[t + 11] = n[11]),
          (e[t + 12] = n[12]),
          (e[t + 13] = n[13]),
          (e[t + 14] = n[14]),
          (e[t + 15] = n[15]),
          e
        );
      },
    });
    var Dn = new Cn(),
      Nn = new bn();
    function Pn(e, t, n, i) {
      (this._x = e || 0),
        (this._y = t || 0),
        (this._z = n || 0),
        (this._order = i || Pn.DefaultOrder);
    }
    function jn() {
      this.mask = 1 | 0;
    }
    (Pn.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX']),
      (Pn.DefaultOrder = 'XYZ'),
      Object.defineProperties(Pn.prototype, {
        x: {
          get: function () {
            return this._x;
          },
          set: function (e) {
            (this._x = e), this._onChangeCallback();
          },
        },
        y: {
          get: function () {
            return this._y;
          },
          set: function (e) {
            (this._y = e), this._onChangeCallback();
          },
        },
        z: {
          get: function () {
            return this._z;
          },
          set: function (e) {
            (this._z = e), this._onChangeCallback();
          },
        },
        order: {
          get: function () {
            return this._order;
          },
          set: function (e) {
            (this._order = e), this._onChangeCallback();
          },
        },
      }),
      Object.assign(Pn.prototype, {
        isEuler: !0,
        set: function (e, t, n, i) {
          return (
            (this._x = e),
            (this._y = t),
            (this._z = n),
            (this._order = i || this._order),
            this._onChangeCallback(),
            this
          );
        },
        clone: function () {
          return new this.constructor(this._x, this._y, this._z, this._order);
        },
        copy: function (e) {
          return (
            (this._x = e._x),
            (this._y = e._y),
            (this._z = e._z),
            (this._order = e._order),
            this._onChangeCallback(),
            this
          );
        },
        setFromRotationMatrix: function (e, t, n) {
          var i = hn.clamp,
            r = e.elements,
            a = r[0],
            o = r[4],
            s = r[8],
            c = r[1],
            u = r[5],
            l = r[9],
            d = r[2],
            h = r[6],
            p = r[10];
          switch (((t = t || this._order), t)) {
            case 'XYZ':
              (this._y = Math.asin(i(s, -1, 1))),
                Math.abs(s) < 0.9999999
                  ? ((this._x = Math.atan2(-l, p)),
                    (this._z = Math.atan2(-o, a)))
                  : ((this._x = Math.atan2(h, u)), (this._z = 0));
              break;
            case 'YXZ':
              (this._x = Math.asin(-i(l, -1, 1))),
                Math.abs(l) < 0.9999999
                  ? ((this._y = Math.atan2(s, p)), (this._z = Math.atan2(c, u)))
                  : ((this._y = Math.atan2(-d, a)), (this._z = 0));
              break;
            case 'ZXY':
              (this._x = Math.asin(i(h, -1, 1))),
                Math.abs(h) < 0.9999999
                  ? ((this._y = Math.atan2(-d, p)),
                    (this._z = Math.atan2(-o, u)))
                  : ((this._y = 0), (this._z = Math.atan2(c, a)));
              break;
            case 'ZYX':
              (this._y = Math.asin(-i(d, -1, 1))),
                Math.abs(d) < 0.9999999
                  ? ((this._x = Math.atan2(h, p)), (this._z = Math.atan2(c, a)))
                  : ((this._x = 0), (this._z = Math.atan2(-o, u)));
              break;
            case 'YZX':
              (this._z = Math.asin(i(c, -1, 1))),
                Math.abs(c) < 0.9999999
                  ? ((this._x = Math.atan2(-l, u)),
                    (this._y = Math.atan2(-d, a)))
                  : ((this._x = 0), (this._y = Math.atan2(s, p)));
              break;
            case 'XZY':
              (this._z = Math.asin(-i(o, -1, 1))),
                Math.abs(o) < 0.9999999
                  ? ((this._x = Math.atan2(h, u)), (this._y = Math.atan2(s, a)))
                  : ((this._x = Math.atan2(-l, p)), (this._y = 0));
              break;
            default:
              void 0;
          }
          return (this._order = t), !1 !== n && this._onChangeCallback(), this;
        },
        setFromQuaternion: function (e, t, n) {
          return (
            Dn.makeRotationFromQuaternion(e),
            this.setFromRotationMatrix(Dn, t, n)
          );
        },
        setFromVector3: function (e, t) {
          return this.set(e.x, e.y, e.z, t || this._order);
        },
        reorder: function (e) {
          return Nn.setFromEuler(this), this.setFromQuaternion(Nn, e);
        },
        equals: function (e) {
          return (
            e._x === this._x &&
            e._y === this._y &&
            e._z === this._z &&
            e._order === this._order
          );
        },
        fromArray: function (e) {
          return (
            (this._x = e[0]),
            (this._y = e[1]),
            (this._z = e[2]),
            void 0 !== e[3] && (this._order = e[3]),
            this._onChangeCallback(),
            this
          );
        },
        toArray: function (e, t) {
          return (
            void 0 === e && (e = []),
            void 0 === t && (t = 0),
            (e[t] = this._x),
            (e[t + 1] = this._y),
            (e[t + 2] = this._z),
            (e[t + 3] = this._order),
            e
          );
        },
        toVector3: function (e) {
          return e
            ? e.set(this._x, this._y, this._z)
            : new xn(this._x, this._y, this._z);
        },
        _onChange: function (e) {
          return (this._onChangeCallback = e), this;
        },
        _onChangeCallback: function () {},
      }),
      Object.assign(jn.prototype, {
        set: function (e) {
          this.mask = (1 << e) | 0;
        },
        enable: function (e) {
          this.mask |= (1 << e) | 0;
        },
        enableAll: function () {
          this.mask = 4294967295 | 0;
        },
        toggle: function (e) {
          this.mask ^= (1 << e) | 0;
        },
        disable: function (e) {
          this.mask &= ~((1 << e) | 0);
        },
        disableAll: function () {
          this.mask = 0;
        },
        test: function (e) {
          return 0 !== (this.mask & e.mask);
        },
      });
    var Yn = 0,
      Rn = new xn(),
      Bn = new bn(),
      Wn = new Cn(),
      In = new xn(),
      qn = new xn(),
      Hn = new xn(),
      Fn = new bn(),
      Un = new xn(1, 0, 0),
      Xn = new xn(0, 1, 0),
      Vn = new xn(0, 0, 1),
      Gn = { type: 'added' },
      Jn = { type: 'removed' };
    function Zn() {
      Object.defineProperty(this, 'id', { value: Yn++ }),
        (this.uuid = hn.generateUUID()),
        (this.name = ''),
        (this.type = 'Object3D'),
        (this.parent = null),
        (this.children = []),
        (this.up = Zn.DefaultUp.clone());
      var e = new xn(),
        t = new Pn(),
        n = new bn(),
        i = new xn(1, 1, 1);
      function r() {
        n.setFromEuler(t, !1);
      }
      function a() {
        t.setFromQuaternion(n, void 0, !1);
      }
      t._onChange(r),
        n._onChange(a),
        Object.defineProperties(this, {
          position: { configurable: !0, enumerable: !0, value: e },
          rotation: { configurable: !0, enumerable: !0, value: t },
          quaternion: { configurable: !0, enumerable: !0, value: n },
          scale: { configurable: !0, enumerable: !0, value: i },
          modelViewMatrix: { value: new Cn() },
          normalMatrix: { value: new mn() },
        }),
        (this.matrix = new Cn()),
        (this.matrixWorld = new Cn()),
        (this.matrixAutoUpdate = Zn.DefaultMatrixAutoUpdate),
        (this.matrixWorldNeedsUpdate = !1),
        (this.layers = new jn()),
        (this.visible = !0),
        (this.castShadow = !1),
        (this.receiveShadow = !1),
        (this.frustumCulled = !0),
        (this.renderOrder = 0),
        (this.userData = {});
    }
    function Kn() {
      Zn.call(this),
        (this.type = 'Scene'),
        (this.background = null),
        (this.environment = null),
        (this.fog = null),
        (this.overrideMaterial = null),
        (this.autoUpdate = !0),
        'undefined' !== typeof __THREE_DEVTOOLS__ &&
          __THREE_DEVTOOLS__.dispatchEvent(
            new CustomEvent('observe', { detail: this })
          );
    }
    (Zn.DefaultUp = new xn(0, 1, 0)),
      (Zn.DefaultMatrixAutoUpdate = !0),
      (Zn.prototype = Object.assign(Object.create(cn.prototype), {
        constructor: Zn,
        isObject3D: !0,
        onBeforeRender: function () {},
        onAfterRender: function () {},
        applyMatrix4: function (e) {
          this.matrixAutoUpdate && this.updateMatrix(),
            this.matrix.premultiply(e),
            this.matrix.decompose(this.position, this.quaternion, this.scale);
        },
        applyQuaternion: function (e) {
          return this.quaternion.premultiply(e), this;
        },
        setRotationFromAxisAngle: function (e, t) {
          this.quaternion.setFromAxisAngle(e, t);
        },
        setRotationFromEuler: function (e) {
          this.quaternion.setFromEuler(e, !0);
        },
        setRotationFromMatrix: function (e) {
          this.quaternion.setFromRotationMatrix(e);
        },
        setRotationFromQuaternion: function (e) {
          this.quaternion.copy(e);
        },
        rotateOnAxis: function (e, t) {
          return Bn.setFromAxisAngle(e, t), this.quaternion.multiply(Bn), this;
        },
        rotateOnWorldAxis: function (e, t) {
          return (
            Bn.setFromAxisAngle(e, t), this.quaternion.premultiply(Bn), this
          );
        },
        rotateX: function (e) {
          return this.rotateOnAxis(Un, e);
        },
        rotateY: function (e) {
          return this.rotateOnAxis(Xn, e);
        },
        rotateZ: function (e) {
          return this.rotateOnAxis(Vn, e);
        },
        translateOnAxis: function (e, t) {
          return (
            Rn.copy(e).applyQuaternion(this.quaternion),
            this.position.add(Rn.multiplyScalar(t)),
            this
          );
        },
        translateX: function (e) {
          return this.translateOnAxis(Un, e);
        },
        translateY: function (e) {
          return this.translateOnAxis(Xn, e);
        },
        translateZ: function (e) {
          return this.translateOnAxis(Vn, e);
        },
        localToWorld: function (e) {
          return e.applyMatrix4(this.matrixWorld);
        },
        worldToLocal: function (e) {
          return e.applyMatrix4(Wn.getInverse(this.matrixWorld));
        },
        lookAt: function (e, t, n) {
          e.isVector3 ? In.copy(e) : In.set(e, t, n);
          var i = this.parent;
          this.updateWorldMatrix(!0, !1),
            qn.setFromMatrixPosition(this.matrixWorld),
            this.isCamera || this.isLight
              ? Wn.lookAt(qn, In, this.up)
              : Wn.lookAt(In, qn, this.up),
            this.quaternion.setFromRotationMatrix(Wn),
            i &&
              (Wn.extractRotation(i.matrixWorld),
              Bn.setFromRotationMatrix(Wn),
              this.quaternion.premultiply(Bn.inverse()));
        },
        add: function (e) {
          if (arguments.length > 1) {
            for (var t = 0; t < arguments.length; t++) this.add(arguments[t]);
            return this;
          }
          return e === this
            ? (void 0, this)
            : (e && e.isObject3D
                ? (null !== e.parent && e.parent.remove(e),
                  (e.parent = this),
                  this.children.push(e),
                  e.dispatchEvent(Gn))
                : void 0,
              this);
        },
        remove: function (e) {
          if (arguments.length > 1) {
            for (var t = 0; t < arguments.length; t++)
              this.remove(arguments[t]);
            return this;
          }
          var n = this.children.indexOf(e);
          return (
            -1 !== n &&
              ((e.parent = null),
              this.children.splice(n, 1),
              e.dispatchEvent(Jn)),
            this
          );
        },
        attach: function (e) {
          return (
            this.updateWorldMatrix(!0, !1),
            Wn.getInverse(this.matrixWorld),
            null !== e.parent &&
              (e.parent.updateWorldMatrix(!0, !1),
              Wn.multiply(e.parent.matrixWorld)),
            e.applyMatrix4(Wn),
            e.updateWorldMatrix(!1, !1),
            this.add(e),
            this
          );
        },
        getObjectById: function (e) {
          return this.getObjectByProperty('id', e);
        },
        getObjectByName: function (e) {
          return this.getObjectByProperty('name', e);
        },
        getObjectByProperty: function (e, t) {
          if (this[e] === t) return this;
          for (var n = 0, i = this.children.length; n < i; n++) {
            var r = this.children[n],
              a = r.getObjectByProperty(e, t);
            if (void 0 !== a) return a;
          }
        },
        getWorldPosition: function (e) {
          return (
            void 0,
            void 0 === e && (e = new xn()),
            this.updateMatrixWorld(!0),
            e.setFromMatrixPosition(this.matrixWorld)
          );
        },
        getWorldQuaternion: function (e) {
          return (
            void 0,
            void 0 === e && (e = new bn()),
            this.updateMatrixWorld(!0),
            this.matrixWorld.decompose(qn, e, Hn),
            e
          );
        },
        getWorldScale: function (e) {
          return (
            void 0,
            void 0 === e && (e = new xn()),
            this.updateMatrixWorld(!0),
            this.matrixWorld.decompose(qn, Fn, e),
            e
          );
        },
        getWorldDirection: function (e) {
          void 0, void 0 === e && (e = new xn()), this.updateMatrixWorld(!0);
          var t = this.matrixWorld.elements;
          return e.set(t[8], t[9], t[10]).normalize();
        },
        raycast: function () {},
        traverse: function (e) {
          e(this);
          for (var t = this.children, n = 0, i = t.length; n < i; n++)
            t[n].traverse(e);
        },
        traverseVisible: function (e) {
          if (!1 !== this.visible) {
            e(this);
            for (var t = this.children, n = 0, i = t.length; n < i; n++)
              t[n].traverseVisible(e);
          }
        },
        traverseAncestors: function (e) {
          var t = this.parent;
          null !== t && (e(t), t.traverseAncestors(e));
        },
        updateMatrix: function () {
          this.matrix.compose(this.position, this.quaternion, this.scale),
            (this.matrixWorldNeedsUpdate = !0);
        },
        updateMatrixWorld: function (e) {
          this.matrixAutoUpdate && this.updateMatrix(),
            (this.matrixWorldNeedsUpdate || e) &&
              (null === this.parent
                ? this.matrixWorld.copy(this.matrix)
                : this.matrixWorld.multiplyMatrices(
                    this.parent.matrixWorld,
                    this.matrix
                  ),
              (this.matrixWorldNeedsUpdate = !1),
              (e = !0));
          for (var t = this.children, n = 0, i = t.length; n < i; n++)
            t[n].updateMatrixWorld(e);
        },
        updateWorldMatrix: function (e, t) {
          var n = this.parent;
          if (
            (!0 === e && null !== n && n.updateWorldMatrix(!0, !1),
            this.matrixAutoUpdate && this.updateMatrix(),
            null === this.parent
              ? this.matrixWorld.copy(this.matrix)
              : this.matrixWorld.multiplyMatrices(
                  this.parent.matrixWorld,
                  this.matrix
                ),
            !0 === t)
          )
            for (var i = this.children, r = 0, a = i.length; r < a; r++)
              i[r].updateWorldMatrix(!1, !0);
        },
        toJSON: function (e) {
          var t = void 0 === e || 'string' === typeof e,
            n = {};
          t &&
            ((e = {
              geometries: {},
              materials: {},
              textures: {},
              images: {},
              shapes: {},
            }),
            (n.metadata = {
              version: 4.5,
              type: 'Object',
              generator: 'Object3D.toJSON',
            }));
          var i = {};
          function r(t, n) {
            return void 0 === t[n.uuid] && (t[n.uuid] = n.toJSON(e)), n.uuid;
          }
          if (
            ((i.uuid = this.uuid),
            (i.type = this.type),
            '' !== this.name && (i.name = this.name),
            !0 === this.castShadow && (i.castShadow = !0),
            !0 === this.receiveShadow && (i.receiveShadow = !0),
            !1 === this.visible && (i.visible = !1),
            !1 === this.frustumCulled && (i.frustumCulled = !1),
            0 !== this.renderOrder && (i.renderOrder = this.renderOrder),
            '{}' !== JSON.stringify(this.userData) &&
              (i.userData = this.userData),
            (i.layers = this.layers.mask),
            (i.matrix = this.matrix.toArray()),
            !1 === this.matrixAutoUpdate && (i.matrixAutoUpdate = !1),
            this.isInstancedMesh &&
              ((i.type = 'InstancedMesh'),
              (i.count = this.count),
              (i.instanceMatrix = this.instanceMatrix.toJSON())),
            this.isMesh || this.isLine || this.isPoints)
          ) {
            i.geometry = r(e.geometries, this.geometry);
            var a = this.geometry.parameters;
            if (void 0 !== a && void 0 !== a.shapes) {
              var o = a.shapes;
              if (Array.isArray(o))
                for (var s = 0, c = o.length; s < c; s++) {
                  var u = o[s];
                  r(e.shapes, u);
                }
              else r(e.shapes, o);
            }
          }
          if (void 0 !== this.material)
            if (Array.isArray(this.material)) {
              var l = [];
              for (s = 0, c = this.material.length; s < c; s++)
                l.push(r(e.materials, this.material[s]));
              i.material = l;
            } else i.material = r(e.materials, this.material);
          if (this.children.length > 0) {
            i.children = [];
            for (s = 0; s < this.children.length; s++)
              i.children.push(this.children[s].toJSON(e).object);
          }
          if (t) {
            var d = f(e.geometries),
              h = f(e.materials),
              p = f(e.textures),
              m = f(e.images);
            o = f(e.shapes);
            d.length > 0 && (n.geometries = d),
              h.length > 0 && (n.materials = h),
              p.length > 0 && (n.textures = p),
              m.length > 0 && (n.images = m),
              o.length > 0 && (n.shapes = o);
          }
          return (n.object = i), n;
          function f(e) {
            var t = [];
            for (var n in e) {
              var i = e[n];
              delete i.metadata, t.push(i);
            }
            return t;
          }
        },
        clone: function (e) {
          return new this.constructor().copy(this, e);
        },
        copy: function (e, t) {
          if (
            (void 0 === t && (t = !0),
            (this.name = e.name),
            this.up.copy(e.up),
            this.position.copy(e.position),
            this.quaternion.copy(e.quaternion),
            this.scale.copy(e.scale),
            this.matrix.copy(e.matrix),
            this.matrixWorld.copy(e.matrixWorld),
            (this.matrixAutoUpdate = e.matrixAutoUpdate),
            (this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate),
            (this.layers.mask = e.layers.mask),
            (this.visible = e.visible),
            (this.castShadow = e.castShadow),
            (this.receiveShadow = e.receiveShadow),
            (this.frustumCulled = e.frustumCulled),
            (this.renderOrder = e.renderOrder),
            (this.userData = JSON.parse(JSON.stringify(e.userData))),
            !0 === t)
          )
            for (var n = 0; n < e.children.length; n++) {
              var i = e.children[n];
              this.add(i.clone());
            }
          return this;
        },
      })),
      (Kn.prototype = Object.assign(Object.create(Zn.prototype), {
        constructor: Kn,
        isScene: !0,
        copy: function (e, t) {
          return (
            Zn.prototype.copy.call(this, e, t),
            null !== e.background && (this.background = e.background.clone()),
            null !== e.environment &&
              (this.environment = e.environment.clone()),
            null !== e.fog && (this.fog = e.fog.clone()),
            null !== e.overrideMaterial &&
              (this.overrideMaterial = e.overrideMaterial.clone()),
            (this.autoUpdate = e.autoUpdate),
            (this.matrixAutoUpdate = e.matrixAutoUpdate),
            this
          );
        },
        toJSON: function (e) {
          var t = Zn.prototype.toJSON.call(this, e);
          return (
            null !== this.background &&
              (t.object.background = this.background.toJSON(e)),
            null !== this.environment &&
              (t.object.environment = this.environment.toJSON(e)),
            null !== this.fog && (t.object.fog = this.fog.toJSON()),
            t
          );
        },
        dispose: function () {
          this.dispatchEvent({ type: 'dispose' });
        },
      }));
    var Qn = [
        new xn(),
        new xn(),
        new xn(),
        new xn(),
        new xn(),
        new xn(),
        new xn(),
        new xn(),
      ],
      $n = new xn(),
      ei = new di(),
      ti = new xn(),
      ni = new xn(),
      ii = new xn(),
      ri = new xn(),
      ai = new xn(),
      oi = new xn(),
      si = new xn(),
      ci = new xn(),
      ui = new xn(),
      li = new xn();
    function di(e, t) {
      (this.min = void 0 !== e ? e : new xn(+1 / 0, +1 / 0, +1 / 0)),
        (this.max = void 0 !== t ? t : new xn(-1 / 0, -1 / 0, -1 / 0));
    }
    function hi(e, t, n, i, r) {
      var a, o;
      for (a = 0, o = e.length - 3; a <= o; a += 3) {
        li.fromArray(e, a);
        var s =
            r.x * Math.abs(li.x) + r.y * Math.abs(li.y) + r.z * Math.abs(li.z),
          c = t.dot(li),
          u = n.dot(li),
          l = i.dot(li);
        if (Math.max(-Math.max(c, u, l), Math.min(c, u, l)) > s) return !1;
      }
      return !0;
    }
    Object.assign(di.prototype, {
      isBox3: !0,
      set: function (e, t) {
        return this.min.copy(e), this.max.copy(t), this;
      },
      setFromArray: function (e) {
        for (
          var t = +1 / 0,
            n = +1 / 0,
            i = +1 / 0,
            r = -1 / 0,
            a = -1 / 0,
            o = -1 / 0,
            s = 0,
            c = e.length;
          s < c;
          s += 3
        ) {
          var u = e[s],
            l = e[s + 1],
            d = e[s + 2];
          u < t && (t = u),
            l < n && (n = l),
            d < i && (i = d),
            u > r && (r = u),
            l > a && (a = l),
            d > o && (o = d);
        }
        return this.min.set(t, n, i), this.max.set(r, a, o), this;
      },
      setFromBufferAttribute: function (e) {
        for (
          var t = +1 / 0,
            n = +1 / 0,
            i = +1 / 0,
            r = -1 / 0,
            a = -1 / 0,
            o = -1 / 0,
            s = 0,
            c = e.count;
          s < c;
          s++
        ) {
          var u = e.getX(s),
            l = e.getY(s),
            d = e.getZ(s);
          u < t && (t = u),
            l < n && (n = l),
            d < i && (i = d),
            u > r && (r = u),
            l > a && (a = l),
            d > o && (o = d);
        }
        return this.min.set(t, n, i), this.max.set(r, a, o), this;
      },
      setFromPoints: function (e) {
        this.makeEmpty();
        for (var t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
        return this;
      },
      setFromCenterAndSize: function (e, t) {
        var n = $n.copy(t).multiplyScalar(0.5);
        return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
      },
      setFromObject: function (e) {
        return this.makeEmpty(), this.expandByObject(e);
      },
      clone: function () {
        return new this.constructor().copy(this);
      },
      copy: function (e) {
        return this.min.copy(e.min), this.max.copy(e.max), this;
      },
      makeEmpty: function () {
        return (
          (this.min.x = this.min.y = this.min.z = +1 / 0),
          (this.max.x = this.max.y = this.max.z = -1 / 0),
          this
        );
      },
      isEmpty: function () {
        return (
          this.max.x < this.min.x ||
          this.max.y < this.min.y ||
          this.max.z < this.min.z
        );
      },
      getCenter: function (e) {
        return (
          void 0,
          void 0 === e && (e = new xn()),
          this.isEmpty()
            ? e.set(0, 0, 0)
            : e.addVectors(this.min, this.max).multiplyScalar(0.5)
        );
      },
      getSize: function (e) {
        return (
          void 0,
          void 0 === e && (e = new xn()),
          this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min)
        );
      },
      expandByPoint: function (e) {
        return this.min.min(e), this.max.max(e), this;
      },
      expandByVector: function (e) {
        return this.min.sub(e), this.max.add(e), this;
      },
      expandByScalar: function (e) {
        return this.min.addScalar(-e), this.max.addScalar(e), this;
      },
      expandByObject: function (e) {
        e.updateWorldMatrix(!1, !1);
        var t = e.geometry;
        void 0 !== t &&
          (null === t.boundingBox && t.computeBoundingBox(),
          ei.copy(t.boundingBox),
          ei.applyMatrix4(e.matrixWorld),
          this.union(ei));
        for (var n = e.children, i = 0, r = n.length; i < r; i++)
          this.expandByObject(n[i]);
        return this;
      },
      containsPoint: function (e) {
        return !(
          e.x < this.min.x ||
          e.x > this.max.x ||
          e.y < this.min.y ||
          e.y > this.max.y ||
          e.z < this.min.z ||
          e.z > this.max.z
        );
      },
      containsBox: function (e) {
        return (
          this.min.x <= e.min.x &&
          e.max.x <= this.max.x &&
          this.min.y <= e.min.y &&
          e.max.y <= this.max.y &&
          this.min.z <= e.min.z &&
          e.max.z <= this.max.z
        );
      },
      getParameter: function (e, t) {
        return (
          void 0,
          void 0 === t && (t = new xn()),
          t.set(
            (e.x - this.min.x) / (this.max.x - this.min.x),
            (e.y - this.min.y) / (this.max.y - this.min.y),
            (e.z - this.min.z) / (this.max.z - this.min.z)
          )
        );
      },
      intersectsBox: function (e) {
        return !(
          e.max.x < this.min.x ||
          e.min.x > this.max.x ||
          e.max.y < this.min.y ||
          e.min.y > this.max.y ||
          e.max.z < this.min.z ||
          e.min.z > this.max.z
        );
      },
      intersectsSphere: function (e) {
        return (
          this.clampPoint(e.center, $n),
          $n.distanceToSquared(e.center) <= e.radius * e.radius
        );
      },
      intersectsPlane: function (e) {
        var t, n;
        return (
          e.normal.x > 0
            ? ((t = e.normal.x * this.min.x), (n = e.normal.x * this.max.x))
            : ((t = e.normal.x * this.max.x), (n = e.normal.x * this.min.x)),
          e.normal.y > 0
            ? ((t += e.normal.y * this.min.y), (n += e.normal.y * this.max.y))
            : ((t += e.normal.y * this.max.y), (n += e.normal.y * this.min.y)),
          e.normal.z > 0
            ? ((t += e.normal.z * this.min.z), (n += e.normal.z * this.max.z))
            : ((t += e.normal.z * this.max.z), (n += e.normal.z * this.min.z)),
          t <= -e.constant && n >= -e.constant
        );
      },
      intersectsTriangle: function (e) {
        if (this.isEmpty()) return !1;
        this.getCenter(si),
          ci.subVectors(this.max, si),
          ti.subVectors(e.a, si),
          ni.subVectors(e.b, si),
          ii.subVectors(e.c, si),
          ri.subVectors(ni, ti),
          ai.subVectors(ii, ni),
          oi.subVectors(ti, ii);
        var t = [
          0,
          -ri.z,
          ri.y,
          0,
          -ai.z,
          ai.y,
          0,
          -oi.z,
          oi.y,
          ri.z,
          0,
          -ri.x,
          ai.z,
          0,
          -ai.x,
          oi.z,
          0,
          -oi.x,
          -ri.y,
          ri.x,
          0,
          -ai.y,
          ai.x,
          0,
          -oi.y,
          oi.x,
          0,
        ];
        return (
          !!hi(t, ti, ni, ii, ci) &&
          ((t = [1, 0, 0, 0, 1, 0, 0, 0, 1]),
          !!hi(t, ti, ni, ii, ci) &&
            (ui.crossVectors(ri, ai),
            (t = [ui.x, ui.y, ui.z]),
            hi(t, ti, ni, ii, ci)))
        );
      },
      clampPoint: function (e, t) {
        return (
          void 0,
          void 0 === t && (t = new xn()),
          t.copy(e).clamp(this.min, this.max)
        );
      },
      distanceToPoint: function (e) {
        var t = $n.copy(e).clamp(this.min, this.max);
        return t.sub(e).length();
      },
      getBoundingSphere: function (e) {
        return (
          void 0 === e && void 0,
          this.getCenter(e.center),
          (e.radius = 0.5 * this.getSize($n).length()),
          e
        );
      },
      intersect: function (e) {
        return (
          this.min.max(e.min),
          this.max.min(e.max),
          this.isEmpty() && this.makeEmpty(),
          this
        );
      },
      union: function (e) {
        return this.min.min(e.min), this.max.max(e.max), this;
      },
      applyMatrix4: function (e) {
        return (
          this.isEmpty() ||
            (Qn[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e),
            Qn[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e),
            Qn[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e),
            Qn[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e),
            Qn[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e),
            Qn[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e),
            Qn[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e),
            Qn[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e),
            this.setFromPoints(Qn)),
          this
        );
      },
      translate: function (e) {
        return this.min.add(e), this.max.add(e), this;
      },
      equals: function (e) {
        return e.min.equals(this.min) && e.max.equals(this.max);
      },
    });
    var pi = new di();
    function mi(e, t) {
      (this.center = void 0 !== e ? e : new xn()),
        (this.radius = void 0 !== t ? t : -1);
    }
    Object.assign(mi.prototype, {
      set: function (e, t) {
        return this.center.copy(e), (this.radius = t), this;
      },
      setFromPoints: function (e, t) {
        var n = this.center;
        void 0 !== t ? n.copy(t) : pi.setFromPoints(e).getCenter(n);
        for (var i = 0, r = 0, a = e.length; r < a; r++)
          i = Math.max(i, n.distanceToSquared(e[r]));
        return (this.radius = Math.sqrt(i)), this;
      },
      clone: function () {
        return new this.constructor().copy(this);
      },
      copy: function (e) {
        return this.center.copy(e.center), (this.radius = e.radius), this;
      },
      isEmpty: function () {
        return this.radius < 0;
      },
      makeEmpty: function () {
        return this.center.set(0, 0, 0), (this.radius = -1), this;
      },
      containsPoint: function (e) {
        return e.distanceToSquared(this.center) <= this.radius * this.radius;
      },
      distanceToPoint: function (e) {
        return e.distanceTo(this.center) - this.radius;
      },
      intersectsSphere: function (e) {
        var t = this.radius + e.radius;
        return e.center.distanceToSquared(this.center) <= t * t;
      },
      intersectsBox: function (e) {
        return e.intersectsSphere(this);
      },
      intersectsPlane: function (e) {
        return Math.abs(e.distanceToPoint(this.center)) <= this.radius;
      },
      clampPoint: function (e, t) {
        var n = this.center.distanceToSquared(e);
        return (
          void 0,
          void 0 === t && (t = new xn()),
          t.copy(e),
          n > this.radius * this.radius &&
            (t.sub(this.center).normalize(),
            t.multiplyScalar(this.radius).add(this.center)),
          t
        );
      },
      getBoundingBox: function (e) {
        return (
          void 0,
          void 0 === e && (e = new di()),
          this.isEmpty()
            ? (e.makeEmpty(), e)
            : (e.set(this.center, this.center),
              e.expandByScalar(this.radius),
              e)
        );
      },
      applyMatrix4: function (e) {
        return (
          this.center.applyMatrix4(e),
          (this.radius = this.radius * e.getMaxScaleOnAxis()),
          this
        );
      },
      translate: function (e) {
        return this.center.add(e), this;
      },
      equals: function (e) {
        return e.center.equals(this.center) && e.radius === this.radius;
      },
    });
    var fi = new xn(),
      _i = new xn(),
      Mi = new xn(),
      vi = new xn(),
      gi = new xn(),
      yi = new xn(),
      bi = new xn();
    function wi(e, t) {
      (this.origin = void 0 !== e ? e : new xn()),
        (this.direction = void 0 !== t ? t : new xn(0, 0, -1));
    }
    Object.assign(wi.prototype, {
      set: function (e, t) {
        return this.origin.copy(e), this.direction.copy(t), this;
      },
      clone: function () {
        return new this.constructor().copy(this);
      },
      copy: function (e) {
        return (
          this.origin.copy(e.origin), this.direction.copy(e.direction), this
        );
      },
      at: function (e, t) {
        return (
          void 0,
          void 0 === t && (t = new xn()),
          t.copy(this.direction).multiplyScalar(e).add(this.origin)
        );
      },
      lookAt: function (e) {
        return this.direction.copy(e).sub(this.origin).normalize(), this;
      },
      recast: function (e) {
        return this.origin.copy(this.at(e, fi)), this;
      },
      closestPointToPoint: function (e, t) {
        void 0, void 0 === t && (t = new xn()), t.subVectors(e, this.origin);
        var n = t.dot(this.direction);
        return n < 0
          ? t.copy(this.origin)
          : t.copy(this.direction).multiplyScalar(n).add(this.origin);
      },
      distanceToPoint: function (e) {
        return Math.sqrt(this.distanceSqToPoint(e));
      },
      distanceSqToPoint: function (e) {
        var t = fi.subVectors(e, this.origin).dot(this.direction);
        return t < 0
          ? this.origin.distanceToSquared(e)
          : (fi.copy(this.direction).multiplyScalar(t).add(this.origin),
            fi.distanceToSquared(e));
      },
      distanceSqToSegment: function (e, t, n, i) {
        _i.copy(e).add(t).multiplyScalar(0.5),
          Mi.copy(t).sub(e).normalize(),
          vi.copy(this.origin).sub(_i);
        var r,
          a,
          o,
          s,
          c = 0.5 * e.distanceTo(t),
          u = -this.direction.dot(Mi),
          l = vi.dot(this.direction),
          d = -vi.dot(Mi),
          h = vi.lengthSq(),
          p = Math.abs(1 - u * u);
        if (p > 0)
          if (((r = u * d - l), (a = u * l - d), (s = c * p), r >= 0))
            if (a >= -s)
              if (a <= s) {
                var m = 1 / p;
                (r *= m),
                  (a *= m),
                  (o = r * (r + u * a + 2 * l) + a * (u * r + a + 2 * d) + h);
              } else
                (a = c),
                  (r = Math.max(0, -(u * a + l))),
                  (o = -r * r + a * (a + 2 * d) + h);
            else
              (a = -c),
                (r = Math.max(0, -(u * a + l))),
                (o = -r * r + a * (a + 2 * d) + h);
          else
            a <= -s
              ? ((r = Math.max(0, -(-u * c + l))),
                (a = r > 0 ? -c : Math.min(Math.max(-c, -d), c)),
                (o = -r * r + a * (a + 2 * d) + h))
              : a <= s
              ? ((r = 0),
                (a = Math.min(Math.max(-c, -d), c)),
                (o = a * (a + 2 * d) + h))
              : ((r = Math.max(0, -(u * c + l))),
                (a = r > 0 ? c : Math.min(Math.max(-c, -d), c)),
                (o = -r * r + a * (a + 2 * d) + h));
        else
          (a = u > 0 ? -c : c),
            (r = Math.max(0, -(u * a + l))),
            (o = -r * r + a * (a + 2 * d) + h);
        return (
          n && n.copy(this.direction).multiplyScalar(r).add(this.origin),
          i && i.copy(Mi).multiplyScalar(a).add(_i),
          o
        );
      },
      intersectSphere: function (e, t) {
        fi.subVectors(e.center, this.origin);
        var n = fi.dot(this.direction),
          i = fi.dot(fi) - n * n,
          r = e.radius * e.radius;
        if (i > r) return null;
        var a = Math.sqrt(r - i),
          o = n - a,
          s = n + a;
        return o < 0 && s < 0 ? null : o < 0 ? this.at(s, t) : this.at(o, t);
      },
      intersectsSphere: function (e) {
        return this.distanceSqToPoint(e.center) <= e.radius * e.radius;
      },
      distanceToPlane: function (e) {
        var t = e.normal.dot(this.direction);
        if (0 === t) return 0 === e.distanceToPoint(this.origin) ? 0 : null;
        var n = -(this.origin.dot(e.normal) + e.constant) / t;
        return n >= 0 ? n : null;
      },
      intersectPlane: function (e, t) {
        var n = this.distanceToPlane(e);
        return null === n ? null : this.at(n, t);
      },
      intersectsPlane: function (e) {
        var t = e.distanceToPoint(this.origin);
        if (0 === t) return !0;
        var n = e.normal.dot(this.direction);
        return n * t < 0;
      },
      intersectBox: function (e, t) {
        var n,
          i,
          r,
          a,
          o,
          s,
          c = 1 / this.direction.x,
          u = 1 / this.direction.y,
          l = 1 / this.direction.z,
          d = this.origin;
        return (
          c >= 0
            ? ((n = (e.min.x - d.x) * c), (i = (e.max.x - d.x) * c))
            : ((n = (e.max.x - d.x) * c), (i = (e.min.x - d.x) * c)),
          u >= 0
            ? ((r = (e.min.y - d.y) * u), (a = (e.max.y - d.y) * u))
            : ((r = (e.max.y - d.y) * u), (a = (e.min.y - d.y) * u)),
          n > a || r > i
            ? null
            : ((r > n || n !== n) && (n = r),
              (a < i || i !== i) && (i = a),
              l >= 0
                ? ((o = (e.min.z - d.z) * l), (s = (e.max.z - d.z) * l))
                : ((o = (e.max.z - d.z) * l), (s = (e.min.z - d.z) * l)),
              n > s || o > i
                ? null
                : ((o > n || n !== n) && (n = o),
                  (s < i || i !== i) && (i = s),
                  i < 0 ? null : this.at(n >= 0 ? n : i, t)))
        );
      },
      intersectsBox: function (e) {
        return null !== this.intersectBox(e, fi);
      },
      intersectTriangle: function (e, t, n, i, r) {
        gi.subVectors(t, e), yi.subVectors(n, e), bi.crossVectors(gi, yi);
        var a,
          o = this.direction.dot(bi);
        if (o > 0) {
          if (i) return null;
          a = 1;
        } else {
          if (!(o < 0)) return null;
          (a = -1), (o = -o);
        }
        vi.subVectors(this.origin, e);
        var s = a * this.direction.dot(yi.crossVectors(vi, yi));
        if (s < 0) return null;
        var c = a * this.direction.dot(gi.cross(vi));
        if (c < 0) return null;
        if (s + c > o) return null;
        var u = -a * vi.dot(bi);
        return u < 0 ? null : this.at(u / o, r);
      },
      applyMatrix4: function (e) {
        return (
          this.origin.applyMatrix4(e),
          this.direction.transformDirection(e),
          this
        );
      },
      equals: function (e) {
        return (
          e.origin.equals(this.origin) && e.direction.equals(this.direction)
        );
      },
    });
    var Ai = new xn(),
      xi = new xn(),
      Li = new mn();
    function Ti(e, t) {
      (this.normal = void 0 !== e ? e : new xn(1, 0, 0)),
        (this.constant = void 0 !== t ? t : 0);
    }
    Object.assign(Ti.prototype, {
      isPlane: !0,
      set: function (e, t) {
        return this.normal.copy(e), (this.constant = t), this;
      },
      setComponents: function (e, t, n, i) {
        return this.normal.set(e, t, n), (this.constant = i), this;
      },
      setFromNormalAndCoplanarPoint: function (e, t) {
        return this.normal.copy(e), (this.constant = -t.dot(this.normal)), this;
      },
      setFromCoplanarPoints: function (e, t, n) {
        var i = Ai.subVectors(n, t).cross(xi.subVectors(e, t)).normalize();
        return this.setFromNormalAndCoplanarPoint(i, e), this;
      },
      clone: function () {
        return new this.constructor().copy(this);
      },
      copy: function (e) {
        return this.normal.copy(e.normal), (this.constant = e.constant), this;
      },
      normalize: function () {
        var e = 1 / this.normal.length();
        return this.normal.multiplyScalar(e), (this.constant *= e), this;
      },
      negate: function () {
        return (this.constant *= -1), this.normal.negate(), this;
      },
      distanceToPoint: function (e) {
        return this.normal.dot(e) + this.constant;
      },
      distanceToSphere: function (e) {
        return this.distanceToPoint(e.center) - e.radius;
      },
      projectPoint: function (e, t) {
        return (
          void 0,
          void 0 === t && (t = new xn()),
          t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)
        );
      },
      intersectLine: function (e, t) {
        void 0, void 0 === t && (t = new xn());
        var n = e.delta(Ai),
          i = this.normal.dot(n);
        if (0 === i)
          return 0 === this.distanceToPoint(e.start) ? t.copy(e.start) : void 0;
        var r = -(e.start.dot(this.normal) + this.constant) / i;
        return r < 0 || r > 1
          ? void 0
          : t.copy(n).multiplyScalar(r).add(e.start);
      },
      intersectsLine: function (e) {
        var t = this.distanceToPoint(e.start),
          n = this.distanceToPoint(e.end);
        return (t < 0 && n > 0) || (n < 0 && t > 0);
      },
      intersectsBox: function (e) {
        return e.intersectsPlane(this);
      },
      intersectsSphere: function (e) {
        return e.intersectsPlane(this);
      },
      coplanarPoint: function (e) {
        return (
          void 0,
          void 0 === e && (e = new xn()),
          e.copy(this.normal).multiplyScalar(-this.constant)
        );
      },
      applyMatrix4: function (e, t) {
        var n = t || Li.getNormalMatrix(e),
          i = this.coplanarPoint(Ai).applyMatrix4(e),
          r = this.normal.applyMatrix3(n).normalize();
        return (this.constant = -i.dot(r)), this;
      },
      translate: function (e) {
        return (this.constant -= e.dot(this.normal)), this;
      },
      equals: function (e) {
        return e.normal.equals(this.normal) && e.constant === this.constant;
      },
    });
    var zi = new xn(),
      Si = new xn(),
      Oi = new xn(),
      Ei = new xn(),
      ki = new xn(),
      Ci = new xn(),
      Di = new xn(),
      Ni = new xn(),
      Pi = new xn(),
      ji = new xn();
    function Yi(e, t, n) {
      (this.a = void 0 !== e ? e : new xn()),
        (this.b = void 0 !== t ? t : new xn()),
        (this.c = void 0 !== n ? n : new xn());
    }
    Object.assign(Yi, {
      getNormal: function (e, t, n, i) {
        void 0,
          void 0 === i && (i = new xn()),
          i.subVectors(n, t),
          zi.subVectors(e, t),
          i.cross(zi);
        var r = i.lengthSq();
        return r > 0 ? i.multiplyScalar(1 / Math.sqrt(r)) : i.set(0, 0, 0);
      },
      getBarycoord: function (e, t, n, i, r) {
        zi.subVectors(i, t), Si.subVectors(n, t), Oi.subVectors(e, t);
        var a = zi.dot(zi),
          o = zi.dot(Si),
          s = zi.dot(Oi),
          c = Si.dot(Si),
          u = Si.dot(Oi),
          l = a * c - o * o;
        if ((void 0, void 0 === r && (r = new xn()), 0 === l))
          return r.set(-2, -1, -1);
        var d = 1 / l,
          h = (c * s - o * u) * d,
          p = (a * u - o * s) * d;
        return r.set(1 - h - p, p, h);
      },
      containsPoint: function (e, t, n, i) {
        return (
          Yi.getBarycoord(e, t, n, i, Ei),
          Ei.x >= 0 && Ei.y >= 0 && Ei.x + Ei.y <= 1
        );
      },
      getUV: function (e, t, n, i, r, a, o, s) {
        return (
          this.getBarycoord(e, t, n, i, Ei),
          s.set(0, 0),
          s.addScaledVector(r, Ei.x),
          s.addScaledVector(a, Ei.y),
          s.addScaledVector(o, Ei.z),
          s
        );
      },
      isFrontFacing: function (e, t, n, i) {
        return (
          zi.subVectors(n, t), Si.subVectors(e, t), zi.cross(Si).dot(i) < 0
        );
      },
    }),
      Object.assign(Yi.prototype, {
        set: function (e, t, n) {
          return this.a.copy(e), this.b.copy(t), this.c.copy(n), this;
        },
        setFromPointsAndIndices: function (e, t, n, i) {
          return this.a.copy(e[t]), this.b.copy(e[n]), this.c.copy(e[i]), this;
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this;
        },
        getArea: function () {
          return (
            zi.subVectors(this.c, this.b),
            Si.subVectors(this.a, this.b),
            0.5 * zi.cross(Si).length()
          );
        },
        getMidpoint: function (e) {
          return (
            void 0,
            void 0 === e && (e = new xn()),
            e
              .addVectors(this.a, this.b)
              .add(this.c)
              .multiplyScalar(1 / 3)
          );
        },
        getNormal: function (e) {
          return Yi.getNormal(this.a, this.b, this.c, e);
        },
        getPlane: function (e) {
          return (
            void 0,
            void 0 === e && (e = new Ti()),
            e.setFromCoplanarPoints(this.a, this.b, this.c)
          );
        },
        getBarycoord: function (e, t) {
          return Yi.getBarycoord(e, this.a, this.b, this.c, t);
        },
        getUV: function (e, t, n, i, r) {
          return Yi.getUV(e, this.a, this.b, this.c, t, n, i, r);
        },
        containsPoint: function (e) {
          return Yi.containsPoint(e, this.a, this.b, this.c);
        },
        isFrontFacing: function (e) {
          return Yi.isFrontFacing(this.a, this.b, this.c, e);
        },
        intersectsBox: function (e) {
          return e.intersectsTriangle(this);
        },
        closestPointToPoint: function (e, t) {
          void 0, void 0 === t && (t = new xn());
          var n,
            i,
            r = this.a,
            a = this.b,
            o = this.c;
          ki.subVectors(a, r), Ci.subVectors(o, r), Ni.subVectors(e, r);
          var s = ki.dot(Ni),
            c = Ci.dot(Ni);
          if (s <= 0 && c <= 0) return t.copy(r);
          Pi.subVectors(e, a);
          var u = ki.dot(Pi),
            l = Ci.dot(Pi);
          if (u >= 0 && l <= u) return t.copy(a);
          var d = s * l - u * c;
          if (d <= 0 && s >= 0 && u <= 0)
            return (n = s / (s - u)), t.copy(r).addScaledVector(ki, n);
          ji.subVectors(e, o);
          var h = ki.dot(ji),
            p = Ci.dot(ji);
          if (p >= 0 && h <= p) return t.copy(o);
          var m = h * c - s * p;
          if (m <= 0 && c >= 0 && p <= 0)
            return (i = c / (c - p)), t.copy(r).addScaledVector(Ci, i);
          var f = u * p - h * l;
          if (f <= 0 && l - u >= 0 && h - p >= 0)
            return (
              Di.subVectors(o, a),
              (i = (l - u) / (l - u + (h - p))),
              t.copy(a).addScaledVector(Di, i)
            );
          var _ = 1 / (f + m + d);
          return (
            (n = m * _),
            (i = d * _),
            t.copy(r).addScaledVector(ki, n).addScaledVector(Ci, i)
          );
        },
        equals: function (e) {
          return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c);
        },
      });
    var Ri = {
        aliceblue: 15792383,
        antiquewhite: 16444375,
        aqua: 65535,
        aquamarine: 8388564,
        azure: 15794175,
        beige: 16119260,
        bisque: 16770244,
        black: 0,
        blanchedalmond: 16772045,
        blue: 255,
        blueviolet: 9055202,
        brown: 10824234,
        burlywood: 14596231,
        cadetblue: 6266528,
        chartreuse: 8388352,
        chocolate: 13789470,
        coral: 16744272,
        cornflowerblue: 6591981,
        cornsilk: 16775388,
        crimson: 14423100,
        cyan: 65535,
        darkblue: 139,
        darkcyan: 35723,
        darkgoldenrod: 12092939,
        darkgray: 11119017,
        darkgreen: 25600,
        darkgrey: 11119017,
        darkkhaki: 12433259,
        darkmagenta: 9109643,
        darkolivegreen: 5597999,
        darkorange: 16747520,
        darkorchid: 10040012,
        darkred: 9109504,
        darksalmon: 15308410,
        darkseagreen: 9419919,
        darkslateblue: 4734347,
        darkslategray: 3100495,
        darkslategrey: 3100495,
        darkturquoise: 52945,
        darkviolet: 9699539,
        deeppink: 16716947,
        deepskyblue: 49151,
        dimgray: 6908265,
        dimgrey: 6908265,
        dodgerblue: 2003199,
        firebrick: 11674146,
        floralwhite: 16775920,
        forestgreen: 2263842,
        fuchsia: 16711935,
        gainsboro: 14474460,
        ghostwhite: 16316671,
        gold: 16766720,
        goldenrod: 14329120,
        gray: 8421504,
        green: 32768,
        greenyellow: 11403055,
        grey: 8421504,
        honeydew: 15794160,
        hotpink: 16738740,
        indianred: 13458524,
        indigo: 4915330,
        ivory: 16777200,
        khaki: 15787660,
        lavender: 15132410,
        lavenderblush: 16773365,
        lawngreen: 8190976,
        lemonchiffon: 16775885,
        lightblue: 11393254,
        lightcoral: 15761536,
        lightcyan: 14745599,
        lightgoldenrodyellow: 16448210,
        lightgray: 13882323,
        lightgreen: 9498256,
        lightgrey: 13882323,
        lightpink: 16758465,
        lightsalmon: 16752762,
        lightseagreen: 2142890,
        lightskyblue: 8900346,
        lightslategray: 7833753,
        lightslategrey: 7833753,
        lightsteelblue: 11584734,
        lightyellow: 16777184,
        lime: 65280,
        limegreen: 3329330,
        linen: 16445670,
        magenta: 16711935,
        maroon: 8388608,
        mediumaquamarine: 6737322,
        mediumblue: 205,
        mediumorchid: 12211667,
        mediumpurple: 9662683,
        mediumseagreen: 3978097,
        mediumslateblue: 8087790,
        mediumspringgreen: 64154,
        mediumturquoise: 4772300,
        mediumvioletred: 13047173,
        midnightblue: 1644912,
        mintcream: 16121850,
        mistyrose: 16770273,
        moccasin: 16770229,
        navajowhite: 16768685,
        navy: 128,
        oldlace: 16643558,
        olive: 8421376,
        olivedrab: 7048739,
        orange: 16753920,
        orangered: 16729344,
        orchid: 14315734,
        palegoldenrod: 15657130,
        palegreen: 10025880,
        paleturquoise: 11529966,
        palevioletred: 14381203,
        papayawhip: 16773077,
        peachpuff: 16767673,
        peru: 13468991,
        pink: 16761035,
        plum: 14524637,
        powderblue: 11591910,
        purple: 8388736,
        rebeccapurple: 6697881,
        red: 16711680,
        rosybrown: 12357519,
        royalblue: 4286945,
        saddlebrown: 9127187,
        salmon: 16416882,
        sandybrown: 16032864,
        seagreen: 3050327,
        seashell: 16774638,
        sienna: 10506797,
        silver: 12632256,
        skyblue: 8900331,
        slateblue: 6970061,
        slategray: 7372944,
        slategrey: 7372944,
        snow: 16775930,
        springgreen: 65407,
        steelblue: 4620980,
        tan: 13808780,
        teal: 32896,
        thistle: 14204888,
        tomato: 16737095,
        turquoise: 4251856,
        violet: 15631086,
        wheat: 16113331,
        white: 16777215,
        whitesmoke: 16119285,
        yellow: 16776960,
        yellowgreen: 10145074,
      },
      Bi = { h: 0, s: 0, l: 0 },
      Wi = { h: 0, s: 0, l: 0 };
    function Ii(e, t, n) {
      return void 0 === t && void 0 === n ? this.set(e) : this.setRGB(e, t, n);
    }
    function qi(e, t, n) {
      return (
        n < 0 && (n += 1),
        n > 1 && (n -= 1),
        n < 1 / 6
          ? e + 6 * (t - e) * n
          : n < 1 / 2
          ? t
          : n < 2 / 3
          ? e + 6 * (t - e) * (2 / 3 - n)
          : e
      );
    }
    function Hi(e) {
      return e < 0.04045
        ? 0.0773993808 * e
        : Math.pow(0.9478672986 * e + 0.0521327014, 2.4);
    }
    function Fi(e) {
      return e < 0.0031308 ? 12.92 * e : 1.055 * Math.pow(e, 0.41666) - 0.055;
    }
    function Ui(e, t, n, i, r, a) {
      (this.a = e),
        (this.b = t),
        (this.c = n),
        (this.normal = i && i.isVector3 ? i : new xn()),
        (this.vertexNormals = Array.isArray(i) ? i : []),
        (this.color = r && r.isColor ? r : new Ii()),
        (this.vertexColors = Array.isArray(r) ? r : []),
        (this.materialIndex = void 0 !== a ? a : 0);
    }
    Object.assign(Ii.prototype, {
      isColor: !0,
      r: 1,
      g: 1,
      b: 1,
      set: function (e) {
        return (
          e && e.isColor
            ? this.copy(e)
            : 'number' === typeof e
            ? this.setHex(e)
            : 'string' === typeof e && this.setStyle(e),
          this
        );
      },
      setScalar: function (e) {
        return (this.r = e), (this.g = e), (this.b = e), this;
      },
      setHex: function (e) {
        return (
          (e = Math.floor(e)),
          (this.r = ((e >> 16) & 255) / 255),
          (this.g = ((e >> 8) & 255) / 255),
          (this.b = (255 & e) / 255),
          this
        );
      },
      setRGB: function (e, t, n) {
        return (this.r = e), (this.g = t), (this.b = n), this;
      },
      setHSL: function (e, t, n) {
        if (
          ((e = hn.euclideanModulo(e, 1)),
          (t = hn.clamp(t, 0, 1)),
          (n = hn.clamp(n, 0, 1)),
          0 === t)
        )
          this.r = this.g = this.b = n;
        else {
          var i = n <= 0.5 ? n * (1 + t) : n + t - n * t,
            r = 2 * n - i;
          (this.r = qi(r, i, e + 1 / 3)),
            (this.g = qi(r, i, e)),
            (this.b = qi(r, i, e - 1 / 3));
        }
        return this;
      },
      setStyle: function (e) {
        function t(e) {
          void 0 !== e && parseFloat(e) < 1 && void 0;
        }
        var n;
        if ((n = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e))) {
          var i,
            r = n[1],
            a = n[2];
          switch (r) {
            case 'rgb':
            case 'rgba':
              if (
                (i = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(
                  a
                ))
              )
                return (
                  (this.r = Math.min(255, parseInt(i[1], 10)) / 255),
                  (this.g = Math.min(255, parseInt(i[2], 10)) / 255),
                  (this.b = Math.min(255, parseInt(i[3], 10)) / 255),
                  t(i[5]),
                  this
                );
              if (
                (i = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(
                  a
                ))
              )
                return (
                  (this.r = Math.min(100, parseInt(i[1], 10)) / 100),
                  (this.g = Math.min(100, parseInt(i[2], 10)) / 100),
                  (this.b = Math.min(100, parseInt(i[3], 10)) / 100),
                  t(i[5]),
                  this
                );
              break;
            case 'hsl':
            case 'hsla':
              if (
                (i = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(
                  a
                ))
              ) {
                var o = parseFloat(i[1]) / 360,
                  s = parseInt(i[2], 10) / 100,
                  c = parseInt(i[3], 10) / 100;
                return t(i[5]), this.setHSL(o, s, c);
              }
              break;
          }
        } else if ((n = /^\#([A-Fa-f0-9]+)$/.exec(e))) {
          var u = n[1],
            l = u.length;
          if (3 === l)
            return (
              (this.r = parseInt(u.charAt(0) + u.charAt(0), 16) / 255),
              (this.g = parseInt(u.charAt(1) + u.charAt(1), 16) / 255),
              (this.b = parseInt(u.charAt(2) + u.charAt(2), 16) / 255),
              this
            );
          if (6 === l)
            return (
              (this.r = parseInt(u.charAt(0) + u.charAt(1), 16) / 255),
              (this.g = parseInt(u.charAt(2) + u.charAt(3), 16) / 255),
              (this.b = parseInt(u.charAt(4) + u.charAt(5), 16) / 255),
              this
            );
        }
        return e && e.length > 0 ? this.setColorName(e) : this;
      },
      setColorName: function (e) {
        var t = Ri[e];
        return void 0 !== t ? this.setHex(t) : void 0, this;
      },
      clone: function () {
        return new this.constructor(this.r, this.g, this.b);
      },
      copy: function (e) {
        return (this.r = e.r), (this.g = e.g), (this.b = e.b), this;
      },
      copyGammaToLinear: function (e, t) {
        return (
          void 0 === t && (t = 2),
          (this.r = Math.pow(e.r, t)),
          (this.g = Math.pow(e.g, t)),
          (this.b = Math.pow(e.b, t)),
          this
        );
      },
      copyLinearToGamma: function (e, t) {
        void 0 === t && (t = 2);
        var n = t > 0 ? 1 / t : 1;
        return (
          (this.r = Math.pow(e.r, n)),
          (this.g = Math.pow(e.g, n)),
          (this.b = Math.pow(e.b, n)),
          this
        );
      },
      convertGammaToLinear: function (e) {
        return this.copyGammaToLinear(this, e), this;
      },
      convertLinearToGamma: function (e) {
        return this.copyLinearToGamma(this, e), this;
      },
      copySRGBToLinear: function (e) {
        return (this.r = Hi(e.r)), (this.g = Hi(e.g)), (this.b = Hi(e.b)), this;
      },
      copyLinearToSRGB: function (e) {
        return (this.r = Fi(e.r)), (this.g = Fi(e.g)), (this.b = Fi(e.b)), this;
      },
      convertSRGBToLinear: function () {
        return this.copySRGBToLinear(this), this;
      },
      convertLinearToSRGB: function () {
        return this.copyLinearToSRGB(this), this;
      },
      getHex: function () {
        return (
          ((255 * this.r) << 16) ^ ((255 * this.g) << 8) ^ ((255 * this.b) << 0)
        );
      },
      getHexString: function () {
        return ('000000' + this.getHex().toString(16)).slice(-6);
      },
      getHSL: function (e) {
        void 0, void 0 === e && (e = { h: 0, s: 0, l: 0 });
        var t,
          n,
          i = this.r,
          r = this.g,
          a = this.b,
          o = Math.max(i, r, a),
          s = Math.min(i, r, a),
          c = (s + o) / 2;
        if (s === o) (t = 0), (n = 0);
        else {
          var u = o - s;
          switch (((n = c <= 0.5 ? u / (o + s) : u / (2 - o - s)), o)) {
            case i:
              t = (r - a) / u + (r < a ? 6 : 0);
              break;
            case r:
              t = (a - i) / u + 2;
              break;
            case a:
              t = (i - r) / u + 4;
              break;
          }
          t /= 6;
        }
        return (e.h = t), (e.s = n), (e.l = c), e;
      },
      getStyle: function () {
        return (
          'rgb(' +
          ((255 * this.r) | 0) +
          ',' +
          ((255 * this.g) | 0) +
          ',' +
          ((255 * this.b) | 0) +
          ')'
        );
      },
      offsetHSL: function (e, t, n) {
        return (
          this.getHSL(Bi),
          (Bi.h += e),
          (Bi.s += t),
          (Bi.l += n),
          this.setHSL(Bi.h, Bi.s, Bi.l),
          this
        );
      },
      add: function (e) {
        return (this.r += e.r), (this.g += e.g), (this.b += e.b), this;
      },
      addColors: function (e, t) {
        return (
          (this.r = e.r + t.r), (this.g = e.g + t.g), (this.b = e.b + t.b), this
        );
      },
      addScalar: function (e) {
        return (this.r += e), (this.g += e), (this.b += e), this;
      },
      sub: function (e) {
        return (
          (this.r = Math.max(0, this.r - e.r)),
          (this.g = Math.max(0, this.g - e.g)),
          (this.b = Math.max(0, this.b - e.b)),
          this
        );
      },
      multiply: function (e) {
        return (this.r *= e.r), (this.g *= e.g), (this.b *= e.b), this;
      },
      multiplyScalar: function (e) {
        return (this.r *= e), (this.g *= e), (this.b *= e), this;
      },
      lerp: function (e, t) {
        return (
          (this.r += (e.r - this.r) * t),
          (this.g += (e.g - this.g) * t),
          (this.b += (e.b - this.b) * t),
          this
        );
      },
      lerpHSL: function (e, t) {
        this.getHSL(Bi), e.getHSL(Wi);
        var n = hn.lerp(Bi.h, Wi.h, t),
          i = hn.lerp(Bi.s, Wi.s, t),
          r = hn.lerp(Bi.l, Wi.l, t);
        return this.setHSL(n, i, r), this;
      },
      equals: function (e) {
        return e.r === this.r && e.g === this.g && e.b === this.b;
      },
      fromArray: function (e, t) {
        return (
          void 0 === t && (t = 0),
          (this.r = e[t]),
          (this.g = e[t + 1]),
          (this.b = e[t + 2]),
          this
        );
      },
      toArray: function (e, t) {
        return (
          void 0 === e && (e = []),
          void 0 === t && (t = 0),
          (e[t] = this.r),
          (e[t + 1] = this.g),
          (e[t + 2] = this.b),
          e
        );
      },
      toJSON: function () {
        return this.getHex();
      },
    }),
      (Ii.NAMES = Ri),
      Object.assign(Ui.prototype, {
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          (this.a = e.a),
            (this.b = e.b),
            (this.c = e.c),
            this.normal.copy(e.normal),
            this.color.copy(e.color),
            (this.materialIndex = e.materialIndex);
          for (var t = 0, n = e.vertexNormals.length; t < n; t++)
            this.vertexNormals[t] = e.vertexNormals[t].clone();
          for (t = 0, n = e.vertexColors.length; t < n; t++)
            this.vertexColors[t] = e.vertexColors[t].clone();
          return this;
        },
      });
    var Xi = 0;
    function Vi() {
      Object.defineProperty(this, 'id', { value: Xi++ }),
        (this.uuid = hn.generateUUID()),
        (this.name = ''),
        (this.type = 'Material'),
        (this.fog = !0),
        (this.blending = M),
        (this.side = h),
        (this.flatShading = !1),
        (this.vertexColors = !1),
        (this.opacity = 1),
        (this.transparent = !1),
        (this.blendSrc = k),
        (this.blendDst = C),
        (this.blendEquation = w),
        (this.blendSrcAlpha = null),
        (this.blendDstAlpha = null),
        (this.blendEquationAlpha = null),
        (this.depthFunc = I),
        (this.depthTest = !0),
        (this.depthWrite = !0),
        (this.stencilWriteMask = 255),
        (this.stencilFunc = an),
        (this.stencilRef = 0),
        (this.stencilFuncMask = 255),
        (this.stencilFail = rn),
        (this.stencilZFail = rn),
        (this.stencilZPass = rn),
        (this.stencilWrite = !1),
        (this.clippingPlanes = null),
        (this.clipIntersection = !1),
        (this.clipShadows = !1),
        (this.shadowSide = null),
        (this.colorWrite = !0),
        (this.precision = null),
        (this.polygonOffset = !1),
        (this.polygonOffsetFactor = 0),
        (this.polygonOffsetUnits = 0),
        (this.dithering = !1),
        (this.alphaTest = 0),
        (this.premultipliedAlpha = !1),
        (this.visible = !0),
        (this.toneMapped = !0),
        (this.userData = {}),
        (this.version = 0);
    }
    function Gi(e) {
      Vi.call(this),
        (this.type = 'MeshBasicMaterial'),
        (this.color = new Ii(16777215)),
        (this.map = null),
        (this.lightMap = null),
        (this.lightMapIntensity = 1),
        (this.aoMap = null),
        (this.aoMapIntensity = 1),
        (this.specularMap = null),
        (this.alphaMap = null),
        (this.envMap = null),
        (this.combine = X),
        (this.reflectivity = 1),
        (this.refractionRatio = 0.98),
        (this.wireframe = !1),
        (this.wireframeLinewidth = 1),
        (this.wireframeLinecap = 'round'),
        (this.wireframeLinejoin = 'round'),
        (this.skinning = !1),
        (this.morphTargets = !1),
        this.setValues(e);
    }
    (Vi.prototype = Object.assign(Object.create(cn.prototype), {
      constructor: Vi,
      isMaterial: !0,
      onBeforeCompile: function () {},
      setValues: function (e) {
        if (void 0 !== e)
          for (var t in e) {
            var n = e[t];
            if (void 0 !== n)
              if ('shading' !== t) {
                var i = this[t];
                void 0 !== i
                  ? i && i.isColor
                    ? i.set(n)
                    : i && i.isVector3 && n && n.isVector3
                    ? i.copy(n)
                    : (this[t] = n)
                  : void 0;
              } else void 0, (this.flatShading = n === f);
            else void 0;
          }
      },
      toJSON: function (e) {
        var t = void 0 === e || 'string' === typeof e;
        t && (e = { textures: {}, images: {} });
        var n = {
          metadata: {
            version: 4.5,
            type: 'Material',
            generator: 'Material.toJSON',
          },
        };
        function i(e) {
          var t = [];
          for (var n in e) {
            var i = e[n];
            delete i.metadata, t.push(i);
          }
          return t;
        }
        if (
          ((n.uuid = this.uuid),
          (n.type = this.type),
          '' !== this.name && (n.name = this.name),
          this.color && this.color.isColor && (n.color = this.color.getHex()),
          void 0 !== this.roughness && (n.roughness = this.roughness),
          void 0 !== this.metalness && (n.metalness = this.metalness),
          this.sheen && this.sheen.isColor && (n.sheen = this.sheen.getHex()),
          this.emissive &&
            this.emissive.isColor &&
            (n.emissive = this.emissive.getHex()),
          this.emissiveIntensity &&
            1 !== this.emissiveIntensity &&
            (n.emissiveIntensity = this.emissiveIntensity),
          this.specular &&
            this.specular.isColor &&
            (n.specular = this.specular.getHex()),
          void 0 !== this.shininess && (n.shininess = this.shininess),
          void 0 !== this.clearcoat && (n.clearcoat = this.clearcoat),
          void 0 !== this.clearcoatRoughness &&
            (n.clearcoatRoughness = this.clearcoatRoughness),
          this.clearcoatMap &&
            this.clearcoatMap.isTexture &&
            (n.clearcoatMap = this.clearcoatMap.toJSON(e).uuid),
          this.clearcoatRoughnessMap &&
            this.clearcoatRoughnessMap.isTexture &&
            (n.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(
              e
            ).uuid),
          this.clearcoatNormalMap &&
            this.clearcoatNormalMap.isTexture &&
            ((n.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid),
            (n.clearcoatNormalScale = this.clearcoatNormalScale.toArray())),
          this.map && this.map.isTexture && (n.map = this.map.toJSON(e).uuid),
          this.matcap &&
            this.matcap.isTexture &&
            (n.matcap = this.matcap.toJSON(e).uuid),
          this.alphaMap &&
            this.alphaMap.isTexture &&
            (n.alphaMap = this.alphaMap.toJSON(e).uuid),
          this.lightMap &&
            this.lightMap.isTexture &&
            (n.lightMap = this.lightMap.toJSON(e).uuid),
          this.aoMap &&
            this.aoMap.isTexture &&
            ((n.aoMap = this.aoMap.toJSON(e).uuid),
            (n.aoMapIntensity = this.aoMapIntensity)),
          this.bumpMap &&
            this.bumpMap.isTexture &&
            ((n.bumpMap = this.bumpMap.toJSON(e).uuid),
            (n.bumpScale = this.bumpScale)),
          this.normalMap &&
            this.normalMap.isTexture &&
            ((n.normalMap = this.normalMap.toJSON(e).uuid),
            (n.normalMapType = this.normalMapType),
            (n.normalScale = this.normalScale.toArray())),
          this.displacementMap &&
            this.displacementMap.isTexture &&
            ((n.displacementMap = this.displacementMap.toJSON(e).uuid),
            (n.displacementScale = this.displacementScale),
            (n.displacementBias = this.displacementBias)),
          this.roughnessMap &&
            this.roughnessMap.isTexture &&
            (n.roughnessMap = this.roughnessMap.toJSON(e).uuid),
          this.metalnessMap &&
            this.metalnessMap.isTexture &&
            (n.metalnessMap = this.metalnessMap.toJSON(e).uuid),
          this.emissiveMap &&
            this.emissiveMap.isTexture &&
            (n.emissiveMap = this.emissiveMap.toJSON(e).uuid),
          this.specularMap &&
            this.specularMap.isTexture &&
            (n.specularMap = this.specularMap.toJSON(e).uuid),
          this.envMap &&
            this.envMap.isTexture &&
            ((n.envMap = this.envMap.toJSON(e).uuid),
            (n.reflectivity = this.reflectivity),
            (n.refractionRatio = this.refractionRatio),
            void 0 !== this.combine && (n.combine = this.combine),
            void 0 !== this.envMapIntensity &&
              (n.envMapIntensity = this.envMapIntensity)),
          this.gradientMap &&
            this.gradientMap.isTexture &&
            (n.gradientMap = this.gradientMap.toJSON(e).uuid),
          void 0 !== this.size && (n.size = this.size),
          void 0 !== this.sizeAttenuation &&
            (n.sizeAttenuation = this.sizeAttenuation),
          this.blending !== M && (n.blending = this.blending),
          !0 === this.flatShading && (n.flatShading = this.flatShading),
          this.side !== h && (n.side = this.side),
          this.vertexColors && (n.vertexColors = !0),
          this.opacity < 1 && (n.opacity = this.opacity),
          !0 === this.transparent && (n.transparent = this.transparent),
          (n.depthFunc = this.depthFunc),
          (n.depthTest = this.depthTest),
          (n.depthWrite = this.depthWrite),
          (n.stencilWrite = this.stencilWrite),
          (n.stencilWriteMask = this.stencilWriteMask),
          (n.stencilFunc = this.stencilFunc),
          (n.stencilRef = this.stencilRef),
          (n.stencilFuncMask = this.stencilFuncMask),
          (n.stencilFail = this.stencilFail),
          (n.stencilZFail = this.stencilZFail),
          (n.stencilZPass = this.stencilZPass),
          this.rotation && 0 !== this.rotation && (n.rotation = this.rotation),
          !0 === this.polygonOffset && (n.polygonOffset = !0),
          0 !== this.polygonOffsetFactor &&
            (n.polygonOffsetFactor = this.polygonOffsetFactor),
          0 !== this.polygonOffsetUnits &&
            (n.polygonOffsetUnits = this.polygonOffsetUnits),
          this.linewidth &&
            1 !== this.linewidth &&
            (n.linewidth = this.linewidth),
          void 0 !== this.dashSize && (n.dashSize = this.dashSize),
          void 0 !== this.gapSize && (n.gapSize = this.gapSize),
          void 0 !== this.scale && (n.scale = this.scale),
          !0 === this.dithering && (n.dithering = !0),
          this.alphaTest > 0 && (n.alphaTest = this.alphaTest),
          !0 === this.premultipliedAlpha &&
            (n.premultipliedAlpha = this.premultipliedAlpha),
          !0 === this.wireframe && (n.wireframe = this.wireframe),
          this.wireframeLinewidth > 1 &&
            (n.wireframeLinewidth = this.wireframeLinewidth),
          'round' !== this.wireframeLinecap &&
            (n.wireframeLinecap = this.wireframeLinecap),
          'round' !== this.wireframeLinejoin &&
            (n.wireframeLinejoin = this.wireframeLinejoin),
          !0 === this.morphTargets && (n.morphTargets = !0),
          !0 === this.morphNormals && (n.morphNormals = !0),
          !0 === this.skinning && (n.skinning = !0),
          !1 === this.visible && (n.visible = !1),
          !1 === this.toneMapped && (n.toneMapped = !1),
          '{}' !== JSON.stringify(this.userData) &&
            (n.userData = this.userData),
          t)
        ) {
          var r = i(e.textures),
            a = i(e.images);
          r.length > 0 && (n.textures = r), a.length > 0 && (n.images = a);
        }
        return n;
      },
      clone: function () {
        return new this.constructor().copy(this);
      },
      copy: function (e) {
        (this.name = e.name),
          (this.fog = e.fog),
          (this.blending = e.blending),
          (this.side = e.side),
          (this.flatShading = e.flatShading),
          (this.vertexColors = e.vertexColors),
          (this.opacity = e.opacity),
          (this.transparent = e.transparent),
          (this.blendSrc = e.blendSrc),
          (this.blendDst = e.blendDst),
          (this.blendEquation = e.blendEquation),
          (this.blendSrcAlpha = e.blendSrcAlpha),
          (this.blendDstAlpha = e.blendDstAlpha),
          (this.blendEquationAlpha = e.blendEquationAlpha),
          (this.depthFunc = e.depthFunc),
          (this.depthTest = e.depthTest),
          (this.depthWrite = e.depthWrite),
          (this.stencilWriteMask = e.stencilWriteMask),
          (this.stencilFunc = e.stencilFunc),
          (this.stencilRef = e.stencilRef),
          (this.stencilFuncMask = e.stencilFuncMask),
          (this.stencilFail = e.stencilFail),
          (this.stencilZFail = e.stencilZFail),
          (this.stencilZPass = e.stencilZPass),
          (this.stencilWrite = e.stencilWrite);
        var t = e.clippingPlanes,
          n = null;
        if (null !== t) {
          var i = t.length;
          n = new Array(i);
          for (var r = 0; r !== i; ++r) n[r] = t[r].clone();
        }
        return (
          (this.clippingPlanes = n),
          (this.clipIntersection = e.clipIntersection),
          (this.clipShadows = e.clipShadows),
          (this.shadowSide = e.shadowSide),
          (this.colorWrite = e.colorWrite),
          (this.precision = e.precision),
          (this.polygonOffset = e.polygonOffset),
          (this.polygonOffsetFactor = e.polygonOffsetFactor),
          (this.polygonOffsetUnits = e.polygonOffsetUnits),
          (this.dithering = e.dithering),
          (this.alphaTest = e.alphaTest),
          (this.premultipliedAlpha = e.premultipliedAlpha),
          (this.visible = e.visible),
          (this.toneMapped = e.toneMapped),
          (this.userData = JSON.parse(JSON.stringify(e.userData))),
          this
        );
      },
      dispose: function () {
        this.dispatchEvent({ type: 'dispose' });
      },
    })),
      Object.defineProperty(Vi.prototype, 'needsUpdate', {
        set: function (e) {
          !0 === e && this.version++;
        },
      }),
      (Gi.prototype = Object.create(Vi.prototype)),
      (Gi.prototype.constructor = Gi),
      (Gi.prototype.isMeshBasicMaterial = !0),
      (Gi.prototype.copy = function (e) {
        return (
          Vi.prototype.copy.call(this, e),
          this.color.copy(e.color),
          (this.map = e.map),
          (this.lightMap = e.lightMap),
          (this.lightMapIntensity = e.lightMapIntensity),
          (this.aoMap = e.aoMap),
          (this.aoMapIntensity = e.aoMapIntensity),
          (this.specularMap = e.specularMap),
          (this.alphaMap = e.alphaMap),
          (this.envMap = e.envMap),
          (this.combine = e.combine),
          (this.reflectivity = e.reflectivity),
          (this.refractionRatio = e.refractionRatio),
          (this.wireframe = e.wireframe),
          (this.wireframeLinewidth = e.wireframeLinewidth),
          (this.wireframeLinecap = e.wireframeLinecap),
          (this.wireframeLinejoin = e.wireframeLinejoin),
          (this.skinning = e.skinning),
          (this.morphTargets = e.morphTargets),
          this
        );
      });
    var Ji = new xn();
    function Zi(e, t, n) {
      if (Array.isArray(e))
        throw new TypeError(
          'THREE.BufferAttribute: array should be a Typed Array.'
        );
      (this.name = ''),
        (this.array = e),
        (this.itemSize = t),
        (this.count = void 0 !== e ? e.length / t : 0),
        (this.normalized = !0 === n),
        (this.usage = on),
        (this.updateRange = { offset: 0, count: -1 }),
        (this.version = 0);
    }
    function Ki(e, t, n) {
      Zi.call(this, new Int8Array(e), t, n);
    }
    function Qi(e, t, n) {
      Zi.call(this, new Uint8Array(e), t, n);
    }
    function $i(e, t, n) {
      Zi.call(this, new Uint8ClampedArray(e), t, n);
    }
    function er(e, t, n) {
      Zi.call(this, new Int16Array(e), t, n);
    }
    function tr(e, t, n) {
      Zi.call(this, new Uint16Array(e), t, n);
    }
    function nr(e, t, n) {
      Zi.call(this, new Int32Array(e), t, n);
    }
    function ir(e, t, n) {
      Zi.call(this, new Uint32Array(e), t, n);
    }
    function rr(e, t, n) {
      Zi.call(this, new Float32Array(e), t, n);
    }
    function ar(e, t, n) {
      Zi.call(this, new Float64Array(e), t, n);
    }
    function or() {
      (this.vertices = []),
        (this.normals = []),
        (this.colors = []),
        (this.uvs = []),
        (this.uvs2 = []),
        (this.groups = []),
        (this.morphTargets = {}),
        (this.skinWeights = []),
        (this.skinIndices = []),
        (this.boundingBox = null),
        (this.boundingSphere = null),
        (this.verticesNeedUpdate = !1),
        (this.normalsNeedUpdate = !1),
        (this.colorsNeedUpdate = !1),
        (this.uvsNeedUpdate = !1),
        (this.groupsNeedUpdate = !1);
    }
    function sr(e) {
      if (0 === e.length) return -1 / 0;
      for (var t = e[0], n = 1, i = e.length; n < i; ++n)
        e[n] > t && (t = e[n]);
      return t;
    }
    Object.defineProperty(Zi.prototype, 'needsUpdate', {
      set: function (e) {
        !0 === e && this.version++;
      },
    }),
      Object.assign(Zi.prototype, {
        isBufferAttribute: !0,
        onUploadCallback: function () {},
        setUsage: function (e) {
          return (this.usage = e), this;
        },
        copy: function (e) {
          return (
            (this.name = e.name),
            (this.array = new e.array.constructor(e.array)),
            (this.itemSize = e.itemSize),
            (this.count = e.count),
            (this.normalized = e.normalized),
            (this.usage = e.usage),
            this
          );
        },
        copyAt: function (e, t, n) {
          (e *= this.itemSize), (n *= t.itemSize);
          for (var i = 0, r = this.itemSize; i < r; i++)
            this.array[e + i] = t.array[n + i];
          return this;
        },
        copyArray: function (e) {
          return this.array.set(e), this;
        },
        copyColorsArray: function (e) {
          for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
            var a = e[i];
            void 0,
              void 0 === a && (a = new Ii()),
              (t[n++] = a.r),
              (t[n++] = a.g),
              (t[n++] = a.b);
          }
          return this;
        },
        copyVector2sArray: function (e) {
          for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
            var a = e[i];
            void 0,
              void 0 === a && (a = new pn()),
              (t[n++] = a.x),
              (t[n++] = a.y);
          }
          return this;
        },
        copyVector3sArray: function (e) {
          for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
            var a = e[i];
            void 0,
              void 0 === a && (a = new xn()),
              (t[n++] = a.x),
              (t[n++] = a.y),
              (t[n++] = a.z);
          }
          return this;
        },
        copyVector4sArray: function (e) {
          for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
            var a = e[i];
            void 0,
              void 0 === a && (a = new vn()),
              (t[n++] = a.x),
              (t[n++] = a.y),
              (t[n++] = a.z),
              (t[n++] = a.w);
          }
          return this;
        },
        applyMatrix3: function (e) {
          for (var t = 0, n = this.count; t < n; t++)
            (Ji.x = this.getX(t)),
              (Ji.y = this.getY(t)),
              (Ji.z = this.getZ(t)),
              Ji.applyMatrix3(e),
              this.setXYZ(t, Ji.x, Ji.y, Ji.z);
          return this;
        },
        applyMatrix4: function (e) {
          for (var t = 0, n = this.count; t < n; t++)
            (Ji.x = this.getX(t)),
              (Ji.y = this.getY(t)),
              (Ji.z = this.getZ(t)),
              Ji.applyMatrix4(e),
              this.setXYZ(t, Ji.x, Ji.y, Ji.z);
          return this;
        },
        applyNormalMatrix: function (e) {
          for (var t = 0, n = this.count; t < n; t++)
            (Ji.x = this.getX(t)),
              (Ji.y = this.getY(t)),
              (Ji.z = this.getZ(t)),
              Ji.applyNormalMatrix(e),
              this.setXYZ(t, Ji.x, Ji.y, Ji.z);
          return this;
        },
        transformDirection: function (e) {
          for (var t = 0, n = this.count; t < n; t++)
            (Ji.x = this.getX(t)),
              (Ji.y = this.getY(t)),
              (Ji.z = this.getZ(t)),
              Ji.transformDirection(e),
              this.setXYZ(t, Ji.x, Ji.y, Ji.z);
          return this;
        },
        set: function (e, t) {
          return void 0 === t && (t = 0), this.array.set(e, t), this;
        },
        getX: function (e) {
          return this.array[e * this.itemSize];
        },
        setX: function (e, t) {
          return (this.array[e * this.itemSize] = t), this;
        },
        getY: function (e) {
          return this.array[e * this.itemSize + 1];
        },
        setY: function (e, t) {
          return (this.array[e * this.itemSize + 1] = t), this;
        },
        getZ: function (e) {
          return this.array[e * this.itemSize + 2];
        },
        setZ: function (e, t) {
          return (this.array[e * this.itemSize + 2] = t), this;
        },
        getW: function (e) {
          return this.array[e * this.itemSize + 3];
        },
        setW: function (e, t) {
          return (this.array[e * this.itemSize + 3] = t), this;
        },
        setXY: function (e, t, n) {
          return (
            (e *= this.itemSize),
            (this.array[e + 0] = t),
            (this.array[e + 1] = n),
            this
          );
        },
        setXYZ: function (e, t, n, i) {
          return (
            (e *= this.itemSize),
            (this.array[e + 0] = t),
            (this.array[e + 1] = n),
            (this.array[e + 2] = i),
            this
          );
        },
        setXYZW: function (e, t, n, i, r) {
          return (
            (e *= this.itemSize),
            (this.array[e + 0] = t),
            (this.array[e + 1] = n),
            (this.array[e + 2] = i),
            (this.array[e + 3] = r),
            this
          );
        },
        onUpload: function (e) {
          return (this.onUploadCallback = e), this;
        },
        clone: function () {
          return new this.constructor(this.array, this.itemSize).copy(this);
        },
        toJSON: function () {
          return {
            itemSize: this.itemSize,
            type: this.array.constructor.name,
            array: Array.prototype.slice.call(this.array),
            normalized: this.normalized,
          };
        },
      }),
      (Ki.prototype = Object.create(Zi.prototype)),
      (Ki.prototype.constructor = Ki),
      (Qi.prototype = Object.create(Zi.prototype)),
      (Qi.prototype.constructor = Qi),
      ($i.prototype = Object.create(Zi.prototype)),
      ($i.prototype.constructor = $i),
      (er.prototype = Object.create(Zi.prototype)),
      (er.prototype.constructor = er),
      (tr.prototype = Object.create(Zi.prototype)),
      (tr.prototype.constructor = tr),
      (nr.prototype = Object.create(Zi.prototype)),
      (nr.prototype.constructor = nr),
      (ir.prototype = Object.create(Zi.prototype)),
      (ir.prototype.constructor = ir),
      (rr.prototype = Object.create(Zi.prototype)),
      (rr.prototype.constructor = rr),
      (ar.prototype = Object.create(Zi.prototype)),
      (ar.prototype.constructor = ar),
      Object.assign(or.prototype, {
        computeGroups: function (e) {
          for (
            var t, n = [], i = void 0, r = e.faces, a = 0;
            a < r.length;
            a++
          ) {
            var o = r[a];
            o.materialIndex !== i &&
              ((i = o.materialIndex),
              void 0 !== t && ((t.count = 3 * a - t.start), n.push(t)),
              (t = { start: 3 * a, materialIndex: i }));
          }
          void 0 !== t && ((t.count = 3 * a - t.start), n.push(t)),
            (this.groups = n);
        },
        fromGeometry: function (e) {
          var t,
            n = e.faces,
            i = e.vertices,
            r = e.faceVertexUvs,
            a = r[0] && r[0].length > 0,
            o = r[1] && r[1].length > 0,
            s = e.morphTargets,
            c = s.length;
          if (c > 0) {
            t = [];
            for (var u = 0; u < c; u++) t[u] = { name: s[u].name, data: [] };
            this.morphTargets.position = t;
          }
          var l,
            d = e.morphNormals,
            h = d.length;
          if (h > 0) {
            l = [];
            for (u = 0; u < h; u++) l[u] = { name: d[u].name, data: [] };
            this.morphTargets.normal = l;
          }
          var p = e.skinIndices,
            m = e.skinWeights,
            f = p.length === i.length,
            _ = m.length === i.length;
          i.length > 0 && 0 === n.length && void 0;
          for (u = 0; u < n.length; u++) {
            var M = n[u];
            this.vertices.push(i[M.a], i[M.b], i[M.c]);
            var v = M.vertexNormals;
            if (3 === v.length) this.normals.push(v[0], v[1], v[2]);
            else {
              var g = M.normal;
              this.normals.push(g, g, g);
            }
            var y = M.vertexColors;
            if (3 === y.length) this.colors.push(y[0], y[1], y[2]);
            else {
              var b = M.color;
              this.colors.push(b, b, b);
            }
            if (!0 === a) {
              var w = r[0][u];
              void 0 !== w
                ? this.uvs.push(w[0], w[1], w[2])
                : (void 0, this.uvs.push(new pn(), new pn(), new pn()));
            }
            if (!0 === o) {
              w = r[1][u];
              void 0 !== w
                ? this.uvs2.push(w[0], w[1], w[2])
                : (void 0, this.uvs2.push(new pn(), new pn(), new pn()));
            }
            for (var A = 0; A < c; A++) {
              var x = s[A].vertices;
              t[A].data.push(x[M.a], x[M.b], x[M.c]);
            }
            for (A = 0; A < h; A++) {
              var L = d[A].vertexNormals[u];
              l[A].data.push(L.a, L.b, L.c);
            }
            f && this.skinIndices.push(p[M.a], p[M.b], p[M.c]),
              _ && this.skinWeights.push(m[M.a], m[M.b], m[M.c]);
          }
          return (
            this.computeGroups(e),
            (this.verticesNeedUpdate = e.verticesNeedUpdate),
            (this.normalsNeedUpdate = e.normalsNeedUpdate),
            (this.colorsNeedUpdate = e.colorsNeedUpdate),
            (this.uvsNeedUpdate = e.uvsNeedUpdate),
            (this.groupsNeedUpdate = e.groupsNeedUpdate),
            null !== e.boundingSphere &&
              (this.boundingSphere = e.boundingSphere.clone()),
            null !== e.boundingBox &&
              (this.boundingBox = e.boundingBox.clone()),
            this
          );
        },
      });
    var cr = 1,
      ur = new Cn(),
      lr = new Zn(),
      dr = new xn(),
      hr = new di(),
      pr = new di(),
      mr = new xn();
    function fr() {
      Object.defineProperty(this, 'id', { value: (cr += 2) }),
        (this.uuid = hn.generateUUID()),
        (this.name = ''),
        (this.type = 'BufferGeometry'),
        (this.index = null),
        (this.attributes = {}),
        (this.morphAttributes = {}),
        (this.morphTargetsRelative = !1),
        (this.groups = []),
        (this.boundingBox = null),
        (this.boundingSphere = null),
        (this.drawRange = { start: 0, count: 1 / 0 }),
        (this.userData = {});
    }
    fr.prototype = Object.assign(Object.create(cn.prototype), {
      constructor: fr,
      isBufferGeometry: !0,
      getIndex: function () {
        return this.index;
      },
      setIndex: function (e) {
        Array.isArray(e)
          ? (this.index = new (sr(e) > 65535 ? ir : tr)(e, 1))
          : (this.index = e);
      },
      getAttribute: function (e) {
        return this.attributes[e];
      },
      setAttribute: function (e, t) {
        return (this.attributes[e] = t), this;
      },
      deleteAttribute: function (e) {
        return delete this.attributes[e], this;
      },
      addGroup: function (e, t, n) {
        this.groups.push({
          start: e,
          count: t,
          materialIndex: void 0 !== n ? n : 0,
        });
      },
      clearGroups: function () {
        this.groups = [];
      },
      setDrawRange: function (e, t) {
        (this.drawRange.start = e), (this.drawRange.count = t);
      },
      applyMatrix4: function (e) {
        var t = this.attributes.position;
        void 0 !== t && (t.applyMatrix4(e), (t.needsUpdate = !0));
        var n = this.attributes.normal;
        if (void 0 !== n) {
          var i = new mn().getNormalMatrix(e);
          n.applyNormalMatrix(i), (n.needsUpdate = !0);
        }
        var r = this.attributes.tangent;
        return (
          void 0 !== r && (r.transformDirection(e), (r.needsUpdate = !0)),
          null !== this.boundingBox && this.computeBoundingBox(),
          null !== this.boundingSphere && this.computeBoundingSphere(),
          this
        );
      },
      rotateX: function (e) {
        return ur.makeRotationX(e), this.applyMatrix4(ur), this;
      },
      rotateY: function (e) {
        return ur.makeRotationY(e), this.applyMatrix4(ur), this;
      },
      rotateZ: function (e) {
        return ur.makeRotationZ(e), this.applyMatrix4(ur), this;
      },
      translate: function (e, t, n) {
        return ur.makeTranslation(e, t, n), this.applyMatrix4(ur), this;
      },
      scale: function (e, t, n) {
        return ur.makeScale(e, t, n), this.applyMatrix4(ur), this;
      },
      lookAt: function (e) {
        return (
          lr.lookAt(e), lr.updateMatrix(), this.applyMatrix4(lr.matrix), this
        );
      },
      center: function () {
        return (
          this.computeBoundingBox(),
          this.boundingBox.getCenter(dr).negate(),
          this.translate(dr.x, dr.y, dr.z),
          this
        );
      },
      setFromObject: function (e) {
        var t = e.geometry;
        if (e.isPoints || e.isLine) {
          var n = new rr(3 * t.vertices.length, 3),
            i = new rr(3 * t.colors.length, 3);
          if (
            (this.setAttribute('position', n.copyVector3sArray(t.vertices)),
            this.setAttribute('color', i.copyColorsArray(t.colors)),
            t.lineDistances && t.lineDistances.length === t.vertices.length)
          ) {
            var r = new rr(t.lineDistances.length, 1);
            this.setAttribute('lineDistance', r.copyArray(t.lineDistances));
          }
          null !== t.boundingSphere &&
            (this.boundingSphere = t.boundingSphere.clone()),
            null !== t.boundingBox &&
              (this.boundingBox = t.boundingBox.clone());
        } else e.isMesh && t && t.isGeometry && this.fromGeometry(t);
        return this;
      },
      setFromPoints: function (e) {
        for (var t = [], n = 0, i = e.length; n < i; n++) {
          var r = e[n];
          t.push(r.x, r.y, r.z || 0);
        }
        return this.setAttribute('position', new rr(t, 3)), this;
      },
      updateFromObject: function (e) {
        var t,
          n = e.geometry;
        if (e.isMesh) {
          var i = n.__directGeometry;
          if (
            (!0 === n.elementsNeedUpdate &&
              ((i = void 0), (n.elementsNeedUpdate = !1)),
            void 0 === i)
          )
            return this.fromGeometry(n);
          (i.verticesNeedUpdate = n.verticesNeedUpdate),
            (i.normalsNeedUpdate = n.normalsNeedUpdate),
            (i.colorsNeedUpdate = n.colorsNeedUpdate),
            (i.uvsNeedUpdate = n.uvsNeedUpdate),
            (i.groupsNeedUpdate = n.groupsNeedUpdate),
            (n.verticesNeedUpdate = !1),
            (n.normalsNeedUpdate = !1),
            (n.colorsNeedUpdate = !1),
            (n.uvsNeedUpdate = !1),
            (n.groupsNeedUpdate = !1),
            (n = i);
        }
        return (
          !0 === n.verticesNeedUpdate &&
            ((t = this.attributes.position),
            void 0 !== t &&
              (t.copyVector3sArray(n.vertices), (t.needsUpdate = !0)),
            (n.verticesNeedUpdate = !1)),
          !0 === n.normalsNeedUpdate &&
            ((t = this.attributes.normal),
            void 0 !== t &&
              (t.copyVector3sArray(n.normals), (t.needsUpdate = !0)),
            (n.normalsNeedUpdate = !1)),
          !0 === n.colorsNeedUpdate &&
            ((t = this.attributes.color),
            void 0 !== t && (t.copyColorsArray(n.colors), (t.needsUpdate = !0)),
            (n.colorsNeedUpdate = !1)),
          n.uvsNeedUpdate &&
            ((t = this.attributes.uv),
            void 0 !== t && (t.copyVector2sArray(n.uvs), (t.needsUpdate = !0)),
            (n.uvsNeedUpdate = !1)),
          n.lineDistancesNeedUpdate &&
            ((t = this.attributes.lineDistance),
            void 0 !== t &&
              (t.copyArray(n.lineDistances), (t.needsUpdate = !0)),
            (n.lineDistancesNeedUpdate = !1)),
          n.groupsNeedUpdate &&
            (n.computeGroups(e.geometry),
            (this.groups = n.groups),
            (n.groupsNeedUpdate = !1)),
          this
        );
      },
      fromGeometry: function (e) {
        return (
          (e.__directGeometry = new or().fromGeometry(e)),
          this.fromDirectGeometry(e.__directGeometry)
        );
      },
      fromDirectGeometry: function (e) {
        var t = new Float32Array(3 * e.vertices.length);
        if (
          (this.setAttribute(
            'position',
            new Zi(t, 3).copyVector3sArray(e.vertices)
          ),
          e.normals.length > 0)
        ) {
          var n = new Float32Array(3 * e.normals.length);
          this.setAttribute(
            'normal',
            new Zi(n, 3).copyVector3sArray(e.normals)
          );
        }
        if (e.colors.length > 0) {
          var i = new Float32Array(3 * e.colors.length);
          this.setAttribute('color', new Zi(i, 3).copyColorsArray(e.colors));
        }
        if (e.uvs.length > 0) {
          var r = new Float32Array(2 * e.uvs.length);
          this.setAttribute('uv', new Zi(r, 2).copyVector2sArray(e.uvs));
        }
        if (e.uvs2.length > 0) {
          var a = new Float32Array(2 * e.uvs2.length);
          this.setAttribute('uv2', new Zi(a, 2).copyVector2sArray(e.uvs2));
        }
        for (var o in ((this.groups = e.groups), e.morphTargets)) {
          for (
            var s = [], c = e.morphTargets[o], u = 0, l = c.length;
            u < l;
            u++
          ) {
            var d = c[u],
              h = new rr(3 * d.data.length, 3);
            (h.name = d.name), s.push(h.copyVector3sArray(d.data));
          }
          this.morphAttributes[o] = s;
        }
        if (e.skinIndices.length > 0) {
          var p = new rr(4 * e.skinIndices.length, 4);
          this.setAttribute('skinIndex', p.copyVector4sArray(e.skinIndices));
        }
        if (e.skinWeights.length > 0) {
          var m = new rr(4 * e.skinWeights.length, 4);
          this.setAttribute('skinWeight', m.copyVector4sArray(e.skinWeights));
        }
        return (
          null !== e.boundingSphere &&
            (this.boundingSphere = e.boundingSphere.clone()),
          null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()),
          this
        );
      },
      computeBoundingBox: function () {
        null === this.boundingBox && (this.boundingBox = new di());
        var e = this.attributes.position,
          t = this.morphAttributes.position;
        if (void 0 !== e) {
          if ((this.boundingBox.setFromBufferAttribute(e), t))
            for (var n = 0, i = t.length; n < i; n++) {
              var r = t[n];
              hr.setFromBufferAttribute(r),
                this.morphTargetsRelative
                  ? (mr.addVectors(this.boundingBox.min, hr.min),
                    this.boundingBox.expandByPoint(mr),
                    mr.addVectors(this.boundingBox.max, hr.max),
                    this.boundingBox.expandByPoint(mr))
                  : (this.boundingBox.expandByPoint(hr.min),
                    this.boundingBox.expandByPoint(hr.max));
            }
        } else this.boundingBox.makeEmpty();
        (isNaN(this.boundingBox.min.x) ||
          isNaN(this.boundingBox.min.y) ||
          isNaN(this.boundingBox.min.z)) &&
          void 0;
      },
      computeBoundingSphere: function () {
        null === this.boundingSphere && (this.boundingSphere = new mi());
        var e = this.attributes.position,
          t = this.morphAttributes.position;
        if (e) {
          var n = this.boundingSphere.center;
          if ((hr.setFromBufferAttribute(e), t))
            for (var i = 0, r = t.length; i < r; i++) {
              var a = t[i];
              pr.setFromBufferAttribute(a),
                this.morphTargetsRelative
                  ? (mr.addVectors(hr.min, pr.min),
                    hr.expandByPoint(mr),
                    mr.addVectors(hr.max, pr.max),
                    hr.expandByPoint(mr))
                  : (hr.expandByPoint(pr.min), hr.expandByPoint(pr.max));
            }
          hr.getCenter(n);
          var o = 0;
          for (i = 0, r = e.count; i < r; i++)
            mr.fromBufferAttribute(e, i),
              (o = Math.max(o, n.distanceToSquared(mr)));
          if (t)
            for (i = 0, r = t.length; i < r; i++) {
              a = t[i];
              for (
                var s = this.morphTargetsRelative, c = 0, u = a.count;
                c < u;
                c++
              )
                mr.fromBufferAttribute(a, c),
                  s && (dr.fromBufferAttribute(e, c), mr.add(dr)),
                  (o = Math.max(o, n.distanceToSquared(mr)));
            }
          (this.boundingSphere.radius = Math.sqrt(o)),
            isNaN(this.boundingSphere.radius);
        }
      },
      computeFaceNormals: function () {},
      computeVertexNormals: function () {
        var e = this.index,
          t = this.attributes;
        if (t.position) {
          var n = t.position.array;
          if (void 0 === t.normal)
            this.setAttribute('normal', new Zi(new Float32Array(n.length), 3));
          else
            for (var i = t.normal.array, r = 0, a = i.length; r < a; r++)
              i[r] = 0;
          var o,
            s,
            c,
            u = t.normal.array,
            l = new xn(),
            d = new xn(),
            h = new xn(),
            p = new xn(),
            m = new xn();
          if (e) {
            var f = e.array;
            for (r = 0, a = e.count; r < a; r += 3)
              (o = 3 * f[r + 0]),
                (s = 3 * f[r + 1]),
                (c = 3 * f[r + 2]),
                l.fromArray(n, o),
                d.fromArray(n, s),
                h.fromArray(n, c),
                p.subVectors(h, d),
                m.subVectors(l, d),
                p.cross(m),
                (u[o] += p.x),
                (u[o + 1] += p.y),
                (u[o + 2] += p.z),
                (u[s] += p.x),
                (u[s + 1] += p.y),
                (u[s + 2] += p.z),
                (u[c] += p.x),
                (u[c + 1] += p.y),
                (u[c + 2] += p.z);
          } else
            for (r = 0, a = n.length; r < a; r += 9)
              l.fromArray(n, r),
                d.fromArray(n, r + 3),
                h.fromArray(n, r + 6),
                p.subVectors(h, d),
                m.subVectors(l, d),
                p.cross(m),
                (u[r] = p.x),
                (u[r + 1] = p.y),
                (u[r + 2] = p.z),
                (u[r + 3] = p.x),
                (u[r + 4] = p.y),
                (u[r + 5] = p.z),
                (u[r + 6] = p.x),
                (u[r + 7] = p.y),
                (u[r + 8] = p.z);
          this.normalizeNormals(), (t.normal.needsUpdate = !0);
        }
      },
      merge: function (e, t) {
        if (!e || !e.isBufferGeometry) return void 0, void 0;
        void 0 === t && (t = 0);
        var n = this.attributes;
        for (var i in n)
          if (void 0 !== e.attributes[i])
            for (
              var r = n[i],
                a = r.array,
                o = e.attributes[i],
                s = o.array,
                c = o.itemSize * t,
                u = Math.min(s.length, a.length - c),
                l = 0,
                d = c;
              l < u;
              l++, d++
            )
              a[d] = s[l];
        return this;
      },
      normalizeNormals: function () {
        for (var e = this.attributes.normal, t = 0, n = e.count; t < n; t++)
          (mr.x = e.getX(t)),
            (mr.y = e.getY(t)),
            (mr.z = e.getZ(t)),
            mr.normalize(),
            e.setXYZ(t, mr.x, mr.y, mr.z);
      },
      toNonIndexed: function () {
        function e(e, t) {
          for (
            var n = e.array,
              i = e.itemSize,
              r = new n.constructor(t.length * i),
              a = 0,
              o = 0,
              s = 0,
              c = t.length;
            s < c;
            s++
          ) {
            a = t[s] * i;
            for (var u = 0; u < i; u++) r[o++] = n[a++];
          }
          return new Zi(r, i);
        }
        if (null === this.index) return void 0, this;
        var t = new fr(),
          n = this.index.array,
          i = this.attributes;
        for (var r in i) {
          var a = i[r],
            o = e(a, n);
          t.setAttribute(r, o);
        }
        var s = this.morphAttributes;
        for (r in s) {
          for (var c = [], u = s[r], l = 0, d = u.length; l < d; l++) {
            (a = u[l]), (o = e(a, n));
            c.push(o);
          }
          t.morphAttributes[r] = c;
        }
        t.morphTargetsRelative = this.morphTargetsRelative;
        for (var h = this.groups, p = ((l = 0), h.length); l < p; l++) {
          var m = h[l];
          t.addGroup(m.start, m.count, m.materialIndex);
        }
        return t;
      },
      toJSON: function () {
        var e = {
          metadata: {
            version: 4.5,
            type: 'BufferGeometry',
            generator: 'BufferGeometry.toJSON',
          },
        };
        if (
          ((e.uuid = this.uuid),
          (e.type = this.type),
          '' !== this.name && (e.name = this.name),
          Object.keys(this.userData).length > 0 && (e.userData = this.userData),
          void 0 !== this.parameters)
        ) {
          var t = this.parameters;
          for (var n in t) void 0 !== t[n] && (e[n] = t[n]);
          return e;
        }
        e.data = { attributes: {} };
        var i = this.index;
        null !== i &&
          (e.data.index = {
            type: i.array.constructor.name,
            array: Array.prototype.slice.call(i.array),
          });
        var r = this.attributes;
        for (var n in r) {
          var a = r[n],
            o = a.toJSON();
          '' !== a.name && (o.name = a.name), (e.data.attributes[n] = o);
        }
        var s = {},
          c = !1;
        for (var n in this.morphAttributes) {
          for (
            var u = this.morphAttributes[n], l = [], d = 0, h = u.length;
            d < h;
            d++
          ) {
            (a = u[d]), (o = a.toJSON());
            '' !== a.name && (o.name = a.name), l.push(o);
          }
          l.length > 0 && ((s[n] = l), (c = !0));
        }
        c &&
          ((e.data.morphAttributes = s),
          (e.data.morphTargetsRelative = this.morphTargetsRelative));
        var p = this.groups;
        p.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(p)));
        var m = this.boundingSphere;
        return (
          null !== m &&
            (e.data.boundingSphere = {
              center: m.center.toArray(),
              radius: m.radius,
            }),
          e
        );
      },
      clone: function () {
        return new fr().copy(this);
      },
      copy: function (e) {
        var t, n, i;
        (this.index = null),
          (this.attributes = {}),
          (this.morphAttributes = {}),
          (this.groups = []),
          (this.boundingBox = null),
          (this.boundingSphere = null),
          (this.name = e.name);
        var r = e.index;
        null !== r && this.setIndex(r.clone());
        var a = e.attributes;
        for (t in a) {
          var o = a[t];
          this.setAttribute(t, o.clone());
        }
        var s = e.morphAttributes;
        for (t in s) {
          var c = [],
            u = s[t];
          for (n = 0, i = u.length; n < i; n++) c.push(u[n].clone());
          this.morphAttributes[t] = c;
        }
        this.morphTargetsRelative = e.morphTargetsRelative;
        var l = e.groups;
        for (n = 0, i = l.length; n < i; n++) {
          var d = l[n];
          this.addGroup(d.start, d.count, d.materialIndex);
        }
        var h = e.boundingBox;
        null !== h && (this.boundingBox = h.clone());
        var p = e.boundingSphere;
        return (
          null !== p && (this.boundingSphere = p.clone()),
          (this.drawRange.start = e.drawRange.start),
          (this.drawRange.count = e.drawRange.count),
          (this.userData = e.userData),
          this
        );
      },
      dispose: function () {
        this.dispatchEvent({ type: 'dispose' });
      },
    });
    var _r = new Cn(),
      Mr = new wi(),
      vr = new mi(),
      gr = new xn(),
      yr = new xn(),
      br = new xn(),
      wr = new xn(),
      Ar = new xn(),
      xr = new xn(),
      Lr = new xn(),
      Tr = new xn(),
      zr = new xn(),
      Sr = new pn(),
      Or = new pn(),
      Er = new pn(),
      kr = new xn(),
      Cr = new xn();
    function Dr(e, t) {
      Zn.call(this),
        (this.type = 'Mesh'),
        (this.geometry = void 0 !== e ? e : new fr()),
        (this.material = void 0 !== t ? t : new Gi()),
        this.updateMorphTargets();
    }
    function Nr(e, t, n, i, r, a, o, s) {
      var c;
      if (
        ((c =
          t.side === p
            ? i.intersectTriangle(o, a, r, !0, s)
            : i.intersectTriangle(r, a, o, t.side !== m, s)),
        null === c)
      )
        return null;
      Cr.copy(s), Cr.applyMatrix4(e.matrixWorld);
      var u = n.ray.origin.distanceTo(Cr);
      return u < n.near || u > n.far
        ? null
        : { distance: u, point: Cr.clone(), object: e };
    }
    function Pr(e, t, n, i, r, a, o, s, c, u, l, d) {
      gr.fromBufferAttribute(r, u),
        yr.fromBufferAttribute(r, l),
        br.fromBufferAttribute(r, d);
      var h = e.morphTargetInfluences;
      if (t.morphTargets && a && h) {
        Lr.set(0, 0, 0), Tr.set(0, 0, 0), zr.set(0, 0, 0);
        for (var p = 0, m = a.length; p < m; p++) {
          var f = h[p],
            _ = a[p];
          0 !== f &&
            (wr.fromBufferAttribute(_, u),
            Ar.fromBufferAttribute(_, l),
            xr.fromBufferAttribute(_, d),
            o
              ? (Lr.addScaledVector(wr, f),
                Tr.addScaledVector(Ar, f),
                zr.addScaledVector(xr, f))
              : (Lr.addScaledVector(wr.sub(gr), f),
                Tr.addScaledVector(Ar.sub(yr), f),
                zr.addScaledVector(xr.sub(br), f)));
        }
        gr.add(Lr), yr.add(Tr), br.add(zr);
      }
      e.isSkinnedMesh &&
        (e.boneTransform(u, gr),
        e.boneTransform(l, yr),
        e.boneTransform(d, br));
      var M = Nr(e, t, n, i, gr, yr, br, kr);
      if (M) {
        s &&
          (Sr.fromBufferAttribute(s, u),
          Or.fromBufferAttribute(s, l),
          Er.fromBufferAttribute(s, d),
          (M.uv = Yi.getUV(kr, gr, yr, br, Sr, Or, Er, new pn()))),
          c &&
            (Sr.fromBufferAttribute(c, u),
            Or.fromBufferAttribute(c, l),
            Er.fromBufferAttribute(c, d),
            (M.uv2 = Yi.getUV(kr, gr, yr, br, Sr, Or, Er, new pn())));
        var v = new Ui(u, l, d);
        Yi.getNormal(gr, yr, br, v.normal), (M.face = v);
      }
      return M;
    }
    Dr.prototype = Object.assign(Object.create(Zn.prototype), {
      constructor: Dr,
      isMesh: !0,
      copy: function (e) {
        return (
          Zn.prototype.copy.call(this, e),
          void 0 !== e.morphTargetInfluences &&
            (this.morphTargetInfluences = e.morphTargetInfluences.slice()),
          void 0 !== e.morphTargetDictionary &&
            (this.morphTargetDictionary = Object.assign(
              {},
              e.morphTargetDictionary
            )),
          this
        );
      },
      updateMorphTargets: function () {
        var e,
          t,
          n,
          i = this.geometry;
        if (i.isBufferGeometry) {
          var r = i.morphAttributes,
            a = Object.keys(r);
          if (a.length > 0) {
            var o = r[a[0]];
            if (void 0 !== o)
              for (
                this.morphTargetInfluences = [],
                  this.morphTargetDictionary = {},
                  e = 0,
                  t = o.length;
                e < t;
                e++
              )
                (n = o[e].name || String(e)),
                  this.morphTargetInfluences.push(0),
                  (this.morphTargetDictionary[n] = e);
          }
        } else {
          var s = i.morphTargets;
          void 0 !== s && s.length > 0 && void 0;
        }
      },
      raycast: function (e, t) {
        var n,
          i = this.geometry,
          r = this.material,
          a = this.matrixWorld;
        if (
          void 0 !== r &&
          (null === i.boundingSphere && i.computeBoundingSphere(),
          vr.copy(i.boundingSphere),
          vr.applyMatrix4(a),
          !1 !== e.ray.intersectsSphere(vr) &&
            (_r.getInverse(a),
            Mr.copy(e.ray).applyMatrix4(_r),
            null === i.boundingBox || !1 !== Mr.intersectsBox(i.boundingBox)))
        )
          if (i.isBufferGeometry) {
            var o,
              s,
              c,
              u,
              l,
              d,
              h,
              p,
              m,
              f,
              _,
              M = i.index,
              v = i.attributes.position,
              g = i.morphAttributes.position,
              y = i.morphTargetsRelative,
              b = i.attributes.uv,
              w = i.attributes.uv2,
              A = i.groups,
              x = i.drawRange;
            if (null !== M)
              if (Array.isArray(r))
                for (u = 0, d = A.length; u < d; u++)
                  for (
                    p = A[u],
                      m = r[p.materialIndex],
                      f = Math.max(p.start, x.start),
                      _ = Math.min(p.start + p.count, x.start + x.count),
                      l = f,
                      h = _;
                    l < h;
                    l += 3
                  )
                    (o = M.getX(l)),
                      (s = M.getX(l + 1)),
                      (c = M.getX(l + 2)),
                      (n = Pr(this, m, e, Mr, v, g, y, b, w, o, s, c)),
                      n &&
                        ((n.faceIndex = Math.floor(l / 3)),
                        (n.face.materialIndex = p.materialIndex),
                        t.push(n));
              else
                for (
                  f = Math.max(0, x.start),
                    _ = Math.min(M.count, x.start + x.count),
                    u = f,
                    d = _;
                  u < d;
                  u += 3
                )
                  (o = M.getX(u)),
                    (s = M.getX(u + 1)),
                    (c = M.getX(u + 2)),
                    (n = Pr(this, r, e, Mr, v, g, y, b, w, o, s, c)),
                    n && ((n.faceIndex = Math.floor(u / 3)), t.push(n));
            else if (void 0 !== v)
              if (Array.isArray(r))
                for (u = 0, d = A.length; u < d; u++)
                  for (
                    p = A[u],
                      m = r[p.materialIndex],
                      f = Math.max(p.start, x.start),
                      _ = Math.min(p.start + p.count, x.start + x.count),
                      l = f,
                      h = _;
                    l < h;
                    l += 3
                  )
                    (o = l),
                      (s = l + 1),
                      (c = l + 2),
                      (n = Pr(this, m, e, Mr, v, g, y, b, w, o, s, c)),
                      n &&
                        ((n.faceIndex = Math.floor(l / 3)),
                        (n.face.materialIndex = p.materialIndex),
                        t.push(n));
              else
                for (
                  f = Math.max(0, x.start),
                    _ = Math.min(v.count, x.start + x.count),
                    u = f,
                    d = _;
                  u < d;
                  u += 3
                )
                  (o = u),
                    (s = u + 1),
                    (c = u + 2),
                    (n = Pr(this, r, e, Mr, v, g, y, b, w, o, s, c)),
                    n && ((n.faceIndex = Math.floor(u / 3)), t.push(n));
          } else if (i.isGeometry) {
            var L,
              T,
              z,
              S,
              O = Array.isArray(r),
              E = i.vertices,
              k = i.faces,
              C = i.faceVertexUvs[0];
            C.length > 0 && (S = C);
            for (var D = 0, N = k.length; D < N; D++) {
              var P = k[D],
                j = O ? r[P.materialIndex] : r;
              if (
                void 0 !== j &&
                ((L = E[P.a]),
                (T = E[P.b]),
                (z = E[P.c]),
                (n = Nr(this, j, e, Mr, L, T, z, kr)),
                n)
              ) {
                if (S && S[D]) {
                  var Y = S[D];
                  Sr.copy(Y[0]),
                    Or.copy(Y[1]),
                    Er.copy(Y[2]),
                    (n.uv = Yi.getUV(kr, L, T, z, Sr, Or, Er, new pn()));
                }
                (n.face = P), (n.faceIndex = D), t.push(n);
              }
            }
          }
      },
      clone: function () {
        return new this.constructor(this.geometry, this.material).copy(this);
      },
    });
    var jr = 0,
      Yr = new Cn(),
      Rr = new Zn(),
      Br = new xn();
    function Wr() {
      Object.defineProperty(this, 'id', { value: (jr += 2) }),
        (this.uuid = hn.generateUUID()),
        (this.name = ''),
        (this.type = 'Geometry'),
        (this.vertices = []),
        (this.colors = []),
        (this.faces = []),
        (this.faceVertexUvs = [[]]),
        (this.morphTargets = []),
        (this.morphNormals = []),
        (this.skinWeights = []),
        (this.skinIndices = []),
        (this.lineDistances = []),
        (this.boundingBox = null),
        (this.boundingSphere = null),
        (this.elementsNeedUpdate = !1),
        (this.verticesNeedUpdate = !1),
        (this.uvsNeedUpdate = !1),
        (this.normalsNeedUpdate = !1),
        (this.colorsNeedUpdate = !1),
        (this.lineDistancesNeedUpdate = !1),
        (this.groupsNeedUpdate = !1);
    }
    Wr.prototype = Object.assign(Object.create(cn.prototype), {
      constructor: Wr,
      isGeometry: !0,
      applyMatrix4: function (e) {
        for (
          var t = new mn().getNormalMatrix(e), n = 0, i = this.vertices.length;
          n < i;
          n++
        ) {
          var r = this.vertices[n];
          r.applyMatrix4(e);
        }
        for (n = 0, i = this.faces.length; n < i; n++) {
          var a = this.faces[n];
          a.normal.applyMatrix3(t).normalize();
          for (var o = 0, s = a.vertexNormals.length; o < s; o++)
            a.vertexNormals[o].applyMatrix3(t).normalize();
        }
        return (
          null !== this.boundingBox && this.computeBoundingBox(),
          null !== this.boundingSphere && this.computeBoundingSphere(),
          (this.verticesNeedUpdate = !0),
          (this.normalsNeedUpdate = !0),
          this
        );
      },
      rotateX: function (e) {
        return Yr.makeRotationX(e), this.applyMatrix4(Yr), this;
      },
      rotateY: function (e) {
        return Yr.makeRotationY(e), this.applyMatrix4(Yr), this;
      },
      rotateZ: function (e) {
        return Yr.makeRotationZ(e), this.applyMatrix4(Yr), this;
      },
      translate: function (e, t, n) {
        return Yr.makeTranslation(e, t, n), this.applyMatrix4(Yr), this;
      },
      scale: function (e, t, n) {
        return Yr.makeScale(e, t, n), this.applyMatrix4(Yr), this;
      },
      lookAt: function (e) {
        return (
          Rr.lookAt(e), Rr.updateMatrix(), this.applyMatrix4(Rr.matrix), this
        );
      },
      fromBufferGeometry: function (e) {
        var t = this,
          n = null !== e.index ? e.index.array : void 0,
          i = e.attributes;
        if (void 0 === i.position) return void 0, this;
        var r = i.position.array,
          a = void 0 !== i.normal ? i.normal.array : void 0,
          o = void 0 !== i.color ? i.color.array : void 0,
          s = void 0 !== i.uv ? i.uv.array : void 0,
          c = void 0 !== i.uv2 ? i.uv2.array : void 0;
        void 0 !== c && (this.faceVertexUvs[1] = []);
        for (var u = 0; u < r.length; u += 3)
          t.vertices.push(new xn().fromArray(r, u)),
            void 0 !== o && t.colors.push(new Ii().fromArray(o, u));
        function l(e, n, i, r) {
          var u =
              void 0 === o
                ? []
                : [
                    t.colors[e].clone(),
                    t.colors[n].clone(),
                    t.colors[i].clone(),
                  ],
            l =
              void 0 === a
                ? []
                : [
                    new xn().fromArray(a, 3 * e),
                    new xn().fromArray(a, 3 * n),
                    new xn().fromArray(a, 3 * i),
                  ],
            d = new Ui(e, n, i, l, u, r);
          t.faces.push(d),
            void 0 !== s &&
              t.faceVertexUvs[0].push([
                new pn().fromArray(s, 2 * e),
                new pn().fromArray(s, 2 * n),
                new pn().fromArray(s, 2 * i),
              ]),
            void 0 !== c &&
              t.faceVertexUvs[1].push([
                new pn().fromArray(c, 2 * e),
                new pn().fromArray(c, 2 * n),
                new pn().fromArray(c, 2 * i),
              ]);
        }
        var d = e.groups;
        if (d.length > 0)
          for (u = 0; u < d.length; u++)
            for (
              var h = d[u], p = h.start, m = h.count, f = p, _ = p + m;
              f < _;
              f += 3
            )
              void 0 !== n
                ? l(n[f], n[f + 1], n[f + 2], h.materialIndex)
                : l(f, f + 1, f + 2, h.materialIndex);
        else if (void 0 !== n)
          for (u = 0; u < n.length; u += 3) l(n[u], n[u + 1], n[u + 2]);
        else for (u = 0; u < r.length / 3; u += 3) l(u, u + 1, u + 2);
        return (
          this.computeFaceNormals(),
          null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()),
          null !== e.boundingSphere &&
            (this.boundingSphere = e.boundingSphere.clone()),
          this
        );
      },
      center: function () {
        return (
          this.computeBoundingBox(),
          this.boundingBox.getCenter(Br).negate(),
          this.translate(Br.x, Br.y, Br.z),
          this
        );
      },
      normalize: function () {
        this.computeBoundingSphere();
        var e = this.boundingSphere.center,
          t = this.boundingSphere.radius,
          n = 0 === t ? 1 : 1 / t,
          i = new Cn();
        return (
          i.set(
            n,
            0,
            0,
            -n * e.x,
            0,
            n,
            0,
            -n * e.y,
            0,
            0,
            n,
            -n * e.z,
            0,
            0,
            0,
            1
          ),
          this.applyMatrix4(i),
          this
        );
      },
      computeFaceNormals: function () {
        for (
          var e = new xn(), t = new xn(), n = 0, i = this.faces.length;
          n < i;
          n++
        ) {
          var r = this.faces[n],
            a = this.vertices[r.a],
            o = this.vertices[r.b],
            s = this.vertices[r.c];
          e.subVectors(s, o),
            t.subVectors(a, o),
            e.cross(t),
            e.normalize(),
            r.normal.copy(e);
        }
      },
      computeVertexNormals: function (e) {
        var t, n, i, r, a, o;
        for (
          void 0 === e && (e = !0),
            o = new Array(this.vertices.length),
            t = 0,
            n = this.vertices.length;
          t < n;
          t++
        )
          o[t] = new xn();
        if (e) {
          var s,
            c,
            u,
            l = new xn(),
            d = new xn();
          for (i = 0, r = this.faces.length; i < r; i++)
            (a = this.faces[i]),
              (s = this.vertices[a.a]),
              (c = this.vertices[a.b]),
              (u = this.vertices[a.c]),
              l.subVectors(u, c),
              d.subVectors(s, c),
              l.cross(d),
              o[a.a].add(l),
              o[a.b].add(l),
              o[a.c].add(l);
        } else
          for (
            this.computeFaceNormals(), i = 0, r = this.faces.length;
            i < r;
            i++
          )
            (a = this.faces[i]),
              o[a.a].add(a.normal),
              o[a.b].add(a.normal),
              o[a.c].add(a.normal);
        for (t = 0, n = this.vertices.length; t < n; t++) o[t].normalize();
        for (i = 0, r = this.faces.length; i < r; i++) {
          a = this.faces[i];
          var h = a.vertexNormals;
          3 === h.length
            ? (h[0].copy(o[a.a]), h[1].copy(o[a.b]), h[2].copy(o[a.c]))
            : ((h[0] = o[a.a].clone()),
              (h[1] = o[a.b].clone()),
              (h[2] = o[a.c].clone()));
        }
        this.faces.length > 0 && (this.normalsNeedUpdate = !0);
      },
      computeFlatVertexNormals: function () {
        var e, t, n;
        for (
          this.computeFaceNormals(), e = 0, t = this.faces.length;
          e < t;
          e++
        ) {
          n = this.faces[e];
          var i = n.vertexNormals;
          3 === i.length
            ? (i[0].copy(n.normal), i[1].copy(n.normal), i[2].copy(n.normal))
            : ((i[0] = n.normal.clone()),
              (i[1] = n.normal.clone()),
              (i[2] = n.normal.clone()));
        }
        this.faces.length > 0 && (this.normalsNeedUpdate = !0);
      },
      computeMorphNormals: function () {
        var e, t, n, i, r;
        for (n = 0, i = this.faces.length; n < i; n++)
          for (
            r = this.faces[n],
              r.__originalFaceNormal
                ? r.__originalFaceNormal.copy(r.normal)
                : (r.__originalFaceNormal = r.normal.clone()),
              r.__originalVertexNormals || (r.__originalVertexNormals = []),
              e = 0,
              t = r.vertexNormals.length;
            e < t;
            e++
          )
            r.__originalVertexNormals[e]
              ? r.__originalVertexNormals[e].copy(r.vertexNormals[e])
              : (r.__originalVertexNormals[e] = r.vertexNormals[e].clone());
        var a = new Wr();
        for (
          a.faces = this.faces, e = 0, t = this.morphTargets.length;
          e < t;
          e++
        ) {
          if (!this.morphNormals[e]) {
            (this.morphNormals[e] = {}),
              (this.morphNormals[e].faceNormals = []),
              (this.morphNormals[e].vertexNormals = []);
            var o = this.morphNormals[e].faceNormals,
              s = this.morphNormals[e].vertexNormals;
            for (n = 0, i = this.faces.length; n < i; n++)
              (c = new xn()),
                (u = { a: new xn(), b: new xn(), c: new xn() }),
                o.push(c),
                s.push(u);
          }
          var c,
            u,
            l = this.morphNormals[e];
          for (
            a.vertices = this.morphTargets[e].vertices,
              a.computeFaceNormals(),
              a.computeVertexNormals(),
              n = 0,
              i = this.faces.length;
            n < i;
            n++
          )
            (r = this.faces[n]),
              (c = l.faceNormals[n]),
              (u = l.vertexNormals[n]),
              c.copy(r.normal),
              u.a.copy(r.vertexNormals[0]),
              u.b.copy(r.vertexNormals[1]),
              u.c.copy(r.vertexNormals[2]);
        }
        for (n = 0, i = this.faces.length; n < i; n++)
          (r = this.faces[n]),
            (r.normal = r.__originalFaceNormal),
            (r.vertexNormals = r.__originalVertexNormals);
      },
      computeBoundingBox: function () {
        null === this.boundingBox && (this.boundingBox = new di()),
          this.boundingBox.setFromPoints(this.vertices);
      },
      computeBoundingSphere: function () {
        null === this.boundingSphere && (this.boundingSphere = new mi()),
          this.boundingSphere.setFromPoints(this.vertices);
      },
      merge: function (e, t, n) {
        if (!e || !e.isGeometry) return void 0, void 0;
        var i,
          r = this.vertices.length,
          a = this.vertices,
          o = e.vertices,
          s = this.faces,
          c = e.faces,
          u = this.colors,
          l = e.colors;
        void 0 === n && (n = 0),
          void 0 !== t && (i = new mn().getNormalMatrix(t));
        for (var d = 0, h = o.length; d < h; d++) {
          var p = o[d],
            m = p.clone();
          void 0 !== t && m.applyMatrix4(t), a.push(m);
        }
        for (d = 0, h = l.length; d < h; d++) u.push(l[d].clone());
        for (d = 0, h = c.length; d < h; d++) {
          var f,
            _,
            M,
            v = c[d],
            g = v.vertexNormals,
            y = v.vertexColors;
          (f = new Ui(v.a + r, v.b + r, v.c + r)),
            f.normal.copy(v.normal),
            void 0 !== i && f.normal.applyMatrix3(i).normalize();
          for (var b = 0, w = g.length; b < w; b++)
            (_ = g[b].clone()),
              void 0 !== i && _.applyMatrix3(i).normalize(),
              f.vertexNormals.push(_);
          f.color.copy(v.color);
          for (b = 0, w = y.length; b < w; b++)
            (M = y[b]), f.vertexColors.push(M.clone());
          (f.materialIndex = v.materialIndex + n), s.push(f);
        }
        for (d = 0, h = e.faceVertexUvs.length; d < h; d++) {
          var A = e.faceVertexUvs[d];
          void 0 === this.faceVertexUvs[d] && (this.faceVertexUvs[d] = []);
          for (b = 0, w = A.length; b < w; b++) {
            for (var x = A[b], L = [], T = 0, z = x.length; T < z; T++)
              L.push(x[T].clone());
            this.faceVertexUvs[d].push(L);
          }
        }
      },
      mergeMesh: function (e) {
        if (!e || !e.isMesh) return void 0, void 0;
        e.matrixAutoUpdate && e.updateMatrix(),
          this.merge(e.geometry, e.matrix);
      },
      mergeVertices: function () {
        var e,
          t,
          n,
          i,
          r,
          a,
          o,
          s,
          c = {},
          u = [],
          l = [],
          d = 4,
          h = Math.pow(10, d);
        for (n = 0, i = this.vertices.length; n < i; n++)
          (e = this.vertices[n]),
            (t =
              Math.round(e.x * h) +
              '_' +
              Math.round(e.y * h) +
              '_' +
              Math.round(e.z * h)),
            void 0 === c[t]
              ? ((c[t] = n), u.push(this.vertices[n]), (l[n] = u.length - 1))
              : (l[n] = l[c[t]]);
        var p = [];
        for (n = 0, i = this.faces.length; n < i; n++) {
          (r = this.faces[n]),
            (r.a = l[r.a]),
            (r.b = l[r.b]),
            (r.c = l[r.c]),
            (a = [r.a, r.b, r.c]);
          for (var m = 0; m < 3; m++)
            if (a[m] === a[(m + 1) % 3]) {
              p.push(n);
              break;
            }
        }
        for (n = p.length - 1; n >= 0; n--) {
          var f = p[n];
          for (
            this.faces.splice(f, 1), o = 0, s = this.faceVertexUvs.length;
            o < s;
            o++
          )
            this.faceVertexUvs[o].splice(f, 1);
        }
        var _ = this.vertices.length - u.length;
        return (this.vertices = u), _;
      },
      setFromPoints: function (e) {
        this.vertices = [];
        for (var t = 0, n = e.length; t < n; t++) {
          var i = e[t];
          this.vertices.push(new xn(i.x, i.y, i.z || 0));
        }
        return this;
      },
      sortFacesByMaterialIndex: function () {
        for (var e = this.faces, t = e.length, n = 0; n < t; n++) e[n]._id = n;
        function i(e, t) {
          return e.materialIndex - t.materialIndex;
        }
        e.sort(i);
        var r,
          a,
          o = this.faceVertexUvs[0],
          s = this.faceVertexUvs[1];
        o && o.length === t && (r = []), s && s.length === t && (a = []);
        for (n = 0; n < t; n++) {
          var c = e[n]._id;
          r && r.push(o[c]), a && a.push(s[c]);
        }
        r && (this.faceVertexUvs[0] = r), a && (this.faceVertexUvs[1] = a);
      },
      toJSON: function () {
        var e = {
          metadata: {
            version: 4.5,
            type: 'Geometry',
            generator: 'Geometry.toJSON',
          },
        };
        if (
          ((e.uuid = this.uuid),
          (e.type = this.type),
          '' !== this.name && (e.name = this.name),
          void 0 !== this.parameters)
        ) {
          var t = this.parameters;
          for (var n in t) void 0 !== t[n] && (e[n] = t[n]);
          return e;
        }
        for (var i = [], r = 0; r < this.vertices.length; r++) {
          var a = this.vertices[r];
          i.push(a.x, a.y, a.z);
        }
        var o = [],
          s = [],
          c = {},
          u = [],
          l = {},
          d = [],
          h = {};
        for (r = 0; r < this.faces.length; r++) {
          var p = this.faces[r],
            m = !0,
            f = !1,
            _ = void 0 !== this.faceVertexUvs[0][r],
            M = p.normal.length() > 0,
            v = p.vertexNormals.length > 0,
            g = 1 !== p.color.r || 1 !== p.color.g || 1 !== p.color.b,
            y = p.vertexColors.length > 0,
            b = 0;
          if (
            ((b = L(b, 0, 0)),
            (b = L(b, 1, m)),
            (b = L(b, 2, f)),
            (b = L(b, 3, _)),
            (b = L(b, 4, M)),
            (b = L(b, 5, v)),
            (b = L(b, 6, g)),
            (b = L(b, 7, y)),
            o.push(b),
            o.push(p.a, p.b, p.c),
            o.push(p.materialIndex),
            _)
          ) {
            var w = this.faceVertexUvs[0][r];
            o.push(S(w[0]), S(w[1]), S(w[2]));
          }
          if ((M && o.push(T(p.normal)), v)) {
            var A = p.vertexNormals;
            o.push(T(A[0]), T(A[1]), T(A[2]));
          }
          if ((g && o.push(z(p.color)), y)) {
            var x = p.vertexColors;
            o.push(z(x[0]), z(x[1]), z(x[2]));
          }
        }
        function L(e, t, n) {
          return n ? e | (1 << t) : e & ~(1 << t);
        }
        function T(e) {
          var t = e.x.toString() + e.y.toString() + e.z.toString();
          return (
            void 0 !== c[t] || ((c[t] = s.length / 3), s.push(e.x, e.y, e.z)),
            c[t]
          );
        }
        function z(e) {
          var t = e.r.toString() + e.g.toString() + e.b.toString();
          return (
            void 0 !== l[t] || ((l[t] = u.length), u.push(e.getHex())), l[t]
          );
        }
        function S(e) {
          var t = e.x.toString() + e.y.toString();
          return (
            void 0 !== h[t] || ((h[t] = d.length / 2), d.push(e.x, e.y)), h[t]
          );
        }
        return (
          (e.data = {}),
          (e.data.vertices = i),
          (e.data.normals = s),
          u.length > 0 && (e.data.colors = u),
          d.length > 0 && (e.data.uvs = [d]),
          (e.data.faces = o),
          e
        );
      },
      clone: function () {
        return new Wr().copy(this);
      },
      copy: function (e) {
        var t, n, i, r, a, o;
        (this.vertices = []),
          (this.colors = []),
          (this.faces = []),
          (this.faceVertexUvs = [[]]),
          (this.morphTargets = []),
          (this.morphNormals = []),
          (this.skinWeights = []),
          (this.skinIndices = []),
          (this.lineDistances = []),
          (this.boundingBox = null),
          (this.boundingSphere = null),
          (this.name = e.name);
        var s = e.vertices;
        for (t = 0, n = s.length; t < n; t++) this.vertices.push(s[t].clone());
        var c = e.colors;
        for (t = 0, n = c.length; t < n; t++) this.colors.push(c[t].clone());
        var u = e.faces;
        for (t = 0, n = u.length; t < n; t++) this.faces.push(u[t].clone());
        for (t = 0, n = e.faceVertexUvs.length; t < n; t++) {
          var l = e.faceVertexUvs[t];
          for (
            void 0 === this.faceVertexUvs[t] && (this.faceVertexUvs[t] = []),
              i = 0,
              r = l.length;
            i < r;
            i++
          ) {
            var d = l[i],
              h = [];
            for (a = 0, o = d.length; a < o; a++) {
              var p = d[a];
              h.push(p.clone());
            }
            this.faceVertexUvs[t].push(h);
          }
        }
        var m = e.morphTargets;
        for (t = 0, n = m.length; t < n; t++) {
          var f = {};
          if (((f.name = m[t].name), void 0 !== m[t].vertices))
            for (f.vertices = [], i = 0, r = m[t].vertices.length; i < r; i++)
              f.vertices.push(m[t].vertices[i].clone());
          if (void 0 !== m[t].normals)
            for (f.normals = [], i = 0, r = m[t].normals.length; i < r; i++)
              f.normals.push(m[t].normals[i].clone());
          this.morphTargets.push(f);
        }
        var _ = e.morphNormals;
        for (t = 0, n = _.length; t < n; t++) {
          var M = {};
          if (void 0 !== _[t].vertexNormals)
            for (
              M.vertexNormals = [], i = 0, r = _[t].vertexNormals.length;
              i < r;
              i++
            ) {
              var v = _[t].vertexNormals[i],
                g = {};
              (g.a = v.a.clone()),
                (g.b = v.b.clone()),
                (g.c = v.c.clone()),
                M.vertexNormals.push(g);
            }
          if (void 0 !== _[t].faceNormals)
            for (
              M.faceNormals = [], i = 0, r = _[t].faceNormals.length;
              i < r;
              i++
            )
              M.faceNormals.push(_[t].faceNormals[i].clone());
          this.morphNormals.push(M);
        }
        var y = e.skinWeights;
        for (t = 0, n = y.length; t < n; t++)
          this.skinWeights.push(y[t].clone());
        var b = e.skinIndices;
        for (t = 0, n = b.length; t < n; t++)
          this.skinIndices.push(b[t].clone());
        var w = e.lineDistances;
        for (t = 0, n = w.length; t < n; t++) this.lineDistances.push(w[t]);
        var A = e.boundingBox;
        null !== A && (this.boundingBox = A.clone());
        var x = e.boundingSphere;
        return (
          null !== x && (this.boundingSphere = x.clone()),
          (this.elementsNeedUpdate = e.elementsNeedUpdate),
          (this.verticesNeedUpdate = e.verticesNeedUpdate),
          (this.uvsNeedUpdate = e.uvsNeedUpdate),
          (this.normalsNeedUpdate = e.normalsNeedUpdate),
          (this.colorsNeedUpdate = e.colorsNeedUpdate),
          (this.lineDistancesNeedUpdate = e.lineDistancesNeedUpdate),
          (this.groupsNeedUpdate = e.groupsNeedUpdate),
          this
        );
      },
      dispose: function () {
        this.dispatchEvent({ type: 'dispose' });
      },
    });
    class Ir extends Wr {
      constructor(e, t, n, i, r, a) {
        super(),
          (this.type = 'BoxGeometry'),
          (this.parameters = {
            width: e,
            height: t,
            depth: n,
            widthSegments: i,
            heightSegments: r,
            depthSegments: a,
          }),
          this.fromBufferGeometry(new qr(e, t, n, i, r, a)),
          this.mergeVertices();
      }
    }
    class qr extends fr {
      constructor(e, t, n, i, r, a) {
        super(),
          (this.type = 'BoxBufferGeometry'),
          (this.parameters = {
            width: e,
            height: t,
            depth: n,
            widthSegments: i,
            heightSegments: r,
            depthSegments: a,
          });
        var o = this;
        (e = e || 1),
          (t = t || 1),
          (n = n || 1),
          (i = Math.floor(i) || 1),
          (r = Math.floor(r) || 1),
          (a = Math.floor(a) || 1);
        var s = [],
          c = [],
          u = [],
          l = [],
          d = 0,
          h = 0;
        function p(e, t, n, i, r, a, p, m, f, _, M) {
          var v,
            g,
            y = a / f,
            b = p / _,
            w = a / 2,
            A = p / 2,
            x = m / 2,
            L = f + 1,
            T = _ + 1,
            z = 0,
            S = 0,
            O = new xn();
          for (g = 0; g < T; g++) {
            var E = g * b - A;
            for (v = 0; v < L; v++) {
              var k = v * y - w;
              (O[e] = k * i),
                (O[t] = E * r),
                (O[n] = x),
                c.push(O.x, O.y, O.z),
                (O[e] = 0),
                (O[t] = 0),
                (O[n] = m > 0 ? 1 : -1),
                u.push(O.x, O.y, O.z),
                l.push(v / f),
                l.push(1 - g / _),
                (z += 1);
            }
          }
          for (g = 0; g < _; g++)
            for (v = 0; v < f; v++) {
              var C = d + v + L * g,
                D = d + v + L * (g + 1),
                N = d + (v + 1) + L * (g + 1),
                P = d + (v + 1) + L * g;
              s.push(C, D, P), s.push(D, N, P), (S += 6);
            }
          o.addGroup(h, S, M), (h += S), (d += z);
        }
        p('z', 'y', 'x', -1, -1, n, t, e, a, r, 0),
          p('z', 'y', 'x', 1, -1, n, t, -e, a, r, 1),
          p('x', 'z', 'y', 1, 1, e, n, t, i, a, 2),
          p('x', 'z', 'y', 1, -1, e, n, -t, i, a, 3),
          p('x', 'y', 'z', 1, -1, e, t, n, i, r, 4),
          p('x', 'y', 'z', -1, -1, e, t, -n, i, r, 5),
          this.setIndex(s),
          this.setAttribute('position', new rr(c, 3)),
          this.setAttribute('normal', new rr(u, 3)),
          this.setAttribute('uv', new rr(l, 2));
      }
    }
    function Hr(e) {
      var t = {};
      for (var n in e)
        for (var i in ((t[n] = {}), e[n])) {
          var r = e[n][i];
          r &&
          (r.isColor ||
            r.isMatrix3 ||
            r.isMatrix4 ||
            r.isVector2 ||
            r.isVector3 ||
            r.isVector4)
            ? (t[n][i] = r.clone())
            : Array.isArray(r)
            ? (t[n][i] = r.slice())
            : (t[n][i] = r);
        }
      return t;
    }
    function Fr(e) {
      for (var t = {}, n = 0; n < e.length; n++) {
        var i = Hr(e[n]);
        for (var r in i) t[r] = i[r];
      }
      return t;
    }
    var Ur = { clone: Hr, merge: Fr },
      Xr =
        'void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}',
      Vr = 'void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}';
    function Gr(e) {
      Vi.call(this),
        (this.type = 'ShaderMaterial'),
        (this.defines = {}),
        (this.uniforms = {}),
        (this.vertexShader = Xr),
        (this.fragmentShader = Vr),
        (this.linewidth = 1),
        (this.wireframe = !1),
        (this.wireframeLinewidth = 1),
        (this.fog = !1),
        (this.lights = !1),
        (this.clipping = !1),
        (this.skinning = !1),
        (this.morphTargets = !1),
        (this.morphNormals = !1),
        (this.extensions = {
          derivatives: !1,
          fragDepth: !1,
          drawBuffers: !1,
          shaderTextureLOD: !1,
        }),
        (this.defaultAttributeValues = {
          color: [1, 1, 1],
          uv: [0, 0],
          uv2: [0, 0],
        }),
        (this.index0AttributeName = void 0),
        (this.uniformsNeedUpdate = !1),
        void 0 !== e && (void 0 !== e.attributes && void 0, this.setValues(e));
    }
    function Jr() {
      Zn.call(this),
        (this.type = 'Camera'),
        (this.matrixWorldInverse = new Cn()),
        (this.projectionMatrix = new Cn()),
        (this.projectionMatrixInverse = new Cn());
    }
    function Zr(e, t, n, i) {
      Jr.call(this),
        (this.type = 'PerspectiveCamera'),
        (this.fov = void 0 !== e ? e : 50),
        (this.zoom = 1),
        (this.near = void 0 !== n ? n : 0.1),
        (this.far = void 0 !== i ? i : 2e3),
        (this.focus = 10),
        (this.aspect = void 0 !== t ? t : 1),
        (this.view = null),
        (this.filmGauge = 35),
        (this.filmOffset = 0),
        this.updateProjectionMatrix();
    }
    (Gr.prototype = Object.create(Vi.prototype)),
      (Gr.prototype.constructor = Gr),
      (Gr.prototype.isShaderMaterial = !0),
      (Gr.prototype.copy = function (e) {
        return (
          Vi.prototype.copy.call(this, e),
          (this.fragmentShader = e.fragmentShader),
          (this.vertexShader = e.vertexShader),
          (this.uniforms = Hr(e.uniforms)),
          (this.defines = Object.assign({}, e.defines)),
          (this.wireframe = e.wireframe),
          (this.wireframeLinewidth = e.wireframeLinewidth),
          (this.lights = e.lights),
          (this.clipping = e.clipping),
          (this.skinning = e.skinning),
          (this.morphTargets = e.morphTargets),
          (this.morphNormals = e.morphNormals),
          (this.extensions = e.extensions),
          this
        );
      }),
      (Gr.prototype.toJSON = function (e) {
        var t = Vi.prototype.toJSON.call(this, e);
        for (var n in ((t.uniforms = {}), this.uniforms)) {
          var i = this.uniforms[n],
            r = i.value;
          r && r.isTexture
            ? (t.uniforms[n] = { type: 't', value: r.toJSON(e).uuid })
            : r && r.isColor
            ? (t.uniforms[n] = { type: 'c', value: r.getHex() })
            : r && r.isVector2
            ? (t.uniforms[n] = { type: 'v2', value: r.toArray() })
            : r && r.isVector3
            ? (t.uniforms[n] = { type: 'v3', value: r.toArray() })
            : r && r.isVector4
            ? (t.uniforms[n] = { type: 'v4', value: r.toArray() })
            : r && r.isMatrix3
            ? (t.uniforms[n] = { type: 'm3', value: r.toArray() })
            : r && r.isMatrix4
            ? (t.uniforms[n] = { type: 'm4', value: r.toArray() })
            : (t.uniforms[n] = { value: r });
        }
        Object.keys(this.defines).length > 0 && (t.defines = this.defines),
          (t.vertexShader = this.vertexShader),
          (t.fragmentShader = this.fragmentShader);
        var a = {};
        for (var o in this.extensions) !0 === this.extensions[o] && (a[o] = !0);
        return Object.keys(a).length > 0 && (t.extensions = a), t;
      }),
      (Jr.prototype = Object.assign(Object.create(Zn.prototype), {
        constructor: Jr,
        isCamera: !0,
        copy: function (e, t) {
          return (
            Zn.prototype.copy.call(this, e, t),
            this.matrixWorldInverse.copy(e.matrixWorldInverse),
            this.projectionMatrix.copy(e.projectionMatrix),
            this.projectionMatrixInverse.copy(e.projectionMatrixInverse),
            this
          );
        },
        getWorldDirection: function (e) {
          void 0, void 0 === e && (e = new xn()), this.updateMatrixWorld(!0);
          var t = this.matrixWorld.elements;
          return e.set(-t[8], -t[9], -t[10]).normalize();
        },
        updateMatrixWorld: function (e) {
          Zn.prototype.updateMatrixWorld.call(this, e),
            this.matrixWorldInverse.getInverse(this.matrixWorld);
        },
        updateWorldMatrix: function (e, t) {
          Zn.prototype.updateWorldMatrix.call(this, e, t),
            this.matrixWorldInverse.getInverse(this.matrixWorld);
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
      })),
      (Zr.prototype = Object.assign(Object.create(Jr.prototype), {
        constructor: Zr,
        isPerspectiveCamera: !0,
        copy: function (e, t) {
          return (
            Jr.prototype.copy.call(this, e, t),
            (this.fov = e.fov),
            (this.zoom = e.zoom),
            (this.near = e.near),
            (this.far = e.far),
            (this.focus = e.focus),
            (this.aspect = e.aspect),
            (this.view = null === e.view ? null : Object.assign({}, e.view)),
            (this.filmGauge = e.filmGauge),
            (this.filmOffset = e.filmOffset),
            this
          );
        },
        setFocalLength: function (e) {
          var t = (0.5 * this.getFilmHeight()) / e;
          (this.fov = 2 * hn.RAD2DEG * Math.atan(t)),
            this.updateProjectionMatrix();
        },
        getFocalLength: function () {
          var e = Math.tan(0.5 * hn.DEG2RAD * this.fov);
          return (0.5 * this.getFilmHeight()) / e;
        },
        getEffectiveFOV: function () {
          return (
            2 *
            hn.RAD2DEG *
            Math.atan(Math.tan(0.5 * hn.DEG2RAD * this.fov) / this.zoom)
          );
        },
        getFilmWidth: function () {
          return this.filmGauge * Math.min(this.aspect, 1);
        },
        getFilmHeight: function () {
          return this.filmGauge / Math.max(this.aspect, 1);
        },
        setViewOffset: function (e, t, n, i, r, a) {
          (this.aspect = e / t),
            null === this.view &&
              (this.view = {
                enabled: !0,
                fullWidth: 1,
                fullHeight: 1,
                offsetX: 0,
                offsetY: 0,
                width: 1,
                height: 1,
              }),
            (this.view.enabled = !0),
            (this.view.fullWidth = e),
            (this.view.fullHeight = t),
            (this.view.offsetX = n),
            (this.view.offsetY = i),
            (this.view.width = r),
            (this.view.height = a),
            this.updateProjectionMatrix();
        },
        clearViewOffset: function () {
          null !== this.view && (this.view.enabled = !1),
            this.updateProjectionMatrix();
        },
        updateProjectionMatrix: function () {
          var e = this.near,
            t = (e * Math.tan(0.5 * hn.DEG2RAD * this.fov)) / this.zoom,
            n = 2 * t,
            i = this.aspect * n,
            r = -0.5 * i,
            a = this.view;
          if (null !== this.view && this.view.enabled) {
            var o = a.fullWidth,
              s = a.fullHeight;
            (r += (a.offsetX * i) / o),
              (t -= (a.offsetY * n) / s),
              (i *= a.width / o),
              (n *= a.height / s);
          }
          var c = this.filmOffset;
          0 !== c && (r += (e * c) / this.getFilmWidth()),
            this.projectionMatrix.makePerspective(
              r,
              r + i,
              t,
              t - n,
              e,
              this.far
            ),
            this.projectionMatrixInverse.getInverse(this.projectionMatrix);
        },
        toJSON: function (e) {
          var t = Zn.prototype.toJSON.call(this, e);
          return (
            (t.object.fov = this.fov),
            (t.object.zoom = this.zoom),
            (t.object.near = this.near),
            (t.object.far = this.far),
            (t.object.focus = this.focus),
            (t.object.aspect = this.aspect),
            null !== this.view &&
              (t.object.view = Object.assign({}, this.view)),
            (t.object.filmGauge = this.filmGauge),
            (t.object.filmOffset = this.filmOffset),
            t
          );
        },
      }));
    var Kr = 90,
      Qr = 1;
    function $r(e, t, n, i) {
      Zn.call(this), (this.type = 'CubeCamera');
      var r = new Zr(Kr, Qr, e, t);
      r.up.set(0, -1, 0), r.lookAt(new xn(1, 0, 0)), this.add(r);
      var a = new Zr(Kr, Qr, e, t);
      a.up.set(0, -1, 0), a.lookAt(new xn(-1, 0, 0)), this.add(a);
      var o = new Zr(Kr, Qr, e, t);
      o.up.set(0, 0, 1), o.lookAt(new xn(0, 1, 0)), this.add(o);
      var s = new Zr(Kr, Qr, e, t);
      s.up.set(0, 0, -1), s.lookAt(new xn(0, -1, 0)), this.add(s);
      var c = new Zr(Kr, Qr, e, t);
      c.up.set(0, -1, 0), c.lookAt(new xn(0, 0, 1)), this.add(c);
      var u = new Zr(Kr, Qr, e, t);
      u.up.set(0, -1, 0),
        u.lookAt(new xn(0, 0, -1)),
        this.add(u),
        (i = i || { format: Ce, magFilter: fe, minFilter: fe }),
        (this.renderTarget = new ea(n, i)),
        (this.renderTarget.texture.name = 'CubeCamera'),
        (this.update = function (e, t) {
          null === this.parent && this.updateMatrixWorld();
          var n = e.getRenderTarget(),
            i = this.renderTarget,
            l = i.texture.generateMipmaps;
          (i.texture.generateMipmaps = !1),
            e.setRenderTarget(i, 0),
            e.render(t, r),
            e.setRenderTarget(i, 1),
            e.render(t, a),
            e.setRenderTarget(i, 2),
            e.render(t, o),
            e.setRenderTarget(i, 3),
            e.render(t, s),
            e.setRenderTarget(i, 4),
            e.render(t, c),
            (i.texture.generateMipmaps = l),
            e.setRenderTarget(i, 5),
            e.render(t, u),
            e.setRenderTarget(n);
        }),
        (this.clear = function (e, t, n, i) {
          for (
            var r = e.getRenderTarget(), a = this.renderTarget, o = 0;
            o < 6;
            o++
          )
            e.setRenderTarget(a, o), e.clear(t, n, i);
          e.setRenderTarget(r);
        });
    }
    function ea(e, t, n) {
      Number.isInteger(t) && (void 0, (t = n)), gn.call(this, e, e, t);
    }
    function ta(e, t, n, i, r, a, o, s, c, u, l, d) {
      Mn.call(this, null, a, o, s, c, u, i, r, l, d),
        (this.image = { data: e || null, width: t || 1, height: n || 1 }),
        (this.magFilter = void 0 !== c ? c : he),
        (this.minFilter = void 0 !== u ? u : he),
        (this.generateMipmaps = !1),
        (this.flipY = !1),
        (this.unpackAlignment = 1),
        (this.needsUpdate = !0);
    }
    ($r.prototype = Object.create(Zn.prototype)),
      ($r.prototype.constructor = $r),
      (ea.prototype = Object.create(gn.prototype)),
      (ea.prototype.constructor = ea),
      (ea.prototype.isWebGLCubeRenderTarget = !0),
      (ea.prototype.fromEquirectangularTexture = function (e, t) {
        (this.texture.type = t.type),
          (this.texture.format = t.format),
          (this.texture.encoding = t.encoding);
        var n = new Kn(),
          i = {
            uniforms: { tEquirect: { value: null } },
            vertexShader: [
              'varying vec3 vWorldDirection;',
              'vec3 transformDirection( in vec3 dir, in mat4 matrix ) {',
              '\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );',
              '}',
              'void main() {',
              '\tvWorldDirection = transformDirection( position, modelMatrix );',
              '\t#include <begin_vertex>',
              '\t#include <project_vertex>',
              '}',
            ].join('\n'),
            fragmentShader: [
              'uniform sampler2D tEquirect;',
              'varying vec3 vWorldDirection;',
              '#define RECIPROCAL_PI 0.31830988618',
              '#define RECIPROCAL_PI2 0.15915494',
              'void main() {',
              '\tvec3 direction = normalize( vWorldDirection );',
              '\tvec2 sampleUV;',
              '\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;',
              '\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;',
              '\tgl_FragColor = texture2D( tEquirect, sampleUV );',
              '}',
            ].join('\n'),
          },
          r = new Gr({
            type: 'CubemapFromEquirect',
            uniforms: Hr(i.uniforms),
            vertexShader: i.vertexShader,
            fragmentShader: i.fragmentShader,
            side: p,
            blending: _,
          });
        r.uniforms.tEquirect.value = t;
        var a = new Dr(new qr(5, 5, 5), r);
        n.add(a);
        var o = new $r(1, 10, 1);
        return (
          (o.renderTarget = this),
          (o.renderTarget.texture.name = 'CubeCameraTexture'),
          o.update(e, n),
          a.geometry.dispose(),
          a.material.dispose(),
          this
        );
      }),
      (ta.prototype = Object.create(Mn.prototype)),
      (ta.prototype.constructor = ta),
      (ta.prototype.isDataTexture = !0);
    var na = new mi(),
      ia = new xn();
    function ra(e, t, n, i, r, a) {
      this.planes = [
        void 0 !== e ? e : new Ti(),
        void 0 !== t ? t : new Ti(),
        void 0 !== n ? n : new Ti(),
        void 0 !== i ? i : new Ti(),
        void 0 !== r ? r : new Ti(),
        void 0 !== a ? a : new Ti(),
      ];
    }
    Object.assign(ra.prototype, {
      set: function (e, t, n, i, r, a) {
        var o = this.planes;
        return (
          o[0].copy(e),
          o[1].copy(t),
          o[2].copy(n),
          o[3].copy(i),
          o[4].copy(r),
          o[5].copy(a),
          this
        );
      },
      clone: function () {
        return new this.constructor().copy(this);
      },
      copy: function (e) {
        for (var t = this.planes, n = 0; n < 6; n++) t[n].copy(e.planes[n]);
        return this;
      },
      setFromProjectionMatrix: function (e) {
        var t = this.planes,
          n = e.elements,
          i = n[0],
          r = n[1],
          a = n[2],
          o = n[3],
          s = n[4],
          c = n[5],
          u = n[6],
          l = n[7],
          d = n[8],
          h = n[9],
          p = n[10],
          m = n[11],
          f = n[12],
          _ = n[13],
          M = n[14],
          v = n[15];
        return (
          t[0].setComponents(o - i, l - s, m - d, v - f).normalize(),
          t[1].setComponents(o + i, l + s, m + d, v + f).normalize(),
          t[2].setComponents(o + r, l + c, m + h, v + _).normalize(),
          t[3].setComponents(o - r, l - c, m - h, v - _).normalize(),
          t[4].setComponents(o - a, l - u, m - p, v - M).normalize(),
          t[5].setComponents(o + a, l + u, m + p, v + M).normalize(),
          this
        );
      },
      intersectsObject: function (e) {
        var t = e.geometry;
        return (
          null === t.boundingSphere && t.computeBoundingSphere(),
          na.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),
          this.intersectsSphere(na)
        );
      },
      intersectsSprite: function (e) {
        return (
          na.center.set(0, 0, 0),
          (na.radius = 0.7071067811865476),
          na.applyMatrix4(e.matrixWorld),
          this.intersectsSphere(na)
        );
      },
      intersectsSphere: function (e) {
        for (
          var t = this.planes, n = e.center, i = -e.radius, r = 0;
          r < 6;
          r++
        ) {
          var a = t[r].distanceToPoint(n);
          if (a < i) return !1;
        }
        return !0;
      },
      intersectsBox: function (e) {
        for (var t = this.planes, n = 0; n < 6; n++) {
          var i = t[n];
          if (
            ((ia.x = i.normal.x > 0 ? e.max.x : e.min.x),
            (ia.y = i.normal.y > 0 ? e.max.y : e.min.y),
            (ia.z = i.normal.z > 0 ? e.max.z : e.min.z),
            i.distanceToPoint(ia) < 0)
          )
            return !1;
        }
        return !0;
      },
      containsPoint: function (e) {
        for (var t = this.planes, n = 0; n < 6; n++)
          if (t[n].distanceToPoint(e) < 0) return !1;
        return !0;
      },
    });
    var aa = {
      common: {
        diffuse: { value: new Ii(15658734) },
        opacity: { value: 1 },
        map: { value: null },
        uvTransform: { value: new mn() },
        uv2Transform: { value: new mn() },
        alphaMap: { value: null },
      },
      specularmap: { specularMap: { value: null } },
      envmap: {
        envMap: { value: null },
        flipEnvMap: { value: -1 },
        reflectivity: { value: 1 },
        refractionRatio: { value: 0.98 },
        maxMipLevel: { value: 0 },
      },
      aomap: { aoMap: { value: null }, aoMapIntensity: { value: 1 } },
      lightmap: { lightMap: { value: null }, lightMapIntensity: { value: 1 } },
      emissivemap: { emissiveMap: { value: null } },
      bumpmap: { bumpMap: { value: null }, bumpScale: { value: 1 } },
      normalmap: {
        normalMap: { value: null },
        normalScale: { value: new pn(1, 1) },
      },
      displacementmap: {
        displacementMap: { value: null },
        displacementScale: { value: 1 },
        displacementBias: { value: 0 },
      },
      roughnessmap: { roughnessMap: { value: null } },
      metalnessmap: { metalnessMap: { value: null } },
      gradientmap: { gradientMap: { value: null } },
      fog: {
        fogDensity: { value: 25e-5 },
        fogNear: { value: 1 },
        fogFar: { value: 2e3 },
        fogColor: { value: new Ii(16777215) },
      },
      lights: {
        ambientLightColor: { value: [] },
        lightProbe: { value: [] },
        directionalLights: {
          value: [],
          properties: { direction: {}, color: {} },
        },
        directionalLightShadows: {
          value: [],
          properties: { shadowBias: {}, shadowRadius: {}, shadowMapSize: {} },
        },
        directionalShadowMap: { value: [] },
        directionalShadowMatrix: { value: [] },
        spotLights: {
          value: [],
          properties: {
            color: {},
            position: {},
            direction: {},
            distance: {},
            coneCos: {},
            penumbraCos: {},
            decay: {},
          },
        },
        spotLightShadows: {
          value: [],
          properties: { shadowBias: {}, shadowRadius: {}, shadowMapSize: {} },
        },
        spotShadowMap: { value: [] },
        spotShadowMatrix: { value: [] },
        pointLights: {
          value: [],
          properties: { color: {}, position: {}, decay: {}, distance: {} },
        },
        pointLightShadows: {
          value: [],
          properties: {
            shadowBias: {},
            shadowRadius: {},
            shadowMapSize: {},
            shadowCameraNear: {},
            shadowCameraFar: {},
          },
        },
        pointShadowMap: { value: [] },
        pointShadowMatrix: { value: [] },
        hemisphereLights: {
          value: [],
          properties: { direction: {}, skyColor: {}, groundColor: {} },
        },
        rectAreaLights: {
          value: [],
          properties: { color: {}, position: {}, width: {}, height: {} },
        },
      },
      points: {
        diffuse: { value: new Ii(15658734) },
        opacity: { value: 1 },
        size: { value: 1 },
        scale: { value: 1 },
        map: { value: null },
        alphaMap: { value: null },
        uvTransform: { value: new mn() },
      },
      sprite: {
        diffuse: { value: new Ii(15658734) },
        opacity: { value: 1 },
        center: { value: new pn(0.5, 0.5) },
        rotation: { value: 0 },
        map: { value: null },
        alphaMap: { value: null },
        uvTransform: { value: new mn() },
      },
    };
    function oa() {
      var e = null,
        t = !1,
        n = null;
      function i(r, a) {
        !1 !== t && (n(r, a), e.requestAnimationFrame(i));
      }
      return {
        start: function () {
          !0 !== t && null !== n && (e.requestAnimationFrame(i), (t = !0));
        },
        stop: function () {
          t = !1;
        },
        setAnimationLoop: function (e) {
          n = e;
        },
        setContext: function (t) {
          e = t;
        },
      };
    }
    function sa(e, t) {
      var n = t.isWebGL2,
        i = new WeakMap();
      function r(t, n) {
        var i = t.array,
          r = t.usage,
          a = e.createBuffer();
        e.bindBuffer(n, a), e.bufferData(n, i, r), t.onUploadCallback();
        var o = 5126;
        return (
          i instanceof Float32Array
            ? (o = 5126)
            : i instanceof Float64Array
            ? void 0
            : i instanceof Uint16Array
            ? (o = 5123)
            : i instanceof Int16Array
            ? (o = 5122)
            : i instanceof Uint32Array
            ? (o = 5125)
            : i instanceof Int32Array
            ? (o = 5124)
            : i instanceof Int8Array
            ? (o = 5120)
            : i instanceof Uint8Array && (o = 5121),
          {
            buffer: a,
            type: o,
            bytesPerElement: i.BYTES_PER_ELEMENT,
            version: t.version,
          }
        );
      }
      function a(t, i, r) {
        var a = i.array,
          o = i.updateRange;
        e.bindBuffer(r, t),
          -1 === o.count
            ? e.bufferSubData(r, 0, a)
            : (n
                ? e.bufferSubData(
                    r,
                    o.offset * a.BYTES_PER_ELEMENT,
                    a,
                    o.offset,
                    o.count
                  )
                : e.bufferSubData(
                    r,
                    o.offset * a.BYTES_PER_ELEMENT,
                    a.subarray(o.offset, o.offset + o.count)
                  ),
              (o.count = -1));
      }
      function o(e) {
        return e.isInterleavedBufferAttribute && (e = e.data), i.get(e);
      }
      function s(t) {
        t.isInterleavedBufferAttribute && (t = t.data);
        var n = i.get(t);
        n && (e.deleteBuffer(n.buffer), i.delete(t));
      }
      function c(e, t) {
        e.isInterleavedBufferAttribute && (e = e.data);
        var n = i.get(e);
        void 0 === n
          ? i.set(e, r(e, t))
          : n.version < e.version &&
            (a(n.buffer, e, t), (n.version = e.version));
      }
      return { get: o, remove: s, update: c };
    }
    function ca(e, t, n, i) {
      Wr.call(this),
        (this.type = 'PlaneGeometry'),
        (this.parameters = {
          width: e,
          height: t,
          widthSegments: n,
          heightSegments: i,
        }),
        this.fromBufferGeometry(new ua(e, t, n, i)),
        this.mergeVertices();
    }
    function ua(e, t, n, i) {
      fr.call(this),
        (this.type = 'PlaneBufferGeometry'),
        (this.parameters = {
          width: e,
          height: t,
          widthSegments: n,
          heightSegments: i,
        }),
        (e = e || 1),
        (t = t || 1);
      var r,
        a,
        o = e / 2,
        s = t / 2,
        c = Math.floor(n) || 1,
        u = Math.floor(i) || 1,
        l = c + 1,
        d = u + 1,
        h = e / c,
        p = t / u,
        m = [],
        f = [],
        _ = [],
        M = [];
      for (a = 0; a < d; a++) {
        var v = a * p - s;
        for (r = 0; r < l; r++) {
          var g = r * h - o;
          f.push(g, -v, 0), _.push(0, 0, 1), M.push(r / c), M.push(1 - a / u);
        }
      }
      for (a = 0; a < u; a++)
        for (r = 0; r < c; r++) {
          var y = r + l * a,
            b = r + l * (a + 1),
            w = r + 1 + l * (a + 1),
            A = r + 1 + l * a;
          m.push(y, b, A), m.push(b, w, A);
        }
      this.setIndex(m),
        this.setAttribute('position', new rr(f, 3)),
        this.setAttribute('normal', new rr(_, 3)),
        this.setAttribute('uv', new rr(M, 2));
    }
    (ca.prototype = Object.create(Wr.prototype)),
      (ca.prototype.constructor = ca),
      (ua.prototype = Object.create(fr.prototype)),
      (ua.prototype.constructor = ua);
    var la =
        '#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif',
      da = '#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif',
      ha =
        '#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif',
      pa =
        '#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, AOMAP_UV_CHANNEL ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif',
      ma =
        '#ifdef USE_AOMAP\n#ifndef AOMAP_UV_CHANNEL\n#define AOMAP_UV_CHANNEL vUv2\n#endif\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif',
      fa = 'vec3 transformed = vec3( position );',
      _a =
        'vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif',
      Ma =
        'vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha  = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif',
      va =
        '#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif',
      ga =
        '#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif',
      ya =
        '#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif',
      ba = '#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif',
      wa =
        '#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif',
      Aa = '#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif',
      xa = '#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif',
      La = '#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif',
      Ta = '#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif',
      za =
        '#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n  return m[ 2 ][ 3 ] == - 1.0;\n}',
      Sa =
        '#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_maxMipLevel 8.0\n#define cubeUV_minMipLevel 4.0\n#define cubeUV_maxTileSize 256.0\n#define cubeUV_minTileSize 16.0\nfloat getFace(vec3 direction) {\n    vec3 absDirection = abs(direction);\n    float face = -1.0;\n    if (absDirection.x > absDirection.z) {\n      if (absDirection.x > absDirection.y)\n        face = direction.x > 0.0 ? 0.0 : 3.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    } else {\n      if (absDirection.z > absDirection.y)\n        face = direction.z > 0.0 ? 2.0 : 5.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    }\n    return face;\n}\nvec2 getUV(vec3 direction, float face) {\n    vec2 uv;\n    if (face == 0.0) {\n      uv = vec2(-direction.z, direction.y) / abs(direction.x);\n    } else if (face == 1.0) {\n      uv = vec2(direction.x, -direction.z) / abs(direction.y);\n    } else if (face == 2.0) {\n      uv = direction.xy / abs(direction.z);\n    } else if (face == 3.0) {\n      uv = vec2(direction.z, direction.y) / abs(direction.x);\n    } else if (face == 4.0) {\n      uv = direction.xz / abs(direction.y);\n    } else {\n      uv = vec2(-direction.x, direction.y) / abs(direction.z);\n    }\n    return 0.5 * (uv + 1.0);\n}\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\n  float face = getFace(direction);\n  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\n  mipInt = max(mipInt, cubeUV_minMipLevel);\n  float faceSize = exp2(mipInt);\n  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\n  vec2 uv = getUV(direction, face) * (faceSize - 1.0);\n  vec2 f = fract(uv);\n  uv += 0.5 - f;\n  if (face > 2.0) {\n    uv.y += faceSize;\n    face -= 3.0;\n  }\n  uv.x += face * faceSize;\n  if(mipInt < cubeUV_maxMipLevel){\n    uv.y += 2.0 * cubeUV_maxTileSize;\n  }\n  uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\n  uv *= texelSize;\n  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x += texelSize;\n  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.y += texelSize;\n  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x -= texelSize;\n  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  vec3 tm = mix(tl, tr, f.x);\n  vec3 bm = mix(bl, br, f.x);\n  return mix(tm, bm, f.y);\n}\n#define r0 1.0\n#define v0 0.339\n#define m0 -2.0\n#define r1 0.8\n#define v1 0.276\n#define m1 -1.0\n#define r4 0.4\n#define v4 0.046\n#define m4 2.0\n#define r5 0.305\n#define v5 0.016\n#define m5 3.0\n#define r6 0.21\n#define v6 0.0038\n#define m6 4.0\nfloat roughnessToMip(float roughness) {\n  float mip = 0.0;\n  if (roughness >= r1) {\n    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\n  } else if (roughness >= r4) {\n    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\n  } else if (roughness >= r5) {\n    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\n  } else if (roughness >= r6) {\n    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\n  } else {\n    mip = -2.0 * log2(1.16 * roughness);  }\n  return mip;\n}\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\n  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\n  float mipF = fract(mip);\n  float mipInt = floor(mip);\n  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);\n  if (mipF == 0.0) {\n    return vec4(color0, 1.0);\n  } else {\n    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\n    return vec4(mix(color0, color1, mipF), 1.0);\n  }\n}\n#endif',
      Oa =
        'vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif',
      Ea =
        '#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif',
      ka =
        '#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif',
      Ca =
        '#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif',
      Da = '#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif',
      Na = 'gl_FragColor = linearToOutputTexel( gl_FragColor );',
      Pa =
        '\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}',
      ja =
        '#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\t\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t}  else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif',
      Ya =
        '#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif',
      Ra =
        '#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif',
      Ba =
        '#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif',
      Wa =
        '#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) { \n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif',
      Ia = '#ifdef USE_FOG\n\tfogDepth = -mvPosition.z;\n#endif',
      qa = '#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif',
      Ha =
        '#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif',
      Fa =
        '#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif',
      Ua =
        '#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}',
      Xa =
        '#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif',
      Va =
        '#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif',
      Ga =
        'vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif',
      Ja =
        'uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif',
      Za =
        '#if defined( USE_ENVMAP )\n#ifndef ENV_MAP_DIFFUSE_MULTIPLIER\n#define ENV_MAP_DIFFUSE_MULTIPLIER 1.0\n#endif\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = ENV_MAP_DIFFUSE_MULTIPLIER * textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = ENV_MAP_DIFFUSE_MULTIPLIER * textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = ENV_MAP_DIFFUSE_MULTIPLIER * textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t  vec3 reflectVec = reflect( -viewDir, normal );\n\t\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif',
      Ka =
        'ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;',
      Qa =
        'varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)',
      $a =
        'BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;',
      eo =
        'varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)',
      to =
        'PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif',
      no =
        'struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}',
      io =
        '\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif',
      ro =
        '#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif',
      ao =
        '#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif',
      oo =
        '#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif',
      so =
        '#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif',
      co =
        '#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif',
      uo =
        '#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif',
      lo =
        '#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif',
      ho = '#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif',
      po =
        '#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif',
      mo =
        '#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif',
      fo =
        'float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif',
      _o = '#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif',
      Mo =
        '#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif',
      vo =
        '#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif',
      go =
        '#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif',
      yo =
        '#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;',
      bo =
        '#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif',
      wo =
        '#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif',
      Ao = '#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif',
      xo =
        '#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif',
      Lo =
        '#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif',
      To =
        'vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}',
      zo =
        '#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif',
      So =
        'vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;',
      Oo =
        '#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif',
      Eo =
        '#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif',
      ko =
        'float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif',
      Co = '#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif',
      Do =
        '#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tvec2 rand(in vec2 coord, in vec2 screenSize){\t\tfloat noiseX = ((fract(1.0-coord.s*(screenSize.x/2.0))*0.25)+(fract(coord.t*(screenSize.y/2.0))*0.75))*2.0-1.0;\n\t\tfloat noiseY = ((fract(1.0-coord.s*(screenSize.x/2.0))*0.75)+(fract(coord.t*(screenSize.y/2.0))*0.25))*2.0-1.0;\n\t\tnoiseX = clamp(fract(sin(dot(coord ,vec2(12.9898,78.233))) * 43758.5453),0.0,1.0)*2.0-1.0;\n\t\tnoiseY = clamp(fract(sin(dot(coord ,vec2(12.9898,78.233)*2.0)) * 43758.5453),0.0,1.0)*2.0-1.0;\n\t\treturn vec2(noiseX, noiseY)*0.001;\n\t}\n\tfloat getShadowWithRotation( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float rotationOffset ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_POISSON ) || defined( SHADOWMAP_TYPE_PCF_POISSON_LOW )\n\t\t\tvec2 size = vec2( 1.0 ) / shadowMapSize * shadowRadius;\n\t\t\tvec2 random = rand(shadowCoord.xy, shadowMapSize);\n\t\t\tvec2 offset = fract(random * 1984.0) - 0.5;\n\t\t\tfloat c = cos(rotationOffset * 6.28);\n\t\t\tfloat s = sin(rotationOffset * 6.28);\n\t\t\tmat2 r = mat2(\n\t\t\t\tc, s,\n\t\t\t\t-s, c\n\t\t\t);\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF_POISSON )\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + (r * vec2( -0.2950385, 0.7193102 ) + offset) * size, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + (r * vec2( -0.07911481, -0.4511923 ) + offset) * size, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + (r * vec2( -0.8658563, 0.2036765 ) + offset) * size, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + (r * vec2( 0.3730283, 0.6626598 ) + offset) * size, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + (r * vec2( 0.5677469, -0.7365322 ) + offset) * size, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + (r * vec2( 0.4154446, 0.01343447 ) + offset) * size, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + (r * vec2( -0.8669648, -0.4146579 ) + offset) * size, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + (r * vec2( 0.9594449, -0.2792563 ) + offset) * size, shadowCoord.z )\n\t\t\t) * (1.0 / 8.0);\n\t\t\t#else\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + (r * vec2( 0.177901, 0.5318364 ) + offset) * size, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + (r * vec2( -0.3858116, -0.2659796 ) + offset) * size, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + (r * vec2( 0.6301503, -0.6191077 ) + offset) * size, shadowCoord.z )\n\t\t\t) * (1.0 / 3.0);\n\t\t\t#endif\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\treturn getShadowWithRotation( shadowMap, shadowMapSize, shadowBias, shadowRadius, shadowCoord, 0.0 );\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadowWithRotation( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar, float rotationOffset ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_POISSON ) || defined( SHADOWMAP_TYPE_PCF_POISSON_LOW )\n\t\t\tvec2 size = vec2( 1.0 ) / shadowMapSize * shadowRadius;\n\t\t\tvec2 random = rand(shadowCoord.xy, shadowMapSize);\n\t\t\tvec2 offset = fract(random * 1984.0) * vec2(4.0, 4.0);\n\t\t\tfloat c = cos(rotationOffset * 6.28);\n\t\t\tfloat s = sin(rotationOffset * 6.28);\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF_POISSON )\n\t\t\tmat2 r = mat2(\n\t\t\t\tc, s,\n\t\t\t\t-s, c\n\t\t\t);\n\t\t\tvec2 offset3 = (r * vec2( -offset.x, offset.y )) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset3.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset3.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset3.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset3.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset3.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset3.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset3.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset3.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 8.0 );\n\t\t\t#else\n\t\t\tvec3 offset3 = (vec3(offset.x, offset.y, offset.x * offset.y / 16.0) * 2.0 - 1.0) * shadowRadius * texelSize.y;\n\t\t\tmat3 r = mat3(\n\t\t\t\tc, s*c, s*s,\n\t\t\t\t-s, c*c, c*s,\n\t\t\t\t0, -s, c\n\t\t\t);\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + r * offset3.xyz, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + r * offset3.yzx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + r * offset3.zxy, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 3.0 );\n\t\t\t#endif\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\treturn getPointShadowWithRotation( shadowMap, shadowMapSize, shadowBias, shadowRadius, shadowCoord, shadowCameraNear, shadowCameraFar, 0.0 );\n\t}\n#endif',
      No =
        '#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif',
      Po =
        '#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif',
      jo =
        'float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}',
      Yo =
        '#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif',
      Ro =
        '#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif',
      Bo =
        '#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif',
      Wo =
        '#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif',
      Io =
        'float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif',
      qo = '#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif',
      Ho =
        '#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif',
      Fo =
        '#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n}',
      Uo =
        '#if ( (defined( USE_UV ) || defined( USE_AOMAP )) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif',
      Xo =
        '#if (defined( USE_UV ) || defined( USE_AOMAP ))\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif',
      Vo =
        '#if (defined( USE_UV ) || defined( USE_AOMAP ))\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif',
      Go =
        '#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif',
      Jo =
        '#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif',
      Zo =
        '#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif',
      Ko =
        '#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif',
      Qo =
        'uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}',
      $o =
        'varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}',
      es =
        '#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}',
      ts =
        'varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}',
      ns =
        '#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}',
      is =
        '#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}',
      rs =
        '#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}',
      as =
        '#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}',
      os =
        'uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}',
      ss =
        'varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}',
      cs =
        'uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}',
      us =
        'uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}',
      ls =
        'uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}',
      ds =
        '#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}',
      hs =
        'uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}',
      ps =
        '#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}',
      ms =
        '#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}',
      fs =
        '#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}',
      _s =
        '#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}',
      Ms =
        '#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}',
      vs =
        '#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}',
      gs =
        '#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}',
      ys =
        '#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSPARENCY\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSPARENCY\n\tuniform float transparency;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSPARENCY\n\t\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}',
      bs =
        '#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}',
      ws =
        '#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}',
      As =
        '#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}',
      xs =
        'uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}',
      Ls =
        'uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}',
      Ts =
        'uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}',
      zs =
        '#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}',
      Ss =
        'uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}',
      Os =
        'uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}',
      Es = {
        alphamap_fragment: la,
        alphamap_pars_fragment: da,
        alphatest_fragment: ha,
        aomap_fragment: pa,
        aomap_pars_fragment: ma,
        begin_vertex: fa,
        beginnormal_vertex: _a,
        bsdfs: Ma,
        bumpmap_pars_fragment: va,
        clipping_planes_fragment: ga,
        clipping_planes_pars_fragment: ya,
        clipping_planes_pars_vertex: ba,
        clipping_planes_vertex: wa,
        color_fragment: Aa,
        color_pars_fragment: xa,
        color_pars_vertex: La,
        color_vertex: Ta,
        common: za,
        cube_uv_reflection_fragment: Sa,
        defaultnormal_vertex: Oa,
        displacementmap_pars_vertex: Ea,
        displacementmap_vertex: ka,
        emissivemap_fragment: Ca,
        emissivemap_pars_fragment: Da,
        encodings_fragment: Na,
        encodings_pars_fragment: Pa,
        envmap_fragment: ja,
        envmap_common_pars_fragment: Ya,
        envmap_pars_fragment: Ra,
        envmap_pars_vertex: Ba,
        envmap_physical_pars_fragment: Za,
        envmap_vertex: Wa,
        fog_vertex: Ia,
        fog_pars_vertex: qa,
        fog_fragment: Ha,
        fog_pars_fragment: Fa,
        gradientmap_pars_fragment: Ua,
        lightmap_fragment: Xa,
        lightmap_pars_fragment: Va,
        lights_lambert_vertex: Ga,
        lights_pars_begin: Ja,
        lights_toon_fragment: Ka,
        lights_toon_pars_fragment: Qa,
        lights_phong_fragment: $a,
        lights_phong_pars_fragment: eo,
        lights_physical_fragment: to,
        lights_physical_pars_fragment: no,
        lights_fragment_begin: io,
        lights_fragment_maps: ro,
        lights_fragment_end: ao,
        logdepthbuf_fragment: oo,
        logdepthbuf_pars_fragment: so,
        logdepthbuf_pars_vertex: co,
        logdepthbuf_vertex: uo,
        map_fragment: lo,
        map_pars_fragment: ho,
        map_particle_fragment: po,
        map_particle_pars_fragment: mo,
        metalnessmap_fragment: fo,
        metalnessmap_pars_fragment: _o,
        morphnormal_vertex: Mo,
        morphtarget_pars_vertex: vo,
        morphtarget_vertex: go,
        normal_fragment_begin: yo,
        normal_fragment_maps: bo,
        normalmap_pars_fragment: wo,
        clearcoat_normal_fragment_begin: Ao,
        clearcoat_normal_fragment_maps: xo,
        clearcoat_pars_fragment: Lo,
        packing: To,
        premultiplied_alpha_fragment: zo,
        project_vertex: So,
        dithering_fragment: Oo,
        dithering_pars_fragment: Eo,
        roughnessmap_fragment: ko,
        roughnessmap_pars_fragment: Co,
        shadowmap_pars_fragment: Do,
        shadowmap_pars_vertex: No,
        shadowmap_vertex: Po,
        shadowmask_pars_fragment: jo,
        skinbase_vertex: Yo,
        skinning_pars_vertex: Ro,
        skinning_vertex: Bo,
        skinnormal_vertex: Wo,
        specularmap_fragment: Io,
        specularmap_pars_fragment: qo,
        tonemapping_fragment: Ho,
        tonemapping_pars_fragment: Fo,
        uv_pars_fragment: Uo,
        uv_pars_vertex: Xo,
        uv_vertex: Vo,
        uv2_pars_fragment: Go,
        uv2_pars_vertex: Jo,
        uv2_vertex: Zo,
        worldpos_vertex: Ko,
        background_frag: Qo,
        background_vert: $o,
        cube_frag: es,
        cube_vert: ts,
        depth_frag: ns,
        depth_vert: is,
        distanceRGBA_frag: rs,
        distanceRGBA_vert: as,
        equirect_frag: os,
        equirect_vert: ss,
        linedashed_frag: cs,
        linedashed_vert: us,
        meshbasic_frag: ls,
        meshbasic_vert: ds,
        meshlambert_frag: hs,
        meshlambert_vert: ps,
        meshmatcap_frag: ms,
        meshmatcap_vert: fs,
        meshtoon_frag: _s,
        meshtoon_vert: Ms,
        meshphong_frag: vs,
        meshphong_vert: gs,
        meshphysical_frag: ys,
        meshphysical_vert: bs,
        normal_frag: ws,
        normal_vert: As,
        points_frag: xs,
        points_vert: Ls,
        shadow_frag: Ts,
        shadow_vert: zs,
        sprite_frag: Ss,
        sprite_vert: Os,
      },
      ks = {
        basic: {
          uniforms: Fr([
            aa.common,
            aa.specularmap,
            aa.envmap,
            aa.aomap,
            aa.lightmap,
            aa.fog,
          ]),
          vertexShader: Es.meshbasic_vert,
          fragmentShader: Es.meshbasic_frag,
        },
        lambert: {
          uniforms: Fr([
            aa.common,
            aa.specularmap,
            aa.envmap,
            aa.aomap,
            aa.lightmap,
            aa.emissivemap,
            aa.fog,
            aa.lights,
            { emissive: { value: new Ii(0) } },
          ]),
          vertexShader: Es.meshlambert_vert,
          fragmentShader: Es.meshlambert_frag,
        },
        phong: {
          uniforms: Fr([
            aa.common,
            aa.specularmap,
            aa.envmap,
            aa.aomap,
            aa.lightmap,
            aa.emissivemap,
            aa.bumpmap,
            aa.normalmap,
            aa.displacementmap,
            aa.fog,
            aa.lights,
            {
              emissive: { value: new Ii(0) },
              specular: { value: new Ii(1118481) },
              shininess: { value: 30 },
            },
          ]),
          vertexShader: Es.meshphong_vert,
          fragmentShader: Es.meshphong_frag,
        },
        standard: {
          uniforms: Fr([
            aa.common,
            aa.envmap,
            aa.aomap,
            aa.lightmap,
            aa.emissivemap,
            aa.bumpmap,
            aa.normalmap,
            aa.displacementmap,
            aa.roughnessmap,
            aa.metalnessmap,
            aa.fog,
            aa.lights,
            {
              emissive: { value: new Ii(0) },
              roughness: { value: 1 },
              metalness: { value: 0 },
              envMapIntensity: { value: 1 },
            },
          ]),
          vertexShader: Es.meshphysical_vert,
          fragmentShader: Es.meshphysical_frag,
        },
        toon: {
          uniforms: Fr([
            aa.common,
            aa.specularmap,
            aa.aomap,
            aa.lightmap,
            aa.emissivemap,
            aa.bumpmap,
            aa.normalmap,
            aa.displacementmap,
            aa.gradientmap,
            aa.fog,
            aa.lights,
            {
              emissive: { value: new Ii(0) },
              specular: { value: new Ii(1118481) },
              shininess: { value: 30 },
            },
          ]),
          vertexShader: Es.meshtoon_vert,
          fragmentShader: Es.meshtoon_frag,
        },
        matcap: {
          uniforms: Fr([
            aa.common,
            aa.bumpmap,
            aa.normalmap,
            aa.displacementmap,
            aa.fog,
            { matcap: { value: null } },
          ]),
          vertexShader: Es.meshmatcap_vert,
          fragmentShader: Es.meshmatcap_frag,
        },
        points: {
          uniforms: Fr([aa.points, aa.fog]),
          vertexShader: Es.points_vert,
          fragmentShader: Es.points_frag,
        },
        dashed: {
          uniforms: Fr([
            aa.common,
            aa.fog,
            {
              scale: { value: 1 },
              dashSize: { value: 1 },
              totalSize: { value: 2 },
            },
          ]),
          vertexShader: Es.linedashed_vert,
          fragmentShader: Es.linedashed_frag,
        },
        depth: {
          uniforms: Fr([aa.common, aa.displacementmap]),
          vertexShader: Es.depth_vert,
          fragmentShader: Es.depth_frag,
        },
        normal: {
          uniforms: Fr([
            aa.common,
            aa.bumpmap,
            aa.normalmap,
            aa.displacementmap,
            { opacity: { value: 1 } },
          ]),
          vertexShader: Es.normal_vert,
          fragmentShader: Es.normal_frag,
        },
        sprite: {
          uniforms: Fr([aa.sprite, aa.fog]),
          vertexShader: Es.sprite_vert,
          fragmentShader: Es.sprite_frag,
        },
        background: {
          uniforms: { uvTransform: { value: new mn() }, t2D: { value: null } },
          vertexShader: Es.background_vert,
          fragmentShader: Es.background_frag,
        },
        cube: {
          uniforms: Fr([aa.envmap, { opacity: { value: 1 } }]),
          vertexShader: Es.cube_vert,
          fragmentShader: Es.cube_frag,
        },
        equirect: {
          uniforms: { tEquirect: { value: null } },
          vertexShader: Es.equirect_vert,
          fragmentShader: Es.equirect_frag,
        },
        distanceRGBA: {
          uniforms: Fr([
            aa.common,
            aa.displacementmap,
            {
              referencePosition: { value: new xn() },
              nearDistance: { value: 1 },
              farDistance: { value: 1e3 },
            },
          ]),
          vertexShader: Es.distanceRGBA_vert,
          fragmentShader: Es.distanceRGBA_frag,
        },
        shadow: {
          uniforms: Fr([
            aa.lights,
            aa.fog,
            { color: { value: new Ii(0) }, opacity: { value: 1 } },
          ]),
          vertexShader: Es.shadow_vert,
          fragmentShader: Es.shadow_frag,
        },
      };
    function Cs(e, t, n, i) {
      var r,
        a,
        o = new Ii(0),
        s = 0,
        c = null,
        u = 0,
        l = null;
      function d(t, i, d, f) {
        var _ = i.background,
          M = e.xr,
          v = M.getSession && M.getSession();
        if (
          (v && 'additive' === v.environmentBlendMode && (_ = null),
          null === _ ? m(o, s) : _ && _.isColor && (m(_, 1), (f = !0)),
          (e.autoClear || f) &&
            e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil),
          _ &&
            (_.isCubeTexture || _.isWebGLCubeRenderTarget || _.mapping === se))
        ) {
          void 0 === a &&
            ((a = new Dr(
              new qr(1, 1, 1),
              new Gr({
                type: 'BackgroundCubeMaterial',
                uniforms: Hr(ks.cube.uniforms),
                vertexShader: ks.cube.vertexShader,
                fragmentShader: ks.cube.fragmentShader,
                side: p,
                depthTest: !1,
                depthWrite: !1,
                fog: !1,
              })
            )),
            a.geometry.deleteAttribute('normal'),
            a.geometry.deleteAttribute('uv'),
            (a.onBeforeRender = function (e, t, n) {
              this.matrixWorld.copyPosition(n.matrixWorld);
            }),
            Object.defineProperty(a.material, 'envMap', {
              get: function () {
                return this.uniforms.envMap.value;
              },
            }),
            n.update(a));
          var g = _.isWebGLCubeRenderTarget ? _.texture : _;
          (a.material.uniforms.envMap.value = g),
            (a.material.uniforms.flipEnvMap.value = g.isCubeTexture ? -1 : 1),
            (c === _ && u === g.version && l === e.toneMapping) ||
              ((a.material.needsUpdate = !0),
              (c = _),
              (u = g.version),
              (l = e.toneMapping)),
            t.unshift(a, a.geometry, a.material, 0, 0, null);
        } else
          _ &&
            _.isTexture &&
            (void 0 === r &&
              ((r = new Dr(
                new ua(2, 2),
                new Gr({
                  type: 'BackgroundMaterial',
                  uniforms: Hr(ks.background.uniforms),
                  vertexShader: ks.background.vertexShader,
                  fragmentShader: ks.background.fragmentShader,
                  side: h,
                  depthTest: !1,
                  depthWrite: !1,
                  fog: !1,
                })
              )),
              r.geometry.deleteAttribute('normal'),
              Object.defineProperty(r.material, 'map', {
                get: function () {
                  return this.uniforms.t2D.value;
                },
              }),
              n.update(r)),
            (r.material.uniforms.t2D.value = _),
            !0 === _.matrixAutoUpdate && _.updateMatrix(),
            r.material.uniforms.uvTransform.value.copy(_.matrix),
            (c === _ && u === _.version && l === e.toneMapping) ||
              ((r.material.needsUpdate = !0),
              (c = _),
              (u = _.version),
              (l = e.toneMapping)),
            t.unshift(r, r.geometry, r.material, 0, 0, null));
      }
      function m(e, n) {
        t.buffers.color.setClear(e.r, e.g, e.b, n, i);
      }
      return {
        getClearColor: function () {
          return o;
        },
        setClearColor: function (e, t) {
          o.set(e), (s = void 0 !== t ? t : 1), m(o, s);
        },
        getClearAlpha: function () {
          return s;
        },
        setClearAlpha: function (e) {
          (s = e), m(o, s);
        },
        render: d,
      };
    }
    function Ds(e, t, n, i) {
      var r,
        a = i.isWebGL2;
      function o(e) {
        r = e;
      }
      function s(t, i) {
        e.drawArrays(r, t, i), n.update(i, r);
      }
      function c(i, o, s, c) {
        if (0 !== c) {
          var u, l;
          if (a) (u = e), (l = 'drawArraysInstanced');
          else if (
            ((u = t.get('ANGLE_instanced_arrays')),
            (l = 'drawArraysInstancedANGLE'),
            null === u)
          )
            return void 0, void 0;
          u[l](r, o, s, c), n.update(s, r, c);
        }
      }
      (this.setMode = o), (this.render = s), (this.renderInstances = c);
    }
    function Ns(e, t, n) {
      var i;
      function r() {
        if (void 0 !== i) return i;
        var n = t.get('EXT_texture_filter_anisotropic');
        return (
          (i =
            null !== n ? e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0),
          i
        );
      }
      function a(t) {
        if ('highp' === t) {
          if (
            e.getShaderPrecisionFormat(35633, 36338).precision > 0 &&
            e.getShaderPrecisionFormat(35632, 36338).precision > 0
          )
            return 'highp';
          t = 'mediump';
        }
        return 'mediump' === t &&
          e.getShaderPrecisionFormat(35633, 36337).precision > 0 &&
          e.getShaderPrecisionFormat(35632, 36337).precision > 0
          ? 'mediump'
          : 'lowp';
      }
      var o =
          ('undefined' !== typeof WebGL2RenderingContext &&
            e instanceof WebGL2RenderingContext) ||
          ('undefined' !== typeof WebGL2ComputeRenderingContext &&
            e instanceof WebGL2ComputeRenderingContext),
        s = void 0 !== n.precision ? n.precision : 'highp',
        c = a(s);
      void 0, c !== s && (s = c);
      var u = !0 === n.logarithmicDepthBuffer,
        l = e.getParameter(34930),
        d = e.getParameter(35660),
        h = e.getParameter(3379),
        p = e.getParameter(34076),
        m = e.getParameter(34921),
        f = e.getParameter(36347),
        _ = e.getParameter(36348),
        M = e.getParameter(36349),
        v = d > 0,
        g = o || !!t.get('OES_texture_float'),
        y = v && g,
        b = o ? e.getParameter(36183) : 0;
      return {
        isWebGL2: o,
        getMaxAnisotropy: r,
        getMaxPrecision: a,
        precision: s,
        logarithmicDepthBuffer: u,
        maxTextures: l,
        maxVertexTextures: d,
        maxTextureSize: h,
        maxCubemapSize: p,
        maxAttributes: m,
        maxVertexUniforms: f,
        maxVaryings: _,
        maxFragmentUniforms: M,
        vertexTextures: v,
        floatFragmentTextures: g,
        floatVertexTextures: y,
        maxSamples: b,
      };
    }
    function Ps() {
      var e = this,
        t = null,
        n = 0,
        i = !1,
        r = !1,
        a = new Ti(),
        o = new mn(),
        s = { value: null, needsUpdate: !1 };
      function c() {
        s.value !== t && ((s.value = t), (s.needsUpdate = n > 0)),
          (e.numPlanes = n),
          (e.numIntersection = 0);
      }
      function u(t, n, i, r) {
        var c = null !== t ? t.length : 0,
          u = null;
        if (0 !== c) {
          if (((u = s.value), !0 !== r || null === u)) {
            var l = i + 4 * c,
              d = n.matrixWorldInverse;
            o.getNormalMatrix(d),
              (null === u || u.length < l) && (u = new Float32Array(l));
            for (var h = 0, p = i; h !== c; ++h, p += 4)
              a.copy(t[h]).applyMatrix4(d, o),
                a.normal.toArray(u, p),
                (u[p + 3] = a.constant);
          }
          (s.value = u), (s.needsUpdate = !0);
        }
        return (e.numPlanes = c), (e.numIntersection = 0), u;
      }
      (this.uniform = s),
        (this.numPlanes = 0),
        (this.numIntersection = 0),
        (this.init = function (e, r, a) {
          var o = 0 !== e.length || r || 0 !== n || i;
          return (i = r), (t = u(e, a, 0)), (n = e.length), o;
        }),
        (this.beginShadows = function () {
          (r = !0), u(null);
        }),
        (this.endShadows = function () {
          (r = !1), c();
        }),
        (this.setState = function (e, a, o, l, d, h) {
          if (!i || null === e || 0 === e.length || (r && !o))
            r ? u(null) : c();
          else {
            var p = r ? 0 : n,
              m = 4 * p,
              f = d.clippingState || null;
            (s.value = f), (f = u(e, l, m, h));
            for (var _ = 0; _ !== m; ++_) f[_] = t[_];
            (d.clippingState = f),
              (this.numIntersection = a ? this.numPlanes : 0),
              (this.numPlanes += p);
          }
        });
    }
    function js(e) {
      var t = {};
      return {
        get: function (n) {
          if (void 0 !== t[n]) return t[n];
          var i;
          switch (n) {
            case 'WEBGL_depth_texture':
              i =
                e.getExtension('WEBGL_depth_texture') ||
                e.getExtension('MOZ_WEBGL_depth_texture') ||
                e.getExtension('WEBKIT_WEBGL_depth_texture');
              break;
            case 'EXT_texture_filter_anisotropic':
              i =
                e.getExtension('EXT_texture_filter_anisotropic') ||
                e.getExtension('MOZ_EXT_texture_filter_anisotropic') ||
                e.getExtension('WEBKIT_EXT_texture_filter_anisotropic');
              break;
            case 'WEBGL_compressed_texture_s3tc':
              i =
                e.getExtension('WEBGL_compressed_texture_s3tc') ||
                e.getExtension('MOZ_WEBGL_compressed_texture_s3tc') ||
                e.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');
              break;
            case 'WEBGL_compressed_texture_pvrtc':
              i =
                e.getExtension('WEBGL_compressed_texture_pvrtc') ||
                e.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');
              break;
            default:
              i = e.getExtension(n);
          }
          return null === i && void 0, (t[n] = i), i;
        },
      };
    }
    function Ys(e, t, n) {
      var i = new WeakMap(),
        r = new WeakMap();
      function a(e) {
        var o = e.target,
          s = i.get(o);
        for (var c in (null !== s.index && t.remove(s.index), s.attributes))
          t.remove(s.attributes[c]);
        o.removeEventListener('dispose', a), i.delete(o);
        var u = r.get(s);
        u && (t.remove(u), r.delete(s)), n.memory.geometries--;
      }
      function o(e, t) {
        var r = i.get(t);
        return (
          r ||
          (t.addEventListener('dispose', a),
          t.isBufferGeometry
            ? (r = t)
            : t.isGeometry &&
              (void 0 === t._bufferGeometry &&
                (t._bufferGeometry = new fr().setFromObject(e)),
              (r = t._bufferGeometry)),
          i.set(t, r),
          n.memory.geometries++,
          r)
        );
      }
      function s(e) {
        var n = e.index,
          i = e.attributes;
        for (var r in (null !== n && t.update(n, 34963), i))
          t.update(i[r], 34962);
        var a = e.morphAttributes;
        for (var r in a)
          for (var o = a[r], s = 0, c = o.length; s < c; s++)
            t.update(o[s], 34962);
      }
      function c(e) {
        var n = [],
          i = e.index,
          a = e.attributes.position,
          o = 0;
        if (null !== i) {
          var s = i.array;
          o = i.version;
          for (var c = 0, u = s.length; c < u; c += 3) {
            var l = s[c + 0],
              d = s[c + 1],
              h = s[c + 2];
            n.push(l, d, d, h, h, l);
          }
        } else {
          s = a.array;
          o = a.version;
          for (c = 0, u = s.length / 3 - 1; c < u; c += 3) {
            (l = c + 0), (d = c + 1), (h = c + 2);
            n.push(l, d, d, h, h, l);
          }
        }
        var p = new (sr(n) > 65535 ? ir : tr)(n, 1);
        (p.version = o), t.update(p, 34963);
        var m = r.get(e);
        m && t.remove(m), r.set(e, p);
      }
      function u(e) {
        var t = r.get(e);
        if (t) {
          var n = e.index;
          null !== n && t.version < n.version && c(e);
        } else c(e);
        return r.get(e);
      }
      return { get: o, update: s, getWireframeAttribute: u };
    }
    function Rs(e, t, n, i) {
      var r,
        a,
        o,
        s = i.isWebGL2;
      function c(e) {
        r = e;
      }
      function u(e) {
        (a = e.type), (o = e.bytesPerElement);
      }
      function l(t, i) {
        e.drawElements(r, i, a, t * o), n.update(i, r);
      }
      function d(i, c, u, l) {
        if (0 !== l) {
          var d, h;
          if (s) (d = e), (h = 'drawElementsInstanced');
          else if (
            ((d = t.get('ANGLE_instanced_arrays')),
            (h = 'drawElementsInstancedANGLE'),
            null === d)
          )
            return void 0, void 0;
          d[h](r, u, a, c * o, l), n.update(u, r, l);
        }
      }
      (this.setMode = c),
        (this.setIndex = u),
        (this.render = l),
        (this.renderInstances = d);
    }
    function Bs(e) {
      var t = { geometries: 0, textures: 0 },
        n = { frame: 0, calls: 0, triangles: 0, points: 0, lines: 0 };
      function i(e, t, i) {
        switch (((i = i || 1), n.calls++, t)) {
          case 4:
            n.triangles += i * (e / 3);
            break;
          case 1:
            n.lines += i * (e / 2);
            break;
          case 3:
            n.lines += i * (e - 1);
            break;
          case 2:
            n.lines += i * e;
            break;
          case 0:
            n.points += i * e;
            break;
          default:
            void 0;
            break;
        }
      }
      function r() {
        n.frame++,
          (n.calls = 0),
          (n.triangles = 0),
          (n.points = 0),
          (n.lines = 0);
      }
      return {
        memory: t,
        render: n,
        programs: null,
        autoReset: !0,
        reset: r,
        update: i,
      };
    }
    function Ws(e, t) {
      return Math.abs(t[1]) - Math.abs(e[1]);
    }
    function Is(e) {
      var t = {},
        n = new Float32Array(8);
      function i(i, r, a, o) {
        var s = i.morphTargetInfluences,
          c = void 0 === s ? 0 : s.length,
          u = t[r.id];
        if (void 0 === u) {
          u = [];
          for (var l = 0; l < c; l++) u[l] = [l, 0];
          t[r.id] = u;
        }
        var d = a.morphTargets && r.morphAttributes.position,
          h = a.morphNormals && r.morphAttributes.normal;
        for (l = 0; l < c; l++) {
          var p = u[l];
          0 !== p[1] &&
            (d && r.deleteAttribute('morphTarget' + l),
            h && r.deleteAttribute('morphNormal' + l));
        }
        for (l = 0; l < c; l++) {
          p = u[l];
          (p[0] = l), (p[1] = s[l]);
        }
        u.sort(Ws);
        var m = 0;
        for (l = 0; l < 8; l++) {
          p = u[l];
          if (p) {
            var f = p[0],
              _ = p[1];
            if (_) {
              d && r.setAttribute('morphTarget' + l, d[f]),
                h && r.setAttribute('morphNormal' + l, h[f]),
                (n[l] = _),
                (m += _);
              continue;
            }
          }
          n[l] = 0;
        }
        var M = r.morphTargetsRelative ? 1 : 1 - m;
        o.getUniforms().setValue(e, 'morphTargetBaseInfluence', M),
          o.getUniforms().setValue(e, 'morphTargetInfluences', n);
      }
      return { update: i };
    }
    function qs(e, t, n, i) {
      var r = new WeakMap();
      function a(e) {
        var a = i.render.frame,
          o = e.geometry,
          s = t.get(e, o);
        return (
          r.get(s) !== a &&
            (o.isGeometry && s.updateFromObject(e), t.update(s), r.set(s, a)),
          e.isInstancedMesh && n.update(e.instanceMatrix, 34962),
          s
        );
      }
      function o() {
        r = new WeakMap();
      }
      return { update: a, dispose: o };
    }
    function Hs(e, t, n, i, r, a, o, s, c, u) {
      (e = void 0 !== e ? e : []),
        (t = void 0 !== t ? t : ne),
        (o = void 0 !== o ? o : Ce),
        Mn.call(this, e, t, n, i, r, a, o, s, c, u),
        (this.flipY = !1);
    }
    function Fs(e, t, n, i) {
      Mn.call(this, null),
        (this.image = {
          data: e || null,
          width: t || 1,
          height: n || 1,
          depth: i || 1,
        }),
        (this.magFilter = he),
        (this.minFilter = he),
        (this.wrapR = le),
        (this.generateMipmaps = !1),
        (this.flipY = !1),
        (this.needsUpdate = !0);
    }
    function Us(e, t, n, i) {
      Mn.call(this, null),
        (this.image = {
          data: e || null,
          width: t || 1,
          height: n || 1,
          depth: i || 1,
        }),
        (this.magFilter = he),
        (this.minFilter = he),
        (this.wrapR = le),
        (this.generateMipmaps = !1),
        (this.flipY = !1),
        (this.needsUpdate = !0);
    }
    (ks.physical = {
      uniforms: Fr([
        ks.standard.uniforms,
        {
          clearcoat: { value: 0 },
          clearcoatMap: { value: null },
          clearcoatRoughness: { value: 0 },
          clearcoatRoughnessMap: { value: null },
          clearcoatNormalScale: { value: new pn(1, 1) },
          clearcoatNormalMap: { value: null },
          sheen: { value: new Ii(0) },
          transparency: { value: 0 },
        },
      ]),
      vertexShader: Es.meshphysical_vert,
      fragmentShader: Es.meshphysical_frag,
    }),
      (Hs.prototype = Object.create(Mn.prototype)),
      (Hs.prototype.constructor = Hs),
      (Hs.prototype.isCubeTexture = !0),
      Object.defineProperty(Hs.prototype, 'images', {
        get: function () {
          return this.image;
        },
        set: function (e) {
          this.image = e;
        },
      }),
      (Fs.prototype = Object.create(Mn.prototype)),
      (Fs.prototype.constructor = Fs),
      (Fs.prototype.isDataTexture2DArray = !0),
      (Us.prototype = Object.create(Mn.prototype)),
      (Us.prototype.constructor = Us),
      (Us.prototype.isDataTexture3D = !0);
    var Xs = new Mn(),
      Vs = new Fs(),
      Gs = new Us(),
      Js = new Hs(),
      Zs = [],
      Ks = [],
      Qs = new Float32Array(16),
      $s = new Float32Array(9),
      ec = new Float32Array(4);
    function tc(e, t, n) {
      var i = e[0];
      if (i <= 0 || i > 0) return e;
      var r = t * n,
        a = Zs[r];
      if ((void 0 === a && ((a = new Float32Array(r)), (Zs[r] = a)), 0 !== t)) {
        i.toArray(a, 0);
        for (var o = 1, s = 0; o !== t; ++o) (s += n), e[o].toArray(a, s);
      }
      return a;
    }
    function nc(e, t) {
      if (e.length !== t.length) return !1;
      for (var n = 0, i = e.length; n < i; n++) if (e[n] !== t[n]) return !1;
      return !0;
    }
    function ic(e, t) {
      for (var n = 0, i = t.length; n < i; n++) e[n] = t[n];
    }
    function rc(e, t) {
      var n = Ks[t];
      void 0 === n && ((n = new Int32Array(t)), (Ks[t] = n));
      for (var i = 0; i !== t; ++i) n[i] = e.allocateTextureUnit();
      return n;
    }
    function ac(e, t) {
      var n = this.cache;
      n[0] !== t && (e.uniform1f(this.addr, t), (n[0] = t));
    }
    function oc(e, t) {
      var n = this.cache;
      if (void 0 !== t.x)
        (n[0] === t.x && n[1] === t.y) ||
          (e.uniform2f(this.addr, t.x, t.y), (n[0] = t.x), (n[1] = t.y));
      else {
        if (nc(n, t)) return;
        e.uniform2fv(this.addr, t), ic(n, t);
      }
    }
    function sc(e, t) {
      var n = this.cache;
      if (void 0 !== t.x)
        (n[0] === t.x && n[1] === t.y && n[2] === t.z) ||
          (e.uniform3f(this.addr, t.x, t.y, t.z),
          (n[0] = t.x),
          (n[1] = t.y),
          (n[2] = t.z));
      else if (void 0 !== t.r)
        (n[0] === t.r && n[1] === t.g && n[2] === t.b) ||
          (e.uniform3f(this.addr, t.r, t.g, t.b),
          (n[0] = t.r),
          (n[1] = t.g),
          (n[2] = t.b));
      else {
        if (nc(n, t)) return;
        e.uniform3fv(this.addr, t), ic(n, t);
      }
    }
    function cc(e, t) {
      var n = this.cache;
      if (void 0 !== t.x)
        (n[0] === t.x && n[1] === t.y && n[2] === t.z && n[3] === t.w) ||
          (e.uniform4f(this.addr, t.x, t.y, t.z, t.w),
          (n[0] = t.x),
          (n[1] = t.y),
          (n[2] = t.z),
          (n[3] = t.w));
      else {
        if (nc(n, t)) return;
        e.uniform4fv(this.addr, t), ic(n, t);
      }
    }
    function uc(e, t) {
      var n = this.cache,
        i = t.elements;
      if (void 0 === i) {
        if (nc(n, t)) return;
        e.uniformMatrix2fv(this.addr, !1, t), ic(n, t);
      } else {
        if (nc(n, i)) return;
        ec.set(i), e.uniformMatrix2fv(this.addr, !1, ec), ic(n, i);
      }
    }
    function lc(e, t) {
      var n = this.cache,
        i = t.elements;
      if (void 0 === i) {
        if (nc(n, t)) return;
        e.uniformMatrix3fv(this.addr, !1, t), ic(n, t);
      } else {
        if (nc(n, i)) return;
        $s.set(i), e.uniformMatrix3fv(this.addr, !1, $s), ic(n, i);
      }
    }
    function dc(e, t) {
      var n = this.cache,
        i = t.elements;
      if (void 0 === i) {
        if (nc(n, t)) return;
        e.uniformMatrix4fv(this.addr, !1, t), ic(n, t);
      } else {
        if (nc(n, i)) return;
        Qs.set(i), e.uniformMatrix4fv(this.addr, !1, Qs), ic(n, i);
      }
    }
    function hc(e, t, n) {
      var i = this.cache,
        r = n.allocateTextureUnit();
      i[0] !== r && (e.uniform1i(this.addr, r), (i[0] = r)),
        n.safeSetTexture2D(t || Xs, r);
    }
    function pc(e, t, n) {
      var i = this.cache,
        r = n.allocateTextureUnit();
      i[0] !== r && (e.uniform1i(this.addr, r), (i[0] = r)),
        n.setTexture2DArray(t || Vs, r);
    }
    function mc(e, t, n) {
      var i = this.cache,
        r = n.allocateTextureUnit();
      i[0] !== r && (e.uniform1i(this.addr, r), (i[0] = r)),
        n.setTexture3D(t || Gs, r);
    }
    function fc(e, t, n) {
      var i = this.cache,
        r = n.allocateTextureUnit();
      i[0] !== r && (e.uniform1i(this.addr, r), (i[0] = r)),
        n.safeSetTextureCube(t || Js, r);
    }
    function _c(e, t) {
      var n = this.cache;
      n[0] !== t && (e.uniform1i(this.addr, t), (n[0] = t));
    }
    function Mc(e, t) {
      var n = this.cache;
      nc(n, t) || (e.uniform2iv(this.addr, t), ic(n, t));
    }
    function vc(e, t) {
      var n = this.cache;
      nc(n, t) || (e.uniform3iv(this.addr, t), ic(n, t));
    }
    function gc(e, t) {
      var n = this.cache;
      nc(n, t) || (e.uniform4iv(this.addr, t), ic(n, t));
    }
    function yc(e, t) {
      var n = this.cache;
      n[0] !== t && (e.uniform1ui(this.addr, t), (n[0] = t));
    }
    function bc(e) {
      switch (e) {
        case 5126:
          return ac;
        case 35664:
          return oc;
        case 35665:
          return sc;
        case 35666:
          return cc;
        case 35674:
          return uc;
        case 35675:
          return lc;
        case 35676:
          return dc;
        case 5124:
        case 35670:
          return _c;
        case 35667:
        case 35671:
          return Mc;
        case 35668:
        case 35672:
          return vc;
        case 35669:
        case 35673:
          return gc;
        case 5125:
          return yc;
        case 35678:
        case 36198:
        case 36298:
        case 36306:
        case 35682:
          return hc;
        case 35679:
        case 36299:
        case 36307:
          return mc;
        case 35680:
        case 36300:
        case 36308:
        case 36293:
          return fc;
        case 36289:
        case 36303:
        case 36311:
        case 36292:
          return pc;
      }
    }
    function wc(e, t) {
      e.uniform1fv(this.addr, t);
    }
    function Ac(e, t) {
      e.uniform1iv(this.addr, t);
    }
    function xc(e, t) {
      e.uniform2iv(this.addr, t);
    }
    function Lc(e, t) {
      e.uniform3iv(this.addr, t);
    }
    function Tc(e, t) {
      e.uniform4iv(this.addr, t);
    }
    function zc(e, t) {
      var n = tc(t, this.size, 2);
      e.uniform2fv(this.addr, n);
    }
    function Sc(e, t) {
      var n = tc(t, this.size, 3);
      e.uniform3fv(this.addr, n);
    }
    function Oc(e, t) {
      var n = tc(t, this.size, 4);
      e.uniform4fv(this.addr, n);
    }
    function Ec(e, t) {
      var n = tc(t, this.size, 4);
      e.uniformMatrix2fv(this.addr, !1, n);
    }
    function kc(e, t) {
      var n = tc(t, this.size, 9);
      e.uniformMatrix3fv(this.addr, !1, n);
    }
    function Cc(e, t) {
      var n = tc(t, this.size, 16);
      e.uniformMatrix4fv(this.addr, !1, n);
    }
    function Dc(e, t, n) {
      var i = t.length,
        r = rc(n, i);
      e.uniform1iv(this.addr, r);
      for (var a = 0; a !== i; ++a) n.safeSetTexture2D(t[a] || Xs, r[a]);
    }
    function Nc(e, t, n) {
      var i = t.length,
        r = rc(n, i);
      e.uniform1iv(this.addr, r);
      for (var a = 0; a !== i; ++a) n.safeSetTextureCube(t[a] || Js, r[a]);
    }
    function Pc(e) {
      switch (e) {
        case 5126:
          return wc;
        case 35664:
          return zc;
        case 35665:
          return Sc;
        case 35666:
          return Oc;
        case 35674:
          return Ec;
        case 35675:
          return kc;
        case 35676:
          return Cc;
        case 5124:
        case 35670:
          return Ac;
        case 35667:
        case 35671:
          return xc;
        case 35668:
        case 35672:
          return Lc;
        case 35669:
        case 35673:
          return Tc;
        case 35678:
        case 36198:
        case 36298:
        case 36306:
        case 35682:
          return Dc;
        case 35680:
        case 36300:
        case 36308:
        case 36293:
          return Nc;
      }
    }
    function jc(e, t, n) {
      (this.id = e),
        (this.addr = n),
        (this.cache = []),
        (this.setValue = bc(t.type));
    }
    function Yc(e, t, n) {
      (this.id = e),
        (this.addr = n),
        (this.cache = []),
        (this.size = t.size),
        (this.setValue = Pc(t.type));
    }
    function Rc(e) {
      (this.id = e), (this.seq = []), (this.map = {});
    }
    (Yc.prototype.updateCache = function (e) {
      var t = this.cache;
      e instanceof Float32Array &&
        t.length !== e.length &&
        (this.cache = new Float32Array(e.length)),
        ic(t, e);
    }),
      (Rc.prototype.setValue = function (e, t, n) {
        for (var i = this.seq, r = 0, a = i.length; r !== a; ++r) {
          var o = i[r];
          o.setValue(e, t[o.id], n);
        }
      });
    var Bc = /([\w\d_]+)(\])?(\[|\.)?/g;
    function Wc(e, t) {
      e.seq.push(t), (e.map[t.id] = t);
    }
    function Ic(e, t, n) {
      var i = e.name,
        r = i.length;
      Bc.lastIndex = 0;
      while (1) {
        var a = Bc.exec(i),
          o = Bc.lastIndex,
          s = a[1],
          c = ']' === a[2],
          u = a[3];
        if ((c && (s |= 0), void 0 === u || ('[' === u && o + 2 === r))) {
          Wc(n, void 0 === u ? new jc(s, e, t) : new Yc(s, e, t));
          break;
        }
        var l = n.map,
          d = l[s];
        void 0 === d && ((d = new Rc(s)), Wc(n, d)), (n = d);
      }
    }
    function qc(e, t) {
      (this.seq = []), (this.map = {});
      for (var n = e.getProgramParameter(t, 35718), i = 0; i < n; ++i) {
        var r = e.getActiveUniform(t, i),
          a = e.getUniformLocation(t, r.name);
        Ic(r, a, this);
      }
    }
    function Hc(e, t, n) {
      var i = e.createShader(t);
      return e.shaderSource(i, n), e.compileShader(i), i;
    }
    (qc.prototype.setValue = function (e, t, n, i) {
      var r = this.map[t];
      void 0 !== r && r.setValue(e, n, i);
    }),
      (qc.prototype.setOptional = function (e, t, n) {
        var i = t[n];
        void 0 !== i && this.setValue(e, n, i);
      }),
      (qc.upload = function (e, t, n, i) {
        for (var r = 0, a = t.length; r !== a; ++r) {
          var o = t[r],
            s = n[o.id];
          !1 !== s.needsUpdate && o.setValue(e, s.value, i);
        }
      }),
      (qc.seqWithValue = function (e, t) {
        for (var n = [], i = 0, r = e.length; i !== r; ++i) {
          var a = e[i];
          a.id in t && n.push(a);
        }
        return n;
      });
    var Fc = 0;
    function Uc(e) {
      for (var t = e.split('\n'), n = 0; n < t.length; n++)
        t[n] = n + 1 + ': ' + t[n];
      return t.join('\n');
    }
    function Xc(e) {
      switch (e) {
        case Ut:
          return ['Linear', '( value )'];
        case Xt:
          return ['sRGB', '( value )'];
        case Gt:
          return ['RGBE', '( value )'];
        case Zt:
          return ['RGBM', '( value, 7.0 )'];
        case Kt:
          return ['RGBM', '( value, 16.0 )'];
        case Qt:
          return ['RGBD', '( value, 256.0 )'];
        case Vt:
          return ['Gamma', '( value, float( GAMMA_FACTOR ) )'];
        case Jt:
          return ['LogLuv', '( value )'];
        default:
          throw new Error('unsupported encoding: ' + e);
      }
    }
    function Vc(e, t, n) {
      var i = e.getShaderParameter(t, 35713),
        r = e.getShaderInfoLog(t).trim();
      if (i && '' === r) return '';
      var a = e.getShaderSource(t);
      return 'THREE.WebGLShader: gl.getShaderInfoLog() ' + n + '\n' + r + Uc(a);
    }
    function Gc(e, t) {
      var n = Xc(t);
      return (
        'vec4 ' +
        e +
        '( vec4 value ) { return ' +
        n[0] +
        'ToLinear' +
        n[1] +
        '; }'
      );
    }
    function Jc(e, t) {
      var n = Xc(t);
      return (
        'vec4 ' + e + '( vec4 value ) { return LinearTo' + n[0] + n[1] + '; }'
      );
    }
    function Zc(e, t) {
      var n;
      switch (t) {
        case Z:
          n = 'Linear';
          break;
        case K:
          n = 'Reinhard';
          break;
        case Q:
          n = 'Uncharted2';
          break;
        case $:
          n = 'OptimizedCineon';
          break;
        case ee:
          n = 'ACESFilmic';
          break;
        default:
          throw new Error('unsupported toneMapping: ' + t);
      }
      return (
        'vec3 ' + e + '( vec3 color ) { return ' + n + 'ToneMapping( color ); }'
      );
    }
    function Kc(e) {
      var t = [
        e.extensionDerivatives ||
        e.envMapCubeUV ||
        e.bumpMap ||
        e.tangentSpaceNormalMap ||
        e.clearcoatNormalMap ||
        e.flatShading ||
        'physical' === e.shaderID
          ? '#extension GL_OES_standard_derivatives : enable'
          : '',
        (e.extensionFragDepth || e.logarithmicDepthBuffer) &&
        e.rendererExtensionFragDepth
          ? '#extension GL_EXT_frag_depth : enable'
          : '',
        e.extensionDrawBuffers && e.rendererExtensionDrawBuffers
          ? '#extension GL_EXT_draw_buffers : require'
          : '',
        (e.extensionShaderTextureLOD || e.envMap) &&
        e.rendererExtensionShaderTextureLod
          ? '#extension GL_EXT_shader_texture_lod : enable'
          : '',
      ];
      return t.filter(eu).join('\n');
    }
    function Qc(e) {
      var t = [];
      for (var n in e) {
        var i = e[n];
        !1 !== i && t.push('#define ' + n + ' ' + i);
      }
      return t.join('\n');
    }
    function $c(e, t) {
      for (var n = {}, i = e.getProgramParameter(t, 35721), r = 0; r < i; r++) {
        var a = e.getActiveAttrib(t, r),
          o = a.name;
        n[o] = e.getAttribLocation(t, o);
      }
      return n;
    }
    function eu(e) {
      return '' !== e;
    }
    function tu(e, t) {
      return e
        .replace(/NUM_DIR_LIGHTS/g, t.numDirLights)
        .replace(/NUM_SPOT_LIGHTS/g, t.numSpotLights)
        .replace(/NUM_RECT_AREA_LIGHTS/g, t.numRectAreaLights)
        .replace(/NUM_POINT_LIGHTS/g, t.numPointLights)
        .replace(/NUM_HEMI_LIGHTS/g, t.numHemiLights)
        .replace(/NUM_DIR_LIGHT_SHADOWS/g, t.numDirLightShadows)
        .replace(/NUM_SPOT_LIGHT_SHADOWS/g, t.numSpotLightShadows)
        .replace(/NUM_POINT_LIGHT_SHADOWS/g, t.numPointLightShadows);
    }
    function nu(e, t) {
      return e
        .replace(/NUM_CLIPPING_PLANES/g, t.numClippingPlanes)
        .replace(
          /UNION_CLIPPING_PLANES/g,
          t.numClippingPlanes - t.numClipIntersection
        );
    }
    var iu = /^[ \t]*#include +<([\w\d./]+)>/gm;
    function ru(e) {
      return e.replace(iu, au);
    }
    function au(e, t) {
      var n = Es[t];
      if (void 0 === n) throw new Error('Can not resolve #include <' + t + '>');
      return ru(n);
    }
    var ou = /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,
      su = /#pragma unroll_loop_start[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}[\s]+?#pragma unroll_loop_end/g;
    function cu(e) {
      return e.replace(su, lu).replace(ou, uu);
    }
    function uu(e, t, n, i) {
      return void 0, lu(e, t, n, i);
    }
    function lu(e, t, n, i) {
      for (var r = '', a = parseInt(t); a < parseInt(n); a++)
        r += i
          .replace(/\[ i \]/g, '[ ' + a + ' ]')
          .replace(/UNROLLED_LOOP_INDEX/g, a);
      return r;
    }
    function du(e) {
      var t =
        'precision ' +
        e.precision +
        ' float;\nprecision ' +
        e.precision +
        ' int;';
      return (
        'highp' === e.precision
          ? (t += '\n#define HIGH_PRECISION')
          : 'mediump' === e.precision
          ? (t += '\n#define MEDIUM_PRECISION')
          : 'lowp' === e.precision && (t += '\n#define LOW_PRECISION'),
        t
      );
    }
    function hu(e) {
      var t = 'SHADOWMAP_TYPE_BASIC';
      return (
        e.shadowMapType === u
          ? (t = 'SHADOWMAP_TYPE_PCF')
          : e.shadowMapType === l
          ? (t = 'SHADOWMAP_TYPE_PCF_SOFT')
          : e.shadowMapType === d && (t = 'SHADOWMAP_TYPE_VSM'),
        t
      );
    }
    function pu(e) {
      var t = 'ENVMAP_TYPE_CUBE';
      if (e.envMap)
        switch (e.envMapMode) {
          case ne:
          case ie:
            t = 'ENVMAP_TYPE_CUBE';
            break;
          case se:
          case ce:
            t = 'ENVMAP_TYPE_CUBE_UV';
            break;
          case re:
          case ae:
            t = 'ENVMAP_TYPE_EQUIREC';
            break;
          case oe:
            t = 'ENVMAP_TYPE_SPHERE';
            break;
        }
      return t;
    }
    function mu(e) {
      var t = 'ENVMAP_MODE_REFLECTION';
      if (e.envMap)
        switch (e.envMapMode) {
          case ie:
          case ae:
            t = 'ENVMAP_MODE_REFRACTION';
            break;
        }
      return t;
    }
    function fu(e) {
      var t = 'ENVMAP_BLENDING_NONE';
      if (e.envMap)
        switch (e.combine) {
          case X:
            t = 'ENVMAP_BLENDING_MULTIPLY';
            break;
          case V:
            t = 'ENVMAP_BLENDING_MIX';
            break;
          case G:
            t = 'ENVMAP_BLENDING_ADD';
            break;
        }
      return t;
    }
    function _u(e, t, n) {
      var i,
        r,
        a = e.getContext(),
        o = n.defines,
        s = n.vertexShader,
        c = n.fragmentShader,
        u = hu(n),
        l = pu(n),
        d = mu(n),
        h = fu(n),
        p = e.gammaFactor > 0 ? e.gammaFactor : 1,
        m = n.isWebGL2 ? '' : Kc(n),
        f = Qc(o),
        _ = a.createProgram();
      if (
        (n.isRawShaderMaterial
          ? ((i = [f].filter(eu).join('\n')),
            i.length > 0 && (i += '\n'),
            (r = [m, f].filter(eu).join('\n')),
            r.length > 0 && (r += '\n'))
          : ((i = [
              du(n),
              '#define SHADER_NAME ' + n.shaderName,
              f,
              n.instancing ? '#define USE_INSTANCING' : '',
              n.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',
              '#define GAMMA_FACTOR ' + p,
              '#define MAX_BONES ' + n.maxBones,
              n.useFog && n.fog ? '#define USE_FOG' : '',
              n.useFog && n.fogExp2 ? '#define FOG_EXP2' : '',
              n.map ? '#define USE_MAP' : '',
              n.envMap ? '#define USE_ENVMAP' : '',
              n.envMap ? '#define ' + d : '',
              n.lightMap ? '#define USE_LIGHTMAP' : '',
              n.aoMap ? '#define USE_AOMAP' : '',
              n.emissiveMap ? '#define USE_EMISSIVEMAP' : '',
              n.bumpMap ? '#define USE_BUMPMAP' : '',
              n.normalMap ? '#define USE_NORMALMAP' : '',
              n.normalMap && n.objectSpaceNormalMap
                ? '#define OBJECTSPACE_NORMALMAP'
                : '',
              n.normalMap && n.tangentSpaceNormalMap
                ? '#define TANGENTSPACE_NORMALMAP'
                : '',
              n.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',
              n.clearcoatRoughnessMap
                ? '#define USE_CLEARCOAT_ROUGHNESSMAP'
                : '',
              n.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',
              n.displacementMap && n.supportsVertexTextures
                ? '#define USE_DISPLACEMENTMAP'
                : '',
              n.specularMap ? '#define USE_SPECULARMAP' : '',
              n.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',
              n.metalnessMap ? '#define USE_METALNESSMAP' : '',
              n.alphaMap ? '#define USE_ALPHAMAP' : '',
              n.vertexTangents ? '#define USE_TANGENT' : '',
              n.vertexColors ? '#define USE_COLOR' : '',
              n.vertexUvs ? '#define USE_UV' : '',
              n.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',
              n.flatShading ? '#define FLAT_SHADED' : '',
              n.skinning ? '#define USE_SKINNING' : '',
              n.useVertexTexture ? '#define BONE_TEXTURE' : '',
              n.morphTargets ? '#define USE_MORPHTARGETS' : '',
              n.morphNormals && !1 === n.flatShading
                ? '#define USE_MORPHNORMALS'
                : '',
              n.doubleSided ? '#define DOUBLE_SIDED' : '',
              n.flipSided ? '#define FLIP_SIDED' : '',
              n.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',
              n.shadowMapEnabled ? '#define ' + u : '',
              n.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',
              n.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',
              n.logarithmicDepthBuffer && n.rendererExtensionFragDepth
                ? '#define USE_LOGDEPTHBUF_EXT'
                : '',
              'uniform mat4 modelMatrix;',
              'uniform mat4 modelViewMatrix;',
              'uniform mat4 projectionMatrix;',
              'uniform mat4 viewMatrix;',
              'uniform mat3 normalMatrix;',
              'uniform vec3 cameraPosition;',
              'uniform bool isOrthographic;',
              '#ifdef USE_INSTANCING',
              ' attribute mat4 instanceMatrix;',
              '#endif',
              'attribute vec3 position;',
              'attribute vec3 normal;',
              'attribute vec2 uv;',
              '#ifdef USE_TANGENT',
              '\tattribute vec4 tangent;',
              '#endif',
              '#ifdef USE_COLOR',
              '\tattribute vec3 color;',
              '#endif',
              '#ifdef USE_MORPHTARGETS',
              '\tattribute vec3 morphTarget0;',
              '\tattribute vec3 morphTarget1;',
              '\tattribute vec3 morphTarget2;',
              '\tattribute vec3 morphTarget3;',
              '\t#ifdef USE_MORPHNORMALS',
              '\t\tattribute vec3 morphNormal0;',
              '\t\tattribute vec3 morphNormal1;',
              '\t\tattribute vec3 morphNormal2;',
              '\t\tattribute vec3 morphNormal3;',
              '\t#else',
              '\t\tattribute vec3 morphTarget4;',
              '\t\tattribute vec3 morphTarget5;',
              '\t\tattribute vec3 morphTarget6;',
              '\t\tattribute vec3 morphTarget7;',
              '\t#endif',
              '#endif',
              '#ifdef USE_SKINNING',
              '\tattribute vec4 skinIndex;',
              '\tattribute vec4 skinWeight;',
              '#endif',
              '\n',
            ]
              .filter(eu)
              .join('\n')),
            (r = [
              m,
              du(n),
              '#define SHADER_NAME ' + n.shaderName,
              f,
              n.alphaTest
                ? '#define ALPHATEST ' +
                  n.alphaTest +
                  (n.alphaTest % 1 ? '' : '.0')
                : '',
              '#define GAMMA_FACTOR ' + p,
              n.useFog && n.fog ? '#define USE_FOG' : '',
              n.useFog && n.fogExp2 ? '#define FOG_EXP2' : '',
              n.map ? '#define USE_MAP' : '',
              n.matcap ? '#define USE_MATCAP' : '',
              n.envMap ? '#define USE_ENVMAP' : '',
              n.envMap ? '#define ' + l : '',
              n.envMap ? '#define ' + d : '',
              n.envMap ? '#define ' + h : '',
              n.lightMap ? '#define USE_LIGHTMAP' : '',
              n.aoMap ? '#define USE_AOMAP' : '',
              n.emissiveMap ? '#define USE_EMISSIVEMAP' : '',
              n.bumpMap ? '#define USE_BUMPMAP' : '',
              n.normalMap ? '#define USE_NORMALMAP' : '',
              n.normalMap && n.objectSpaceNormalMap
                ? '#define OBJECTSPACE_NORMALMAP'
                : '',
              n.normalMap && n.tangentSpaceNormalMap
                ? '#define TANGENTSPACE_NORMALMAP'
                : '',
              n.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',
              n.clearcoatRoughnessMap
                ? '#define USE_CLEARCOAT_ROUGHNESSMAP'
                : '',
              n.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',
              n.specularMap ? '#define USE_SPECULARMAP' : '',
              n.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',
              n.metalnessMap ? '#define USE_METALNESSMAP' : '',
              n.alphaMap ? '#define USE_ALPHAMAP' : '',
              n.sheen ? '#define USE_SHEEN' : '',
              n.vertexTangents ? '#define USE_TANGENT' : '',
              n.vertexColors ? '#define USE_COLOR' : '',
              n.vertexUvs ? '#define USE_UV' : '',
              n.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',
              n.gradientMap ? '#define USE_GRADIENTMAP' : '',
              n.flatShading ? '#define FLAT_SHADED' : '',
              n.doubleSided ? '#define DOUBLE_SIDED' : '',
              n.flipSided ? '#define FLIP_SIDED' : '',
              n.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',
              n.shadowMapEnabled ? '#define ' + u : '',
              n.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',
              n.physicallyCorrectLights
                ? '#define PHYSICALLY_CORRECT_LIGHTS'
                : '',
              n.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',
              n.logarithmicDepthBuffer && n.rendererExtensionFragDepth
                ? '#define USE_LOGDEPTHBUF_EXT'
                : '',
              (n.extensionShaderTextureLOD || n.envMap) &&
              n.rendererExtensionShaderTextureLod
                ? '#define TEXTURE_LOD_EXT'
                : '',
              'uniform mat4 viewMatrix;',
              'uniform vec3 cameraPosition;',
              'uniform bool isOrthographic;',
              n.toneMapping !== J ? '#define TONE_MAPPING' : '',
              n.toneMapping !== J ? Es['tonemapping_pars_fragment'] : '',
              n.toneMapping !== J ? Zc('toneMapping', n.toneMapping) : '',
              n.dithering ? '#define DITHERING' : '',
              n.outputEncoding ||
              n.mapEncoding ||
              n.matcapEncoding ||
              n.envMapEncoding ||
              n.emissiveMapEncoding ||
              n.lightMapEncoding
                ? Es['encodings_pars_fragment']
                : '',
              n.mapEncoding ? Gc('mapTexelToLinear', n.mapEncoding) : '',
              n.matcapEncoding
                ? Gc('matcapTexelToLinear', n.matcapEncoding)
                : '',
              n.envMapEncoding
                ? Gc('envMapTexelToLinear', n.envMapEncoding)
                : '',
              n.emissiveMapEncoding
                ? Gc('emissiveMapTexelToLinear', n.emissiveMapEncoding)
                : '',
              n.lightMapEncoding
                ? Gc('lightMapTexelToLinear', n.lightMapEncoding)
                : '',
              n.outputEncoding
                ? Jc('linearToOutputTexel', n.outputEncoding)
                : '',
              n.depthPacking ? '#define DEPTH_PACKING ' + n.depthPacking : '',
              '\n',
            ]
              .filter(eu)
              .join('\n'))),
        (s = ru(s)),
        (s = tu(s, n)),
        (s = nu(s, n)),
        (c = ru(c)),
        (c = tu(c, n)),
        (c = nu(c, n)),
        (s = cu(s)),
        (c = cu(c)),
        n.isWebGL2 && !n.isRawShaderMaterial)
      ) {
        var M = !1,
          v = /^\s*#version\s+300\s+es\s*\n/;
        n.isShaderMaterial &&
          null !== s.match(v) &&
          null !== c.match(v) &&
          ((M = !0), (s = s.replace(v, '')), (c = c.replace(v, ''))),
          (i =
            [
              '#version 300 es\n',
              '#define attribute in',
              '#define varying out',
              '#define texture2D texture',
            ].join('\n') +
            '\n' +
            i),
          (r =
            [
              '#version 300 es\n',
              '#define varying in',
              M ? '' : 'out highp vec4 pc_fragColor;',
              M ? '' : '#define gl_FragColor pc_fragColor',
              '#define gl_FragDepthEXT gl_FragDepth',
              '#define texture2D texture',
              '#define textureCube texture',
              '#define texture2DProj textureProj',
              '#define texture2DLodEXT textureLod',
              '#define texture2DProjLodEXT textureProjLod',
              '#define textureCubeLodEXT textureLod',
              '#define texture2DGradEXT textureGrad',
              '#define texture2DProjGradEXT textureProjGrad',
              '#define textureCubeGradEXT textureGrad',
            ].join('\n') +
            '\n' +
            r);
      }
      var g,
        y,
        b = i + s,
        w = r + c,
        A = Hc(a, 35633, b),
        x = Hc(a, 35632, w);
      if (
        (a.attachShader(_, A),
        a.attachShader(_, x),
        void 0 !== n.index0AttributeName
          ? a.bindAttribLocation(_, 0, n.index0AttributeName)
          : !0 === n.morphTargets && a.bindAttribLocation(_, 0, 'position'),
        a.linkProgram(_),
        e.debug.checkShaderErrors)
      ) {
        var L = a.getProgramInfoLog(_).trim(),
          T = a.getShaderInfoLog(A).trim(),
          z = a.getShaderInfoLog(x).trim(),
          S = !0,
          O = !0;
        if (!1 === a.getProgramParameter(_, 35714)) {
          S = !1;
          Vc(a, A, 'vertex'), Vc(a, x, 'fragment');
          void 0;
        } else '' !== L ? void 0 : ('' !== T && '' !== z) || (O = !1);
        O &&
          (this.diagnostics = {
            runnable: S,
            programLog: L,
            vertexShader: { log: T, prefix: i },
            fragmentShader: { log: z, prefix: r },
          });
      }
      return (
        a.deleteShader(A),
        a.deleteShader(x),
        (this.getUniforms = function () {
          return void 0 === g && (g = new qc(a, _)), g;
        }),
        (this.getAttributes = function () {
          return void 0 === y && (y = $c(a, _)), y;
        }),
        (this.destroy = function () {
          a.deleteProgram(_), (this.program = void 0);
        }),
        (this.name = n.shaderName),
        (this.id = Fc++),
        (this.cacheKey = t),
        (this.usedTimes = 1),
        (this.program = _),
        (this.vertexShader = A),
        (this.fragmentShader = x),
        this
      );
    }
    function Mu(e, t, n) {
      var i = [],
        r = n.isWebGL2,
        a = n.logarithmicDepthBuffer,
        o = n.floatVertexTextures,
        s = n.precision,
        c = n.maxVertexUniforms,
        u = n.vertexTextures,
        l = {
          MeshDepthMaterial: 'depth',
          MeshDistanceMaterial: 'distanceRGBA',
          MeshNormalMaterial: 'normal',
          MeshBasicMaterial: 'basic',
          MeshLambertMaterial: 'lambert',
          MeshPhongMaterial: 'phong',
          MeshToonMaterial: 'toon',
          MeshStandardMaterial: 'physical',
          MeshPhysicalMaterial: 'physical',
          MeshMatcapMaterial: 'matcap',
          LineBasicMaterial: 'basic',
          LineDashedMaterial: 'dashed',
          PointsMaterial: 'points',
          ShadowMaterial: 'shadow',
          SpriteMaterial: 'sprite',
        },
        d = [
          'precision',
          'isWebGL2',
          'supportsVertexTextures',
          'outputEncoding',
          'instancing',
          'map',
          'mapEncoding',
          'matcap',
          'matcapEncoding',
          'envMap',
          'envMapMode',
          'envMapEncoding',
          'envMapCubeUV',
          'lightMap',
          'lightMapEncoding',
          'aoMap',
          'emissiveMap',
          'emissiveMapEncoding',
          'bumpMap',
          'normalMap',
          'objectSpaceNormalMap',
          'tangentSpaceNormalMap',
          'clearcoatMap',
          'clearcoatRoughnessMap',
          'clearcoatNormalMap',
          'displacementMap',
          'specularMap',
          'roughnessMap',
          'metalnessMap',
          'gradientMap',
          'alphaMap',
          'combine',
          'vertexColors',
          'vertexTangents',
          'vertexUvs',
          'uvsVertexOnly',
          'fog',
          'useFog',
          'fogExp2',
          'flatShading',
          'sizeAttenuation',
          'logarithmicDepthBuffer',
          'skinning',
          'maxBones',
          'useVertexTexture',
          'morphTargets',
          'morphNormals',
          'maxMorphTargets',
          'maxMorphNormals',
          'premultipliedAlpha',
          'numDirLights',
          'numPointLights',
          'numSpotLights',
          'numHemiLights',
          'numRectAreaLights',
          'numDirLightShadows',
          'numPointLightShadows',
          'numSpotLightShadows',
          'shadowMapEnabled',
          'shadowMapType',
          'toneMapping',
          'physicallyCorrectLights',
          'alphaTest',
          'doubleSided',
          'flipSided',
          'numClippingPlanes',
          'numClipIntersection',
          'depthPacking',
          'dithering',
          'sheen',
        ];
      function h(e, t) {
        var n;
        if (t) {
          var i = ks[t];
          n = {
            name: e.type,
            uniforms: Ur.clone(i.uniforms),
            vertexShader: i.vertexShader,
            fragmentShader: i.fragmentShader,
          };
        } else
          n = {
            name: e.type,
            uniforms: e.uniforms,
            vertexShader: e.vertexShader,
            fragmentShader: e.fragmentShader,
          };
        return n;
      }
      function f(e) {
        var t = e.skeleton,
          n = t.bones;
        if (o) return 1024;
        var i = c,
          r = Math.floor((i - 20) / 4),
          a = Math.min(r, n.length);
        return a < n.length ? (void 0, 0) : a;
      }
      function _(e) {
        var t;
        return (
          e
            ? e.isTexture
              ? (t = e.encoding)
              : e.isWebGLRenderTarget && (void 0, (t = e.texture.encoding))
            : (t = Ut),
          t
        );
      }
      (this.getParameters = function (i, c, d, M, v, g, y) {
        var b = M.fog,
          w = i.isMeshStandardMaterial ? M.environment : null,
          A = i.envMap || w,
          x = l[i.type],
          L = y.isSkinnedMesh ? f(y) : 0;
        null !== i.precision &&
          ((s = n.getMaxPrecision(i.precision)), i.precision);
        var T = h(i, x);
        i.onBeforeCompile(T, e);
        var z = e.getRenderTarget(),
          S = {
            isWebGL2: r,
            shaderID: x,
            shaderName: T.name,
            uniforms: T.uniforms,
            vertexShader: T.vertexShader,
            fragmentShader: T.fragmentShader,
            defines: i.defines,
            isRawShaderMaterial: i.isRawShaderMaterial,
            isShaderMaterial: i.isShaderMaterial,
            precision: s,
            instancing: !0 === y.isInstancedMesh,
            supportsVertexTextures: u,
            outputEncoding: null !== z ? _(z.texture) : e.outputEncoding,
            map: !!i.map,
            mapEncoding: _(i.map),
            matcap: !!i.matcap,
            matcapEncoding: _(i.matcap),
            envMap: !!A,
            envMapMode: A && A.mapping,
            envMapEncoding: _(A),
            envMapCubeUV: !!A && (A.mapping === se || A.mapping === ce),
            lightMap: !!i.lightMap,
            lightMapEncoding: _(i.lightMap),
            aoMap: !!i.aoMap,
            emissiveMap: !!i.emissiveMap,
            emissiveMapEncoding: _(i.emissiveMap),
            bumpMap: !!i.bumpMap,
            normalMap: !!i.normalMap,
            objectSpaceNormalMap: i.normalMapType === nn,
            tangentSpaceNormalMap: i.normalMapType === tn,
            clearcoatMap: !!i.clearcoatMap,
            clearcoatRoughnessMap: !!i.clearcoatRoughnessMap,
            clearcoatNormalMap: !!i.clearcoatNormalMap,
            displacementMap: !!i.displacementMap,
            roughnessMap: !!i.roughnessMap,
            metalnessMap: !!i.metalnessMap,
            specularMap: !!i.specularMap,
            alphaMap: !!i.alphaMap,
            gradientMap: !!i.gradientMap,
            sheen: !!i.sheen,
            combine: i.combine,
            vertexTangents: i.normalMap && i.vertexTangents,
            vertexColors: i.vertexColors,
            vertexUvs:
              !!i.map ||
              !!i.bumpMap ||
              !!i.normalMap ||
              !!i.specularMap ||
              !!i.alphaMap ||
              !!i.emissiveMap ||
              !!i.roughnessMap ||
              !!i.metalnessMap ||
              !!i.clearcoatMap ||
              !!i.clearcoatRoughnessMap ||
              !!i.clearcoatNormalMap ||
              !!i.displacementMap,
            uvsVertexOnly:
              !(
                i.map ||
                i.bumpMap ||
                i.normalMap ||
                i.specularMap ||
                i.alphaMap ||
                i.emissiveMap ||
                i.roughnessMap ||
                i.metalnessMap ||
                i.clearcoatNormalMap
              ) && !!i.displacementMap,
            fog: !!b,
            useFog: i.fog,
            fogExp2: b && b.isFogExp2,
            flatShading: i.flatShading,
            sizeAttenuation: i.sizeAttenuation,
            logarithmicDepthBuffer: a,
            skinning: i.skinning && L > 0,
            maxBones: L,
            useVertexTexture: o,
            morphTargets: i.morphTargets,
            morphNormals: i.morphNormals,
            maxMorphTargets: e.maxMorphTargets,
            maxMorphNormals: e.maxMorphNormals,
            numDirLights: c.directional.length,
            numPointLights: c.point.length,
            numSpotLights: c.spot.length,
            numRectAreaLights: c.rectArea.length,
            numHemiLights: c.hemi.length,
            numDirLightShadows: c.directionalShadowMap.length,
            numPointLightShadows: c.pointShadowMap.length,
            numSpotLightShadows: c.spotShadowMap.length,
            numClippingPlanes: v,
            numClipIntersection: g,
            dithering: i.dithering,
            shadowMapEnabled: e.shadowMap.enabled && d.length > 0,
            shadowMapType: e.shadowMap.type,
            toneMapping: i.toneMapped ? e.toneMapping : J,
            physicallyCorrectLights: e.physicallyCorrectLights,
            premultipliedAlpha: i.premultipliedAlpha,
            alphaTest: i.alphaTest,
            doubleSided: i.side === m,
            flipSided: i.side === p,
            depthPacking: void 0 !== i.depthPacking && i.depthPacking,
            index0AttributeName: i.index0AttributeName,
            extensionDerivatives: i.extensions && i.extensions.derivatives,
            extensionFragDepth: i.extensions && i.extensions.fragDepth,
            extensionDrawBuffers: i.extensions && i.extensions.drawBuffers,
            extensionShaderTextureLOD:
              i.extensions && i.extensions.shaderTextureLOD,
            rendererExtensionFragDepth: r || null !== t.get('EXT_frag_depth'),
            rendererExtensionDrawBuffers:
              r || null !== t.get('WEBGL_draw_buffers'),
            rendererExtensionShaderTextureLod:
              r || null !== t.get('EXT_shader_texture_lod'),
            onBeforeCompile: i.onBeforeCompile,
          };
        return S;
      }),
        (this.getProgramCacheKey = function (t) {
          var n = [];
          if (
            (t.shaderID
              ? n.push(t.shaderID)
              : (n.push(t.fragmentShader), n.push(t.vertexShader)),
            void 0 !== t.defines)
          )
            for (var i in t.defines) n.push(i), n.push(t.defines[i]);
          if (void 0 === t.isRawShaderMaterial) {
            for (var r = 0; r < d.length; r++) n.push(t[d[r]]);
            n.push(e.outputEncoding), n.push(e.gammaFactor);
          }
          return n.push(t.onBeforeCompile.toString()), n.join();
        }),
        (this.acquireProgram = function (t, n) {
          for (var r, a = 0, o = i.length; a < o; a++) {
            var s = i[a];
            if (s.cacheKey === n) {
              (r = s), ++r.usedTimes;
              break;
            }
          }
          return void 0 === r && ((r = new _u(e, n, t)), i.push(r)), r;
        }),
        (this.releaseProgram = function (e) {
          if (0 === --e.usedTimes) {
            var t = i.indexOf(e);
            (i[t] = i[i.length - 1]), i.pop(), e.destroy();
          }
        }),
        (this.programs = i);
    }
    function vu() {
      var e = new WeakMap();
      function t(t) {
        var n = e.get(t);
        return void 0 === n && ((n = {}), e.set(t, n)), n;
      }
      function n(t) {
        e.delete(t);
      }
      function i(t, n, i) {
        e.get(t)[n] = i;
      }
      function r() {
        e = new WeakMap();
      }
      return { get: t, remove: n, update: i, dispose: r };
    }
    function gu(e, t) {
      return e.groupOrder !== t.groupOrder
        ? e.groupOrder - t.groupOrder
        : e.renderOrder !== t.renderOrder
        ? e.renderOrder - t.renderOrder
        : e.program !== t.program
        ? e.program.id - t.program.id
        : e.material.id !== t.material.id
        ? e.material.id - t.material.id
        : e.z !== t.z
        ? e.z - t.z
        : e.id - t.id;
    }
    function yu(e, t) {
      return e.groupOrder !== t.groupOrder
        ? e.groupOrder - t.groupOrder
        : e.renderOrder !== t.renderOrder
        ? e.renderOrder - t.renderOrder
        : e.z !== t.z
        ? t.z - e.z
        : e.id - t.id;
    }
    function bu() {
      var e = [],
        t = 0,
        n = [],
        i = [],
        r = { id: -1 };
      function a() {
        (t = 0), (n.length = 0), (i.length = 0);
      }
      function o(n, i, a, o, s, c) {
        var u = e[t];
        return (
          void 0 === u
            ? ((u = {
                id: n.id,
                object: n,
                geometry: i,
                material: a,
                program: a.program || r,
                groupOrder: o,
                renderOrder: n.renderOrder,
                z: s,
                group: c,
              }),
              (e[t] = u))
            : ((u.id = n.id),
              (u.object = n),
              (u.geometry = i),
              (u.material = a),
              (u.program = a.program || r),
              (u.groupOrder = o),
              (u.renderOrder = n.renderOrder),
              (u.z = s),
              (u.group = c)),
          t++,
          u
        );
      }
      function s(e, t, r, a, s, c) {
        var u = o(e, t, r, a, s, c);
        (!0 === r.transparent ? i : n).push(u);
      }
      function c(e, t, r, a, s, c) {
        var u = o(e, t, r, a, s, c);
        (!0 === r.transparent ? i : n).unshift(u);
      }
      function u(e, t) {
        n.length > 1 && n.sort(e || gu), i.length > 1 && i.sort(t || yu);
      }
      function l() {
        for (var n = t, i = e.length; n < i; n++) {
          var r = e[n];
          if (null === r.id) break;
          (r.id = null),
            (r.object = null),
            (r.geometry = null),
            (r.material = null),
            (r.program = null),
            (r.group = null);
        }
      }
      return {
        opaque: n,
        transparent: i,
        init: a,
        push: s,
        unshift: c,
        finish: l,
        sort: u,
      };
    }
    function wu() {
      var e = new WeakMap();
      function t(n) {
        var i = n.target;
        i.removeEventListener('dispose', t), e.delete(i);
      }
      function n(n, i) {
        var r,
          a = e.get(n);
        return (
          void 0 === a
            ? ((r = new bu()),
              e.set(n, new WeakMap()),
              e.get(n).set(i, r),
              n.addEventListener('dispose', t))
            : ((r = a.get(i)), void 0 === r && ((r = new bu()), a.set(i, r))),
          r
        );
      }
      function i() {
        e = new WeakMap();
      }
      return { get: n, dispose: i };
    }
    function Au() {
      var e = {};
      return {
        get: function (t) {
          if (void 0 !== e[t.id]) return e[t.id];
          var n;
          switch (t.type) {
            case 'DirectionalLight':
              n = { direction: new xn(), color: new Ii() };
              break;
            case 'SpotLight':
              n = {
                position: new xn(),
                direction: new xn(),
                color: new Ii(),
                distance: 0,
                coneCos: 0,
                penumbraCos: 0,
                decay: 0,
              };
              break;
            case 'PointLight':
              n = {
                position: new xn(),
                color: new Ii(),
                distance: 0,
                decay: 0,
              };
              break;
            case 'HemisphereLight':
              n = {
                direction: new xn(),
                skyColor: new Ii(),
                groundColor: new Ii(),
              };
              break;
            case 'RectAreaLight':
              n = {
                color: new Ii(),
                position: new xn(),
                halfWidth: new xn(),
                halfHeight: new xn(),
              };
              break;
          }
          return (e[t.id] = n), n;
        },
      };
    }
    function xu() {
      var e = {};
      return {
        get: function (t) {
          if (void 0 !== e[t.id]) return e[t.id];
          var n;
          switch (t.type) {
            case 'DirectionalLight':
              n = { shadowBias: 0, shadowRadius: 1, shadowMapSize: new pn() };
              break;
            case 'SpotLight':
              n = { shadowBias: 0, shadowRadius: 1, shadowMapSize: new pn() };
              break;
            case 'PointLight':
              n = {
                shadowBias: 0,
                shadowRadius: 1,
                shadowMapSize: new pn(),
                shadowCameraNear: 1,
                shadowCameraFar: 1e3,
              };
              break;
          }
          return (e[t.id] = n), n;
        },
      };
    }
    var Lu = 0;
    function Tu(e, t) {
      return (t.castShadow ? 1 : 0) - (e.castShadow ? 1 : 0);
    }
    function zu() {
      for (
        var e = new Au(),
          t = xu(),
          n = {
            version: 0,
            hash: {
              directionalLength: -1,
              pointLength: -1,
              spotLength: -1,
              rectAreaLength: -1,
              hemiLength: -1,
              numDirectionalShadows: -1,
              numPointShadows: -1,
              numSpotShadows: -1,
            },
            ambient: [0, 0, 0],
            probe: [],
            directional: [],
            directionalShadow: [],
            directionalShadowMap: [],
            directionalShadowMatrix: [],
            spot: [],
            spotShadow: [],
            spotShadowMap: [],
            spotShadowMatrix: [],
            rectArea: [],
            point: [],
            pointShadow: [],
            pointShadowMap: [],
            pointShadowMatrix: [],
            hemi: [],
          },
          i = 0;
        i < 9;
        i++
      )
        n.probe.push(new xn());
      var r = new xn(),
        a = new Cn(),
        o = new Cn();
      function s(i, s, c) {
        for (var u = 0, l = 0, d = 0, h = 0; h < 9; h++)
          n.probe[h].set(0, 0, 0);
        var p = 0,
          m = 0,
          f = 0,
          _ = 0,
          M = 0,
          v = 0,
          g = 0,
          y = 0,
          b = c.matrixWorldInverse;
        i.sort(Tu);
        h = 0;
        for (var w = i.length; h < w; h++) {
          var A = i[h],
            x = A.color,
            L = A.intensity,
            T = A.distance,
            z = A.shadow && A.shadow.map ? A.shadow.map.texture : null;
          if (A.isAmbientLight) (u += x.r * L), (l += x.g * L), (d += x.b * L);
          else if (A.isLightProbe)
            for (var S = 0; S < 9; S++)
              n.probe[S].addScaledVector(A.sh.coefficients[S], L);
          else if (A.isDirectionalLight) {
            var O = e.get(A);
            if (
              (O.color.copy(A.color).multiplyScalar(A.intensity),
              O.direction.setFromMatrixPosition(A.matrixWorld),
              r.setFromMatrixPosition(A.target.matrixWorld),
              O.direction.sub(r),
              O.direction.transformDirection(b),
              A.castShadow)
            ) {
              var E = A.shadow,
                k = t.get(A);
              (k.shadowBias = E.bias),
                (k.shadowRadius = E.radius),
                (k.shadowMapSize = E.mapSize),
                (n.directionalShadow[p] = k),
                (n.directionalShadowMap[p] = z),
                (n.directionalShadowMatrix[p] = A.shadow.matrix),
                v++;
            }
            (n.directional[p] = O), p++;
          } else if (A.isSpotLight) {
            O = e.get(A);
            if (
              (O.position.setFromMatrixPosition(A.matrixWorld),
              O.position.applyMatrix4(b),
              O.color.copy(x).multiplyScalar(L),
              (O.distance = T),
              O.direction.setFromMatrixPosition(A.matrixWorld),
              r.setFromMatrixPosition(A.target.matrixWorld),
              O.direction.sub(r),
              O.direction.transformDirection(b),
              (O.coneCos = Math.cos(A.angle)),
              (O.penumbraCos = Math.cos(A.angle * (1 - A.penumbra))),
              (O.decay = A.decay),
              A.castShadow)
            ) {
              (E = A.shadow), (k = t.get(A));
              (k.shadowBias = E.bias),
                (k.shadowRadius = E.radius),
                (k.shadowMapSize = E.mapSize),
                (n.spotShadow[f] = k),
                (n.spotShadowMap[f] = z),
                (n.spotShadowMatrix[f] = A.shadow.matrix),
                y++;
            }
            (n.spot[f] = O), f++;
          } else if (A.isRectAreaLight) {
            O = e.get(A);
            O.color.copy(x).multiplyScalar(L),
              O.position.setFromMatrixPosition(A.matrixWorld),
              O.position.applyMatrix4(b),
              o.identity(),
              a.copy(A.matrixWorld),
              a.premultiply(b),
              o.extractRotation(a),
              O.halfWidth.set(0.5 * A.width, 0, 0),
              O.halfHeight.set(0, 0.5 * A.height, 0),
              O.halfWidth.applyMatrix4(o),
              O.halfHeight.applyMatrix4(o),
              (n.rectArea[_] = O),
              _++;
          } else if (A.isPointLight) {
            O = e.get(A);
            if (
              (O.position.setFromMatrixPosition(A.matrixWorld),
              O.position.applyMatrix4(b),
              O.color.copy(A.color).multiplyScalar(A.intensity),
              (O.distance = A.distance),
              (O.decay = A.decay),
              A.castShadow)
            ) {
              (E = A.shadow), (k = t.get(A));
              (k.shadowBias = E.bias),
                (k.shadowRadius = E.radius),
                (k.shadowMapSize = E.mapSize),
                (k.shadowCameraNear = E.camera.near),
                (k.shadowCameraFar = E.camera.far),
                (n.pointShadow[m] = k),
                (n.pointShadowMap[m] = z),
                (n.pointShadowMatrix[m] = A.shadow.matrix),
                g++;
            }
            (n.point[m] = O), m++;
          } else if (A.isHemisphereLight) {
            O = e.get(A);
            O.direction.setFromMatrixPosition(A.matrixWorld),
              O.direction.transformDirection(b),
              O.direction.normalize(),
              O.skyColor.copy(A.color).multiplyScalar(L),
              O.groundColor.copy(A.groundColor).multiplyScalar(L),
              (n.hemi[M] = O),
              M++;
          }
        }
        (n.ambient[0] = u), (n.ambient[1] = l), (n.ambient[2] = d);
        var C = n.hash;
        (C.directionalLength === p &&
          C.pointLength === m &&
          C.spotLength === f &&
          C.rectAreaLength === _ &&
          C.hemiLength === M &&
          C.numDirectionalShadows === v &&
          C.numPointShadows === g &&
          C.numSpotShadows === y) ||
          ((n.directional.length = p),
          (n.spot.length = f),
          (n.rectArea.length = _),
          (n.point.length = m),
          (n.hemi.length = M),
          (n.directionalShadow.length = v),
          (n.directionalShadowMap.length = v),
          (n.pointShadow.length = g),
          (n.pointShadowMap.length = g),
          (n.spotShadow.length = y),
          (n.spotShadowMap.length = y),
          (n.directionalShadowMatrix.length = v),
          (n.pointShadowMatrix.length = g),
          (n.spotShadowMatrix.length = y),
          (C.directionalLength = p),
          (C.pointLength = m),
          (C.spotLength = f),
          (C.rectAreaLength = _),
          (C.hemiLength = M),
          (C.numDirectionalShadows = v),
          (C.numPointShadows = g),
          (C.numSpotShadows = y),
          (n.version = Lu++));
      }
      return { setup: s, state: n };
    }
    function Su() {
      var e = new zu(),
        t = [],
        n = [];
      function i() {
        (t.length = 0), (n.length = 0);
      }
      function r(e) {
        t.push(e);
      }
      function a(e) {
        n.push(e);
      }
      function o(i) {
        e.setup(t, n, i);
      }
      var s = { lightsArray: t, shadowsArray: n, lights: e };
      return { init: i, state: s, setupLights: o, pushLight: r, pushShadow: a };
    }
    function Ou() {
      var e = new WeakMap();
      function t(n) {
        var i = n.target;
        i.removeEventListener('dispose', t), e.delete(i);
      }
      function n(n, i) {
        var r;
        return (
          !1 === e.has(n)
            ? ((r = new Su()),
              e.set(n, new WeakMap()),
              e.get(n).set(i, r),
              n.addEventListener('dispose', t))
            : !1 === e.get(n).has(i)
            ? ((r = new Su()), e.get(n).set(i, r))
            : (r = e.get(n).get(i)),
          r
        );
      }
      function i() {
        e = new WeakMap();
      }
      return { get: n, dispose: i };
    }
    function Eu(e) {
      Vi.call(this),
        (this.type = 'MeshDepthMaterial'),
        (this.depthPacking = $t),
        (this.skinning = !1),
        (this.morphTargets = !1),
        (this.map = null),
        (this.alphaMap = null),
        (this.displacementMap = null),
        (this.displacementScale = 1),
        (this.displacementBias = 0),
        (this.wireframe = !1),
        (this.wireframeLinewidth = 1),
        (this.fog = !1),
        this.setValues(e);
    }
    function ku(e) {
      Vi.call(this),
        (this.type = 'MeshDistanceMaterial'),
        (this.referencePosition = new xn()),
        (this.nearDistance = 1),
        (this.farDistance = 1e3),
        (this.skinning = !1),
        (this.morphTargets = !1),
        (this.map = null),
        (this.alphaMap = null),
        (this.displacementMap = null),
        (this.displacementScale = 1),
        (this.displacementBias = 0),
        (this.fog = !1),
        this.setValues(e);
    }
    (Eu.prototype = Object.create(Vi.prototype)),
      (Eu.prototype.constructor = Eu),
      (Eu.prototype.isMeshDepthMaterial = !0),
      (Eu.prototype.copy = function (e) {
        return (
          Vi.prototype.copy.call(this, e),
          (this.depthPacking = e.depthPacking),
          (this.skinning = e.skinning),
          (this.morphTargets = e.morphTargets),
          (this.map = e.map),
          (this.alphaMap = e.alphaMap),
          (this.displacementMap = e.displacementMap),
          (this.displacementScale = e.displacementScale),
          (this.displacementBias = e.displacementBias),
          (this.wireframe = e.wireframe),
          (this.wireframeLinewidth = e.wireframeLinewidth),
          this
        );
      }),
      (ku.prototype = Object.create(Vi.prototype)),
      (ku.prototype.constructor = ku),
      (ku.prototype.isMeshDistanceMaterial = !0),
      (ku.prototype.copy = function (e) {
        return (
          Vi.prototype.copy.call(this, e),
          this.referencePosition.copy(e.referencePosition),
          (this.nearDistance = e.nearDistance),
          (this.farDistance = e.farDistance),
          (this.skinning = e.skinning),
          (this.morphTargets = e.morphTargets),
          (this.map = e.map),
          (this.alphaMap = e.alphaMap),
          (this.displacementMap = e.displacementMap),
          (this.displacementScale = e.displacementScale),
          (this.displacementBias = e.displacementBias),
          this
        );
      });
    var Cu =
        'uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n  float mean = 0.0;\n  float squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n    #ifdef HORIZONAL_PASS\n      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n    #else\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n    #endif\n  }\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n  float std_dev = sqrt( squared_mean - mean * mean );\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}',
      Du = 'void main() {\n\tgl_Position = vec4( position, 1.0 );\n}';
    function Nu(e, t, n) {
      var i = new ra(),
        r = new pn(),
        a = new pn(),
        o = new vn(),
        s = [],
        c = [],
        l = {},
        f = { 0: p, 1: h, 2: m },
        M = new Gr({
          defines: { SAMPLE_RATE: 2 / 8, HALF_SAMPLE_RATE: 1 / 8 },
          uniforms: {
            shadow_pass: { value: null },
            resolution: { value: new pn() },
            radius: { value: 4 },
          },
          vertexShader: Du,
          fragmentShader: Cu,
        }),
        v = M.clone();
      v.defines.HORIZONAL_PASS = 1;
      var g = new fr();
      g.setAttribute(
        'position',
        new Zi(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3)
      );
      var y = new Dr(g, M),
        b = this;
      function w(n, i) {
        var r = t.update(y);
        (M.uniforms.shadow_pass.value = n.map.texture),
          (M.uniforms.resolution.value = n.mapSize),
          (M.uniforms.radius.value = n.radius),
          e.setRenderTarget(n.mapPass),
          e.clear(),
          e.renderBufferDirect(i, null, r, M, y, null),
          (v.uniforms.shadow_pass.value = n.mapPass.texture),
          (v.uniforms.resolution.value = n.mapSize),
          (v.uniforms.radius.value = n.radius),
          e.setRenderTarget(n.map),
          e.clear(),
          e.renderBufferDirect(i, null, r, v, y, null);
      }
      function A(e, t, n) {
        var i = (e << 0) | (t << 1) | (n << 2),
          r = s[i];
        return (
          void 0 === r &&
            ((r = new Eu({ depthPacking: en, morphTargets: e, skinning: t })),
            (s[i] = r)),
          r
        );
      }
      function x(e, t, n) {
        var i = (e << 0) | (t << 1) | (n << 2),
          r = c[i];
        return (
          void 0 === r &&
            ((r = new ku({ morphTargets: e, skinning: t })), (c[i] = r)),
          r
        );
      }
      function L(t, n, i, r, a, o, s) {
        var c = null,
          u = A,
          h = t.customDepthMaterial;
        if (
          (!0 === r.isPointLight && ((u = x), (h = t.customDistanceMaterial)),
          void 0 === h)
        ) {
          var p = !1;
          !0 === i.morphTargets &&
            (p =
              n.morphAttributes &&
              n.morphAttributes.position &&
              n.morphAttributes.position.length > 0);
          var m = !1;
          !0 === t.isSkinnedMesh && (!0 === i.skinning ? (m = !0) : void 0);
          var _ = !0 === t.isInstancedMesh;
          c = u(p, m, _);
        } else c = h;
        if (
          e.localClippingEnabled &&
          !0 === i.clipShadows &&
          0 !== i.clippingPlanes.length
        ) {
          var M = c.uuid,
            v = i.uuid,
            g = l[M];
          void 0 === g && ((g = {}), (l[M] = g));
          var y = g[v];
          void 0 === y && ((y = c.clone()), (g[v] = y)), (c = y);
        }
        return (
          (c.visible = i.visible),
          (c.wireframe = i.wireframe),
          (c.side =
            s === d
              ? null !== i.shadowSide
                ? i.shadowSide
                : i.side
              : null !== i.shadowSide
              ? i.shadowSide
              : f[i.side]),
          (c.clipShadows = i.clipShadows),
          (c.clippingPlanes = i.clippingPlanes),
          (c.clipIntersection = i.clipIntersection),
          (c.wireframeLinewidth = i.wireframeLinewidth),
          (c.linewidth = i.linewidth),
          !0 === r.isPointLight &&
            !0 === c.isMeshDistanceMaterial &&
            (c.referencePosition.setFromMatrixPosition(r.matrixWorld),
            (c.nearDistance = a),
            (c.farDistance = o)),
          c
        );
      }
      function T(n, r, a, o, s) {
        if (!1 !== n.visible) {
          var c = n.layers.test(r.layers);
          if (
            c &&
            (n.isMesh || n.isLine || n.isPoints) &&
            (n.castShadow || (n.receiveShadow && s === d)) &&
            (!n.frustumCulled || i.intersectsObject(n))
          ) {
            n.modelViewMatrix.multiplyMatrices(
              a.matrixWorldInverse,
              n.matrixWorld
            );
            var u = t.update(n),
              l = n.material;
            if (Array.isArray(l))
              for (var h = u.groups, p = 0, m = h.length; p < m; p++) {
                var f = h[p],
                  _ = l[f.materialIndex];
                if (_ && _.visible) {
                  var M = L(n, u, _, o, a.near, a.far, s);
                  e.renderBufferDirect(a, null, u, M, n, f);
                }
              }
            else if (l.visible) {
              M = L(n, u, l, o, a.near, a.far, s);
              e.renderBufferDirect(a, null, u, M, n, null);
            }
          }
          for (var v = n.children, g = 0, y = v.length; g < y; g++)
            T(v[g], r, a, o, s);
        }
      }
      (this.enabled = !1),
        (this.autoUpdate = !0),
        (this.needsUpdate = !1),
        (this.type = u),
        (this.render = function (t, s, c) {
          if (
            !1 !== b.enabled &&
            (!1 !== b.autoUpdate || !1 !== b.needsUpdate) &&
            0 !== t.length
          ) {
            var u = e.getRenderTarget(),
              l = e.getActiveCubeFace(),
              h = e.getActiveMipmapLevel(),
              p = e.state;
            p.setBlending(_),
              p.buffers.color.setClear(1, 1, 1, 1),
              p.buffers.depth.setTest(!0),
              p.setScissorTest(!1);
            for (var m = 0, f = t.length; m < f; m++) {
              var M = t[m],
                v = M.shadow;
              if (void 0 !== v) {
                r.copy(v.mapSize);
                var g = v.getFrameExtents();
                if (
                  (r.multiply(g),
                  a.copy(v.mapSize),
                  (r.x > n || r.y > n) &&
                    (r.x > n &&
                      ((a.x = Math.floor(n / g.x)),
                      (r.x = a.x * g.x),
                      (v.mapSize.x = a.x)),
                    r.y > n &&
                      ((a.y = Math.floor(n / g.y)),
                      (r.y = a.y * g.y),
                      (v.mapSize.y = a.y))),
                  null === v.map && !v.isPointLightShadow && this.type === d)
                ) {
                  var y = { minFilter: fe, magFilter: fe, format: De };
                  (v.map = new gn(r.x, r.y, y)),
                    (v.map.texture.name = M.name + '.shadowMap'),
                    (v.mapPass = new gn(r.x, r.y, y)),
                    v.camera.updateProjectionMatrix();
                }
                if (null === v.map) {
                  y = { minFilter: he, magFilter: he, format: De };
                  (v.map = new gn(r.x, r.y, y)),
                    (v.map.texture.name = M.name + '.shadowMap'),
                    v.camera.updateProjectionMatrix();
                }
                e.setRenderTarget(v.map), e.clear();
                for (var A = v.getViewportCount(), x = 0; x < A; x++) {
                  var L = v.getViewport(x);
                  o.set(a.x * L.x, a.y * L.y, a.x * L.z, a.y * L.w),
                    p.viewport(o),
                    v.updateMatrices(M, x),
                    (i = v.getFrustum()),
                    T(s, c, v.camera, M, this.type);
                }
                v.isPointLightShadow || this.type !== d || w(v, c);
              } else void 0;
            }
            (b.needsUpdate = !1), e.setRenderTarget(u, l, h);
          }
        });
    }
    function Pu(e, t, n) {
      var i = n.isWebGL2;
      function r() {
        var t = !1,
          n = new vn(),
          i = null,
          r = new vn(0, 0, 0, 0);
        return {
          setMask: function (n) {
            i === n || t || (e.colorMask(n, n, n, n), (i = n));
          },
          setLocked: function (e) {
            t = e;
          },
          setClear: function (t, i, a, o, s) {
            !0 === s && ((t *= o), (i *= o), (a *= o)),
              n.set(t, i, a, o),
              !1 === r.equals(n) && (e.clearColor(t, i, a, o), r.copy(n));
          },
          reset: function () {
            (t = !1), (i = null), r.set(-1, 0, 0, 0);
          },
        };
      }
      function a() {
        var t = !1,
          n = null,
          i = null,
          r = null;
        return {
          setTest: function (e) {
            e ? Te(2929) : ze(2929);
          },
          setMask: function (i) {
            n === i || t || (e.depthMask(i), (n = i));
          },
          setFunc: function (t) {
            if (i !== t) {
              if (t)
                switch (t) {
                  case R:
                    e.depthFunc(512);
                    break;
                  case B:
                    e.depthFunc(519);
                    break;
                  case W:
                    e.depthFunc(513);
                    break;
                  case I:
                    e.depthFunc(515);
                    break;
                  case q:
                    e.depthFunc(514);
                    break;
                  case H:
                    e.depthFunc(518);
                    break;
                  case F:
                    e.depthFunc(516);
                    break;
                  case U:
                    e.depthFunc(517);
                    break;
                  default:
                    e.depthFunc(515);
                }
              else e.depthFunc(515);
              i = t;
            }
          },
          setLocked: function (e) {
            t = e;
          },
          setClear: function (t) {
            r !== t && (e.clearDepth(t), (r = t));
          },
          reset: function () {
            (t = !1), (n = null), (i = null), (r = null);
          },
        };
      }
      function u() {
        var t = !1,
          n = null,
          i = null,
          r = null,
          a = null,
          o = null,
          s = null,
          c = null,
          u = null;
        return {
          setTest: function (e) {
            t || (e ? Te(2960) : ze(2960));
          },
          setMask: function (i) {
            n === i || t || (e.stencilMask(i), (n = i));
          },
          setFunc: function (t, n, o) {
            (i === t && r === n && a === o) ||
              (e.stencilFunc(t, n, o), (i = t), (r = n), (a = o));
          },
          setOp: function (t, n, i) {
            (o === t && s === n && c === i) ||
              (e.stencilOp(t, n, i), (o = t), (s = n), (c = i));
          },
          setLocked: function (e) {
            t = e;
          },
          setClear: function (t) {
            u !== t && (e.clearStencil(t), (u = t));
          },
          reset: function () {
            (t = !1),
              (n = null),
              (i = null),
              (r = null),
              (a = null),
              (o = null),
              (s = null),
              (c = null),
              (u = null);
          },
        };
      }
      var l = new r(),
        d = new a(),
        h = new u(),
        f = e.getParameter(34921),
        X = new Uint8Array(f),
        V = new Uint8Array(f),
        G = new Uint8Array(f),
        J = {},
        Z = null,
        K = null,
        Q = null,
        $ = null,
        ee = null,
        te = null,
        ne = null,
        ie = null,
        re = null,
        ae = !1,
        oe = null,
        se = null,
        ce = null,
        ue = null,
        le = null,
        de = e.getParameter(35661),
        he = !1,
        pe = 0,
        me = e.getParameter(7938);
      -1 !== me.indexOf('WebGL')
        ? ((pe = parseFloat(/^WebGL\ ([0-9])/.exec(me)[1])), (he = pe >= 1))
        : -1 !== me.indexOf('OpenGL ES') &&
          ((pe = parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(me)[1])),
          (he = pe >= 2));
      var fe = null,
        _e = {},
        Me = new vn(),
        ve = new vn();
      function ge(t, n, i) {
        var r = new Uint8Array(4),
          a = e.createTexture();
        e.bindTexture(t, a),
          e.texParameteri(t, 10241, 9728),
          e.texParameteri(t, 10240, 9728);
        for (var o = 0; o < i; o++)
          e.texImage2D(n + o, 0, 6408, 1, 1, 0, 6408, 5121, r);
        return a;
      }
      var ye = {};
      function be() {
        for (var e = 0, t = X.length; e < t; e++) X[e] = 0;
      }
      function we(e) {
        Ae(e, 0);
      }
      function Ae(n, r) {
        if (
          ((X[n] = 1),
          0 === V[n] && (e.enableVertexAttribArray(n), (V[n] = 1)),
          G[n] !== r)
        ) {
          var a = i ? e : t.get('ANGLE_instanced_arrays');
          a[i ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE'](n, r),
            (G[n] = r);
        }
      }
      function xe() {
        for (var t = 0, n = V.length; t !== n; ++t)
          V[t] !== X[t] && (e.disableVertexAttribArray(t), (V[t] = 0));
      }
      function Le(t, n, r, a, o, s) {
        !0 !== i || (5124 !== r && 5125 !== r)
          ? e.vertexAttribPointer(t, n, r, a, o, s)
          : e.vertexAttribIPointer(t, n, r, a, o, s);
      }
      function Te(t) {
        !0 !== J[t] && (e.enable(t), (J[t] = !0));
      }
      function ze(t) {
        !1 !== J[t] && (e.disable(t), (J[t] = !1));
      }
      function Se(t) {
        return Z !== t && (e.useProgram(t), (Z = t), !0);
      }
      (ye[3553] = ge(3553, 3553, 1)),
        (ye[34067] = ge(34067, 34069, 6)),
        l.setClear(0, 0, 0, 1),
        d.setClear(1),
        h.setClear(0),
        Te(2929),
        d.setFunc(I),
        Ne(!1),
        Pe(s),
        Te(2884),
        Ce(_);
      var Oe = { [w]: 32774, [A]: 32778, [x]: 32779 };
      if (i) (Oe[L] = 32775), (Oe[T] = 32776);
      else {
        var Ee = t.get('EXT_blend_minmax');
        null !== Ee && ((Oe[L] = Ee.MIN_EXT), (Oe[T] = Ee.MAX_EXT));
      }
      var ke = {
        [z]: 0,
        [S]: 1,
        [O]: 768,
        [k]: 770,
        [Y]: 776,
        [P]: 774,
        [D]: 772,
        [E]: 769,
        [C]: 771,
        [j]: 775,
        [N]: 773,
      };
      function Ce(t, n, i, r, a, o, s, c) {
        if (t === _) return K && (ze(3042), (K = !1)), void 0;
        if ((K || (Te(3042), (K = !0)), t === b))
          (a = a || n),
            (o = o || i),
            (s = s || r),
            (n === $ && a === ne) ||
              (e.blendEquationSeparate(Oe[n], Oe[a]), ($ = n), (ne = a)),
            (i === ee && r === te && o === ie && s === re) ||
              (e.blendFuncSeparate(ke[i], ke[r], ke[o], ke[s]),
              (ee = i),
              (te = r),
              (ie = o),
              (re = s)),
            (Q = t),
            (ae = null);
        else if (t !== Q || c !== ae) {
          if (
            (($ === w && ne === w) ||
              (e.blendEquation(32774), ($ = w), (ne = w)),
            c)
          )
            switch (t) {
              case M:
                e.blendFuncSeparate(1, 771, 1, 771);
                break;
              case v:
                e.blendFunc(1, 1);
                break;
              case g:
                e.blendFuncSeparate(0, 0, 769, 771);
                break;
              case y:
                e.blendFuncSeparate(0, 768, 0, 770);
                break;
              default:
                void 0;
                break;
            }
          else
            switch (t) {
              case M:
                e.blendFuncSeparate(770, 771, 1, 771);
                break;
              case v:
                e.blendFunc(770, 1);
                break;
              case g:
                e.blendFunc(0, 769);
                break;
              case y:
                e.blendFunc(0, 768);
                break;
              default:
                void 0;
                break;
            }
          (ee = null), (te = null), (ie = null), (re = null), (Q = t), (ae = c);
        }
      }
      function De(e, t) {
        e.side === m ? ze(2884) : Te(2884);
        var n = e.side === p;
        t && (n = !n),
          Ne(n),
          e.blending === M && !1 === e.transparent
            ? Ce(_)
            : Ce(
                e.blending,
                e.blendEquation,
                e.blendSrc,
                e.blendDst,
                e.blendEquationAlpha,
                e.blendSrcAlpha,
                e.blendDstAlpha,
                e.premultipliedAlpha
              ),
          d.setFunc(e.depthFunc),
          d.setTest(e.depthTest),
          d.setMask(e.depthWrite),
          l.setMask(e.colorWrite);
        var i = e.stencilWrite;
        h.setTest(i),
          i &&
            (h.setMask(e.stencilWriteMask),
            h.setFunc(e.stencilFunc, e.stencilRef, e.stencilFuncMask),
            h.setOp(e.stencilFail, e.stencilZFail, e.stencilZPass)),
          Ye(e.polygonOffset, e.polygonOffsetFactor, e.polygonOffsetUnits);
      }
      function Ne(t) {
        oe !== t && (t ? e.frontFace(2304) : e.frontFace(2305), (oe = t));
      }
      function Pe(t) {
        t !== o
          ? (Te(2884),
            t !== se &&
              (t === s
                ? e.cullFace(1029)
                : t === c
                ? e.cullFace(1028)
                : e.cullFace(1032)))
          : ze(2884),
          (se = t);
      }
      function je(t) {
        t !== ce && (he && e.lineWidth(t), (ce = t));
      }
      function Ye(t, n, i) {
        t
          ? (Te(32823),
            (ue === n && le === i) ||
              (e.polygonOffset(n, i), (ue = n), (le = i)))
          : ze(32823);
      }
      function Re(e) {
        e ? Te(3089) : ze(3089);
      }
      function Be(t) {
        void 0 === t && (t = 33984 + de - 1),
          fe !== t && (e.activeTexture(t), (fe = t));
      }
      function We(t, n) {
        null === fe && Be();
        var i = _e[fe];
        void 0 === i && ((i = { type: void 0, texture: void 0 }), (_e[fe] = i)),
          (i.type === t && i.texture === n) ||
            (e.bindTexture(t, n || ye[t]), (i.type = t), (i.texture = n));
      }
      function Ie() {
        var t = _e[fe];
        void 0 !== t &&
          void 0 !== t.type &&
          (e.bindTexture(t.type, null),
          (t.type = void 0),
          (t.texture = void 0));
      }
      function qe() {
        try {
          e.compressedTexImage2D.apply(e, arguments);
        } catch (e) {
          void 0;
        }
      }
      function He() {
        try {
          e.texImage2D.apply(e, arguments);
        } catch (e) {
          void 0;
        }
      }
      function Fe() {
        try {
          e.texImage3D.apply(e, arguments);
        } catch (e) {
          void 0;
        }
      }
      function Ue(t) {
        !1 === Me.equals(t) && (e.scissor(t.x, t.y, t.z, t.w), Me.copy(t));
      }
      function Xe(t) {
        !1 === ve.equals(t) && (e.viewport(t.x, t.y, t.z, t.w), ve.copy(t));
      }
      function Ve() {
        for (var t = 0; t < V.length; t++)
          1 === V[t] && (e.disableVertexAttribArray(t), (V[t] = 0));
        (J = {}),
          (fe = null),
          (_e = {}),
          (Z = null),
          (Q = null),
          (oe = null),
          (se = null),
          l.reset(),
          d.reset(),
          h.reset();
      }
      return {
        buffers: { color: l, depth: d, stencil: h },
        initAttributes: be,
        enableAttribute: we,
        enableAttributeAndDivisor: Ae,
        disableUnusedAttributes: xe,
        vertexAttribPointer: Le,
        enable: Te,
        disable: ze,
        useProgram: Se,
        setBlending: Ce,
        setMaterial: De,
        setFlipSided: Ne,
        setCullFace: Pe,
        setLineWidth: je,
        setPolygonOffset: Ye,
        setScissorTest: Re,
        activeTexture: Be,
        bindTexture: We,
        unbindTexture: Ie,
        compressedTexImage2D: qe,
        texImage2D: He,
        texImage3D: Fe,
        scissor: Ue,
        viewport: Xe,
        reset: Ve,
      };
    }
    function ju(e, t, n, i, r, a, o) {
      var s,
        c = r.isWebGL2,
        u = r.maxTextures,
        l = r.maxCubemapSize,
        d = r.maxTextureSize,
        h = r.maxSamples,
        p = new WeakMap(),
        m = !1;
      try {
        m =
          'undefined' !== typeof OffscreenCanvas &&
          null !== new OffscreenCanvas(1, 1).getContext('2d');
      } catch (e) {}
      function f(e, t) {
        return m
          ? new OffscreenCanvas(e, t)
          : document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');
      }
      function _(e, t, n, i) {
        var r = 1;
        if (
          ((e.width > i || e.height > i) &&
            (r = i / Math.max(e.width, e.height)),
          r < 1 || !0 === t)
        ) {
          if (
            ('undefined' !== typeof HTMLImageElement &&
              e instanceof HTMLImageElement) ||
            ('undefined' !== typeof HTMLCanvasElement &&
              e instanceof HTMLCanvasElement) ||
            ('undefined' !== typeof ImageBitmap && e instanceof ImageBitmap)
          ) {
            var a = t ? hn.floorPowerOfTwo : Math.floor,
              o = a(r * e.width),
              c = a(r * e.height);
            void 0 === s && (s = f(o, c));
            var u = n ? f(o, c) : s;
            (u.width = o), (u.height = c);
            var l = u.getContext('2d');
            return l.drawImage(e, 0, 0, o, c), u;
          }
          return 'data' in e && void 0, e;
        }
        return e;
      }
      function M(e) {
        return hn.isPowerOfTwo(e.width) && hn.isPowerOfTwo(e.height);
      }
      function v(e) {
        return (
          !c &&
          (e.wrapS !== le ||
            e.wrapT !== le ||
            (e.minFilter !== he && e.minFilter !== fe))
        );
      }
      function g(e, t) {
        return (
          e.generateMipmaps && t && e.minFilter !== he && e.minFilter !== fe
        );
      }
      function y(t, n, r, a) {
        e.generateMipmap(t);
        var o = i.get(n);
        o.__maxMipLevel = Math.log(Math.max(r, a)) * Math.LOG2E;
      }
      function b(n, i, r) {
        if (!1 === c) return i;
        if (null !== n) {
          if (void 0 !== e[n]) return e[n];
          void 0;
        }
        var a = i;
        return (
          6403 === i &&
            (5126 === r && (a = 33326),
            5131 === r && (a = 33325),
            5121 === r && (a = 33321)),
          6407 === i &&
            (5126 === r && (a = 34837),
            5131 === r && (a = 34843),
            5121 === r && (a = 32849)),
          6408 === i &&
            (5126 === r && (a = 34836),
            5131 === r && (a = 34842),
            5121 === r && (a = 32856)),
          (33325 !== a && 33326 !== a && 34842 !== a && 34836 !== a) ||
            t.get('EXT_color_buffer_float'),
          a
        );
      }
      function w(e) {
        return e === he || e === pe || e === me ? 9728 : 9729;
      }
      function A(e) {
        var t = e.target;
        t.removeEventListener('dispose', A),
          L(t),
          t.isVideoTexture && p.delete(t),
          o.memory.textures--;
      }
      function x(e) {
        var t = e.target;
        t.removeEventListener('dispose', x), T(t), o.memory.textures--;
      }
      function L(t) {
        var n = i.get(t);
        void 0 !== n.__webglInit &&
          (e.deleteTexture(n.__webglTexture), i.remove(t));
      }
      function T(t) {
        var n = i.get(t),
          r = i.get(t.texture);
        if (t) {
          if (
            (void 0 !== r.__webglTexture && e.deleteTexture(r.__webglTexture),
            t.depthTexture && t.depthTexture.dispose(),
            t.isWebGLCubeRenderTarget)
          )
            for (var a = 0; a < 6; a++)
              e.deleteFramebuffer(n.__webglFramebuffer[a]),
                n.__webglDepthbuffer &&
                  e.deleteRenderbuffer(n.__webglDepthbuffer[a]);
          else
            e.deleteFramebuffer(n.__webglFramebuffer),
              n.__webglDepthbuffer &&
                e.deleteRenderbuffer(n.__webglDepthbuffer),
              n.__webglMultisampledFramebuffer &&
                e.deleteFramebuffer(n.__webglMultisampledFramebuffer),
              n.__webglColorRenderbuffer &&
                e.deleteRenderbuffer(n.__webglColorRenderbuffer),
              n.__webglDepthRenderbuffer &&
                e.deleteRenderbuffer(n.__webglDepthRenderbuffer);
          i.remove(t.texture), i.remove(t);
        }
      }
      var z = 0;
      function S() {
        z = 0;
      }
      function O() {
        var e = z;
        return e >= u && void 0, (z += 1), e;
      }
      function E(e, t) {
        var r = i.get(e);
        if (
          (e.isVideoTexture && G(e), e.version > 0 && r.__version !== e.version)
        ) {
          var a = e.image;
          if (void 0 === a) void 0;
          else {
            if (!1 !== a.complete) return B(r, e, t), void 0;
            void 0;
          }
        }
        n.activeTexture(33984 + t), n.bindTexture(3553, r.__webglTexture);
      }
      function k(e, t) {
        var r = i.get(e);
        if (e.version > 0 && r.__version !== e.version)
          return B(r, e, t), void 0;
        n.activeTexture(33984 + t), n.bindTexture(35866, r.__webglTexture);
      }
      function C(e, t) {
        var r = i.get(e);
        if (e.version > 0 && r.__version !== e.version)
          return B(r, e, t), void 0;
        n.activeTexture(33984 + t), n.bindTexture(32879, r.__webglTexture);
      }
      function D(t, r) {
        if (6 === t.image.length) {
          var o = i.get(t);
          if (t.version > 0 && o.__version !== t.version) {
            R(o, t),
              n.activeTexture(33984 + r),
              n.bindTexture(34067, o.__webglTexture),
              e.pixelStorei(37440, t.flipY);
            for (
              var s =
                  t &&
                  (t.isCompressedTexture || t.image[0].isCompressedTexture),
                u = t.image[0] && t.image[0].isDataTexture,
                d = [],
                h = 0;
              h < 6;
              h++
            )
              d[h] =
                s || u
                  ? u
                    ? t.image[h].image
                    : t.image[h]
                  : _(t.image[h], !1, !0, l);
            var p,
              m = d[0],
              f = M(m) || c,
              v = a.convert(t.format),
              w = a.convert(t.type),
              A = b(t.internalFormat, v, w);
            if ((Y(34067, t, f), s)) {
              for (h = 0; h < 6; h++) {
                p = d[h].mipmaps;
                for (var x = 0; x < p.length; x++) {
                  var L = p[x];
                  t.format !== De && t.format !== Ce
                    ? null !== v
                      ? n.compressedTexImage2D(
                          34069 + h,
                          x,
                          A,
                          L.width,
                          L.height,
                          0,
                          L.data
                        )
                      : void 0
                    : n.texImage2D(
                        34069 + h,
                        x,
                        A,
                        L.width,
                        L.height,
                        0,
                        v,
                        w,
                        L.data
                      );
                }
              }
              o.__maxMipLevel = p.length - 1;
            } else {
              p = t.mipmaps;
              for (h = 0; h < 6; h++)
                if (u) {
                  n.texImage2D(
                    34069 + h,
                    0,
                    A,
                    d[h].width,
                    d[h].height,
                    0,
                    v,
                    w,
                    d[h].data
                  );
                  for (x = 0; x < p.length; x++) {
                    L = p[x];
                    var T = L.image[h].image;
                    n.texImage2D(
                      34069 + h,
                      x + 1,
                      A,
                      T.width,
                      T.height,
                      0,
                      v,
                      w,
                      T.data
                    );
                  }
                } else {
                  n.texImage2D(34069 + h, 0, A, v, w, d[h]);
                  for (x = 0; x < p.length; x++) {
                    L = p[x];
                    n.texImage2D(34069 + h, x + 1, A, v, w, L.image[h]);
                  }
                }
              o.__maxMipLevel = p.length;
            }
            g(t, f) && y(34067, t, m.width, m.height),
              (o.__version = t.version),
              t.onUpdate && t.onUpdate(t);
          } else
            n.activeTexture(33984 + r), n.bindTexture(34067, o.__webglTexture);
        }
      }
      function N(e, t) {
        n.activeTexture(33984 + t),
          n.bindTexture(34067, i.get(e).__webglTexture);
      }
      var P = { [ue]: 10497, [le]: 33071, [de]: 33648 },
        j = {
          [he]: 9728,
          [pe]: 9984,
          [me]: 9986,
          [fe]: 9729,
          [_e]: 9985,
          [Me]: 9987,
        };
      function Y(n, a, o) {
        o
          ? (e.texParameteri(n, 10242, P[a.wrapS]),
            e.texParameteri(n, 10243, P[a.wrapT]),
            (32879 !== n && 35866 !== n) ||
              e.texParameteri(n, 32882, P[a.wrapR]),
            e.texParameteri(n, 10240, j[a.magFilter]),
            e.texParameteri(n, 10241, j[a.minFilter]))
          : (e.texParameteri(n, 10242, 33071),
            e.texParameteri(n, 10243, 33071),
            (32879 !== n && 35866 !== n) || e.texParameteri(n, 32882, 33071),
            a.wrapS === le && a.wrapT,
            e.texParameteri(n, 10240, w(a.magFilter)),
            e.texParameteri(n, 10241, w(a.minFilter)),
            a.minFilter !== he && a.minFilter);
        var s = t.get('EXT_texture_filter_anisotropic');
        if (s) {
          if (a.type === Le && null === t.get('OES_texture_float_linear'))
            return;
          if (
            a.type === Te &&
            null === (c || t.get('OES_texture_half_float_linear'))
          )
            return;
          (a.anisotropy > 1 || i.get(a).__currentAnisotropy) &&
            (e.texParameterf(
              n,
              s.TEXTURE_MAX_ANISOTROPY_EXT,
              Math.min(a.anisotropy, r.getMaxAnisotropy())
            ),
            (i.get(a).__currentAnisotropy = a.anisotropy));
        }
      }
      function R(t, n) {
        void 0 === t.__webglInit &&
          ((t.__webglInit = !0),
          n.addEventListener('dispose', A),
          (t.__webglTexture = e.createTexture()),
          o.memory.textures++);
      }
      function B(t, i, r) {
        var o = 3553;
        i.isDataTexture2DArray && (o = 35866),
          i.isDataTexture3D && (o = 32879),
          R(t, i),
          n.activeTexture(33984 + r),
          n.bindTexture(o, t.__webglTexture),
          e.pixelStorei(37440, i.flipY),
          e.pixelStorei(37441, i.premultiplyAlpha),
          e.pixelStorei(3317, i.unpackAlignment);
        var s = v(i) && !1 === M(i.image),
          u = _(i.image, s, !1, d),
          l = M(u) || c,
          h = a.convert(i.format),
          p = a.convert(i.type),
          m = b(i.internalFormat, h, p);
        Y(o, i, l);
        var f,
          w = i.mipmaps;
        if (i.isDepthTexture)
          (m = 6402),
            c
              ? (m =
                  i.type === Le
                    ? 36012
                    : i.type === xe
                    ? 33190
                    : i.type === Ee
                    ? 35056
                    : 33189)
              : i.type,
            i.format === Ye &&
              6402 === m &&
              i.type !== we &&
              i.type !== xe &&
              (void 0, (i.type = we), (p = a.convert(i.type))),
            i.format === Re &&
              6402 === m &&
              ((m = 34041),
              i.type !== Ee &&
                (void 0, (i.type = Ee), (p = a.convert(i.type)))),
            n.texImage2D(3553, 0, m, u.width, u.height, 0, h, p, null);
        else if (i.isDataTexture)
          if (w.length > 0 && l) {
            for (var A = 0, x = w.length; A < x; A++)
              (f = w[A]),
                n.texImage2D(3553, A, m, f.width, f.height, 0, h, p, f.data);
            (i.generateMipmaps = !1), (t.__maxMipLevel = w.length - 1);
          } else
            n.texImage2D(3553, 0, m, u.width, u.height, 0, h, p, u.data),
              (t.__maxMipLevel = 0);
        else if (i.isCompressedTexture) {
          for (A = 0, x = w.length; A < x; A++)
            (f = w[A]),
              i.format !== De && i.format !== Ce
                ? null !== h &&
                  n.compressedTexImage2D(
                    3553,
                    A,
                    m,
                    f.width,
                    f.height,
                    0,
                    f.data
                  )
                : n.texImage2D(3553, A, m, f.width, f.height, 0, h, p, f.data);
          t.__maxMipLevel = w.length - 1;
        } else if (i.isDataTexture2DArray)
          n.texImage3D(
            35866,
            0,
            m,
            u.width,
            u.height,
            u.depth,
            0,
            h,
            p,
            u.data
          ),
            (t.__maxMipLevel = 0);
        else if (i.isDataTexture3D)
          n.texImage3D(
            32879,
            0,
            m,
            u.width,
            u.height,
            u.depth,
            0,
            h,
            p,
            u.data
          ),
            (t.__maxMipLevel = 0);
        else if (w.length > 0 && l) {
          for (A = 0, x = w.length; A < x; A++)
            (f = w[A]), n.texImage2D(3553, A, m, h, p, f);
          (i.generateMipmaps = !1), (t.__maxMipLevel = w.length - 1);
        } else n.texImage2D(3553, 0, m, h, p, u), (t.__maxMipLevel = 0);
        g(i, l) && y(o, i, u.width, u.height),
          (t.__version = i.version),
          i.onUpdate && i.onUpdate(i);
      }
      function W(t, r, o, s) {
        var c = a.convert(r.texture.format),
          u = a.convert(r.texture.type),
          l = b(r.texture.internalFormat, c, u);
        n.texImage2D(s, 0, l, r.width, r.height, 0, c, u, null),
          e.bindFramebuffer(36160, t),
          e.framebufferTexture2D(
            36160,
            o,
            s,
            i.get(r.texture).__webglTexture,
            0
          ),
          e.bindFramebuffer(36160, null);
      }
      function I(t, n, i) {
        if ((e.bindRenderbuffer(36161, t), n.depthBuffer && !n.stencilBuffer)) {
          var r = 33189;
          if (i) {
            var o = n.depthTexture;
            o &&
              o.isDepthTexture &&
              (o.type === Le ? (r = 36012) : o.type === xe && (r = 33190));
            var s = V(n);
            e.renderbufferStorageMultisample(36161, s, r, n.width, n.height);
          } else e.renderbufferStorage(36161, r, n.width, n.height);
          e.framebufferRenderbuffer(36160, 36096, 36161, t);
        } else if (n.depthBuffer && n.stencilBuffer) {
          if (i) {
            s = V(n);
            e.renderbufferStorageMultisample(
              36161,
              s,
              35056,
              n.width,
              n.height
            );
          } else e.renderbufferStorage(36161, 34041, n.width, n.height);
          e.framebufferRenderbuffer(36160, 33306, 36161, t);
        } else {
          var c = a.convert(n.texture.format),
            u = a.convert(n.texture.type);
          r = b(n.texture.internalFormat, c, u);
          if (i) {
            s = V(n);
            e.renderbufferStorageMultisample(36161, s, r, n.width, n.height);
          } else e.renderbufferStorage(36161, r, n.width, n.height);
        }
        e.bindRenderbuffer(36161, null);
      }
      function q(t, n) {
        var r = n && n.isWebGLCubeRenderTarget;
        if (r)
          throw new Error(
            'Depth Texture with cube render targets is not supported'
          );
        if (
          (e.bindFramebuffer(36160, t),
          !n.depthTexture || !n.depthTexture.isDepthTexture)
        )
          throw new Error(
            'renderTarget.depthTexture must be an instance of THREE.DepthTexture'
          );
        (i.get(n.depthTexture).__webglTexture &&
          n.depthTexture.image.width === n.width &&
          n.depthTexture.image.height === n.height) ||
          ((n.depthTexture.image.width = n.width),
          (n.depthTexture.image.height = n.height),
          (n.depthTexture.needsUpdate = !0)),
          E(n.depthTexture, 0);
        var a = i.get(n.depthTexture).__webglTexture;
        if (n.depthTexture.format === Ye)
          e.framebufferTexture2D(36160, 36096, 3553, a, 0);
        else {
          if (n.depthTexture.format !== Re)
            throw new Error('Unknown depthTexture format');
          e.framebufferTexture2D(36160, 33306, 3553, a, 0);
        }
      }
      function H(t) {
        var n = i.get(t),
          r = !0 === t.isWebGLCubeRenderTarget;
        if (t.depthTexture) {
          if (r)
            throw new Error(
              'target.depthTexture not supported in Cube render targets'
            );
          q(n.__webglFramebuffer, t);
        } else if (r) {
          n.__webglDepthbuffer = [];
          for (var a = 0; a < 6; a++)
            e.bindFramebuffer(36160, n.__webglFramebuffer[a]),
              (n.__webglDepthbuffer[a] = e.createRenderbuffer()),
              I(n.__webglDepthbuffer[a], t, !1);
        } else
          e.bindFramebuffer(36160, n.__webglFramebuffer),
            (n.__webglDepthbuffer = e.createRenderbuffer()),
            I(n.__webglDepthbuffer, t, !1);
        e.bindFramebuffer(36160, null);
      }
      function F(t) {
        var r = i.get(t),
          s = i.get(t.texture);
        t.addEventListener('dispose', x),
          (s.__webglTexture = e.createTexture()),
          o.memory.textures++;
        var u = !0 === t.isWebGLCubeRenderTarget,
          l = !0 === t.isWebGLMultisampleRenderTarget,
          d = M(t) || c;
        if (
          (!c ||
            t.texture.format !== Ce ||
            (t.texture.type !== Le && t.texture.type !== Te) ||
            (t.texture.format = De),
          u)
        ) {
          r.__webglFramebuffer = [];
          for (var h = 0; h < 6; h++)
            r.__webglFramebuffer[h] = e.createFramebuffer();
        } else if (((r.__webglFramebuffer = e.createFramebuffer()), l))
          if (c) {
            (r.__webglMultisampledFramebuffer = e.createFramebuffer()),
              (r.__webglColorRenderbuffer = e.createRenderbuffer()),
              e.bindRenderbuffer(36161, r.__webglColorRenderbuffer);
            var p = a.convert(t.texture.format),
              m = a.convert(t.texture.type),
              f = b(t.texture.internalFormat, p, m),
              _ = V(t);
            e.renderbufferStorageMultisample(36161, _, f, t.width, t.height),
              e.bindFramebuffer(36160, r.__webglMultisampledFramebuffer),
              e.framebufferRenderbuffer(
                36160,
                36064,
                36161,
                r.__webglColorRenderbuffer
              ),
              e.bindRenderbuffer(36161, null),
              t.depthBuffer &&
                ((r.__webglDepthRenderbuffer = e.createRenderbuffer()),
                I(r.__webglDepthRenderbuffer, t, !0)),
              e.bindFramebuffer(36160, null);
          } else void 0;
        if (u) {
          n.bindTexture(34067, s.__webglTexture), Y(34067, t.texture, d);
          for (h = 0; h < 6; h++)
            W(r.__webglFramebuffer[h], t, 36064, 34069 + h);
          g(t.texture, d) && y(34067, t.texture, t.width, t.height),
            n.bindTexture(34067, null);
        } else
          n.bindTexture(3553, s.__webglTexture),
            Y(3553, t.texture, d),
            W(r.__webglFramebuffer, t, 36064, 3553),
            g(t.texture, d) && y(3553, t.texture, t.width, t.height),
            n.bindTexture(3553, null);
        t.depthBuffer && H(t);
      }
      function U(e) {
        var t = e.texture,
          r = M(e) || c;
        if (g(t, r)) {
          var a = e.isWebGLCubeRenderTarget ? 34067 : 3553,
            o = i.get(t).__webglTexture;
          n.bindTexture(a, o),
            y(a, t, e.width, e.height),
            n.bindTexture(a, null);
        }
      }
      function X(t) {
        if (t.isWebGLMultisampleRenderTarget)
          if (c) {
            var n = i.get(t);
            e.bindFramebuffer(36008, n.__webglMultisampledFramebuffer),
              e.bindFramebuffer(36009, n.__webglFramebuffer);
            var r = t.width,
              a = t.height,
              o = 16384;
            t.depthBuffer && (o |= 256),
              t.stencilBuffer && (o |= 1024),
              e.blitFramebuffer(0, 0, r, a, 0, 0, r, a, o, 9728),
              e.bindFramebuffer(36160, n.__webglMultisampledFramebuffer);
          } else void 0;
      }
      function V(e) {
        return c && e.isWebGLMultisampleRenderTarget
          ? Math.min(h, e.samples)
          : 0;
      }
      function G(e) {
        var t = o.render.frame;
        p.get(e) !== t && (p.set(e, t), e.update());
      }
      var J = !1,
        Z = !1;
      function K(e, t) {
        e &&
          e.isWebGLRenderTarget &&
          (void 0, !1 === J && (J = !0), (e = e.texture)),
          E(e, t);
      }
      function Q(e, t) {
        e &&
          e.isWebGLCubeRenderTarget &&
          (void 0, !1 === Z && (Z = !0), (e = e.texture)),
          (e && e.isCubeTexture) ||
          (Array.isArray(e.image) && 6 === e.image.length)
            ? D(e, t)
            : N(e, t);
      }
      (this.allocateTextureUnit = O),
        (this.resetTextureUnits = S),
        (this.setTexture2D = E),
        (this.setTexture2DArray = k),
        (this.setTexture3D = C),
        (this.setTextureCube = D),
        (this.setTextureCubeDynamic = N),
        (this.setupRenderTarget = F),
        (this.updateRenderTargetMipmap = U),
        (this.updateMultisampleRenderTarget = X),
        (this.safeSetTexture2D = K),
        (this.safeSetTextureCube = Q);
    }
    function Yu(e, t, n) {
      var i = n.isWebGL2;
      function r(e) {
        var n;
        if (e === ge) return 5121;
        if (e === ze) return 32819;
        if (e === Se) return 32820;
        if (e === Oe) return 33635;
        if (e === ye) return 5120;
        if (e === be) return 5122;
        if (e === we) return 5123;
        if (e === Ae) return 5124;
        if (e === xe) return 5125;
        if (e === Le) return 5126;
        if (e === Te)
          return i
            ? 5131
            : ((n = t.get('OES_texture_half_float')),
              null !== n ? n.HALF_FLOAT_OES : null);
        if (e === ke) return 6406;
        if (e === Ce) return 6407;
        if (e === De) return 6408;
        if (e === Ne) return 6409;
        if (e === Pe) return 6410;
        if (e === Ye) return 6402;
        if (e === Re) return 34041;
        if (e === Be) return 6403;
        if (e === We) return 36244;
        if (e === Ie) return 33319;
        if (e === qe) return 33320;
        if (e === He) return 36248;
        if (e === Fe) return 36249;
        if (e === Ue || e === Xe || e === Ve || e === Ge) {
          if (((n = t.get('WEBGL_compressed_texture_s3tc')), null === n))
            return null;
          if (e === Ue) return n.COMPRESSED_RGB_S3TC_DXT1_EXT;
          if (e === Xe) return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;
          if (e === Ve) return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;
          if (e === Ge) return n.COMPRESSED_RGBA_S3TC_DXT5_EXT;
        }
        if (e === Je || e === Ze || e === Ke || e === Qe) {
          if (((n = t.get('WEBGL_compressed_texture_pvrtc')), null === n))
            return null;
          if (e === Je) return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
          if (e === Ze) return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
          if (e === Ke) return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
          if (e === Qe) return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
        }
        if (e === $e)
          return (
            (n = t.get('WEBGL_compressed_texture_etc1')),
            null !== n ? n.COMPRESSED_RGB_ETC1_WEBGL : null
          );
        if (
          (e === et || e === tt) &&
          ((n = t.get('WEBGL_compressed_texture_etc')), null !== n)
        ) {
          if (e === et) return n.COMPRESSED_RGB8_ETC2;
          if (e === tt) return n.COMPRESSED_RGBA8_ETC2_EAC;
        }
        return e === nt ||
          e === it ||
          e === rt ||
          e === at ||
          e === ot ||
          e === st ||
          e === ct ||
          e === ut ||
          e === lt ||
          e === dt ||
          e === ht ||
          e === pt ||
          e === mt ||
          e === ft ||
          e === Mt ||
          e === vt ||
          e === gt ||
          e === yt ||
          e === bt ||
          e === wt ||
          e === At ||
          e === xt ||
          e === Lt ||
          e === Tt ||
          e === zt ||
          e === St ||
          e === Ot ||
          e === Et
          ? ((n = t.get('WEBGL_compressed_texture_astc')),
            null !== n ? e : null)
          : e === _t
          ? ((n = t.get('EXT_texture_compression_bptc')), null !== n ? e : null)
          : e === Ee
          ? i
            ? 34042
            : ((n = t.get('WEBGL_depth_texture')),
              null !== n ? n.UNSIGNED_INT_24_8_WEBGL : null)
          : void 0;
      }
      return { convert: r };
    }
    function Ru(e) {
      Zr.call(this), (this.cameras = e || []);
    }
    function Bu() {
      Zn.call(this), (this.type = 'Group');
    }
    function Wu() {
      (this._targetRay = null), (this._grip = null);
    }
    function Iu(e, t) {
      var n = this,
        i = null,
        r = 1,
        a = null,
        o = 'local-floor',
        s = null,
        c = [],
        u = new Map(),
        l = new Zr();
      l.layers.enable(1), (l.viewport = new vn());
      var d = new Zr();
      d.layers.enable(2), (d.viewport = new vn());
      var h = [l, d],
        p = new Ru();
      p.layers.enable(1), p.layers.enable(2);
      var m = null,
        f = null;
      function _(e) {
        var t = u.get(e.inputSource);
        t && t.dispatchEvent({ type: e.type });
      }
      function M() {
        u.forEach(function (e, t) {
          e.disconnect(t);
        }),
          u.clear(),
          e.setFramebuffer(null),
          e.setRenderTarget(e.getRenderTarget()),
          T.stop(),
          (n.isPresenting = !1),
          n.dispatchEvent({ type: 'sessionend' });
      }
      function v(e) {
        (a = e),
          T.setContext(i),
          T.start(),
          (n.isPresenting = !0),
          n.dispatchEvent({ type: 'sessionstart' });
      }
      function g(e) {
        for (var t = i.inputSources, n = 0; n < c.length; n++)
          u.set(t[n], c[n]);
        for (n = 0; n < e.removed.length; n++) {
          var r = e.removed[n],
            a = u.get(r);
          a &&
            (a.dispatchEvent({ type: 'disconnected', data: r }), u.delete(r));
        }
        for (n = 0; n < e.added.length; n++) {
          (r = e.added[n]), (a = u.get(r));
          a && a.dispatchEvent({ type: 'connected', data: r });
        }
      }
      (this.enabled = !1),
        (this.isPresenting = !1),
        (this.getController = function (e) {
          var t = c[e];
          return (
            void 0 === t && ((t = new Wu()), (c[e] = t)), t.getTargetRaySpace()
          );
        }),
        (this.getControllerGrip = function (e) {
          var t = c[e];
          return void 0 === t && ((t = new Wu()), (c[e] = t)), t.getGripSpace();
        }),
        (this.setFramebufferScaleFactor = function (e) {
          (r = e), n.isPresenting;
        }),
        (this.setReferenceSpaceType = function (e) {
          (o = e), n.isPresenting;
        }),
        (this.getReferenceSpace = function () {
          return a;
        }),
        (this.getSession = function () {
          return i;
        }),
        (this.setSession = function (e) {
          if (((i = e), null !== i)) {
            i.addEventListener('select', _),
              i.addEventListener('selectstart', _),
              i.addEventListener('selectend', _),
              i.addEventListener('squeeze', _),
              i.addEventListener('squeezestart', _),
              i.addEventListener('squeezeend', _),
              i.addEventListener('end', M);
            var n = t.getContextAttributes(),
              a = {
                antialias: n.antialias,
                alpha: n.alpha,
                depth: n.depth,
                stencil: n.stencil,
                framebufferScaleFactor: r,
              },
              s = new XRWebGLLayer(i, t, a);
            i.updateRenderState({ baseLayer: s }),
              i.requestReferenceSpace(o).then(v),
              i.addEventListener('inputsourceschange', g);
          }
        });
      var y = new xn(),
        b = new xn();
      function w(e, t, n) {
        y.setFromMatrixPosition(t.matrixWorld),
          b.setFromMatrixPosition(n.matrixWorld);
        var i = y.distanceTo(b),
          r = t.projectionMatrix.elements,
          a = n.projectionMatrix.elements,
          o = r[14] / (r[10] - 1),
          s = r[14] / (r[10] + 1),
          c = (r[9] + 1) / r[5],
          u = (r[9] - 1) / r[5],
          l = (r[8] - 1) / r[0],
          d = (a[8] + 1) / a[0],
          h = o * l,
          p = o * d,
          m = i / (-l + d),
          f = m * -l;
        t.matrixWorld.decompose(e.position, e.quaternion, e.scale),
          e.translateX(f),
          e.translateZ(m),
          e.matrixWorld.compose(e.position, e.quaternion, e.scale),
          e.matrixWorldInverse.getInverse(e.matrixWorld);
        var _ = o + m,
          M = s + m,
          v = h - f,
          g = p + (i - f),
          w = ((c * s) / M) * _,
          A = ((u * s) / M) * _;
        e.projectionMatrix.makePerspective(v, g, w, A, _, M);
      }
      function A(e, t) {
        null === t
          ? e.matrixWorld.copy(e.matrix)
          : e.matrixWorld.multiplyMatrices(t.matrixWorld, e.matrix),
          e.matrixWorldInverse.getInverse(e.matrixWorld);
      }
      this.getCamera = function (e) {
        (p.near = d.near = l.near = e.near),
          (p.far = d.far = l.far = e.far),
          (m === p.near && f === p.far) ||
            (i.updateRenderState({ depthNear: p.near, depthFar: p.far }),
            (m = p.near),
            (f = p.far));
        var t = e.parent,
          n = p.cameras;
        A(p, t);
        for (var r = 0; r < n.length; r++) A(n[r], t);
        e.matrixWorld.copy(p.matrixWorld);
        for (var a = e.children, o = ((r = 0), a.length); r < o; r++)
          a[r].updateMatrixWorld(!0);
        return (
          2 === n.length
            ? w(p, l, d)
            : p.projectionMatrix.copy(l.projectionMatrix),
          p
        );
      };
      var x = null;
      function L(t, n) {
        if (((s = n.getViewerPose(a)), null !== s)) {
          var r = s.views,
            o = i.renderState.baseLayer;
          e.setFramebuffer(o.framebuffer);
          var u = !1;
          r.length !== p.cameras.length && ((p.cameras.length = 0), (u = !0));
          for (var l = 0; l < r.length; l++) {
            var d = r[l],
              m = o.getViewport(d),
              f = h[l];
            f.matrix.fromArray(d.transform.matrix),
              f.projectionMatrix.fromArray(d.projectionMatrix),
              f.viewport.set(m.x, m.y, m.width, m.height),
              0 === l && p.matrix.copy(f.matrix),
              !0 === u && p.cameras.push(f);
          }
        }
        var _ = i.inputSources;
        for (l = 0; l < c.length; l++) {
          var M = c[l],
            v = _[l];
          M.update(v, n, a);
        }
        x && x(t, n);
      }
      var T = new oa();
      T.setAnimationLoop(L),
        (this.setAnimationLoop = function (e) {
          x = e;
        }),
        (this.dispose = function () {});
    }
    function qu(e) {
      e = e || {};
      var t =
          void 0 !== e.canvas
            ? e.canvas
            : document.createElementNS(
                'http://www.w3.org/1999/xhtml',
                'canvas'
              ),
        n = void 0 !== e.context ? e.context : null,
        i = void 0 !== e.alpha && e.alpha,
        r = void 0 === e.depth || e.depth,
        a = void 0 === e.stencil || e.stencil,
        o = void 0 !== e.antialias && e.antialias,
        s = void 0 === e.premultipliedAlpha || e.premultipliedAlpha,
        c = void 0 !== e.preserveDrawingBuffer && e.preserveDrawingBuffer,
        u = void 0 !== e.powerPreference ? e.powerPreference : 'default',
        l =
          void 0 !== e.failIfMajorPerformanceCaveat &&
          e.failIfMajorPerformanceCaveat,
        d = null,
        h = null;
      (this.domElement = t),
        (this.debug = { checkShaderErrors: !0 }),
        (this.autoClear = !0),
        (this.autoClearColor = !0),
        (this.autoClearDepth = !0),
        (this.autoClearStencil = !0),
        (this.sortObjects = !0),
        (this.clippingPlanes = []),
        (this.localClippingEnabled = !1),
        (this.gammaFactor = 2),
        (this.outputEncoding = Ut),
        (this.physicallyCorrectLights = !1),
        (this.toneMapping = J),
        (this.toneMappingExposure = 1),
        (this.toneMappingWhitePoint = 1),
        (this.maxMorphTargets = 8),
        (this.maxMorphNormals = 4);
      var m,
        f,
        _,
        M,
        v,
        g,
        y,
        b,
        w,
        A,
        x,
        L,
        T,
        z,
        S,
        O,
        E,
        k,
        C = this,
        D = !1,
        N = null,
        P = 0,
        j = 0,
        Y = null,
        R = null,
        B = -1,
        W = { geometry: null, program: null, wireframe: !1 },
        I = null,
        q = null,
        H = new vn(),
        F = new vn(),
        U = null,
        X = t.width,
        V = t.height,
        G = 1,
        Z = null,
        K = null,
        Q = new vn(0, 0, X, V),
        $ = new vn(0, 0, X, V),
        ee = !1,
        te = new ra(),
        ne = new Ps(),
        ie = !1,
        re = !1,
        ae = new Cn(),
        oe = new xn();
      function se() {
        return null === Y ? G : 1;
      }
      try {
        var ce = {
          alpha: i,
          depth: r,
          stencil: a,
          antialias: o,
          premultipliedAlpha: s,
          preserveDrawingBuffer: c,
          powerPreference: u,
          failIfMajorPerformanceCaveat: l,
          xrCompatible: !0,
        };
        if (
          (t.addEventListener('webglcontextlost', he, !1),
          t.addEventListener('webglcontextrestored', pe, !1),
          (m =
            n ||
            t.getContext('webgl', ce) ||
            t.getContext('experimental-webgl', ce)),
          null === m)
        )
          throw null !== t.getContext('webgl')
            ? new Error(
                'Error creating WebGL context with your selected attributes.'
              )
            : new Error('Error creating WebGL context.');
        void 0 === m.getShaderPrecisionFormat &&
          (m.getShaderPrecisionFormat = function () {
            return { rangeMin: 1, rangeMax: 1, precision: 1 };
          });
      } catch (e) {
        throw (void 0, e);
      }
      function ue() {
        (f = new js(m)),
          (_ = new Ns(m, f, e)),
          !1 === _.isWebGL2 &&
            (f.get('WEBGL_depth_texture'),
            f.get('OES_texture_float'),
            f.get('OES_texture_half_float'),
            f.get('OES_texture_half_float_linear'),
            f.get('OES_standard_derivatives'),
            f.get('OES_element_index_uint'),
            f.get('ANGLE_instanced_arrays')),
          f.get('OES_texture_float_linear'),
          (k = new Yu(m, f, _)),
          (M = new Pu(m, f, _)),
          M.scissor(F.copy($).multiplyScalar(G).floor()),
          M.viewport(H.copy(Q).multiplyScalar(G).floor()),
          (v = new Bs(m)),
          (g = new vu()),
          (y = new ju(m, f, M, g, _, k, v)),
          (b = new sa(m, _)),
          (w = new Ys(m, b, v)),
          (A = new qs(m, w, b, v)),
          (S = new Is(m)),
          (x = new Mu(C, f, _)),
          (L = new wu()),
          (T = new Ou()),
          (z = new Cs(C, M, A, s)),
          (O = new Ds(m, f, v, _)),
          (E = new Rs(m, f, v, _)),
          (v.programs = x.programs),
          (C.capabilities = _),
          (C.extensions = f),
          (C.properties = g),
          (C.renderLists = L),
          (C.state = M),
          (C.info = v);
      }
      ue();
      var le = new Iu(C, m);
      this.xr = le;
      var de = new Nu(C, A, _.maxTextureSize);
      function he(e) {
        e.preventDefault(), (D = !0);
      }
      function pe() {
        void 0, (D = !1), ue();
      }
      function me(e) {
        var t = e.target;
        t.removeEventListener('dispose', me), fe(t);
      }
      function fe(e) {
        _e(e), g.remove(e);
      }
      function _e(e) {
        var t = g.get(e).program;
        (e.program = void 0), void 0 !== t && x.releaseProgram(t);
      }
      function Me(e, t) {
        e.render(function (e) {
          C.renderBufferImmediate(e, t);
        });
      }
      (this.shadowMap = de),
        (this.getContext = function () {
          return m;
        }),
        (this.getContextAttributes = function () {
          return m.getContextAttributes();
        }),
        (this.forceContextLoss = function () {
          var e = f.get('WEBGL_lose_context');
          e && e.loseContext();
        }),
        (this.forceContextRestore = function () {
          var e = f.get('WEBGL_lose_context');
          e && e.restoreContext();
        }),
        (this.getPixelRatio = function () {
          return G;
        }),
        (this.setPixelRatio = function (e) {
          void 0 !== e && ((G = e), this.setSize(X, V, !1));
        }),
        (this.getSize = function (e) {
          return void 0, void 0 === e && (e = new pn()), e.set(X, V);
        }),
        (this.setSize = function (e, n, i) {
          if (le.isPresenting) return void 0, void 0;
          (X = e),
            (V = n),
            (t.width = Math.floor(e * G)),
            (t.height = Math.floor(n * G)),
            !1 !== i &&
              ((t.style.width = e + 'px'), (t.style.height = n + 'px')),
            this.setViewport(0, 0, e, n);
        }),
        (this.getDrawingBufferSize = function (e) {
          return (
            void 0, void 0 === e && (e = new pn()), e.set(X * G, V * G).floor()
          );
        }),
        (this.setDrawingBufferSize = function (e, n, i) {
          (X = e),
            (V = n),
            (G = i),
            (t.width = Math.floor(e * i)),
            (t.height = Math.floor(n * i)),
            this.setViewport(0, 0, e, n);
        }),
        (this.getCurrentViewport = function (e) {
          return void 0, void 0 === e && (e = new vn()), e.copy(H);
        }),
        (this.getViewport = function (e) {
          return e.copy(Q);
        }),
        (this.setViewport = function (e, t, n, i) {
          e.isVector4 ? Q.set(e.x, e.y, e.z, e.w) : Q.set(e, t, n, i),
            M.viewport(H.copy(Q).multiplyScalar(G).floor());
        }),
        (this.getScissor = function (e) {
          return e.copy($);
        }),
        (this.setScissor = function (e, t, n, i) {
          e.isVector4 ? $.set(e.x, e.y, e.z, e.w) : $.set(e, t, n, i),
            M.scissor(F.copy($).multiplyScalar(G).floor());
        }),
        (this.getScissorTest = function () {
          return ee;
        }),
        (this.setScissorTest = function (e) {
          M.setScissorTest((ee = e));
        }),
        (this.setOpaqueSort = function (e) {
          Z = e;
        }),
        (this.setTransparentSort = function (e) {
          K = e;
        }),
        (this.getClearColor = function () {
          return z.getClearColor();
        }),
        (this.setClearColor = function () {
          z.setClearColor.apply(z, arguments);
        }),
        (this.getClearAlpha = function () {
          return z.getClearAlpha();
        }),
        (this.setClearAlpha = function () {
          z.setClearAlpha.apply(z, arguments);
        }),
        (this.clear = function (e, t, n) {
          var i = 0;
          (void 0 === e || e) && (i |= 16384),
            (void 0 === t || t) && (i |= 256),
            (void 0 === n || n) && (i |= 1024),
            m.clear(i);
        }),
        (this.clearColor = function () {
          this.clear(!0, !1, !1);
        }),
        (this.clearDepth = function () {
          this.clear(!1, !0, !1);
        }),
        (this.clearStencil = function () {
          this.clear(!1, !1, !0);
        }),
        (this.dispose = function () {
          t.removeEventListener('webglcontextlost', he, !1),
            t.removeEventListener('webglcontextrestored', pe, !1),
            L.dispose(),
            T.dispose(),
            g.dispose(),
            A.dispose(),
            le.dispose(),
            Ae.stop();
        }),
        (this.renderBufferImmediate = function (e, t) {
          M.initAttributes();
          var n = g.get(e);
          e.hasPositions && !n.position && (n.position = m.createBuffer()),
            e.hasNormals && !n.normal && (n.normal = m.createBuffer()),
            e.hasUvs && !n.uv && (n.uv = m.createBuffer()),
            e.hasColors && !n.color && (n.color = m.createBuffer());
          var i = t.getAttributes();
          e.hasPositions &&
            (m.bindBuffer(34962, n.position),
            m.bufferData(34962, e.positionArray, 35048),
            M.enableAttribute(i.position),
            m.vertexAttribPointer(i.position, 3, 5126, !1, 0, 0)),
            e.hasNormals &&
              (m.bindBuffer(34962, n.normal),
              m.bufferData(34962, e.normalArray, 35048),
              M.enableAttribute(i.normal),
              m.vertexAttribPointer(i.normal, 3, 5126, !1, 0, 0)),
            e.hasUvs &&
              (m.bindBuffer(34962, n.uv),
              m.bufferData(34962, e.uvArray, 35048),
              M.enableAttribute(i.uv),
              m.vertexAttribPointer(i.uv, 2, 5126, !1, 0, 0)),
            e.hasColors &&
              (m.bindBuffer(34962, n.color),
              m.bufferData(34962, e.colorArray, 35048),
              M.enableAttribute(i.color),
              m.vertexAttribPointer(i.color, 3, 5126, !1, 0, 0)),
            M.disableUnusedAttributes(),
            m.drawArrays(4, 0, e.count),
            (e.count = 0);
        });
      var ve = new Kn();
      function ye(e, t, n, i) {
        if (
          !1 !== _.isWebGL2 ||
          (!e.isInstancedMesh && !t.isInstancedBufferGeometry) ||
          null !== f.get('ANGLE_instanced_arrays')
        ) {
          M.initAttributes();
          var r = t.attributes,
            a = i.getAttributes(),
            o = n.defaultAttributeValues;
          for (var s in a) {
            var c = a[s];
            if (c >= 0) {
              var u = r[s];
              if (void 0 !== u) {
                var l = u.normalized,
                  d = u.itemSize,
                  h = b.get(u);
                if (void 0 === h) continue;
                var p = h.buffer,
                  v = h.type,
                  g = h.bytesPerElement;
                if (u.isInterleavedBufferAttribute) {
                  var y = u.data,
                    w = y.stride,
                    A = u.offset;
                  y && y.isInstancedInterleavedBuffer
                    ? (M.enableAttributeAndDivisor(c, y.meshPerAttribute),
                      void 0 === t.maxInstancedCount &&
                        (t.maxInstancedCount = y.meshPerAttribute * y.count))
                    : M.enableAttribute(c),
                    m.bindBuffer(34962, p),
                    M.vertexAttribPointer(c, d, v, l, w * g, A * g);
                } else
                  u.isInstancedBufferAttribute
                    ? (M.enableAttributeAndDivisor(c, u.meshPerAttribute),
                      void 0 === t.maxInstancedCount &&
                        (t.maxInstancedCount = u.meshPerAttribute * u.count))
                    : M.enableAttribute(c),
                    m.bindBuffer(34962, p),
                    M.vertexAttribPointer(c, d, v, l, 0, 0);
              } else if ('instanceMatrix' === s) {
                h = b.get(e.instanceMatrix);
                if (void 0 === h) continue;
                (p = h.buffer), (v = h.type);
                M.enableAttributeAndDivisor(c + 0, 1),
                  M.enableAttributeAndDivisor(c + 1, 1),
                  M.enableAttributeAndDivisor(c + 2, 1),
                  M.enableAttributeAndDivisor(c + 3, 1),
                  m.bindBuffer(34962, p),
                  m.vertexAttribPointer(c + 0, 4, v, !1, 64, 0),
                  m.vertexAttribPointer(c + 1, 4, v, !1, 64, 16),
                  m.vertexAttribPointer(c + 2, 4, v, !1, 64, 32),
                  m.vertexAttribPointer(c + 3, 4, v, !1, 64, 48);
              } else if (void 0 !== o) {
                var x = o[s];
                if (void 0 !== x)
                  switch (x.length) {
                    case 2:
                      m.vertexAttrib2fv(c, x);
                      break;
                    case 3:
                      m.vertexAttrib3fv(c, x);
                      break;
                    case 4:
                      m.vertexAttrib4fv(c, x);
                      break;
                    default:
                      m.vertexAttrib1fv(c, x);
                  }
              }
            }
          }
          M.disableUnusedAttributes();
        }
      }
      (this.renderBufferDirect = function (e, t, n, i, r, a) {
        null === t && (t = ve);
        var o = r.isMesh && r.matrixWorld.determinant() < 0,
          s = Ee(e, t, i, r);
        M.setMaterial(i, o);
        var c = !1;
        (W.geometry === n.id &&
          W.program === s.id &&
          W.wireframe === (!0 === i.wireframe)) ||
          ((W.geometry = n.id),
          (W.program = s.id),
          (W.wireframe = !0 === i.wireframe),
          (c = !0)),
          (i.morphTargets || i.morphNormals) &&
            (S.update(r, n, i, s), (c = !0)),
          !0 === r.isInstancedMesh && (c = !0);
        var u = n.index,
          l = n.attributes.position;
        if (null === u) {
          if (void 0 === l || 0 === l.count) return;
        } else if (0 === u.count) return;
        var d,
          h = 1;
        !0 === i.wireframe && ((u = w.getWireframeAttribute(n)), (h = 2));
        var p = O;
        null !== u && ((d = b.get(u)), (p = E), p.setIndex(d)),
          c && (ye(r, n, i, s), null !== u && m.bindBuffer(34963, d.buffer));
        var f = null !== u ? u.count : l.count,
          _ = n.drawRange.start * h,
          v = n.drawRange.count * h,
          g = null !== a ? a.start * h : 0,
          y = null !== a ? a.count * h : 1 / 0,
          A = Math.max(_, g),
          x = Math.min(f, _ + v, g + y) - 1,
          L = Math.max(0, x - A + 1);
        if (0 !== L) {
          if (r.isMesh)
            !0 === i.wireframe
              ? (M.setLineWidth(i.wireframeLinewidth * se()), p.setMode(1))
              : p.setMode(4);
          else if (r.isLine) {
            var T = i.linewidth;
            void 0 === T && (T = 1),
              M.setLineWidth(T * se()),
              r.isLineSegments
                ? p.setMode(1)
                : r.isLineLoop
                ? p.setMode(2)
                : p.setMode(3);
          } else r.isPoints ? p.setMode(0) : r.isSprite && p.setMode(4);
          r.isInstancedMesh
            ? p.renderInstances(n, A, L, r.count)
            : n.isInstancedBufferGeometry
            ? p.renderInstances(n, A, L, n.maxInstancedCount)
            : p.render(A, L);
        }
      }),
        (this.compile = function (e, t) {
          (h = T.get(e, t)),
            h.init(),
            e.traverse(function (e) {
              e.isLight && (h.pushLight(e), e.castShadow && h.pushShadow(e));
            }),
            h.setupLights(t);
          var n = {};
          e.traverse(function (t) {
            if (t.material)
              if (Array.isArray(t.material))
                for (var i = 0; i < t.material.length; i++)
                  t.material[i].uuid in n === !1 &&
                    (Oe(t.material[i], e, t), (n[t.material[i].uuid] = !0));
              else
                t.material.uuid in n === !1 &&
                  (Oe(t.material, e, t), (n[t.material.uuid] = !0));
          });
        });
      var be = null;
      function we(e) {
        le.isPresenting || (be && be(e));
      }
      var Ae = new oa();
      function xe(e, t, n, i) {
        if (!1 !== e.visible) {
          var r = e.layers.test(t.layers);
          if (r)
            if (e.isGroup) n = e.renderOrder;
            else if (e.isLOD) !0 === e.autoUpdate && e.update(t);
            else if (e.isLight) h.pushLight(e), e.castShadow && h.pushShadow(e);
            else if (e.isSprite) {
              if (!e.frustumCulled || te.intersectsSprite(e)) {
                i && oe.setFromMatrixPosition(e.matrixWorld).applyMatrix4(ae);
                var a = A.update(e),
                  o = e.material;
                o.visible && d.push(e, a, o, n, oe.z, null);
              }
            } else if (e.isImmediateRenderObject)
              i && oe.setFromMatrixPosition(e.matrixWorld).applyMatrix4(ae),
                d.push(e, null, e.material, n, oe.z, null);
            else if (
              (e.isMesh || e.isLine || e.isPoints) &&
              (e.isSkinnedMesh &&
                e.skeleton.frame !== v.render.frame &&
                (e.skeleton.update(), (e.skeleton.frame = v.render.frame)),
              !e.frustumCulled || te.intersectsObject(e))
            ) {
              i && oe.setFromMatrixPosition(e.matrixWorld).applyMatrix4(ae);
              (a = A.update(e)), (o = e.material);
              if (Array.isArray(o))
                for (var s = a.groups, c = 0, u = s.length; c < u; c++) {
                  var l = s[c],
                    p = o[l.materialIndex];
                  p && p.visible && d.push(e, a, p, n, oe.z, l);
                }
              else o.visible && d.push(e, a, o, n, oe.z, null);
            }
          var m = e.children;
          for (c = 0, u = m.length; c < u; c++) xe(m[c], t, n, i);
        }
      }
      function ze(e, t, n, i) {
        for (var r = 0, a = e.length; r < a; r++) {
          var o = e[r],
            s = o.object,
            c = o.geometry,
            u = void 0 === i ? o.material : i,
            l = o.group;
          if (n.isArrayCamera) {
            q = n;
            for (var d = n.cameras, p = 0, m = d.length; p < m; p++) {
              var f = d[p];
              s.layers.test(f.layers) &&
                (M.viewport(H.copy(f.viewport)),
                h.setupLights(f),
                Se(s, t, f, c, u, l));
            }
          } else (q = null), Se(s, t, n, c, u, l);
        }
      }
      function Se(e, t, n, i, r, a) {
        if (
          (e.onBeforeRender(C, t, n, i, r, a),
          (h = T.get(t, q || n)),
          e.modelViewMatrix.multiplyMatrices(
            n.matrixWorldInverse,
            e.matrixWorld
          ),
          e.normalMatrix.getNormalMatrix(e.modelViewMatrix),
          e.isImmediateRenderObject)
        ) {
          var o = Ee(n, t, r, e);
          M.setMaterial(r),
            (W.geometry = null),
            (W.program = null),
            (W.wireframe = !1),
            Me(e, o);
        } else C.renderBufferDirect(n, t, i, r, e, a);
        e.onAfterRender(C, t, n, i, r, a), (h = T.get(t, q || n));
      }
      function Oe(e, t, n) {
        var i = g.get(e),
          r = h.state.lights,
          a = h.state.shadowsArray,
          o = r.state.version,
          s = x.getParameters(
            e,
            r.state,
            a,
            t,
            ne.numPlanes,
            ne.numIntersection,
            n
          ),
          c = x.getProgramCacheKey(s),
          u = i.program,
          l = !0;
        if (void 0 === u) e.addEventListener('dispose', me);
        else if (u.cacheKey !== c) _e(e);
        else if (i.lightsStateVersion !== o)
          (i.lightsStateVersion = o), (l = !1);
        else {
          if (void 0 !== s.shaderID) return;
          l = !1;
        }
        l &&
          ((u = x.acquireProgram(s, c)),
          (i.program = u),
          (i.uniforms = s.uniforms),
          (i.outputEncoding = s.outputEncoding),
          (e.program = u));
        var d = u.getAttributes();
        if (e.morphTargets) {
          e.numSupportedMorphTargets = 0;
          for (var p = 0; p < C.maxMorphTargets; p++)
            d['morphTarget' + p] >= 0 && e.numSupportedMorphTargets++;
        }
        if (e.morphNormals) {
          e.numSupportedMorphNormals = 0;
          for (p = 0; p < C.maxMorphNormals; p++)
            d['morphNormal' + p] >= 0 && e.numSupportedMorphNormals++;
        }
        var m = i.uniforms;
        ((e.isShaderMaterial || e.isRawShaderMaterial) && !0 !== e.clipping) ||
          ((i.numClippingPlanes = ne.numPlanes),
          (i.numIntersection = ne.numIntersection),
          (m.clippingPlanes = ne.uniform)),
          (i.environment = e.isMeshStandardMaterial ? t.environment : null),
          (i.fog = t.fog),
          (i.needsLights = Ge(e)),
          (i.lightsStateVersion = o),
          i.needsLights &&
            ((m.ambientLightColor.value = r.state.ambient),
            (m.lightProbe.value = r.state.probe),
            (m.directionalLights.value = r.state.directional),
            (m.directionalLightShadows.value = r.state.directionalShadow),
            (m.spotLights.value = r.state.spot),
            (m.spotLightShadows.value = r.state.spotShadow),
            (m.rectAreaLights.value = r.state.rectArea),
            (m.pointLights.value = r.state.point),
            (m.pointLightShadows.value = r.state.pointShadow),
            (m.hemisphereLights.value = r.state.hemi),
            (m.directionalShadowMap.value = r.state.directionalShadowMap),
            (m.directionalShadowMatrix.value = r.state.directionalShadowMatrix),
            (m.spotShadowMap.value = r.state.spotShadowMap),
            (m.spotShadowMatrix.value = r.state.spotShadowMatrix),
            (m.pointShadowMap.value = r.state.pointShadowMap),
            (m.pointShadowMatrix.value = r.state.pointShadowMatrix));
        var f = i.program.getUniforms(),
          _ = qc.seqWithValue(f.seq, m);
        i.uniformsList = _;
      }
      function Ee(e, t, n, i) {
        y.resetTextureUnits();
        var r = t.fog,
          a = n.isMeshStandardMaterial ? t.environment : null,
          o = null === Y ? C.outputEncoding : Y.texture.encoding,
          s = g.get(n),
          c = h.state.lights;
        if (ie && (re || e !== I)) {
          var u = e === I && n.id === B;
          ne.setState(
            n.clippingPlanes,
            n.clipIntersection,
            n.clipShadows,
            e,
            s,
            u
          );
        }
        n.version === s.__version
          ? void 0 === s.program ||
            (n.fog && s.fog !== r) ||
            s.environment !== a ||
            (s.needsLights && s.lightsStateVersion !== c.state.version)
            ? Oe(n, t, i)
            : void 0 === s.numClippingPlanes ||
              (s.numClippingPlanes === ne.numPlanes &&
                s.numIntersection === ne.numIntersection)
            ? s.outputEncoding !== o && Oe(n, t, i)
            : Oe(n, t, i)
          : (Oe(n, t, i), (s.__version = n.version));
        var l = !1,
          d = !1,
          p = !1,
          f = s.program,
          v = f.getUniforms(),
          b = s.uniforms;
        if (
          (M.useProgram(f.program) && ((l = !0), (d = !0), (p = !0)),
          n.id !== B && ((B = n.id), (d = !0)),
          l || I !== e)
        ) {
          if (
            (v.setValue(m, 'projectionMatrix', e.projectionMatrix),
            _.logarithmicDepthBuffer &&
              v.setValue(
                m,
                'logDepthBufFC',
                2 / (Math.log(e.far + 1) / Math.LN2)
              ),
            I !== e && ((I = e), (d = !0), (p = !0)),
            n.isShaderMaterial ||
              n.isMeshPhongMaterial ||
              n.isMeshToonMaterial ||
              n.isMeshStandardMaterial ||
              n.envMap)
          ) {
            var w = v.map.cameraPosition;
            void 0 !== w &&
              w.setValue(m, oe.setFromMatrixPosition(e.matrixWorld));
          }
          (n.isMeshPhongMaterial ||
            n.isMeshToonMaterial ||
            n.isMeshLambertMaterial ||
            n.isMeshBasicMaterial ||
            n.isMeshStandardMaterial ||
            n.isShaderMaterial) &&
            v.setValue(m, 'isOrthographic', !0 === e.isOrthographicCamera),
            (n.isMeshPhongMaterial ||
              n.isMeshToonMaterial ||
              n.isMeshLambertMaterial ||
              n.isMeshBasicMaterial ||
              n.isMeshStandardMaterial ||
              n.isShaderMaterial ||
              n.skinning) &&
              v.setValue(m, 'viewMatrix', e.matrixWorldInverse);
        }
        if (n.skinning) {
          v.setOptional(m, i, 'bindMatrix'),
            v.setOptional(m, i, 'bindMatrixInverse');
          var A = i.skeleton;
          if (A) {
            var x = A.bones;
            if (_.floatVertexTextures) {
              if (void 0 === A.boneTexture) {
                var L = Math.sqrt(4 * x.length);
                (L = hn.ceilPowerOfTwo(L)), (L = Math.max(L, 4));
                var T = new Float32Array(L * L * 4);
                T.set(A.boneMatrices);
                var z = new ta(T, L, L, De, Le);
                (A.boneMatrices = T),
                  (A.boneTexture = z),
                  (A.boneTextureSize = L);
              }
              v.setValue(m, 'boneTexture', A.boneTexture, y),
                v.setValue(m, 'boneTextureSize', A.boneTextureSize);
            } else v.setOptional(m, A, 'boneMatrices');
          }
        }
        return (
          (d || s.receiveShadow !== i.receiveShadow) &&
            ((s.receiveShadow = i.receiveShadow),
            v.setValue(m, 'receiveShadow', i.receiveShadow)),
          d &&
            (v.setValue(m, 'toneMappingExposure', C.toneMappingExposure),
            v.setValue(m, 'toneMappingWhitePoint', C.toneMappingWhitePoint),
            s.needsLights && Ve(b, p),
            r && n.fog && Ye(b, r),
            n.isMeshBasicMaterial
              ? ke(b, n)
              : n.isMeshLambertMaterial
              ? (ke(b, n), Re(b, n))
              : n.isMeshToonMaterial
              ? (ke(b, n), We(b, n))
              : n.isMeshPhongMaterial
              ? (ke(b, n), Be(b, n))
              : n.isMeshStandardMaterial
              ? (ke(b, n, a),
                n.isMeshPhysicalMaterial ? qe(b, n, a) : Ie(b, n, a))
              : n.isMeshMatcapMaterial
              ? (ke(b, n), He(b, n))
              : n.isMeshDepthMaterial
              ? (ke(b, n), Fe(b, n))
              : n.isMeshDistanceMaterial
              ? (ke(b, n), Ue(b, n))
              : n.isMeshNormalMaterial
              ? (ke(b, n), Xe(b, n))
              : n.isLineBasicMaterial
              ? (Ce(b, n), n.isLineDashedMaterial && Ne(b, n))
              : n.isPointsMaterial
              ? Pe(b, n)
              : n.isSpriteMaterial
              ? je(b, n)
              : n.isShadowMaterial &&
                (b.color.value.copy(n.color), (b.opacity.value = n.opacity)),
            void 0 !== b.ltc_1 && (b.ltc_1.value = aa.LTC_1),
            void 0 !== b.ltc_2 && (b.ltc_2.value = aa.LTC_2),
            qc.upload(m, s.uniformsList, b, y),
            n.isShaderMaterial && (n.uniformsNeedUpdate = !1)),
          n.isShaderMaterial &&
            !0 === n.uniformsNeedUpdate &&
            (qc.upload(m, s.uniformsList, b, y), (n.uniformsNeedUpdate = !1)),
          n.isSpriteMaterial && v.setValue(m, 'center', i.center),
          v.setValue(m, 'modelViewMatrix', i.modelViewMatrix),
          v.setValue(m, 'normalMatrix', i.normalMatrix),
          v.setValue(m, 'modelMatrix', i.matrixWorld),
          f
        );
      }
      function ke(e, t, n) {
        (e.opacity.value = t.opacity),
          t.color && e.diffuse.value.copy(t.color),
          t.emissive &&
            e.emissive.value
              .copy(t.emissive)
              .multiplyScalar(t.emissiveIntensity),
          t.map && (e.map.value = t.map),
          t.alphaMap && (e.alphaMap.value = t.alphaMap),
          t.specularMap && (e.specularMap.value = t.specularMap);
        var i,
          r,
          a = t.envMap || n;
        a &&
          ((e.envMap.value = a),
          (e.flipEnvMap.value = a.isCubeTexture ? -1 : 1),
          (e.reflectivity.value = t.reflectivity),
          (e.refractionRatio.value = t.refractionRatio),
          (e.maxMipLevel.value = g.get(a).__maxMipLevel)),
          t.lightMap &&
            ((e.lightMap.value = t.lightMap),
            (e.lightMapIntensity.value = t.lightMapIntensity)),
          t.aoMap &&
            ((e.aoMap.value = t.aoMap),
            (e.aoMapIntensity.value = t.aoMapIntensity)),
          t.map
            ? (i = t.map)
            : t.specularMap
            ? (i = t.specularMap)
            : t.displacementMap
            ? (i = t.displacementMap)
            : t.normalMap
            ? (i = t.normalMap)
            : t.bumpMap
            ? (i = t.bumpMap)
            : t.roughnessMap
            ? (i = t.roughnessMap)
            : t.metalnessMap
            ? (i = t.metalnessMap)
            : t.alphaMap
            ? (i = t.alphaMap)
            : t.emissiveMap && (i = t.emissiveMap),
          void 0 !== i &&
            (i.isWebGLRenderTarget && (i = i.texture),
            !0 === i.matrixAutoUpdate && i.updateMatrix(),
            e.uvTransform.value.copy(i.matrix)),
          t.aoMap ? (r = t.aoMap) : t.lightMap && (r = t.lightMap),
          void 0 !== r &&
            (r.isWebGLRenderTarget && (r = r.texture),
            !0 === r.matrixAutoUpdate && r.updateMatrix(),
            e.uv2Transform.value.copy(r.matrix));
      }
      function Ce(e, t) {
        e.diffuse.value.copy(t.color), (e.opacity.value = t.opacity);
      }
      function Ne(e, t) {
        (e.dashSize.value = t.dashSize),
          (e.totalSize.value = t.dashSize + t.gapSize),
          (e.scale.value = t.scale);
      }
      function Pe(e, t) {
        var n;
        e.diffuse.value.copy(t.color),
          (e.opacity.value = t.opacity),
          (e.size.value = t.size * G),
          (e.scale.value = 0.5 * V),
          t.map && (e.map.value = t.map),
          t.alphaMap && (e.alphaMap.value = t.alphaMap),
          t.map ? (n = t.map) : t.alphaMap && (n = t.alphaMap),
          void 0 !== n &&
            (!0 === n.matrixAutoUpdate && n.updateMatrix(),
            e.uvTransform.value.copy(n.matrix));
      }
      function je(e, t) {
        var n;
        e.diffuse.value.copy(t.color),
          (e.opacity.value = t.opacity),
          (e.rotation.value = t.rotation),
          t.map && (e.map.value = t.map),
          t.alphaMap && (e.alphaMap.value = t.alphaMap),
          t.map ? (n = t.map) : t.alphaMap && (n = t.alphaMap),
          void 0 !== n &&
            (!0 === n.matrixAutoUpdate && n.updateMatrix(),
            e.uvTransform.value.copy(n.matrix));
      }
      function Ye(e, t) {
        e.fogColor.value.copy(t.color),
          t.isFog
            ? ((e.fogNear.value = t.near), (e.fogFar.value = t.far))
            : t.isFogExp2 && (e.fogDensity.value = t.density);
      }
      function Re(e, t) {
        t.emissiveMap && (e.emissiveMap.value = t.emissiveMap);
      }
      function Be(e, t) {
        e.specular.value.copy(t.specular),
          (e.shininess.value = Math.max(t.shininess, 1e-4)),
          t.emissiveMap && (e.emissiveMap.value = t.emissiveMap),
          t.bumpMap &&
            ((e.bumpMap.value = t.bumpMap),
            (e.bumpScale.value = t.bumpScale),
            t.side === p && (e.bumpScale.value *= -1)),
          t.normalMap &&
            ((e.normalMap.value = t.normalMap),
            e.normalScale.value.copy(t.normalScale),
            t.side === p && e.normalScale.value.negate()),
          t.displacementMap &&
            ((e.displacementMap.value = t.displacementMap),
            (e.displacementScale.value = t.displacementScale),
            (e.displacementBias.value = t.displacementBias));
      }
      function We(e, t) {
        e.specular.value.copy(t.specular),
          (e.shininess.value = Math.max(t.shininess, 1e-4)),
          t.gradientMap && (e.gradientMap.value = t.gradientMap),
          t.emissiveMap && (e.emissiveMap.value = t.emissiveMap),
          t.bumpMap &&
            ((e.bumpMap.value = t.bumpMap),
            (e.bumpScale.value = t.bumpScale),
            t.side === p && (e.bumpScale.value *= -1)),
          t.normalMap &&
            ((e.normalMap.value = t.normalMap),
            e.normalScale.value.copy(t.normalScale),
            t.side === p && e.normalScale.value.negate()),
          t.displacementMap &&
            ((e.displacementMap.value = t.displacementMap),
            (e.displacementScale.value = t.displacementScale),
            (e.displacementBias.value = t.displacementBias));
      }
      function Ie(e, t, n) {
        (e.roughness.value = t.roughness),
          (e.metalness.value = t.metalness),
          t.roughnessMap && (e.roughnessMap.value = t.roughnessMap),
          t.metalnessMap && (e.metalnessMap.value = t.metalnessMap),
          t.emissiveMap && (e.emissiveMap.value = t.emissiveMap),
          t.bumpMap &&
            ((e.bumpMap.value = t.bumpMap),
            (e.bumpScale.value = t.bumpScale),
            t.side === p && (e.bumpScale.value *= -1)),
          t.normalMap &&
            ((e.normalMap.value = t.normalMap),
            e.normalScale.value.copy(t.normalScale),
            t.side === p && e.normalScale.value.negate()),
          t.displacementMap &&
            ((e.displacementMap.value = t.displacementMap),
            (e.displacementScale.value = t.displacementScale),
            (e.displacementBias.value = t.displacementBias)),
          (t.envMap || n) && (e.envMapIntensity.value = t.envMapIntensity);
      }
      function qe(e, t, n) {
        Ie(e, t, n),
          (e.reflectivity.value = t.reflectivity),
          (e.clearcoat.value = t.clearcoat),
          (e.clearcoatRoughness.value = t.clearcoatRoughness),
          t.sheen && e.sheen.value.copy(t.sheen),
          t.clearcoatMap && (e.clearcoatMap.value = t.clearcoatMap),
          t.clearcoatRoughnessMap &&
            (e.clearcoatRoughnessMap.value = t.clearcoatRoughnessMap),
          t.clearcoatNormalMap &&
            (e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),
            (e.clearcoatNormalMap.value = t.clearcoatNormalMap),
            t.side === p && e.clearcoatNormalScale.value.negate()),
          (e.transparency.value = t.transparency);
      }
      function He(e, t) {
        t.matcap && (e.matcap.value = t.matcap),
          t.bumpMap &&
            ((e.bumpMap.value = t.bumpMap),
            (e.bumpScale.value = t.bumpScale),
            t.side === p && (e.bumpScale.value *= -1)),
          t.normalMap &&
            ((e.normalMap.value = t.normalMap),
            e.normalScale.value.copy(t.normalScale),
            t.side === p && e.normalScale.value.negate()),
          t.displacementMap &&
            ((e.displacementMap.value = t.displacementMap),
            (e.displacementScale.value = t.displacementScale),
            (e.displacementBias.value = t.displacementBias));
      }
      function Fe(e, t) {
        t.displacementMap &&
          ((e.displacementMap.value = t.displacementMap),
          (e.displacementScale.value = t.displacementScale),
          (e.displacementBias.value = t.displacementBias));
      }
      function Ue(e, t) {
        t.displacementMap &&
          ((e.displacementMap.value = t.displacementMap),
          (e.displacementScale.value = t.displacementScale),
          (e.displacementBias.value = t.displacementBias)),
          e.referencePosition.value.copy(t.referencePosition),
          (e.nearDistance.value = t.nearDistance),
          (e.farDistance.value = t.farDistance);
      }
      function Xe(e, t) {
        t.bumpMap &&
          ((e.bumpMap.value = t.bumpMap),
          (e.bumpScale.value = t.bumpScale),
          t.side === p && (e.bumpScale.value *= -1)),
          t.normalMap &&
            ((e.normalMap.value = t.normalMap),
            e.normalScale.value.copy(t.normalScale),
            t.side === p && e.normalScale.value.negate()),
          t.displacementMap &&
            ((e.displacementMap.value = t.displacementMap),
            (e.displacementScale.value = t.displacementScale),
            (e.displacementBias.value = t.displacementBias));
      }
      function Ve(e, t) {
        (e.ambientLightColor.needsUpdate = t),
          (e.lightProbe.needsUpdate = t),
          (e.directionalLights.needsUpdate = t),
          (e.directionalLightShadows.needsUpdate = t),
          (e.pointLights.needsUpdate = t),
          (e.pointLightShadows.needsUpdate = t),
          (e.spotLights.needsUpdate = t),
          (e.spotLightShadows.needsUpdate = t),
          (e.rectAreaLights.needsUpdate = t),
          (e.hemisphereLights.needsUpdate = t);
      }
      function Ge(e) {
        return (
          e.isMeshLambertMaterial ||
          e.isMeshToonMaterial ||
          e.isMeshPhongMaterial ||
          e.isMeshStandardMaterial ||
          e.isShadowMaterial ||
          (e.isShaderMaterial && !0 === e.lights)
        );
      }
      Ae.setAnimationLoop(we),
        'undefined' !== typeof window && Ae.setContext(window),
        (this.setAnimationLoop = function (e) {
          (be = e), le.setAnimationLoop(e), Ae.start();
        }),
        (this.render = function (e, t) {
          var n, i;
          if (
            (void 0 !== arguments[2] && (void 0, (n = arguments[2])),
            void 0 !== arguments[3] && (void 0, (i = arguments[3])),
            !t || !t.isCamera)
          )
            return void 0, void 0;
          if (!D) {
            (W.geometry = null),
              (W.program = null),
              (W.wireframe = !1),
              (B = -1),
              (I = null),
              !0 === e.autoUpdate && e.updateMatrixWorld(),
              null === t.parent && t.updateMatrixWorld(),
              le.enabled && le.isPresenting && (t = le.getCamera(t)),
              e.onBeforeRender(C, e, t, n || Y),
              (h = T.get(e, t)),
              h.init(),
              ae.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse),
              te.setFromProjectionMatrix(ae),
              (re = this.localClippingEnabled),
              (ie = ne.init(this.clippingPlanes, re, t)),
              (d = L.get(e, t)),
              d.init(),
              xe(e, t, 0, C.sortObjects),
              d.finish(),
              !0 === C.sortObjects && d.sort(Z, K),
              ie && ne.beginShadows();
            var r = h.state.shadowsArray;
            de.render(r, e, t),
              h.setupLights(t),
              ie && ne.endShadows(),
              this.info.autoReset && this.info.reset(),
              void 0 !== n && this.setRenderTarget(n),
              z.render(d, e, t, i);
            var a = d.opaque,
              o = d.transparent;
            if (e.overrideMaterial) {
              var s = e.overrideMaterial;
              a.length && ze(a, e, t, s), o.length && ze(o, e, t, s);
            } else a.length && ze(a, e, t), o.length && ze(o, e, t);
            e.onAfterRender(C, e, t),
              null !== Y &&
                (y.updateRenderTargetMipmap(Y),
                y.updateMultisampleRenderTarget(Y)),
              M.buffers.depth.setTest(!0),
              M.buffers.depth.setMask(!0),
              M.buffers.color.setMask(!0),
              M.setPolygonOffset(!1),
              (d = null),
              (h = null);
          }
        }),
        (this.setFramebuffer = function (e) {
          N !== e && null === Y && m.bindFramebuffer(36160, e), (N = e);
        }),
        (this.getActiveCubeFace = function () {
          return P;
        }),
        (this.getActiveMipmapLevel = function () {
          return j;
        }),
        (this.getRenderTarget = function () {
          return Y;
        }),
        (this.setRenderTarget = function (e, t, n) {
          (Y = e),
            (P = t),
            (j = n),
            e &&
              void 0 === g.get(e).__webglFramebuffer &&
              y.setupRenderTarget(e);
          var i = N,
            r = !1;
          if (e) {
            var a = g.get(e).__webglFramebuffer;
            e.isWebGLCubeRenderTarget
              ? ((i = a[t || 0]), (r = !0))
              : (i = e.isWebGLMultisampleRenderTarget
                  ? g.get(e).__webglMultisampledFramebuffer
                  : a),
              H.copy(e.viewport),
              F.copy(e.scissor),
              (U = e.scissorTest);
          } else
            H.copy(Q).multiplyScalar(G).floor(),
              F.copy($).multiplyScalar(G).floor(),
              (U = ee);
          if (
            (R !== i && (m.bindFramebuffer(36160, i), (R = i)),
            M.viewport(H),
            M.scissor(F),
            M.setScissorTest(U),
            r)
          ) {
            var o = g.get(e.texture);
            m.framebufferTexture2D(
              36160,
              36064,
              34069 + (t || 0),
              o.__webglTexture,
              n || 0
            );
          }
        }),
        (this.readRenderTargetPixels = function (e, t, n, i, r, a, o) {
          if (!e || !e.isWebGLRenderTarget) return void 0, void 0;
          var s = g.get(e).__webglFramebuffer;
          if ((e.isWebGLCubeRenderTarget && void 0 !== o && (s = s[o]), s)) {
            var c = !1;
            s !== R && (m.bindFramebuffer(36160, s), (c = !0));
            try {
              var u = e.texture,
                l = u.format,
                d = u.type;
              if (l !== De && k.convert(l) !== m.getParameter(35739))
                return void 0, void 0;
              if (
                d !== ge &&
                k.convert(d) !== m.getParameter(35738) &&
                (d !== Le ||
                  !(
                    _.isWebGL2 ||
                    f.get('OES_texture_float') ||
                    f.get('WEBGL_color_buffer_float')
                  )) &&
                (d !== Te ||
                  !(_.isWebGL2
                    ? f.get('EXT_color_buffer_float')
                    : f.get('EXT_color_buffer_half_float')))
              )
                return void 0, void 0;
              36053 === m.checkFramebufferStatus(36160)
                ? t >= 0 &&
                  t <= e.width - i &&
                  n >= 0 &&
                  n <= e.height - r &&
                  m.readPixels(t, n, i, r, k.convert(l), k.convert(d), a)
                : void 0;
            } finally {
              c && m.bindFramebuffer(36160, R);
            }
          }
        }),
        (this.copyFramebufferToTexture = function (e, t, n) {
          void 0 === n && (n = 0);
          var i = Math.pow(2, -n),
            r = Math.floor(t.image.width * i),
            a = Math.floor(t.image.height * i),
            o = k.convert(t.format);
          y.setTexture2D(t, 0),
            m.copyTexImage2D(3553, n, o, e.x, e.y, r, a, 0),
            M.unbindTexture();
        }),
        (this.copyTextureToTexture = function (e, t, n, i) {
          void 0 === i && (i = 0);
          var r = t.image.width,
            a = t.image.height,
            o = k.convert(n.format),
            s = k.convert(n.type);
          y.setTexture2D(n, 0),
            t.isDataTexture
              ? m.texSubImage2D(3553, i, e.x, e.y, r, a, o, s, t.image.data)
              : t.isCompressedTexture
              ? m.compressedTexSubImage2D(
                  3553,
                  i,
                  e.x,
                  e.y,
                  t.mipmaps[0].width,
                  t.mipmaps[0].height,
                  o,
                  t.mipmaps[0].data
                )
              : m.texSubImage2D(3553, i, e.x, e.y, o, s, t.image),
            0 === i && n.generateMipmaps && m.generateMipmap(3553),
            M.unbindTexture();
        }),
        (this.initTexture = function (e) {
          y.setTexture2D(e, 0), M.unbindTexture();
        }),
        'undefined' !== typeof __THREE_DEVTOOLS__ &&
          __THREE_DEVTOOLS__.dispatchEvent(
            new CustomEvent('observe', { detail: this })
          );
    }
    function Hu(e, t) {
      (this.name = ''),
        (this.color = new Ii(e)),
        (this.density = void 0 !== t ? t : 25e-5);
    }
    function Fu(e, t, n) {
      (this.name = ''),
        (this.color = new Ii(e)),
        (this.near = void 0 !== t ? t : 1),
        (this.far = void 0 !== n ? n : 1e3);
    }
    function Uu(e, t) {
      (this.array = e),
        (this.stride = t),
        (this.count = void 0 !== e ? e.length / t : 0),
        (this.usage = on),
        (this.updateRange = { offset: 0, count: -1 }),
        (this.version = 0);
    }
    (Ru.prototype = Object.assign(Object.create(Zr.prototype), {
      constructor: Ru,
      isArrayCamera: !0,
    })),
      (Bu.prototype = Object.assign(Object.create(Zn.prototype), {
        constructor: Bu,
        isGroup: !0,
      })),
      Object.assign(Wu.prototype, {
        constructor: Wu,
        getTargetRaySpace: function () {
          return (
            null === this._targetRay &&
              ((this._targetRay = new Bu()),
              (this._targetRay.matrixAutoUpdate = !1),
              (this._targetRay.visible = !1)),
            this._targetRay
          );
        },
        getGripSpace: function () {
          return (
            null === this._grip &&
              ((this._grip = new Bu()),
              (this._grip.matrixAutoUpdate = !1),
              (this._grip.visible = !1)),
            this._grip
          );
        },
        dispatchEvent: function (e) {
          return (
            null !== this._targetRay && this._targetRay.dispatchEvent(e),
            null !== this._grip && this._grip.dispatchEvent(e),
            this
          );
        },
        disconnect: function (e) {
          return (
            this.dispatchEvent({ type: 'disconnected', data: e }),
            null !== this._targetRay && (this._targetRay.visible = !1),
            null !== this._grip && (this._grip.visible = !1),
            this
          );
        },
        update: function (e, t, n) {
          var i = null,
            r = null,
            a = this._targetRay,
            o = this._grip;
          return (
            e &&
              (null !== a &&
                ((i = t.getPose(e.targetRaySpace, n)),
                null !== i &&
                  (a.matrix.fromArray(i.transform.matrix),
                  a.matrix.decompose(a.position, a.rotation, a.scale))),
              null !== o &&
                e.gripSpace &&
                ((r = t.getPose(e.gripSpace, n)),
                null !== r &&
                  (o.matrix.fromArray(r.transform.matrix),
                  o.matrix.decompose(o.position, o.rotation, o.scale)))),
            null !== a && (a.visible = null !== i),
            null !== o && (o.visible = null !== r),
            this
          );
        },
      }),
      Object.assign(Iu.prototype, cn.prototype),
      Object.assign(Hu.prototype, {
        isFogExp2: !0,
        clone: function () {
          return new Hu(this.color, this.density);
        },
        toJSON: function () {
          return {
            type: 'FogExp2',
            color: this.color.getHex(),
            density: this.density,
          };
        },
      }),
      Object.assign(Fu.prototype, {
        isFog: !0,
        clone: function () {
          return new Fu(this.color, this.near, this.far);
        },
        toJSON: function () {
          return {
            type: 'Fog',
            color: this.color.getHex(),
            near: this.near,
            far: this.far,
          };
        },
      }),
      Object.defineProperty(Uu.prototype, 'needsUpdate', {
        set: function (e) {
          !0 === e && this.version++;
        },
      }),
      Object.assign(Uu.prototype, {
        isInterleavedBuffer: !0,
        onUploadCallback: function () {},
        setUsage: function (e) {
          return (this.usage = e), this;
        },
        copy: function (e) {
          return (
            (this.array = new e.array.constructor(e.array)),
            (this.count = e.count),
            (this.stride = e.stride),
            (this.usage = e.usage),
            this
          );
        },
        copyAt: function (e, t, n) {
          (e *= this.stride), (n *= t.stride);
          for (var i = 0, r = this.stride; i < r; i++)
            this.array[e + i] = t.array[n + i];
          return this;
        },
        set: function (e, t) {
          return void 0 === t && (t = 0), this.array.set(e, t), this;
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
        onUpload: function (e) {
          return (this.onUploadCallback = e), this;
        },
      });
    var Xu,
      Vu = new xn();
    function Gu(e, t, n, i) {
      (this.data = e),
        (this.itemSize = t),
        (this.offset = n),
        (this.normalized = !0 === i);
    }
    function Ju(e) {
      Vi.call(this),
        (this.type = 'SpriteMaterial'),
        (this.color = new Ii(16777215)),
        (this.map = null),
        (this.alphaMap = null),
        (this.rotation = 0),
        (this.sizeAttenuation = !0),
        (this.transparent = !0),
        this.setValues(e);
    }
    Object.defineProperties(Gu.prototype, {
      count: {
        get: function () {
          return this.data.count;
        },
      },
      array: {
        get: function () {
          return this.data.array;
        },
      },
    }),
      Object.assign(Gu.prototype, {
        isInterleavedBufferAttribute: !0,
        applyMatrix4: function (e) {
          for (var t = 0, n = this.data.count; t < n; t++)
            (Vu.x = this.getX(t)),
              (Vu.y = this.getY(t)),
              (Vu.z = this.getZ(t)),
              Vu.applyMatrix4(e),
              this.setXYZ(t, Vu.x, Vu.y, Vu.z);
          return this;
        },
        setX: function (e, t) {
          return (
            (this.data.array[e * this.data.stride + this.offset] = t), this
          );
        },
        setY: function (e, t) {
          return (
            (this.data.array[e * this.data.stride + this.offset + 1] = t), this
          );
        },
        setZ: function (e, t) {
          return (
            (this.data.array[e * this.data.stride + this.offset + 2] = t), this
          );
        },
        setW: function (e, t) {
          return (
            (this.data.array[e * this.data.stride + this.offset + 3] = t), this
          );
        },
        getX: function (e) {
          return this.data.array[e * this.data.stride + this.offset];
        },
        getY: function (e) {
          return this.data.array[e * this.data.stride + this.offset + 1];
        },
        getZ: function (e) {
          return this.data.array[e * this.data.stride + this.offset + 2];
        },
        getW: function (e) {
          return this.data.array[e * this.data.stride + this.offset + 3];
        },
        setXY: function (e, t, n) {
          return (
            (e = e * this.data.stride + this.offset),
            (this.data.array[e + 0] = t),
            (this.data.array[e + 1] = n),
            this
          );
        },
        setXYZ: function (e, t, n, i) {
          return (
            (e = e * this.data.stride + this.offset),
            (this.data.array[e + 0] = t),
            (this.data.array[e + 1] = n),
            (this.data.array[e + 2] = i),
            this
          );
        },
        setXYZW: function (e, t, n, i, r) {
          return (
            (e = e * this.data.stride + this.offset),
            (this.data.array[e + 0] = t),
            (this.data.array[e + 1] = n),
            (this.data.array[e + 2] = i),
            (this.data.array[e + 3] = r),
            this
          );
        },
      }),
      (Ju.prototype = Object.create(Vi.prototype)),
      (Ju.prototype.constructor = Ju),
      (Ju.prototype.isSpriteMaterial = !0),
      (Ju.prototype.copy = function (e) {
        return (
          Vi.prototype.copy.call(this, e),
          this.color.copy(e.color),
          (this.map = e.map),
          (this.alphaMap = e.alphaMap),
          (this.rotation = e.rotation),
          (this.sizeAttenuation = e.sizeAttenuation),
          this
        );
      });
    var Zu = new xn(),
      Ku = new xn(),
      Qu = new xn(),
      $u = new pn(),
      el = new pn(),
      tl = new Cn(),
      nl = new xn(),
      il = new xn(),
      rl = new xn(),
      al = new pn(),
      ol = new pn(),
      sl = new pn();
    function cl(e) {
      if ((Zn.call(this), (this.type = 'Sprite'), void 0 === Xu)) {
        Xu = new fr();
        var t = new Float32Array([
            -0.5,
            -0.5,
            0,
            0,
            0,
            0.5,
            -0.5,
            0,
            1,
            0,
            0.5,
            0.5,
            0,
            1,
            1,
            -0.5,
            0.5,
            0,
            0,
            1,
          ]),
          n = new Uu(t, 5);
        Xu.setIndex([0, 1, 2, 0, 2, 3]),
          Xu.setAttribute('position', new Gu(n, 3, 0, !1)),
          Xu.setAttribute('uv', new Gu(n, 2, 3, !1));
      }
      (this.geometry = Xu),
        (this.material = void 0 !== e ? e : new Ju()),
        (this.center = new pn(0.5, 0.5));
    }
    function ul(e, t, n, i, r, a) {
      $u.subVectors(e, n).addScalar(0.5).multiply(i),
        void 0 !== r
          ? ((el.x = a * $u.x - r * $u.y), (el.y = r * $u.x + a * $u.y))
          : el.copy($u),
        e.copy(t),
        (e.x += el.x),
        (e.y += el.y),
        e.applyMatrix4(tl);
    }
    cl.prototype = Object.assign(Object.create(Zn.prototype), {
      constructor: cl,
      isSprite: !0,
      raycast: function (e, t) {
        null === e.camera && void 0,
          Ku.setFromMatrixScale(this.matrixWorld),
          tl.copy(e.camera.matrixWorld),
          this.modelViewMatrix.multiplyMatrices(
            e.camera.matrixWorldInverse,
            this.matrixWorld
          ),
          Qu.setFromMatrixPosition(this.modelViewMatrix),
          e.camera.isPerspectiveCamera &&
            !1 === this.material.sizeAttenuation &&
            Ku.multiplyScalar(-Qu.z);
        var n,
          i,
          r = this.material.rotation;
        0 !== r && ((i = Math.cos(r)), (n = Math.sin(r)));
        var a = this.center;
        ul(nl.set(-0.5, -0.5, 0), Qu, a, Ku, n, i),
          ul(il.set(0.5, -0.5, 0), Qu, a, Ku, n, i),
          ul(rl.set(0.5, 0.5, 0), Qu, a, Ku, n, i),
          al.set(0, 0),
          ol.set(1, 0),
          sl.set(1, 1);
        var o = e.ray.intersectTriangle(nl, il, rl, !1, Zu);
        if (
          null !== o ||
          (ul(il.set(-0.5, 0.5, 0), Qu, a, Ku, n, i),
          ol.set(0, 1),
          (o = e.ray.intersectTriangle(nl, rl, il, !1, Zu)),
          null !== o)
        ) {
          var s = e.ray.origin.distanceTo(Zu);
          s < e.near ||
            s > e.far ||
            t.push({
              distance: s,
              point: Zu.clone(),
              uv: Yi.getUV(Zu, nl, il, rl, al, ol, sl, new pn()),
              face: null,
              object: this,
            });
        }
      },
      clone: function () {
        return new this.constructor(this.material).copy(this);
      },
      copy: function (e) {
        return (
          Zn.prototype.copy.call(this, e),
          void 0 !== e.center && this.center.copy(e.center),
          this
        );
      },
    });
    var ll = new xn(),
      dl = new xn();
    function hl() {
      Zn.call(this),
        (this._currentLevel = 0),
        (this.type = 'LOD'),
        Object.defineProperties(this, {
          levels: { enumerable: !0, value: [] },
        }),
        (this.autoUpdate = !0);
    }
    function pl(e, t) {
      e && e.isGeometry && void 0,
        Dr.call(this, e, t),
        (this.type = 'SkinnedMesh'),
        (this.bindMode = 'attached'),
        (this.bindMatrix = new Cn()),
        (this.bindMatrixInverse = new Cn());
    }
    (hl.prototype = Object.assign(Object.create(Zn.prototype), {
      constructor: hl,
      isLOD: !0,
      copy: function (e) {
        Zn.prototype.copy.call(this, e, !1);
        for (var t = e.levels, n = 0, i = t.length; n < i; n++) {
          var r = t[n];
          this.addLevel(r.object.clone(), r.distance);
        }
        return (this.autoUpdate = e.autoUpdate), this;
      },
      addLevel: function (e, t) {
        void 0 === t && (t = 0), (t = Math.abs(t));
        for (var n = this.levels, i = 0; i < n.length; i++)
          if (t < n[i].distance) break;
        return n.splice(i, 0, { distance: t, object: e }), this.add(e), this;
      },
      getCurrentLevel: function () {
        return this._currentLevel;
      },
      getObjectForDistance: function (e) {
        var t = this.levels;
        if (t.length > 0) {
          for (var n = 1, i = t.length; n < i; n++)
            if (e < t[n].distance) break;
          return t[n - 1].object;
        }
        return null;
      },
      raycast: function (e, t) {
        var n = this.levels;
        if (n.length > 0) {
          ll.setFromMatrixPosition(this.matrixWorld);
          var i = e.ray.origin.distanceTo(ll);
          this.getObjectForDistance(i).raycast(e, t);
        }
      },
      update: function (e) {
        var t = this.levels;
        if (t.length > 1) {
          ll.setFromMatrixPosition(e.matrixWorld),
            dl.setFromMatrixPosition(this.matrixWorld);
          var n = ll.distanceTo(dl) / e.zoom;
          t[0].object.visible = !0;
          for (var i = 1, r = t.length; i < r; i++) {
            if (!(n >= t[i].distance)) break;
            (t[i - 1].object.visible = !1), (t[i].object.visible = !0);
          }
          for (this._currentLevel = i - 1; i < r; i++) t[i].object.visible = !1;
        }
      },
      toJSON: function (e) {
        var t = Zn.prototype.toJSON.call(this, e);
        !1 === this.autoUpdate && (t.object.autoUpdate = !1),
          (t.object.levels = []);
        for (var n = this.levels, i = 0, r = n.length; i < r; i++) {
          var a = n[i];
          t.object.levels.push({ object: a.object.uuid, distance: a.distance });
        }
        return t;
      },
    })),
      (pl.prototype = Object.assign(Object.create(Dr.prototype), {
        constructor: pl,
        isSkinnedMesh: !0,
        bind: function (e, t) {
          (this.skeleton = e),
            void 0 === t &&
              (this.updateMatrixWorld(!0),
              this.skeleton.calculateInverses(),
              (t = this.matrixWorld)),
            this.bindMatrix.copy(t),
            this.bindMatrixInverse.getInverse(t);
        },
        pose: function () {
          this.skeleton.pose();
        },
        normalizeSkinWeights: function () {
          for (
            var e = new vn(),
              t = this.geometry.attributes.skinWeight,
              n = 0,
              i = t.count;
            n < i;
            n++
          ) {
            (e.x = t.getX(n)),
              (e.y = t.getY(n)),
              (e.z = t.getZ(n)),
              (e.w = t.getW(n));
            var r = 1 / e.manhattanLength();
            r !== 1 / 0 ? e.multiplyScalar(r) : e.set(1, 0, 0, 0),
              t.setXYZW(n, e.x, e.y, e.z, e.w);
          }
        },
        updateMatrixWorld: function (e) {
          Dr.prototype.updateMatrixWorld.call(this, e),
            'attached' === this.bindMode
              ? this.bindMatrixInverse.getInverse(this.matrixWorld)
              : 'detached' === this.bindMode &&
                this.bindMatrixInverse.getInverse(this.bindMatrix);
        },
        clone: function () {
          return new this.constructor(this.geometry, this.material).copy(this);
        },
        boneTransform: (function () {
          var e = new xn(),
            t = new vn(),
            n = new vn(),
            i = new xn(),
            r = new Cn();
          return function (a, o) {
            var s = this.skeleton,
              c = this.geometry;
            t.fromBufferAttribute(c.attributes.skinIndex, a),
              n.fromBufferAttribute(c.attributes.skinWeight, a),
              e
                .fromBufferAttribute(c.attributes.position, a)
                .applyMatrix4(this.bindMatrix),
              o.set(0, 0, 0);
            for (var u = 0; u < 4; u++) {
              var l = n.getComponent(u);
              if (0 !== l) {
                var d = t.getComponent(u);
                r.multiplyMatrices(s.bones[d].matrixWorld, s.boneInverses[d]),
                  o.addScaledVector(i.copy(e).applyMatrix4(r), l);
              }
            }
            return o.applyMatrix4(this.bindMatrixInverse);
          };
        })(),
      }));
    var ml = new Cn(),
      fl = new Cn();
    function _l(e, t) {
      if (
        ((e = e || []),
        (this.bones = e.slice(0)),
        (this.boneMatrices = new Float32Array(16 * this.bones.length)),
        (this.frame = -1),
        void 0 === t)
      )
        this.calculateInverses();
      else if (this.bones.length === t.length) this.boneInverses = t.slice(0);
      else {
        void 0, (this.boneInverses = []);
        for (var n = 0, i = this.bones.length; n < i; n++)
          this.boneInverses.push(new Cn());
      }
    }
    function Ml() {
      Zn.call(this), (this.type = 'Bone');
    }
    Object.assign(_l.prototype, {
      calculateInverses: function () {
        this.boneInverses = [];
        for (var e = 0, t = this.bones.length; e < t; e++) {
          var n = new Cn();
          this.bones[e] && n.getInverse(this.bones[e].matrixWorld),
            this.boneInverses.push(n);
        }
      },
      pose: function () {
        var e, t, n;
        for (t = 0, n = this.bones.length; t < n; t++)
          (e = this.bones[t]),
            e && e.matrixWorld.getInverse(this.boneInverses[t]);
        for (t = 0, n = this.bones.length; t < n; t++)
          (e = this.bones[t]),
            e &&
              (e.parent && e.parent.isBone
                ? (e.matrix.getInverse(e.parent.matrixWorld),
                  e.matrix.multiply(e.matrixWorld))
                : e.matrix.copy(e.matrixWorld),
              e.matrix.decompose(e.position, e.quaternion, e.scale));
      },
      update: function () {
        for (
          var e = this.bones,
            t = this.boneInverses,
            n = this.boneMatrices,
            i = this.boneTexture,
            r = 0,
            a = e.length;
          r < a;
          r++
        ) {
          var o = e[r] ? e[r].matrixWorld : fl;
          ml.multiplyMatrices(o, t[r]), ml.toArray(n, 16 * r);
        }
        void 0 !== i && (i.needsUpdate = !0);
      },
      clone: function () {
        return new _l(this.bones, this.boneInverses);
      },
      getBoneByName: function (e) {
        for (var t = 0, n = this.bones.length; t < n; t++) {
          var i = this.bones[t];
          if (i.name === e) return i;
        }
      },
      dispose: function () {
        this.boneTexture &&
          (this.boneTexture.dispose(), (this.boneTexture = void 0));
      },
    }),
      (Ml.prototype = Object.assign(Object.create(Zn.prototype), {
        constructor: Ml,
        isBone: !0,
      }));
    var vl = new Cn(),
      gl = new Cn(),
      yl = [],
      bl = new Dr();
    function wl(e, t, n) {
      Dr.call(this, e, t),
        (this.instanceMatrix = new Zi(new Float32Array(16 * n), 16)),
        (this.count = n),
        (this.frustumCulled = !1);
    }
    function Al(e) {
      Vi.call(this),
        (this.type = 'LineBasicMaterial'),
        (this.color = new Ii(16777215)),
        (this.linewidth = 1),
        (this.linecap = 'round'),
        (this.linejoin = 'round'),
        this.setValues(e);
    }
    (wl.prototype = Object.assign(Object.create(Dr.prototype), {
      constructor: wl,
      isInstancedMesh: !0,
      getMatrixAt: function (e, t) {
        t.fromArray(this.instanceMatrix.array, 16 * e);
      },
      raycast: function (e, t) {
        var n = this.matrixWorld,
          i = this.count;
        if (
          ((bl.geometry = this.geometry),
          (bl.material = this.material),
          void 0 !== bl.material)
        )
          for (var r = 0; r < i; r++) {
            this.getMatrixAt(r, vl),
              gl.multiplyMatrices(n, vl),
              (bl.matrixWorld = gl),
              bl.raycast(e, yl);
            for (var a = 0, o = yl.length; a < o; a++) {
              var s = yl[a];
              (s.instanceId = r), (s.object = this), t.push(s);
            }
            yl.length = 0;
          }
      },
      setMatrixAt: function (e, t) {
        t.toArray(this.instanceMatrix.array, 16 * e);
      },
      updateMorphTargets: function () {},
    })),
      (Al.prototype = Object.create(Vi.prototype)),
      (Al.prototype.constructor = Al),
      (Al.prototype.isLineBasicMaterial = !0),
      (Al.prototype.copy = function (e) {
        return (
          Vi.prototype.copy.call(this, e),
          this.color.copy(e.color),
          (this.linewidth = e.linewidth),
          (this.linecap = e.linecap),
          (this.linejoin = e.linejoin),
          this
        );
      });
    var xl = new xn(),
      Ll = new xn(),
      Tl = new Cn(),
      zl = new wi(),
      Sl = new mi();
    function Ol(e, t, n) {
      1 === n && void 0,
        Zn.call(this),
        (this.type = 'Line'),
        (this.geometry = void 0 !== e ? e : new fr()),
        (this.material = void 0 !== t ? t : new Al());
    }
    Ol.prototype = Object.assign(Object.create(Zn.prototype), {
      constructor: Ol,
      isLine: !0,
      computeLineDistances: function () {
        var e = this.geometry;
        if (e.isBufferGeometry)
          if (null === e.index) {
            for (
              var t = e.attributes.position, n = [0], i = 1, r = t.count;
              i < r;
              i++
            )
              xl.fromBufferAttribute(t, i - 1),
                Ll.fromBufferAttribute(t, i),
                (n[i] = n[i - 1]),
                (n[i] += xl.distanceTo(Ll));
            e.setAttribute('lineDistance', new rr(n, 1));
          } else void 0;
        else if (e.isGeometry) {
          var a = e.vertices;
          n = e.lineDistances;
          n[0] = 0;
          for (i = 1, r = a.length; i < r; i++)
            (n[i] = n[i - 1]), (n[i] += a[i - 1].distanceTo(a[i]));
        }
        return this;
      },
      raycast: function (e, t) {
        var n = this.geometry,
          i = this.matrixWorld,
          r = e.params.Line.threshold;
        if (
          (null === n.boundingSphere && n.computeBoundingSphere(),
          Sl.copy(n.boundingSphere),
          Sl.applyMatrix4(i),
          (Sl.radius += r),
          !1 !== e.ray.intersectsSphere(Sl))
        ) {
          Tl.getInverse(i), zl.copy(e.ray).applyMatrix4(Tl);
          var a = r / ((this.scale.x + this.scale.y + this.scale.z) / 3),
            o = a * a,
            s = new xn(),
            c = new xn(),
            u = new xn(),
            l = new xn(),
            d = this && this.isLineSegments ? 2 : 1;
          if (n.isBufferGeometry) {
            var h = n.index,
              p = n.attributes,
              m = p.position.array;
            if (null !== h)
              for (var f = h.array, _ = 0, M = f.length - 1; _ < M; _ += d) {
                var v = f[_],
                  g = f[_ + 1];
                s.fromArray(m, 3 * v), c.fromArray(m, 3 * g);
                var y = zl.distanceSqToSegment(s, c, l, u);
                if (!(y > o)) {
                  l.applyMatrix4(this.matrixWorld);
                  var b = e.ray.origin.distanceTo(l);
                  b < e.near ||
                    b > e.far ||
                    t.push({
                      distance: b,
                      point: u.clone().applyMatrix4(this.matrixWorld),
                      index: _,
                      face: null,
                      faceIndex: null,
                      object: this,
                    });
                }
              }
            else
              for (_ = 0, M = m.length / 3 - 1; _ < M; _ += d) {
                s.fromArray(m, 3 * _), c.fromArray(m, 3 * _ + 3);
                y = zl.distanceSqToSegment(s, c, l, u);
                if (!(y > o)) {
                  l.applyMatrix4(this.matrixWorld);
                  b = e.ray.origin.distanceTo(l);
                  b < e.near ||
                    b > e.far ||
                    t.push({
                      distance: b,
                      point: u.clone().applyMatrix4(this.matrixWorld),
                      index: _,
                      face: null,
                      faceIndex: null,
                      object: this,
                    });
                }
              }
          } else if (n.isGeometry) {
            var w = n.vertices,
              A = w.length;
            for (_ = 0; _ < A - 1; _ += d) {
              y = zl.distanceSqToSegment(w[_], w[_ + 1], l, u);
              if (!(y > o)) {
                l.applyMatrix4(this.matrixWorld);
                b = e.ray.origin.distanceTo(l);
                b < e.near ||
                  b > e.far ||
                  t.push({
                    distance: b,
                    point: u.clone().applyMatrix4(this.matrixWorld),
                    index: _,
                    face: null,
                    faceIndex: null,
                    object: this,
                  });
              }
            }
          }
        }
      },
      clone: function () {
        return new this.constructor(this.geometry, this.material).copy(this);
      },
    });
    var El = new xn(),
      kl = new xn();
    function Cl(e, t) {
      Ol.call(this, e, t), (this.type = 'LineSegments');
    }
    function Dl(e, t) {
      Ol.call(this, e, t), (this.type = 'LineLoop');
    }
    function Nl(e) {
      Vi.call(this),
        (this.type = 'PointsMaterial'),
        (this.color = new Ii(16777215)),
        (this.map = null),
        (this.alphaMap = null),
        (this.size = 1),
        (this.sizeAttenuation = !0),
        (this.morphTargets = !1),
        this.setValues(e);
    }
    (Cl.prototype = Object.assign(Object.create(Ol.prototype), {
      constructor: Cl,
      isLineSegments: !0,
      computeLineDistances: function () {
        var e = this.geometry;
        if (e.isBufferGeometry)
          if (null === e.index) {
            for (
              var t = e.attributes.position, n = [], i = 0, r = t.count;
              i < r;
              i += 2
            )
              El.fromBufferAttribute(t, i),
                kl.fromBufferAttribute(t, i + 1),
                (n[i] = 0 === i ? 0 : n[i - 1]),
                (n[i + 1] = n[i] + El.distanceTo(kl));
            e.setAttribute('lineDistance', new rr(n, 1));
          } else void 0;
        else if (e.isGeometry) {
          var a = e.vertices;
          for (n = e.lineDistances, i = 0, r = a.length; i < r; i += 2)
            El.copy(a[i]),
              kl.copy(a[i + 1]),
              (n[i] = 0 === i ? 0 : n[i - 1]),
              (n[i + 1] = n[i] + El.distanceTo(kl));
        }
        return this;
      },
    })),
      (Dl.prototype = Object.assign(Object.create(Ol.prototype), {
        constructor: Dl,
        isLineLoop: !0,
      })),
      (Nl.prototype = Object.create(Vi.prototype)),
      (Nl.prototype.constructor = Nl),
      (Nl.prototype.isPointsMaterial = !0),
      (Nl.prototype.copy = function (e) {
        return (
          Vi.prototype.copy.call(this, e),
          this.color.copy(e.color),
          (this.map = e.map),
          (this.alphaMap = e.alphaMap),
          (this.size = e.size),
          (this.sizeAttenuation = e.sizeAttenuation),
          (this.morphTargets = e.morphTargets),
          this
        );
      });
    var Pl = new Cn(),
      jl = new wi(),
      Yl = new mi(),
      Rl = new xn();
    function Bl(e, t) {
      Zn.call(this),
        (this.type = 'Points'),
        (this.geometry = void 0 !== e ? e : new fr()),
        (this.material = void 0 !== t ? t : new Nl()),
        this.updateMorphTargets();
    }
    function Wl(e, t, n, i, r, a, o) {
      var s = jl.distanceSqToPoint(e);
      if (s < n) {
        var c = new xn();
        jl.closestPointToPoint(e, c), c.applyMatrix4(i);
        var u = r.ray.origin.distanceTo(c);
        if (u < r.near || u > r.far) return;
        a.push({
          distance: u,
          distanceToRay: Math.sqrt(s),
          point: c,
          index: t,
          face: null,
          object: o,
        });
      }
    }
    function Il(e, t, n, i, r, a, o, s, c) {
      Mn.call(this, e, t, n, i, r, a, o, s, c),
        (this.format = void 0 !== o ? o : Ce),
        (this.minFilter = void 0 !== a ? a : fe),
        (this.magFilter = void 0 !== r ? r : fe),
        (this.generateMipmaps = !1);
    }
    function ql(e, t, n, i, r, a, o, s, c, u, l, d) {
      Mn.call(this, null, a, o, s, c, u, i, r, l, d),
        (this.image = { width: t, height: n }),
        (this.mipmaps = e),
        (this.flipY = !1),
        (this.generateMipmaps = !1);
    }
    function Hl(e, t, n, i, r, a, o, s, c) {
      Mn.call(this, e, t, n, i, r, a, o, s, c), (this.needsUpdate = !0);
    }
    function Fl(e, t, n, i, r, a, o, s, c, u) {
      if (((u = void 0 !== u ? u : Ye), u !== Ye && u !== Re))
        throw new Error(
          'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat'
        );
      void 0 === n && u === Ye && (n = we),
        void 0 === n && u === Re && (n = Ee),
        Mn.call(this, null, i, r, a, o, s, u, n, c),
        (this.image = { width: e, height: t }),
        (this.magFilter = void 0 !== o ? o : he),
        (this.minFilter = void 0 !== s ? s : he),
        (this.flipY = !1),
        (this.generateMipmaps = !1);
    }
    function Ul(e) {
      fr.call(this), (this.type = 'WireframeGeometry');
      var t,
        n,
        i,
        r,
        a,
        o,
        s,
        c,
        u,
        l,
        d = [],
        h = [0, 0],
        p = {},
        m = ['a', 'b', 'c'];
      if (e && e.isGeometry) {
        var f = e.faces;
        for (t = 0, i = f.length; t < i; t++) {
          var _ = f[t];
          for (n = 0; n < 3; n++)
            (s = _[m[n]]),
              (c = _[m[(n + 1) % 3]]),
              (h[0] = Math.min(s, c)),
              (h[1] = Math.max(s, c)),
              (u = h[0] + ',' + h[1]),
              void 0 === p[u] && (p[u] = { index1: h[0], index2: h[1] });
        }
        for (u in p)
          (o = p[u]),
            (l = e.vertices[o.index1]),
            d.push(l.x, l.y, l.z),
            (l = e.vertices[o.index2]),
            d.push(l.x, l.y, l.z);
      } else if (e && e.isBufferGeometry) {
        var M, v, g, y, b, w, A, x;
        if (((l = new xn()), null !== e.index)) {
          for (
            M = e.attributes.position,
              v = e.index,
              g = e.groups,
              0 === g.length &&
                (g = [{ start: 0, count: v.count, materialIndex: 0 }]),
              r = 0,
              a = g.length;
            r < a;
            ++r
          )
            for (
              y = g[r], b = y.start, w = y.count, t = b, i = b + w;
              t < i;
              t += 3
            )
              for (n = 0; n < 3; n++)
                (s = v.getX(t + n)),
                  (c = v.getX(t + ((n + 1) % 3))),
                  (h[0] = Math.min(s, c)),
                  (h[1] = Math.max(s, c)),
                  (u = h[0] + ',' + h[1]),
                  void 0 === p[u] && (p[u] = { index1: h[0], index2: h[1] });
          for (u in p)
            (o = p[u]),
              l.fromBufferAttribute(M, o.index1),
              d.push(l.x, l.y, l.z),
              l.fromBufferAttribute(M, o.index2),
              d.push(l.x, l.y, l.z);
        } else
          for (M = e.attributes.position, t = 0, i = M.count / 3; t < i; t++)
            for (n = 0; n < 3; n++)
              (A = 3 * t + n),
                l.fromBufferAttribute(M, A),
                d.push(l.x, l.y, l.z),
                (x = 3 * t + ((n + 1) % 3)),
                l.fromBufferAttribute(M, x),
                d.push(l.x, l.y, l.z);
      }
      this.setAttribute('position', new rr(d, 3));
    }
    function Xl(e, t, n) {
      Wr.call(this),
        (this.type = 'ParametricGeometry'),
        (this.parameters = { func: e, slices: t, stacks: n }),
        this.fromBufferGeometry(new Vl(e, t, n)),
        this.mergeVertices();
    }
    function Vl(e, t, n) {
      fr.call(this),
        (this.type = 'ParametricBufferGeometry'),
        (this.parameters = { func: e, slices: t, stacks: n });
      var i,
        r,
        a = [],
        o = [],
        s = [],
        c = [],
        u = 1e-5,
        l = new xn(),
        d = new xn(),
        h = new xn(),
        p = new xn(),
        m = new xn();
      e.length < 3 && void 0;
      var f = t + 1;
      for (i = 0; i <= n; i++) {
        var _ = i / n;
        for (r = 0; r <= t; r++) {
          var M = r / t;
          e(M, _, d),
            o.push(d.x, d.y, d.z),
            M - u >= 0
              ? (e(M - u, _, h), p.subVectors(d, h))
              : (e(M + u, _, h), p.subVectors(h, d)),
            _ - u >= 0
              ? (e(M, _ - u, h), m.subVectors(d, h))
              : (e(M, _ + u, h), m.subVectors(h, d)),
            l.crossVectors(p, m).normalize(),
            s.push(l.x, l.y, l.z),
            c.push(M, _);
        }
      }
      for (i = 0; i < n; i++)
        for (r = 0; r < t; r++) {
          var v = i * f + r,
            g = i * f + r + 1,
            y = (i + 1) * f + r + 1,
            b = (i + 1) * f + r;
          a.push(v, g, b), a.push(g, y, b);
        }
      this.setIndex(a),
        this.setAttribute('position', new rr(o, 3)),
        this.setAttribute('normal', new rr(s, 3)),
        this.setAttribute('uv', new rr(c, 2));
    }
    function Gl(e, t, n, i) {
      Wr.call(this),
        (this.type = 'PolyhedronGeometry'),
        (this.parameters = { vertices: e, indices: t, radius: n, detail: i }),
        this.fromBufferGeometry(new Jl(e, t, n, i)),
        this.mergeVertices();
    }
    function Jl(e, t, n, i) {
      fr.call(this),
        (this.type = 'PolyhedronBufferGeometry'),
        (this.parameters = { vertices: e, indices: t, radius: n, detail: i }),
        (n = n || 1),
        (i = i || 0);
      var r = [],
        a = [];
      function o(e) {
        for (
          var n = new xn(), i = new xn(), r = new xn(), a = 0;
          a < t.length;
          a += 3
        )
          h(t[a + 0], n), h(t[a + 1], i), h(t[a + 2], r), s(n, i, r, e);
      }
      function s(e, t, n, i) {
        var r,
          a,
          o = Math.pow(2, i),
          s = [];
        for (r = 0; r <= o; r++) {
          s[r] = [];
          var c = e.clone().lerp(n, r / o),
            u = t.clone().lerp(n, r / o),
            l = o - r;
          for (a = 0; a <= l; a++)
            s[r][a] = 0 === a && r === o ? c : c.clone().lerp(u, a / l);
        }
        for (r = 0; r < o; r++)
          for (a = 0; a < 2 * (o - r) - 1; a++) {
            var h = Math.floor(a / 2);
            a % 2 === 0
              ? (d(s[r][h + 1]), d(s[r + 1][h]), d(s[r][h]))
              : (d(s[r][h + 1]), d(s[r + 1][h + 1]), d(s[r + 1][h]));
          }
      }
      function c(e) {
        for (var t = new xn(), n = 0; n < r.length; n += 3)
          (t.x = r[n + 0]),
            (t.y = r[n + 1]),
            (t.z = r[n + 2]),
            t.normalize().multiplyScalar(e),
            (r[n + 0] = t.x),
            (r[n + 1] = t.y),
            (r[n + 2] = t.z);
      }
      function u() {
        for (var e = new xn(), t = 0; t < r.length; t += 3) {
          (e.x = r[t + 0]), (e.y = r[t + 1]), (e.z = r[t + 2]);
          var n = f(e) / 2 / Math.PI + 0.5,
            i = _(e) / Math.PI + 0.5;
          a.push(n, 1 - i);
        }
        p(), l();
      }
      function l() {
        for (var e = 0; e < a.length; e += 6) {
          var t = a[e + 0],
            n = a[e + 2],
            i = a[e + 4],
            r = Math.max(t, n, i),
            o = Math.min(t, n, i);
          r > 0.9 &&
            o < 0.1 &&
            (t < 0.2 && (a[e + 0] += 1),
            n < 0.2 && (a[e + 2] += 1),
            i < 0.2 && (a[e + 4] += 1));
        }
      }
      function d(e) {
        r.push(e.x, e.y, e.z);
      }
      function h(t, n) {
        var i = 3 * t;
        (n.x = e[i + 0]), (n.y = e[i + 1]), (n.z = e[i + 2]);
      }
      function p() {
        for (
          var e = new xn(),
            t = new xn(),
            n = new xn(),
            i = new xn(),
            o = new pn(),
            s = new pn(),
            c = new pn(),
            u = 0,
            l = 0;
          u < r.length;
          u += 9, l += 6
        ) {
          e.set(r[u + 0], r[u + 1], r[u + 2]),
            t.set(r[u + 3], r[u + 4], r[u + 5]),
            n.set(r[u + 6], r[u + 7], r[u + 8]),
            o.set(a[l + 0], a[l + 1]),
            s.set(a[l + 2], a[l + 3]),
            c.set(a[l + 4], a[l + 5]),
            i.copy(e).add(t).add(n).divideScalar(3);
          var d = f(i);
          m(o, l + 0, e, d), m(s, l + 2, t, d), m(c, l + 4, n, d);
        }
      }
      function m(e, t, n, i) {
        i < 0 && 1 === e.x && (a[t] = e.x - 1),
          0 === n.x && 0 === n.z && (a[t] = i / 2 / Math.PI + 0.5);
      }
      function f(e) {
        return Math.atan2(e.z, -e.x);
      }
      function _(e) {
        return Math.atan2(-e.y, Math.sqrt(e.x * e.x + e.z * e.z));
      }
      o(i),
        c(n),
        u(),
        this.setAttribute('position', new rr(r, 3)),
        this.setAttribute('normal', new rr(r.slice(), 3)),
        this.setAttribute('uv', new rr(a, 2)),
        0 === i ? this.computeVertexNormals() : this.normalizeNormals();
    }
    function Zl(e, t) {
      Wr.call(this),
        (this.type = 'TetrahedronGeometry'),
        (this.parameters = { radius: e, detail: t }),
        this.fromBufferGeometry(new Kl(e, t)),
        this.mergeVertices();
    }
    function Kl(e, t) {
      var n = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1],
        i = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];
      Jl.call(this, n, i, e, t),
        (this.type = 'TetrahedronBufferGeometry'),
        (this.parameters = { radius: e, detail: t });
    }
    function Ql(e, t) {
      Wr.call(this),
        (this.type = 'OctahedronGeometry'),
        (this.parameters = { radius: e, detail: t }),
        this.fromBufferGeometry(new $l(e, t)),
        this.mergeVertices();
    }
    function $l(e, t) {
      var n = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1],
        i = [
          0,
          2,
          4,
          0,
          4,
          3,
          0,
          3,
          5,
          0,
          5,
          2,
          1,
          2,
          5,
          1,
          5,
          3,
          1,
          3,
          4,
          1,
          4,
          2,
        ];
      Jl.call(this, n, i, e, t),
        (this.type = 'OctahedronBufferGeometry'),
        (this.parameters = { radius: e, detail: t });
    }
    function ed(e, t) {
      Wr.call(this),
        (this.type = 'IcosahedronGeometry'),
        (this.parameters = { radius: e, detail: t }),
        this.fromBufferGeometry(new td(e, t)),
        this.mergeVertices();
    }
    function td(e, t) {
      var n = (1 + Math.sqrt(5)) / 2,
        i = [
          -1,
          n,
          0,
          1,
          n,
          0,
          -1,
          -n,
          0,
          1,
          -n,
          0,
          0,
          -1,
          n,
          0,
          1,
          n,
          0,
          -1,
          -n,
          0,
          1,
          -n,
          n,
          0,
          -1,
          n,
          0,
          1,
          -n,
          0,
          -1,
          -n,
          0,
          1,
        ],
        r = [
          0,
          11,
          5,
          0,
          5,
          1,
          0,
          1,
          7,
          0,
          7,
          10,
          0,
          10,
          11,
          1,
          5,
          9,
          5,
          11,
          4,
          11,
          10,
          2,
          10,
          7,
          6,
          7,
          1,
          8,
          3,
          9,
          4,
          3,
          4,
          2,
          3,
          2,
          6,
          3,
          6,
          8,
          3,
          8,
          9,
          4,
          9,
          5,
          2,
          4,
          11,
          6,
          2,
          10,
          8,
          6,
          7,
          9,
          8,
          1,
        ];
      Jl.call(this, i, r, e, t),
        (this.type = 'IcosahedronBufferGeometry'),
        (this.parameters = { radius: e, detail: t });
    }
    function nd(e, t) {
      Wr.call(this),
        (this.type = 'DodecahedronGeometry'),
        (this.parameters = { radius: e, detail: t }),
        this.fromBufferGeometry(new id(e, t)),
        this.mergeVertices();
    }
    function id(e, t) {
      var n = (1 + Math.sqrt(5)) / 2,
        i = 1 / n,
        r = [
          -1,
          -1,
          -1,
          -1,
          -1,
          1,
          -1,
          1,
          -1,
          -1,
          1,
          1,
          1,
          -1,
          -1,
          1,
          -1,
          1,
          1,
          1,
          -1,
          1,
          1,
          1,
          0,
          -i,
          -n,
          0,
          -i,
          n,
          0,
          i,
          -n,
          0,
          i,
          n,
          -i,
          -n,
          0,
          -i,
          n,
          0,
          i,
          -n,
          0,
          i,
          n,
          0,
          -n,
          0,
          -i,
          n,
          0,
          -i,
          -n,
          0,
          i,
          n,
          0,
          i,
        ],
        a = [
          3,
          11,
          7,
          3,
          7,
          15,
          3,
          15,
          13,
          7,
          19,
          17,
          7,
          17,
          6,
          7,
          6,
          15,
          17,
          4,
          8,
          17,
          8,
          10,
          17,
          10,
          6,
          8,
          0,
          16,
          8,
          16,
          2,
          8,
          2,
          10,
          0,
          12,
          1,
          0,
          1,
          18,
          0,
          18,
          16,
          6,
          10,
          2,
          6,
          2,
          13,
          6,
          13,
          15,
          2,
          16,
          18,
          2,
          18,
          3,
          2,
          3,
          13,
          18,
          1,
          9,
          18,
          9,
          11,
          18,
          11,
          3,
          4,
          14,
          12,
          4,
          12,
          0,
          4,
          0,
          8,
          11,
          9,
          5,
          11,
          5,
          19,
          11,
          19,
          7,
          19,
          5,
          14,
          19,
          14,
          4,
          19,
          4,
          17,
          1,
          12,
          14,
          1,
          14,
          5,
          1,
          5,
          9,
        ];
      Jl.call(this, r, a, e, t),
        (this.type = 'DodecahedronBufferGeometry'),
        (this.parameters = { radius: e, detail: t });
    }
    function rd(e, t, n, i, r, a) {
      Wr.call(this),
        (this.type = 'TubeGeometry'),
        (this.parameters = {
          path: e,
          tubularSegments: t,
          radius: n,
          radialSegments: i,
          closed: r,
        });
      var o = new ad(e, t, n, i, r);
      (this.tangents = o.tangents),
        (this.normals = o.normals),
        (this.binormals = o.binormals),
        this.fromBufferGeometry(o),
        this.mergeVertices();
    }
    function ad(e, t, n, i, r) {
      fr.call(this),
        (this.type = 'TubeBufferGeometry'),
        (this.parameters = {
          path: e,
          tubularSegments: t,
          radius: n,
          radialSegments: i,
          closed: r,
        }),
        (t = t || 64),
        (n = n || 1),
        (i = i || 8),
        (r = r || !1);
      var a = e.computeFrenetFrames(t, r);
      (this.tangents = a.tangents),
        (this.normals = a.normals),
        (this.binormals = a.binormals);
      var o,
        s,
        c = new xn(),
        u = new xn(),
        l = new pn(),
        d = new xn(),
        h = [],
        p = [],
        m = [],
        f = [];
      function _() {
        for (o = 0; o < t; o++) M(o);
        M(!1 === r ? t : 0), g(), v();
      }
      function M(r) {
        d = e.getPointAt(r / t, d);
        var o = a.normals[r],
          l = a.binormals[r];
        for (s = 0; s <= i; s++) {
          var m = (s / i) * Math.PI * 2,
            f = Math.sin(m),
            _ = -Math.cos(m);
          (u.x = _ * o.x + f * l.x),
            (u.y = _ * o.y + f * l.y),
            (u.z = _ * o.z + f * l.z),
            u.normalize(),
            p.push(u.x, u.y, u.z),
            (c.x = d.x + n * u.x),
            (c.y = d.y + n * u.y),
            (c.z = d.z + n * u.z),
            h.push(c.x, c.y, c.z);
        }
      }
      function v() {
        for (s = 1; s <= t; s++)
          for (o = 1; o <= i; o++) {
            var e = (i + 1) * (s - 1) + (o - 1),
              n = (i + 1) * s + (o - 1),
              r = (i + 1) * s + o,
              a = (i + 1) * (s - 1) + o;
            f.push(e, n, a), f.push(n, r, a);
          }
      }
      function g() {
        for (o = 0; o <= t; o++)
          for (s = 0; s <= i; s++)
            (l.x = o / t), (l.y = s / i), m.push(l.x, l.y);
      }
      _(),
        this.setIndex(f),
        this.setAttribute('position', new rr(h, 3)),
        this.setAttribute('normal', new rr(p, 3)),
        this.setAttribute('uv', new rr(m, 2));
    }
    function od(e, t, n, i, r, a, o) {
      Wr.call(this),
        (this.type = 'TorusKnotGeometry'),
        (this.parameters = {
          radius: e,
          tube: t,
          tubularSegments: n,
          radialSegments: i,
          p: r,
          q: a,
        }),
        this.fromBufferGeometry(new sd(e, t, n, i, r, a)),
        this.mergeVertices();
    }
    function sd(e, t, n, i, r, a) {
      fr.call(this),
        (this.type = 'TorusKnotBufferGeometry'),
        (this.parameters = {
          radius: e,
          tube: t,
          tubularSegments: n,
          radialSegments: i,
          p: r,
          q: a,
        }),
        (e = e || 1),
        (t = t || 0.4),
        (n = Math.floor(n) || 64),
        (i = Math.floor(i) || 8),
        (r = r || 2),
        (a = a || 3);
      var o,
        s,
        c = [],
        u = [],
        l = [],
        d = [],
        h = new xn(),
        p = new xn(),
        m = new xn(),
        f = new xn(),
        _ = new xn(),
        M = new xn(),
        v = new xn();
      for (o = 0; o <= n; ++o) {
        var g = (o / n) * r * Math.PI * 2;
        for (
          z(g, r, a, e, m),
            z(g + 0.01, r, a, e, f),
            M.subVectors(f, m),
            v.addVectors(f, m),
            _.crossVectors(M, v),
            v.crossVectors(_, M),
            _.normalize(),
            v.normalize(),
            s = 0;
          s <= i;
          ++s
        ) {
          var y = (s / i) * Math.PI * 2,
            b = -t * Math.cos(y),
            w = t * Math.sin(y);
          (h.x = m.x + (b * v.x + w * _.x)),
            (h.y = m.y + (b * v.y + w * _.y)),
            (h.z = m.z + (b * v.z + w * _.z)),
            u.push(h.x, h.y, h.z),
            p.subVectors(h, m).normalize(),
            l.push(p.x, p.y, p.z),
            d.push(o / n),
            d.push(s / i);
        }
      }
      for (s = 1; s <= n; s++)
        for (o = 1; o <= i; o++) {
          var A = (i + 1) * (s - 1) + (o - 1),
            x = (i + 1) * s + (o - 1),
            L = (i + 1) * s + o,
            T = (i + 1) * (s - 1) + o;
          c.push(A, x, T), c.push(x, L, T);
        }
      function z(e, t, n, i, r) {
        var a = Math.cos(e),
          o = Math.sin(e),
          s = (n / t) * e,
          c = Math.cos(s);
        (r.x = i * (2 + c) * 0.5 * a),
          (r.y = i * (2 + c) * o * 0.5),
          (r.z = i * Math.sin(s) * 0.5);
      }
      this.setIndex(c),
        this.setAttribute('position', new rr(u, 3)),
        this.setAttribute('normal', new rr(l, 3)),
        this.setAttribute('uv', new rr(d, 2));
    }
    function cd(e, t, n, i, r) {
      Wr.call(this),
        (this.type = 'TorusGeometry'),
        (this.parameters = {
          radius: e,
          tube: t,
          radialSegments: n,
          tubularSegments: i,
          arc: r,
        }),
        this.fromBufferGeometry(new ud(e, t, n, i, r)),
        this.mergeVertices();
    }
    function ud(e, t, n, i, r) {
      fr.call(this),
        (this.type = 'TorusBufferGeometry'),
        (this.parameters = {
          radius: e,
          tube: t,
          radialSegments: n,
          tubularSegments: i,
          arc: r,
        }),
        (e = e || 1),
        (t = t || 0.4),
        (n = Math.floor(n) || 8),
        (i = Math.floor(i) || 6),
        (r = r || 2 * Math.PI);
      var a,
        o,
        s = [],
        c = [],
        u = [],
        l = [],
        d = new xn(),
        h = new xn(),
        p = new xn();
      for (a = 0; a <= n; a++)
        for (o = 0; o <= i; o++) {
          var m = (o / i) * r,
            f = (a / n) * Math.PI * 2;
          (h.x = (e + t * Math.cos(f)) * Math.cos(m)),
            (h.y = (e + t * Math.cos(f)) * Math.sin(m)),
            (h.z = t * Math.sin(f)),
            c.push(h.x, h.y, h.z),
            (d.x = e * Math.cos(m)),
            (d.y = e * Math.sin(m)),
            p.subVectors(h, d).normalize(),
            u.push(p.x, p.y, p.z),
            l.push(o / i),
            l.push(a / n);
        }
      for (a = 1; a <= n; a++)
        for (o = 1; o <= i; o++) {
          var _ = (i + 1) * a + o - 1,
            M = (i + 1) * (a - 1) + o - 1,
            v = (i + 1) * (a - 1) + o,
            g = (i + 1) * a + o;
          s.push(_, M, g), s.push(M, v, g);
        }
      this.setIndex(s),
        this.setAttribute('position', new rr(c, 3)),
        this.setAttribute('normal', new rr(u, 3)),
        this.setAttribute('uv', new rr(l, 2));
    }
    (Bl.prototype = Object.assign(Object.create(Zn.prototype), {
      constructor: Bl,
      isPoints: !0,
      raycast: function (e, t) {
        var n = this.geometry,
          i = this.matrixWorld,
          r = e.params.Points.threshold;
        if (
          (null === n.boundingSphere && n.computeBoundingSphere(),
          Yl.copy(n.boundingSphere),
          Yl.applyMatrix4(i),
          (Yl.radius += r),
          !1 !== e.ray.intersectsSphere(Yl))
        ) {
          Pl.getInverse(i), jl.copy(e.ray).applyMatrix4(Pl);
          var a = r / ((this.scale.x + this.scale.y + this.scale.z) / 3),
            o = a * a;
          if (n.isBufferGeometry) {
            var s = n.index,
              c = n.attributes,
              u = c.position.array;
            if (null !== s)
              for (var l = s.array, d = 0, h = l.length; d < h; d++) {
                var p = l[d];
                Rl.fromArray(u, 3 * p), Wl(Rl, p, o, i, e, t, this);
              }
            else {
              d = 0;
              for (var m = u.length / 3; d < m; d++)
                Rl.fromArray(u, 3 * d), Wl(Rl, d, o, i, e, t, this);
            }
          } else {
            var f = n.vertices;
            for (d = 0, m = f.length; d < m; d++) Wl(f[d], d, o, i, e, t, this);
          }
        }
      },
      updateMorphTargets: function () {
        var e,
          t,
          n,
          i = this.geometry;
        if (i.isBufferGeometry) {
          var r = i.morphAttributes,
            a = Object.keys(r);
          if (a.length > 0) {
            var o = r[a[0]];
            if (void 0 !== o)
              for (
                this.morphTargetInfluences = [],
                  this.morphTargetDictionary = {},
                  e = 0,
                  t = o.length;
                e < t;
                e++
              )
                (n = o[e].name || String(e)),
                  this.morphTargetInfluences.push(0),
                  (this.morphTargetDictionary[n] = e);
          }
        } else {
          var s = i.morphTargets;
          void 0 !== s && s.length > 0 && void 0;
        }
      },
      clone: function () {
        return new this.constructor(this.geometry, this.material).copy(this);
      },
    })),
      (Il.prototype = Object.assign(Object.create(Mn.prototype), {
        constructor: Il,
        isVideoTexture: !0,
        update: function () {
          var e = this.image;
          e.readyState >= e.HAVE_CURRENT_DATA && (this.needsUpdate = !0);
        },
      })),
      (ql.prototype = Object.create(Mn.prototype)),
      (ql.prototype.constructor = ql),
      (ql.prototype.isCompressedTexture = !0),
      (Hl.prototype = Object.create(Mn.prototype)),
      (Hl.prototype.constructor = Hl),
      (Hl.prototype.isCanvasTexture = !0),
      (Fl.prototype = Object.create(Mn.prototype)),
      (Fl.prototype.constructor = Fl),
      (Fl.prototype.isDepthTexture = !0),
      (Ul.prototype = Object.create(fr.prototype)),
      (Ul.prototype.constructor = Ul),
      (Xl.prototype = Object.create(Wr.prototype)),
      (Xl.prototype.constructor = Xl),
      (Vl.prototype = Object.create(fr.prototype)),
      (Vl.prototype.constructor = Vl),
      (Gl.prototype = Object.create(Wr.prototype)),
      (Gl.prototype.constructor = Gl),
      (Jl.prototype = Object.create(fr.prototype)),
      (Jl.prototype.constructor = Jl),
      (Zl.prototype = Object.create(Wr.prototype)),
      (Zl.prototype.constructor = Zl),
      (Kl.prototype = Object.create(Jl.prototype)),
      (Kl.prototype.constructor = Kl),
      (Ql.prototype = Object.create(Wr.prototype)),
      (Ql.prototype.constructor = Ql),
      ($l.prototype = Object.create(Jl.prototype)),
      ($l.prototype.constructor = $l),
      (ed.prototype = Object.create(Wr.prototype)),
      (ed.prototype.constructor = ed),
      (td.prototype = Object.create(Jl.prototype)),
      (td.prototype.constructor = td),
      (nd.prototype = Object.create(Wr.prototype)),
      (nd.prototype.constructor = nd),
      (id.prototype = Object.create(Jl.prototype)),
      (id.prototype.constructor = id),
      (rd.prototype = Object.create(Wr.prototype)),
      (rd.prototype.constructor = rd),
      (ad.prototype = Object.create(fr.prototype)),
      (ad.prototype.constructor = ad),
      (ad.prototype.toJSON = function () {
        var e = fr.prototype.toJSON.call(this);
        return (e.path = this.parameters.path.toJSON()), e;
      }),
      (od.prototype = Object.create(Wr.prototype)),
      (od.prototype.constructor = od),
      (sd.prototype = Object.create(fr.prototype)),
      (sd.prototype.constructor = sd),
      (cd.prototype = Object.create(Wr.prototype)),
      (cd.prototype.constructor = cd),
      (ud.prototype = Object.create(fr.prototype)),
      (ud.prototype.constructor = ud);
    var ld = {
      triangulate: function (e, t, n) {
        n = n || 2;
        var i,
          r,
          a,
          o,
          s,
          c,
          u,
          l = t && t.length,
          d = l ? t[0] * n : e.length,
          h = dd(e, 0, d, n, !0),
          p = [];
        if (!h || h.next === h.prev) return p;
        if ((l && (h = vd(e, t, h, n)), e.length > 80 * n)) {
          (i = a = e[0]), (r = o = e[1]);
          for (var m = n; m < d; m += n)
            (s = e[m]),
              (c = e[m + 1]),
              s < i && (i = s),
              c < r && (r = c),
              s > a && (a = s),
              c > o && (o = c);
          (u = Math.max(a - i, o - r)), (u = 0 !== u ? 1 / u : 0);
        }
        return pd(h, p, n, i, r, u), p;
      },
    };
    function dd(e, t, n, i, r) {
      var a, o;
      if (r === Id(e, t, n, i) > 0)
        for (a = t; a < n; a += i) o = Rd(a, e[a], e[a + 1], o);
      else for (a = n - i; a >= t; a -= i) o = Rd(a, e[a], e[a + 1], o);
      return o && Ed(o, o.next) && (Bd(o), (o = o.next)), o;
    }
    function hd(e, t) {
      if (!e) return e;
      t || (t = e);
      var n,
        i = e;
      do {
        if (
          ((n = !1),
          i.steiner || (!Ed(i, i.next) && 0 !== Od(i.prev, i, i.next)))
        )
          i = i.next;
        else {
          if ((Bd(i), (i = t = i.prev), i === i.next)) break;
          n = !0;
        }
      } while (n || i !== t);
      return t;
    }
    function pd(e, t, n, i, r, a, o) {
      if (e) {
        !o && a && Ad(e, i, r, a);
        var s,
          c,
          u = e;
        while (e.prev !== e.next)
          if (((s = e.prev), (c = e.next), a ? fd(e, i, r, a) : md(e)))
            t.push(s.i / n),
              t.push(e.i / n),
              t.push(c.i / n),
              Bd(e),
              (e = c.next),
              (u = c.next);
          else if (((e = c), e === u)) {
            o
              ? 1 === o
                ? ((e = _d(hd(e), t, n)), pd(e, t, n, i, r, a, 2))
                : 2 === o && Md(e, t, n, i, r, a)
              : pd(hd(e), t, n, i, r, a, 1);
            break;
          }
      }
    }
    function md(e) {
      var t = e.prev,
        n = e,
        i = e.next;
      if (Od(t, n, i) >= 0) return !1;
      var r = e.next.next;
      while (r !== e.prev) {
        if (
          zd(t.x, t.y, n.x, n.y, i.x, i.y, r.x, r.y) &&
          Od(r.prev, r, r.next) >= 0
        )
          return !1;
        r = r.next;
      }
      return !0;
    }
    function fd(e, t, n, i) {
      var r = e.prev,
        a = e,
        o = e.next;
      if (Od(r, a, o) >= 0) return !1;
      var s = r.x < a.x ? (r.x < o.x ? r.x : o.x) : a.x < o.x ? a.x : o.x,
        c = r.y < a.y ? (r.y < o.y ? r.y : o.y) : a.y < o.y ? a.y : o.y,
        u = r.x > a.x ? (r.x > o.x ? r.x : o.x) : a.x > o.x ? a.x : o.x,
        l = r.y > a.y ? (r.y > o.y ? r.y : o.y) : a.y > o.y ? a.y : o.y,
        d = Ld(s, c, t, n, i),
        h = Ld(u, l, t, n, i),
        p = e.prevZ,
        m = e.nextZ;
      while (p && p.z >= d && m && m.z <= h) {
        if (
          p !== e.prev &&
          p !== e.next &&
          zd(r.x, r.y, a.x, a.y, o.x, o.y, p.x, p.y) &&
          Od(p.prev, p, p.next) >= 0
        )
          return !1;
        if (
          ((p = p.prevZ),
          m !== e.prev &&
            m !== e.next &&
            zd(r.x, r.y, a.x, a.y, o.x, o.y, m.x, m.y) &&
            Od(m.prev, m, m.next) >= 0)
        )
          return !1;
        m = m.nextZ;
      }
      while (p && p.z >= d) {
        if (
          p !== e.prev &&
          p !== e.next &&
          zd(r.x, r.y, a.x, a.y, o.x, o.y, p.x, p.y) &&
          Od(p.prev, p, p.next) >= 0
        )
          return !1;
        p = p.prevZ;
      }
      while (m && m.z <= h) {
        if (
          m !== e.prev &&
          m !== e.next &&
          zd(r.x, r.y, a.x, a.y, o.x, o.y, m.x, m.y) &&
          Od(m.prev, m, m.next) >= 0
        )
          return !1;
        m = m.nextZ;
      }
      return !0;
    }
    function _d(e, t, n) {
      var i = e;
      do {
        var r = i.prev,
          a = i.next.next;
        !Ed(r, a) &&
          kd(r, i, i.next, a) &&
          Pd(r, a) &&
          Pd(a, r) &&
          (t.push(r.i / n),
          t.push(i.i / n),
          t.push(a.i / n),
          Bd(i),
          Bd(i.next),
          (i = e = a)),
          (i = i.next);
      } while (i !== e);
      return hd(i);
    }
    function Md(e, t, n, i, r, a) {
      var o = e;
      do {
        var s = o.next.next;
        while (s !== o.prev) {
          if (o.i !== s.i && Sd(o, s)) {
            var c = Yd(o, s);
            return (
              (o = hd(o, o.next)),
              (c = hd(c, c.next)),
              pd(o, t, n, i, r, a),
              pd(c, t, n, i, r, a),
              void 0
            );
          }
          s = s.next;
        }
        o = o.next;
      } while (o !== e);
    }
    function vd(e, t, n, i) {
      var r,
        a,
        o,
        s,
        c,
        u = [];
      for (r = 0, a = t.length; r < a; r++)
        (o = t[r] * i),
          (s = r < a - 1 ? t[r + 1] * i : e.length),
          (c = dd(e, o, s, i, !1)),
          c === c.next && (c.steiner = !0),
          u.push(Td(c));
      for (u.sort(gd), r = 0; r < u.length; r++)
        yd(u[r], n), (n = hd(n, n.next));
      return n;
    }
    function gd(e, t) {
      return e.x - t.x;
    }
    function yd(e, t) {
      if (((t = bd(e, t)), t)) {
        var n = Yd(t, e);
        hd(t, t.next), hd(n, n.next);
      }
    }
    function bd(e, t) {
      var n,
        i = t,
        r = e.x,
        a = e.y,
        o = -1 / 0;
      do {
        if (a <= i.y && a >= i.next.y && i.next.y !== i.y) {
          var s = i.x + ((a - i.y) * (i.next.x - i.x)) / (i.next.y - i.y);
          if (s <= r && s > o) {
            if (((o = s), s === r)) {
              if (a === i.y) return i;
              if (a === i.next.y) return i.next;
            }
            n = i.x < i.next.x ? i : i.next;
          }
        }
        i = i.next;
      } while (i !== t);
      if (!n) return null;
      if (r === o) return n;
      var c,
        u = n,
        l = n.x,
        d = n.y,
        h = 1 / 0;
      i = n;
      do {
        r >= i.x &&
          i.x >= l &&
          r !== i.x &&
          zd(a < d ? r : o, a, l, d, a < d ? o : r, a, i.x, i.y) &&
          ((c = Math.abs(a - i.y) / (r - i.x)),
          Pd(i, e) &&
            (c < h || (c === h && (i.x > n.x || (i.x === n.x && wd(n, i))))) &&
            ((n = i), (h = c))),
          (i = i.next);
      } while (i !== u);
      return n;
    }
    function wd(e, t) {
      return Od(e.prev, e, t.prev) < 0 && Od(t.next, e, e.next) < 0;
    }
    function Ad(e, t, n, i) {
      var r = e;
      do {
        null === r.z && (r.z = Ld(r.x, r.y, t, n, i)),
          (r.prevZ = r.prev),
          (r.nextZ = r.next),
          (r = r.next);
      } while (r !== e);
      (r.prevZ.nextZ = null), (r.prevZ = null), xd(r);
    }
    function xd(e) {
      var t,
        n,
        i,
        r,
        a,
        o,
        s,
        c,
        u = 1;
      do {
        (n = e), (e = null), (a = null), (o = 0);
        while (n) {
          for (o++, i = n, s = 0, t = 0; t < u; t++)
            if ((s++, (i = i.nextZ), !i)) break;
          c = u;
          while (s > 0 || (c > 0 && i))
            0 !== s && (0 === c || !i || n.z <= i.z)
              ? ((r = n), (n = n.nextZ), s--)
              : ((r = i), (i = i.nextZ), c--),
              a ? (a.nextZ = r) : (e = r),
              (r.prevZ = a),
              (a = r);
          n = i;
        }
        (a.nextZ = null), (u *= 2);
      } while (o > 1);
      return e;
    }
    function Ld(e, t, n, i, r) {
      return (
        (e = 32767 * (e - n) * r),
        (t = 32767 * (t - i) * r),
        (e = 16711935 & (e | (e << 8))),
        (e = 252645135 & (e | (e << 4))),
        (e = 858993459 & (e | (e << 2))),
        (e = 1431655765 & (e | (e << 1))),
        (t = 16711935 & (t | (t << 8))),
        (t = 252645135 & (t | (t << 4))),
        (t = 858993459 & (t | (t << 2))),
        (t = 1431655765 & (t | (t << 1))),
        e | (t << 1)
      );
    }
    function Td(e) {
      var t = e,
        n = e;
      do {
        (t.x < n.x || (t.x === n.x && t.y < n.y)) && (n = t), (t = t.next);
      } while (t !== e);
      return n;
    }
    function zd(e, t, n, i, r, a, o, s) {
      return (
        (r - o) * (t - s) - (e - o) * (a - s) >= 0 &&
        (e - o) * (i - s) - (n - o) * (t - s) >= 0 &&
        (n - o) * (a - s) - (r - o) * (i - s) >= 0
      );
    }
    function Sd(e, t) {
      return (
        e.next.i !== t.i &&
        e.prev.i !== t.i &&
        !Nd(e, t) &&
        ((Pd(e, t) &&
          Pd(t, e) &&
          jd(e, t) &&
          (Od(e.prev, e, t.prev) || Od(e, t.prev, t))) ||
          (Ed(e, t) && Od(e.prev, e, e.next) > 0 && Od(t.prev, t, t.next) > 0))
      );
    }
    function Od(e, t, n) {
      return (t.y - e.y) * (n.x - t.x) - (t.x - e.x) * (n.y - t.y);
    }
    function Ed(e, t) {
      return e.x === t.x && e.y === t.y;
    }
    function kd(e, t, n, i) {
      var r = Dd(Od(e, t, n)),
        a = Dd(Od(e, t, i)),
        o = Dd(Od(n, i, e)),
        s = Dd(Od(n, i, t));
      return (
        (r !== a && o !== s) ||
        !(0 !== r || !Cd(e, n, t)) ||
        !(0 !== a || !Cd(e, i, t)) ||
        !(0 !== o || !Cd(n, e, i)) ||
        !(0 !== s || !Cd(n, t, i))
      );
    }
    function Cd(e, t, n) {
      return (
        t.x <= Math.max(e.x, n.x) &&
        t.x >= Math.min(e.x, n.x) &&
        t.y <= Math.max(e.y, n.y) &&
        t.y >= Math.min(e.y, n.y)
      );
    }
    function Dd(e) {
      return e > 0 ? 1 : e < 0 ? -1 : 0;
    }
    function Nd(e, t) {
      var n = e;
      do {
        if (
          n.i !== e.i &&
          n.next.i !== e.i &&
          n.i !== t.i &&
          n.next.i !== t.i &&
          kd(n, n.next, e, t)
        )
          return !0;
        n = n.next;
      } while (n !== e);
      return !1;
    }
    function Pd(e, t) {
      return Od(e.prev, e, e.next) < 0
        ? Od(e, t, e.next) >= 0 && Od(e, e.prev, t) >= 0
        : Od(e, t, e.prev) < 0 || Od(e, e.next, t) < 0;
    }
    function jd(e, t) {
      var n = e,
        i = !1,
        r = (e.x + t.x) / 2,
        a = (e.y + t.y) / 2;
      do {
        n.y > a !== n.next.y > a &&
          n.next.y !== n.y &&
          r < ((n.next.x - n.x) * (a - n.y)) / (n.next.y - n.y) + n.x &&
          (i = !i),
          (n = n.next);
      } while (n !== e);
      return i;
    }
    function Yd(e, t) {
      var n = new Wd(e.i, e.x, e.y),
        i = new Wd(t.i, t.x, t.y),
        r = e.next,
        a = t.prev;
      return (
        (e.next = t),
        (t.prev = e),
        (n.next = r),
        (r.prev = n),
        (i.next = n),
        (n.prev = i),
        (a.next = i),
        (i.prev = a),
        i
      );
    }
    function Rd(e, t, n, i) {
      var r = new Wd(e, t, n);
      return (
        i
          ? ((r.next = i.next), (r.prev = i), (i.next.prev = r), (i.next = r))
          : ((r.prev = r), (r.next = r)),
        r
      );
    }
    function Bd(e) {
      (e.next.prev = e.prev),
        (e.prev.next = e.next),
        e.prevZ && (e.prevZ.nextZ = e.nextZ),
        e.nextZ && (e.nextZ.prevZ = e.prevZ);
    }
    function Wd(e, t, n) {
      (this.i = e),
        (this.x = t),
        (this.y = n),
        (this.prev = null),
        (this.next = null),
        (this.z = null),
        (this.prevZ = null),
        (this.nextZ = null),
        (this.steiner = !1);
    }
    function Id(e, t, n, i) {
      for (var r = 0, a = t, o = n - i; a < n; a += i)
        (r += (e[o] - e[a]) * (e[a + 1] + e[o + 1])), (o = a);
      return r;
    }
    var qd = {
      area: function (e) {
        for (var t = e.length, n = 0, i = t - 1, r = 0; r < t; i = r++)
          n += e[i].x * e[r].y - e[r].x * e[i].y;
        return 0.5 * n;
      },
      isClockWise: function (e) {
        return qd.area(e) < 0;
      },
      triangulateShape: function (e, t) {
        var n = [],
          i = [],
          r = [];
        Hd(e), Fd(n, e);
        var a = e.length;
        t.forEach(Hd);
        for (var o = 0; o < t.length; o++)
          i.push(a), (a += t[o].length), Fd(n, t[o]);
        var s = ld.triangulate(n, i);
        for (o = 0; o < s.length; o += 3) r.push(s.slice(o, o + 3));
        return r;
      },
    };
    function Hd(e) {
      var t = e.length;
      t > 2 && e[t - 1].equals(e[0]) && e.pop();
    }
    function Fd(e, t) {
      for (var n = 0; n < t.length; n++) e.push(t[n].x), e.push(t[n].y);
    }
    function Ud(e, t) {
      Wr.call(this),
        (this.type = 'ExtrudeGeometry'),
        (this.parameters = { shapes: e, options: t }),
        this.fromBufferGeometry(new Xd(e, t)),
        this.mergeVertices();
    }
    function Xd(e, t) {
      fr.call(this),
        (this.type = 'ExtrudeBufferGeometry'),
        (this.parameters = { shapes: e, options: t }),
        (e = Array.isArray(e) ? e : [e]);
      for (var n = this, i = [], r = [], a = 0, o = e.length; a < o; a++) {
        var s = e[a];
        c(s);
      }
      function c(e) {
        var a = [],
          o = void 0 !== t.curveSegments ? t.curveSegments : 12,
          s = void 0 !== t.steps ? t.steps : 1,
          c = void 0 !== t.depth ? t.depth : 100,
          u = void 0 === t.bevelEnabled || t.bevelEnabled,
          l = void 0 !== t.bevelThickness ? t.bevelThickness : 6,
          d = void 0 !== t.bevelSize ? t.bevelSize : l - 2,
          h = void 0 !== t.bevelOffset ? t.bevelOffset : 0,
          p = void 0 !== t.bevelSegments ? t.bevelSegments : 3,
          m = t.extrudePath,
          f = void 0 !== t.UVGenerator ? t.UVGenerator : Vd;
        void 0 !== t.amount && (void 0, (c = t.amount));
        var _,
          M,
          v,
          g,
          y,
          b,
          w,
          A,
          x = !1;
        m &&
          ((_ = m.getSpacedPoints(s)),
          (x = !0),
          (u = !1),
          (M = m.computeFrenetFrames(s, !1)),
          (v = new xn()),
          (g = new xn()),
          (y = new xn())),
          u || ((p = 0), (l = 0), (d = 0), (h = 0));
        var L = e.extractPoints(o),
          T = L.shape,
          z = L.holes,
          S = !qd.isClockWise(T);
        if (S)
          for (T = T.reverse(), w = 0, A = z.length; w < A; w++)
            (b = z[w]), qd.isClockWise(b) && (z[w] = b.reverse());
        var O = qd.triangulateShape(T, z),
          E = T;
        for (w = 0, A = z.length; w < A; w++) (b = z[w]), (T = T.concat(b));
        function k(e, t, n) {
          return t || void 0, t.clone().multiplyScalar(n).add(e);
        }
        var C,
          D,
          N,
          P,
          j,
          Y,
          R = T.length,
          B = O.length;
        function W(e, t, n) {
          var i,
            r,
            a,
            o = e.x - t.x,
            s = e.y - t.y,
            c = n.x - e.x,
            u = n.y - e.y,
            l = o * o + s * s,
            d = o * u - s * c;
          if (Math.abs(d) > Number.EPSILON) {
            var h = Math.sqrt(l),
              p = Math.sqrt(c * c + u * u),
              m = t.x - s / h,
              f = t.y + o / h,
              _ = n.x - u / p,
              M = n.y + c / p,
              v = ((_ - m) * u - (M - f) * c) / (o * u - s * c);
            (i = m + o * v - e.x), (r = f + s * v - e.y);
            var g = i * i + r * r;
            if (g <= 2) return new pn(i, r);
            a = Math.sqrt(g / 2);
          } else {
            var y = !1;
            o > Number.EPSILON
              ? c > Number.EPSILON && (y = !0)
              : o < -Number.EPSILON
              ? c < -Number.EPSILON && (y = !0)
              : Math.sign(s) === Math.sign(u) && (y = !0),
              y
                ? ((i = -s), (r = o), (a = Math.sqrt(l)))
                : ((i = o), (r = s), (a = Math.sqrt(l / 2)));
          }
          return new pn(i / a, r / a);
        }
        for (
          var I = [], q = 0, H = E.length, F = H - 1, U = q + 1;
          q < H;
          q++, F++, U++
        )
          F === H && (F = 0), U === H && (U = 0), (I[q] = W(E[q], E[F], E[U]));
        var X,
          V,
          G = [],
          J = I.concat();
        for (w = 0, A = z.length; w < A; w++) {
          for (
            b = z[w], X = [], q = 0, H = b.length, F = H - 1, U = q + 1;
            q < H;
            q++, F++, U++
          )
            F === H && (F = 0),
              U === H && (U = 0),
              (X[q] = W(b[q], b[F], b[U]));
          G.push(X), (J = J.concat(X));
        }
        for (C = 0; C < p; C++) {
          for (
            N = C / p,
              P = l * Math.cos((N * Math.PI) / 2),
              D = d * Math.sin((N * Math.PI) / 2) + h,
              q = 0,
              H = E.length;
            q < H;
            q++
          )
            (j = k(E[q], I[q], D)), $(j.x, j.y, -P);
          for (w = 0, A = z.length; w < A; w++)
            for (b = z[w], X = G[w], q = 0, H = b.length; q < H; q++)
              (j = k(b[q], X[q], D)), $(j.x, j.y, -P);
        }
        for (D = d + h, q = 0; q < R; q++)
          (j = u ? k(T[q], J[q], D) : T[q]),
            x
              ? (g.copy(M.normals[0]).multiplyScalar(j.x),
                v.copy(M.binormals[0]).multiplyScalar(j.y),
                y.copy(_[0]).add(g).add(v),
                $(y.x, y.y, y.z))
              : $(j.x, j.y, 0);
        for (V = 1; V <= s; V++)
          for (q = 0; q < R; q++)
            (j = u ? k(T[q], J[q], D) : T[q]),
              x
                ? (g.copy(M.normals[V]).multiplyScalar(j.x),
                  v.copy(M.binormals[V]).multiplyScalar(j.y),
                  y.copy(_[V]).add(g).add(v),
                  $(y.x, y.y, y.z))
                : $(j.x, j.y, (c / s) * V);
        for (C = p - 1; C >= 0; C--) {
          for (
            N = C / p,
              P = l * Math.cos((N * Math.PI) / 2),
              D = d * Math.sin((N * Math.PI) / 2) + h,
              q = 0,
              H = E.length;
            q < H;
            q++
          )
            (j = k(E[q], I[q], D)), $(j.x, j.y, c + P);
          for (w = 0, A = z.length; w < A; w++)
            for (b = z[w], X = G[w], q = 0, H = b.length; q < H; q++)
              (j = k(b[q], X[q], D)),
                x
                  ? $(j.x, j.y + _[s - 1].y, _[s - 1].x + P)
                  : $(j.x, j.y, c + P);
        }
        function Z() {
          var e = i.length / 3;
          if (u) {
            var t = 0,
              r = R * t;
            for (q = 0; q < B; q++)
              (Y = O[q]), ee(Y[2] + r, Y[1] + r, Y[0] + r);
            for (t = s + 2 * p, r = R * t, q = 0; q < B; q++)
              (Y = O[q]), ee(Y[0] + r, Y[1] + r, Y[2] + r);
          } else {
            for (q = 0; q < B; q++) (Y = O[q]), ee(Y[2], Y[1], Y[0]);
            for (q = 0; q < B; q++)
              (Y = O[q]), ee(Y[0] + R * s, Y[1] + R * s, Y[2] + R * s);
          }
          n.addGroup(e, i.length / 3 - e, 0);
        }
        function K() {
          var e = i.length / 3,
            t = 0;
          for (Q(E, t), t += E.length, w = 0, A = z.length; w < A; w++)
            (b = z[w]), Q(b, t), (t += b.length);
          n.addGroup(e, i.length / 3 - e, 1);
        }
        function Q(e, t) {
          var n, i;
          q = e.length;
          while (--q >= 0) {
            (n = q), (i = q - 1), i < 0 && (i = e.length - 1);
            var r = 0,
              a = s + 2 * p;
            for (r = 0; r < a; r++) {
              var o = R * r,
                c = R * (r + 1),
                u = t + n + o,
                l = t + i + o,
                d = t + i + c,
                h = t + n + c;
              te(u, l, d, h);
            }
          }
        }
        function $(e, t, n) {
          a.push(e), a.push(t), a.push(n);
        }
        function ee(e, t, r) {
          ne(e), ne(t), ne(r);
          var a = i.length / 3,
            o = f.generateTopUV(n, i, a - 3, a - 2, a - 1);
          ie(o[0]), ie(o[1]), ie(o[2]);
        }
        function te(e, t, r, a) {
          ne(e), ne(t), ne(a), ne(t), ne(r), ne(a);
          var o = i.length / 3,
            s = f.generateSideWallUV(n, i, o - 6, o - 3, o - 2, o - 1);
          ie(s[0]), ie(s[1]), ie(s[3]), ie(s[1]), ie(s[2]), ie(s[3]);
        }
        function ne(e) {
          i.push(a[3 * e + 0]), i.push(a[3 * e + 1]), i.push(a[3 * e + 2]);
        }
        function ie(e) {
          r.push(e.x), r.push(e.y);
        }
        Z(), K();
      }
      this.setAttribute('position', new rr(i, 3)),
        this.setAttribute('uv', new rr(r, 2)),
        this.computeVertexNormals();
    }
    (Ud.prototype = Object.create(Wr.prototype)),
      (Ud.prototype.constructor = Ud),
      (Ud.prototype.toJSON = function () {
        var e = Wr.prototype.toJSON.call(this),
          t = this.parameters.shapes,
          n = this.parameters.options;
        return Gd(t, n, e);
      }),
      (Xd.prototype = Object.create(fr.prototype)),
      (Xd.prototype.constructor = Xd),
      (Xd.prototype.toJSON = function () {
        var e = fr.prototype.toJSON.call(this),
          t = this.parameters.shapes,
          n = this.parameters.options;
        return Gd(t, n, e);
      });
    var Vd = {
      generateTopUV: function (e, t, n, i, r) {
        var a = t[3 * n],
          o = t[3 * n + 1],
          s = t[3 * i],
          c = t[3 * i + 1],
          u = t[3 * r],
          l = t[3 * r + 1];
        return [new pn(a, o), new pn(s, c), new pn(u, l)];
      },
      generateSideWallUV: function (e, t, n, i, r, a) {
        var o = t[3 * n],
          s = t[3 * n + 1],
          c = t[3 * n + 2],
          u = t[3 * i],
          l = t[3 * i + 1],
          d = t[3 * i + 2],
          h = t[3 * r],
          p = t[3 * r + 1],
          m = t[3 * r + 2],
          f = t[3 * a],
          _ = t[3 * a + 1],
          M = t[3 * a + 2];
        return Math.abs(s - l) < 0.01
          ? [
              new pn(o, 1 - c),
              new pn(u, 1 - d),
              new pn(h, 1 - m),
              new pn(f, 1 - M),
            ]
          : [
              new pn(s, 1 - c),
              new pn(l, 1 - d),
              new pn(p, 1 - m),
              new pn(_, 1 - M),
            ];
      },
    };
    function Gd(e, t, n) {
      if (((n.shapes = []), Array.isArray(e)))
        for (var i = 0, r = e.length; i < r; i++) {
          var a = e[i];
          n.shapes.push(a.uuid);
        }
      else n.shapes.push(e.uuid);
      return (
        void 0 !== t.extrudePath &&
          (n.options.extrudePath = t.extrudePath.toJSON()),
        n
      );
    }
    function Jd(e, t) {
      Wr.call(this),
        (this.type = 'TextGeometry'),
        (this.parameters = { text: e, parameters: t }),
        this.fromBufferGeometry(new Zd(e, t)),
        this.mergeVertices();
    }
    function Zd(e, t) {
      t = t || {};
      var n = t.font;
      if (!n || !n.isFont) return void 0, new Wr();
      var i = n.generateShapes(e, t.size);
      (t.depth = void 0 !== t.height ? t.height : 50),
        void 0 === t.bevelThickness && (t.bevelThickness = 10),
        void 0 === t.bevelSize && (t.bevelSize = 8),
        void 0 === t.bevelEnabled && (t.bevelEnabled = !1),
        Xd.call(this, i, t),
        (this.type = 'TextBufferGeometry');
    }
    function Kd(e, t, n, i, r, a, o) {
      Wr.call(this),
        (this.type = 'SphereGeometry'),
        (this.parameters = {
          radius: e,
          widthSegments: t,
          heightSegments: n,
          phiStart: i,
          phiLength: r,
          thetaStart: a,
          thetaLength: o,
        }),
        this.fromBufferGeometry(new Qd(e, t, n, i, r, a, o)),
        this.mergeVertices();
    }
    function Qd(e, t, n, i, r, a, o) {
      fr.call(this),
        (this.type = 'SphereBufferGeometry'),
        (this.parameters = {
          radius: e,
          widthSegments: t,
          heightSegments: n,
          phiStart: i,
          phiLength: r,
          thetaStart: a,
          thetaLength: o,
        }),
        (e = e || 1),
        (t = Math.max(3, Math.floor(t) || 8)),
        (n = Math.max(2, Math.floor(n) || 6)),
        (i = void 0 !== i ? i : 0),
        (r = void 0 !== r ? r : 2 * Math.PI),
        (a = void 0 !== a ? a : 0),
        (o = void 0 !== o ? o : Math.PI);
      var s,
        c,
        u = Math.min(a + o, Math.PI),
        l = 0,
        d = [],
        h = new xn(),
        p = new xn(),
        m = [],
        f = [],
        _ = [],
        M = [];
      for (c = 0; c <= n; c++) {
        var v = [],
          g = c / n,
          y = 0;
        for (
          0 == c && 0 == a
            ? (y = 0.5 / t)
            : c == n && u == Math.PI && (y = -0.5 / t),
            s = 0;
          s <= t;
          s++
        ) {
          var b = s / t;
          (h.x = -e * Math.cos(i + b * r) * Math.sin(a + g * o)),
            (h.y = e * Math.cos(a + g * o)),
            (h.z = e * Math.sin(i + b * r) * Math.sin(a + g * o)),
            f.push(h.x, h.y, h.z),
            p.copy(h).normalize(),
            _.push(p.x, p.y, p.z),
            M.push(b + y, 1 - g),
            v.push(l++);
        }
        d.push(v);
      }
      for (c = 0; c < n; c++)
        for (s = 0; s < t; s++) {
          var w = d[c][s + 1],
            A = d[c][s],
            x = d[c + 1][s],
            L = d[c + 1][s + 1];
          (0 !== c || a > 0) && m.push(w, A, L),
            (c !== n - 1 || u < Math.PI) && m.push(A, x, L);
        }
      this.setIndex(m),
        this.setAttribute('position', new rr(f, 3)),
        this.setAttribute('normal', new rr(_, 3)),
        this.setAttribute('uv', new rr(M, 2));
    }
    function $d(e, t, n, i, r, a) {
      Wr.call(this),
        (this.type = 'RingGeometry'),
        (this.parameters = {
          innerRadius: e,
          outerRadius: t,
          thetaSegments: n,
          phiSegments: i,
          thetaStart: r,
          thetaLength: a,
        }),
        this.fromBufferGeometry(new eh(e, t, n, i, r, a)),
        this.mergeVertices();
    }
    function eh(e, t, n, i, r, a) {
      fr.call(this),
        (this.type = 'RingBufferGeometry'),
        (this.parameters = {
          innerRadius: e,
          outerRadius: t,
          thetaSegments: n,
          phiSegments: i,
          thetaStart: r,
          thetaLength: a,
        }),
        (e = e || 0.5),
        (t = t || 1),
        (r = void 0 !== r ? r : 0),
        (a = void 0 !== a ? a : 2 * Math.PI),
        (n = void 0 !== n ? Math.max(3, n) : 8),
        (i = void 0 !== i ? Math.max(1, i) : 1);
      var o,
        s,
        c,
        u = [],
        l = [],
        d = [],
        h = [],
        p = e,
        m = (t - e) / i,
        f = new xn(),
        _ = new pn();
      for (s = 0; s <= i; s++) {
        for (c = 0; c <= n; c++)
          (o = r + (c / n) * a),
            (f.x = p * Math.cos(o)),
            (f.y = p * Math.sin(o)),
            l.push(f.x, f.y, f.z),
            d.push(0, 0, 1),
            (_.x = (f.x / t + 1) / 2),
            (_.y = (f.y / t + 1) / 2),
            h.push(_.x, _.y);
        p += m;
      }
      for (s = 0; s < i; s++) {
        var M = s * (n + 1);
        for (c = 0; c < n; c++) {
          o = c + M;
          var v = o,
            g = o + n + 1,
            y = o + n + 2,
            b = o + 1;
          u.push(v, g, b), u.push(g, y, b);
        }
      }
      this.setIndex(u),
        this.setAttribute('position', new rr(l, 3)),
        this.setAttribute('normal', new rr(d, 3)),
        this.setAttribute('uv', new rr(h, 2));
    }
    function th(e, t, n, i) {
      Wr.call(this),
        (this.type = 'LatheGeometry'),
        (this.parameters = {
          points: e,
          segments: t,
          phiStart: n,
          phiLength: i,
        }),
        this.fromBufferGeometry(new nh(e, t, n, i)),
        this.mergeVertices();
    }
    function nh(e, t, n, i) {
      fr.call(this),
        (this.type = 'LatheBufferGeometry'),
        (this.parameters = {
          points: e,
          segments: t,
          phiStart: n,
          phiLength: i,
        }),
        (t = Math.floor(t) || 12),
        (n = n || 0),
        (i = i || 2 * Math.PI),
        (i = hn.clamp(i, 0, 2 * Math.PI));
      var r,
        a,
        o,
        s = [],
        c = [],
        u = [],
        l = 1 / t,
        d = new xn(),
        h = new pn();
      for (a = 0; a <= t; a++) {
        var p = n + a * l * i,
          m = Math.sin(p),
          f = Math.cos(p);
        for (o = 0; o <= e.length - 1; o++)
          (d.x = e[o].x * m),
            (d.y = e[o].y),
            (d.z = e[o].x * f),
            c.push(d.x, d.y, d.z),
            (h.x = a / t),
            (h.y = o / (e.length - 1)),
            u.push(h.x, h.y);
      }
      for (a = 0; a < t; a++)
        for (o = 0; o < e.length - 1; o++) {
          r = o + a * e.length;
          var _ = r,
            M = r + e.length,
            v = r + e.length + 1,
            g = r + 1;
          s.push(_, M, g), s.push(M, v, g);
        }
      if (
        (this.setIndex(s),
        this.setAttribute('position', new rr(c, 3)),
        this.setAttribute('uv', new rr(u, 2)),
        this.computeVertexNormals(),
        i === 2 * Math.PI)
      ) {
        var y = this.attributes.normal.array,
          b = new xn(),
          w = new xn(),
          A = new xn();
        for (r = t * e.length * 3, a = 0, o = 0; a < e.length; a++, o += 3)
          (b.x = y[o + 0]),
            (b.y = y[o + 1]),
            (b.z = y[o + 2]),
            (w.x = y[r + o + 0]),
            (w.y = y[r + o + 1]),
            (w.z = y[r + o + 2]),
            A.addVectors(b, w).normalize(),
            (y[o + 0] = y[r + o + 0] = A.x),
            (y[o + 1] = y[r + o + 1] = A.y),
            (y[o + 2] = y[r + o + 2] = A.z);
      }
    }
    function ih(e, t) {
      Wr.call(this),
        (this.type = 'ShapeGeometry'),
        void 0,
        'object' === typeof t && (t = t.curveSegments),
        (this.parameters = { shapes: e, curveSegments: t }),
        this.fromBufferGeometry(new rh(e, t)),
        this.mergeVertices();
    }
    function rh(e, t) {
      fr.call(this),
        (this.type = 'ShapeBufferGeometry'),
        (this.parameters = { shapes: e, curveSegments: t }),
        (t = t || 12);
      var n = [],
        i = [],
        r = [],
        a = [],
        o = 0,
        s = 0;
      if (!1 === Array.isArray(e)) u(e);
      else
        for (var c = 0; c < e.length; c++)
          u(e[c]), this.addGroup(o, s, c), (o += s), (s = 0);
      function u(e) {
        var o,
          c,
          u,
          l = i.length / 3,
          d = e.extractPoints(t),
          h = d.shape,
          p = d.holes;
        for (
          !1 === qd.isClockWise(h) && (h = h.reverse()), o = 0, c = p.length;
          o < c;
          o++
        )
          (u = p[o]), !0 === qd.isClockWise(u) && (p[o] = u.reverse());
        var m = qd.triangulateShape(h, p);
        for (o = 0, c = p.length; o < c; o++) (u = p[o]), (h = h.concat(u));
        for (o = 0, c = h.length; o < c; o++) {
          var f = h[o];
          i.push(f.x, f.y, 0), r.push(0, 0, 1), a.push(f.x, f.y);
        }
        for (o = 0, c = m.length; o < c; o++) {
          var _ = m[o],
            M = _[0] + l,
            v = _[1] + l,
            g = _[2] + l;
          n.push(M, v, g), (s += 3);
        }
      }
      this.setIndex(n),
        this.setAttribute('position', new rr(i, 3)),
        this.setAttribute('normal', new rr(r, 3)),
        this.setAttribute('uv', new rr(a, 2));
    }
    function ah(e, t) {
      if (((t.shapes = []), Array.isArray(e)))
        for (var n = 0, i = e.length; n < i; n++) {
          var r = e[n];
          t.shapes.push(r.uuid);
        }
      else t.shapes.push(e.uuid);
      return t;
    }
    function oh(e, t) {
      fr.call(this),
        (this.type = 'EdgesGeometry'),
        (this.parameters = { thresholdAngle: t }),
        (t = void 0 !== t ? t : 1);
      var n,
        i,
        r,
        a,
        o = [],
        s = Math.cos(hn.DEG2RAD * t),
        c = [0, 0],
        u = {},
        l = ['a', 'b', 'c'];
      e.isBufferGeometry
        ? ((a = new Wr()), a.fromBufferGeometry(e))
        : (a = e.clone()),
        a.mergeVertices(),
        a.computeFaceNormals();
      for (var d = a.vertices, h = a.faces, p = 0, m = h.length; p < m; p++)
        for (var f = h[p], _ = 0; _ < 3; _++)
          (n = f[l[_]]),
            (i = f[l[(_ + 1) % 3]]),
            (c[0] = Math.min(n, i)),
            (c[1] = Math.max(n, i)),
            (r = c[0] + ',' + c[1]),
            void 0 === u[r]
              ? (u[r] = { index1: c[0], index2: c[1], face1: p, face2: void 0 })
              : (u[r].face2 = p);
      for (r in u) {
        var M = u[r];
        if (
          void 0 === M.face2 ||
          h[M.face1].normal.dot(h[M.face2].normal) <= s
        ) {
          var v = d[M.index1];
          o.push(v.x, v.y, v.z), (v = d[M.index2]), o.push(v.x, v.y, v.z);
        }
      }
      this.setAttribute('position', new rr(o, 3));
    }
    function sh(e, t, n, i, r, a, o, s) {
      Wr.call(this),
        (this.type = 'CylinderGeometry'),
        (this.parameters = {
          radiusTop: e,
          radiusBottom: t,
          height: n,
          radialSegments: i,
          heightSegments: r,
          openEnded: a,
          thetaStart: o,
          thetaLength: s,
        }),
        this.fromBufferGeometry(new ch(e, t, n, i, r, a, o, s)),
        this.mergeVertices();
    }
    function ch(e, t, n, i, r, a, o, s) {
      fr.call(this),
        (this.type = 'CylinderBufferGeometry'),
        (this.parameters = {
          radiusTop: e,
          radiusBottom: t,
          height: n,
          radialSegments: i,
          heightSegments: r,
          openEnded: a,
          thetaStart: o,
          thetaLength: s,
        });
      var c = this;
      (e = void 0 !== e ? e : 1),
        (t = void 0 !== t ? t : 1),
        (n = n || 1),
        (i = Math.floor(i) || 8),
        (r = Math.floor(r) || 1),
        (a = void 0 !== a && a),
        (o = void 0 !== o ? o : 0),
        (s = void 0 !== s ? s : 2 * Math.PI);
      var u = [],
        l = [],
        d = [],
        h = [],
        p = 0,
        m = [],
        f = n / 2,
        _ = 0;
      function M() {
        var a,
          M,
          v = new xn(),
          g = new xn(),
          y = 0,
          b = (t - e) / n;
        for (M = 0; M <= r; M++) {
          var w = [],
            A = M / r,
            x = A * (t - e) + e;
          for (a = 0; a <= i; a++) {
            var L = a / i,
              T = L * s + o,
              z = Math.sin(T),
              S = Math.cos(T);
            (g.x = x * z),
              (g.y = -A * n + f),
              (g.z = x * S),
              l.push(g.x, g.y, g.z),
              v.set(z, b, S).normalize(),
              d.push(v.x, v.y, v.z),
              h.push(L, 1 - A),
              w.push(p++);
          }
          m.push(w);
        }
        for (a = 0; a < i; a++)
          for (M = 0; M < r; M++) {
            var O = m[M][a],
              E = m[M + 1][a],
              k = m[M + 1][a + 1],
              C = m[M][a + 1];
            u.push(O, E, C), u.push(E, k, C), (y += 6);
          }
        c.addGroup(_, y, 0), (_ += y);
      }
      function v(n) {
        var r,
          a,
          m,
          M = new pn(),
          v = new xn(),
          g = 0,
          y = !0 === n ? e : t,
          b = !0 === n ? 1 : -1;
        for (a = p, r = 1; r <= i; r++)
          l.push(0, f * b, 0), d.push(0, b, 0), h.push(0.5, 0.5), p++;
        for (m = p, r = 0; r <= i; r++) {
          var w = r / i,
            A = w * s + o,
            x = Math.cos(A),
            L = Math.sin(A);
          (v.x = y * L),
            (v.y = f * b),
            (v.z = y * x),
            l.push(v.x, v.y, v.z),
            d.push(0, b, 0),
            (M.x = 0.5 * x + 0.5),
            (M.y = 0.5 * L * b + 0.5),
            h.push(M.x, M.y),
            p++;
        }
        for (r = 0; r < i; r++) {
          var T = a + r,
            z = m + r;
          !0 === n ? u.push(z, z + 1, T) : u.push(z + 1, z, T), (g += 3);
        }
        c.addGroup(_, g, !0 === n ? 1 : 2), (_ += g);
      }
      M(),
        !1 === a && (e > 0 && v(!0), t > 0 && v(!1)),
        this.setIndex(u),
        this.setAttribute('position', new rr(l, 3)),
        this.setAttribute('normal', new rr(d, 3)),
        this.setAttribute('uv', new rr(h, 2));
    }
    function uh(e, t, n, i, r, a, o) {
      sh.call(this, 0, e, t, n, i, r, a, o),
        (this.type = 'ConeGeometry'),
        (this.parameters = {
          radius: e,
          height: t,
          radialSegments: n,
          heightSegments: i,
          openEnded: r,
          thetaStart: a,
          thetaLength: o,
        });
    }
    function lh(e, t, n, i, r, a, o) {
      ch.call(this, 0, e, t, n, i, r, a, o),
        (this.type = 'ConeBufferGeometry'),
        (this.parameters = {
          radius: e,
          height: t,
          radialSegments: n,
          heightSegments: i,
          openEnded: r,
          thetaStart: a,
          thetaLength: o,
        });
    }
    function dh(e, t, n, i) {
      Wr.call(this),
        (this.type = 'CircleGeometry'),
        (this.parameters = {
          radius: e,
          segments: t,
          thetaStart: n,
          thetaLength: i,
        }),
        this.fromBufferGeometry(new hh(e, t, n, i)),
        this.mergeVertices();
    }
    function hh(e, t, n, i) {
      fr.call(this),
        (this.type = 'CircleBufferGeometry'),
        (this.parameters = {
          radius: e,
          segments: t,
          thetaStart: n,
          thetaLength: i,
        }),
        (e = e || 1),
        (t = void 0 !== t ? Math.max(3, t) : 8),
        (n = void 0 !== n ? n : 0),
        (i = void 0 !== i ? i : 2 * Math.PI);
      var r,
        a,
        o = [],
        s = [],
        c = [],
        u = [],
        l = new xn(),
        d = new pn();
      for (
        s.push(0, 0, 0), c.push(0, 0, 1), u.push(0.5, 0.5), a = 0, r = 3;
        a <= t;
        a++, r += 3
      ) {
        var h = n + (a / t) * i;
        (l.x = e * Math.cos(h)),
          (l.y = e * Math.sin(h)),
          s.push(l.x, l.y, l.z),
          c.push(0, 0, 1),
          (d.x = (s[r] / e + 1) / 2),
          (d.y = (s[r + 1] / e + 1) / 2),
          u.push(d.x, d.y);
      }
      for (r = 1; r <= t; r++) o.push(r, r + 1, 0);
      this.setIndex(o),
        this.setAttribute('position', new rr(s, 3)),
        this.setAttribute('normal', new rr(c, 3)),
        this.setAttribute('uv', new rr(u, 2));
    }
    (Jd.prototype = Object.create(Wr.prototype)),
      (Jd.prototype.constructor = Jd),
      (Zd.prototype = Object.create(Xd.prototype)),
      (Zd.prototype.constructor = Zd),
      (Kd.prototype = Object.create(Wr.prototype)),
      (Kd.prototype.constructor = Kd),
      (Qd.prototype = Object.create(fr.prototype)),
      (Qd.prototype.constructor = Qd),
      ($d.prototype = Object.create(Wr.prototype)),
      ($d.prototype.constructor = $d),
      (eh.prototype = Object.create(fr.prototype)),
      (eh.prototype.constructor = eh),
      (th.prototype = Object.create(Wr.prototype)),
      (th.prototype.constructor = th),
      (nh.prototype = Object.create(fr.prototype)),
      (nh.prototype.constructor = nh),
      (ih.prototype = Object.create(Wr.prototype)),
      (ih.prototype.constructor = ih),
      (ih.prototype.toJSON = function () {
        var e = Wr.prototype.toJSON.call(this),
          t = this.parameters.shapes;
        return ah(t, e);
      }),
      (rh.prototype = Object.create(fr.prototype)),
      (rh.prototype.constructor = rh),
      (rh.prototype.toJSON = function () {
        var e = fr.prototype.toJSON.call(this),
          t = this.parameters.shapes;
        return ah(t, e);
      }),
      (oh.prototype = Object.create(fr.prototype)),
      (oh.prototype.constructor = oh),
      (sh.prototype = Object.create(Wr.prototype)),
      (sh.prototype.constructor = sh),
      (ch.prototype = Object.create(fr.prototype)),
      (ch.prototype.constructor = ch),
      (uh.prototype = Object.create(sh.prototype)),
      (uh.prototype.constructor = uh),
      (lh.prototype = Object.create(ch.prototype)),
      (lh.prototype.constructor = lh),
      (dh.prototype = Object.create(Wr.prototype)),
      (dh.prototype.constructor = dh),
      (hh.prototype = Object.create(fr.prototype)),
      (hh.prototype.constructor = hh);
    var ph = Object.freeze({
      __proto__: null,
      WireframeGeometry: Ul,
      ParametricGeometry: Xl,
      ParametricBufferGeometry: Vl,
      TetrahedronGeometry: Zl,
      TetrahedronBufferGeometry: Kl,
      OctahedronGeometry: Ql,
      OctahedronBufferGeometry: $l,
      IcosahedronGeometry: ed,
      IcosahedronBufferGeometry: td,
      DodecahedronGeometry: nd,
      DodecahedronBufferGeometry: id,
      PolyhedronGeometry: Gl,
      PolyhedronBufferGeometry: Jl,
      TubeGeometry: rd,
      TubeBufferGeometry: ad,
      TorusKnotGeometry: od,
      TorusKnotBufferGeometry: sd,
      TorusGeometry: cd,
      TorusBufferGeometry: ud,
      TextGeometry: Jd,
      TextBufferGeometry: Zd,
      SphereGeometry: Kd,
      SphereBufferGeometry: Qd,
      RingGeometry: $d,
      RingBufferGeometry: eh,
      PlaneGeometry: ca,
      PlaneBufferGeometry: ua,
      LatheGeometry: th,
      LatheBufferGeometry: nh,
      ShapeGeometry: ih,
      ShapeBufferGeometry: rh,
      ExtrudeGeometry: Ud,
      ExtrudeBufferGeometry: Xd,
      EdgesGeometry: oh,
      ConeGeometry: uh,
      ConeBufferGeometry: lh,
      CylinderGeometry: sh,
      CylinderBufferGeometry: ch,
      CircleGeometry: dh,
      CircleBufferGeometry: hh,
      BoxGeometry: Ir,
      BoxBufferGeometry: qr,
    });
    function mh(e) {
      Vi.call(this),
        (this.type = 'ShadowMaterial'),
        (this.color = new Ii(0)),
        (this.transparent = !0),
        this.setValues(e);
    }
    function fh(e) {
      Gr.call(this, e), (this.type = 'RawShaderMaterial');
    }
    function _h(e) {
      Vi.call(this),
        (this.defines = { STANDARD: '' }),
        (this.type = 'MeshStandardMaterial'),
        (this.color = new Ii(16777215)),
        (this.roughness = 1),
        (this.metalness = 0),
        (this.map = null),
        (this.lightMap = null),
        (this.lightMapIntensity = 1),
        (this.aoMap = null),
        (this.aoMapIntensity = 1),
        (this.emissive = new Ii(0)),
        (this.emissiveIntensity = 1),
        (this.emissiveMap = null),
        (this.bumpMap = null),
        (this.bumpScale = 1),
        (this.normalMap = null),
        (this.normalMapType = tn),
        (this.normalScale = new pn(1, 1)),
        (this.displacementMap = null),
        (this.displacementScale = 1),
        (this.displacementBias = 0),
        (this.roughnessMap = null),
        (this.metalnessMap = null),
        (this.alphaMap = null),
        (this.envMap = null),
        (this.envMapIntensity = 1),
        (this.refractionRatio = 0.98),
        (this.wireframe = !1),
        (this.wireframeLinewidth = 1),
        (this.wireframeLinecap = 'round'),
        (this.wireframeLinejoin = 'round'),
        (this.skinning = !1),
        (this.morphTargets = !1),
        (this.morphNormals = !1),
        (this.vertexTangents = !1),
        this.setValues(e);
    }
    function Mh(e) {
      _h.call(this),
        (this.defines = { STANDARD: '', PHYSICAL: '' }),
        (this.type = 'MeshPhysicalMaterial'),
        (this.clearcoat = 0),
        (this.clearcoatMap = null),
        (this.clearcoatRoughness = 0),
        (this.clearcoatRoughnessMap = null),
        (this.clearcoatNormalScale = new pn(1, 1)),
        (this.clearcoatNormalMap = null),
        (this.reflectivity = 0.5),
        (this.sheen = null),
        (this.transparency = 0),
        this.setValues(e);
    }
    function vh(e) {
      Vi.call(this),
        (this.type = 'MeshPhongMaterial'),
        (this.color = new Ii(16777215)),
        (this.specular = new Ii(1118481)),
        (this.shininess = 30),
        (this.map = null),
        (this.lightMap = null),
        (this.lightMapIntensity = 1),
        (this.aoMap = null),
        (this.aoMapIntensity = 1),
        (this.emissive = new Ii(0)),
        (this.emissiveIntensity = 1),
        (this.emissiveMap = null),
        (this.bumpMap = null),
        (this.bumpScale = 1),
        (this.normalMap = null),
        (this.normalMapType = tn),
        (this.normalScale = new pn(1, 1)),
        (this.displacementMap = null),
        (this.displacementScale = 1),
        (this.displacementBias = 0),
        (this.specularMap = null),
        (this.alphaMap = null),
        (this.envMap = null),
        (this.combine = X),
        (this.reflectivity = 1),
        (this.refractionRatio = 0.98),
        (this.wireframe = !1),
        (this.wireframeLinewidth = 1),
        (this.wireframeLinecap = 'round'),
        (this.wireframeLinejoin = 'round'),
        (this.skinning = !1),
        (this.morphTargets = !1),
        (this.morphNormals = !1),
        this.setValues(e);
    }
    function gh(e) {
      Vi.call(this),
        (this.defines = { TOON: '' }),
        (this.type = 'MeshToonMaterial'),
        (this.color = new Ii(16777215)),
        (this.specular = new Ii(1118481)),
        (this.shininess = 30),
        (this.map = null),
        (this.gradientMap = null),
        (this.lightMap = null),
        (this.lightMapIntensity = 1),
        (this.aoMap = null),
        (this.aoMapIntensity = 1),
        (this.emissive = new Ii(0)),
        (this.emissiveIntensity = 1),
        (this.emissiveMap = null),
        (this.bumpMap = null),
        (this.bumpScale = 1),
        (this.normalMap = null),
        (this.normalMapType = tn),
        (this.normalScale = new pn(1, 1)),
        (this.displacementMap = null),
        (this.displacementScale = 1),
        (this.displacementBias = 0),
        (this.specularMap = null),
        (this.alphaMap = null),
        (this.wireframe = !1),
        (this.wireframeLinewidth = 1),
        (this.wireframeLinecap = 'round'),
        (this.wireframeLinejoin = 'round'),
        (this.skinning = !1),
        (this.morphTargets = !1),
        (this.morphNormals = !1),
        this.setValues(e);
    }
    function yh(e) {
      Vi.call(this),
        (this.type = 'MeshNormalMaterial'),
        (this.bumpMap = null),
        (this.bumpScale = 1),
        (this.normalMap = null),
        (this.normalMapType = tn),
        (this.normalScale = new pn(1, 1)),
        (this.displacementMap = null),
        (this.displacementScale = 1),
        (this.displacementBias = 0),
        (this.wireframe = !1),
        (this.wireframeLinewidth = 1),
        (this.fog = !1),
        (this.skinning = !1),
        (this.morphTargets = !1),
        (this.morphNormals = !1),
        this.setValues(e);
    }
    function bh(e) {
      Vi.call(this),
        (this.type = 'MeshLambertMaterial'),
        (this.color = new Ii(16777215)),
        (this.map = null),
        (this.lightMap = null),
        (this.lightMapIntensity = 1),
        (this.aoMap = null),
        (this.aoMapIntensity = 1),
        (this.emissive = new Ii(0)),
        (this.emissiveIntensity = 1),
        (this.emissiveMap = null),
        (this.specularMap = null),
        (this.alphaMap = null),
        (this.envMap = null),
        (this.combine = X),
        (this.reflectivity = 1),
        (this.refractionRatio = 0.98),
        (this.wireframe = !1),
        (this.wireframeLinewidth = 1),
        (this.wireframeLinecap = 'round'),
        (this.wireframeLinejoin = 'round'),
        (this.skinning = !1),
        (this.morphTargets = !1),
        (this.morphNormals = !1),
        this.setValues(e);
    }
    function wh(e) {
      Vi.call(this),
        (this.defines = { MATCAP: '' }),
        (this.type = 'MeshMatcapMaterial'),
        (this.color = new Ii(16777215)),
        (this.matcap = null),
        (this.map = null),
        (this.bumpMap = null),
        (this.bumpScale = 1),
        (this.normalMap = null),
        (this.normalMapType = tn),
        (this.normalScale = new pn(1, 1)),
        (this.displacementMap = null),
        (this.displacementScale = 1),
        (this.displacementBias = 0),
        (this.alphaMap = null),
        (this.skinning = !1),
        (this.morphTargets = !1),
        (this.morphNormals = !1),
        this.setValues(e);
    }
    function Ah(e) {
      Al.call(this),
        (this.type = 'LineDashedMaterial'),
        (this.scale = 1),
        (this.dashSize = 3),
        (this.gapSize = 1),
        this.setValues(e);
    }
    (mh.prototype = Object.create(Vi.prototype)),
      (mh.prototype.constructor = mh),
      (mh.prototype.isShadowMaterial = !0),
      (mh.prototype.copy = function (e) {
        return Vi.prototype.copy.call(this, e), this.color.copy(e.color), this;
      }),
      (fh.prototype = Object.create(Gr.prototype)),
      (fh.prototype.constructor = fh),
      (fh.prototype.isRawShaderMaterial = !0),
      (_h.prototype = Object.create(Vi.prototype)),
      (_h.prototype.constructor = _h),
      (_h.prototype.isMeshStandardMaterial = !0),
      (_h.prototype.copy = function (e) {
        return (
          Vi.prototype.copy.call(this, e),
          (this.defines = { STANDARD: '' }),
          this.color.copy(e.color),
          (this.roughness = e.roughness),
          (this.metalness = e.metalness),
          (this.map = e.map),
          (this.lightMap = e.lightMap),
          (this.lightMapIntensity = e.lightMapIntensity),
          (this.aoMap = e.aoMap),
          (this.aoMapIntensity = e.aoMapIntensity),
          this.emissive.copy(e.emissive),
          (this.emissiveMap = e.emissiveMap),
          (this.emissiveIntensity = e.emissiveIntensity),
          (this.bumpMap = e.bumpMap),
          (this.bumpScale = e.bumpScale),
          (this.normalMap = e.normalMap),
          (this.normalMapType = e.normalMapType),
          this.normalScale.copy(e.normalScale),
          (this.displacementMap = e.displacementMap),
          (this.displacementScale = e.displacementScale),
          (this.displacementBias = e.displacementBias),
          (this.roughnessMap = e.roughnessMap),
          (this.metalnessMap = e.metalnessMap),
          (this.alphaMap = e.alphaMap),
          (this.envMap = e.envMap),
          (this.envMapIntensity = e.envMapIntensity),
          (this.refractionRatio = e.refractionRatio),
          (this.wireframe = e.wireframe),
          (this.wireframeLinewidth = e.wireframeLinewidth),
          (this.wireframeLinecap = e.wireframeLinecap),
          (this.wireframeLinejoin = e.wireframeLinejoin),
          (this.skinning = e.skinning),
          (this.morphTargets = e.morphTargets),
          (this.morphNormals = e.morphNormals),
          (this.vertexTangents = e.vertexTangents),
          this
        );
      }),
      (Mh.prototype = Object.create(_h.prototype)),
      (Mh.prototype.constructor = Mh),
      (Mh.prototype.isMeshPhysicalMaterial = !0),
      (Mh.prototype.copy = function (e) {
        return (
          _h.prototype.copy.call(this, e),
          (this.defines = { STANDARD: '', PHYSICAL: '' }),
          (this.clearcoat = e.clearcoat),
          (this.clearcoatMap = e.clearcoatMap),
          (this.clearcoatRoughness = e.clearcoatRoughness),
          (this.clearcoatRoughnessMap = e.clearcoatRoughnessMap),
          (this.clearcoatNormalMap = e.clearcoatNormalMap),
          this.clearcoatNormalScale.copy(e.clearcoatNormalScale),
          (this.reflectivity = e.reflectivity),
          e.sheen
            ? (this.sheen = (this.sheen || new Ii()).copy(e.sheen))
            : (this.sheen = null),
          (this.transparency = e.transparency),
          this
        );
      }),
      (vh.prototype = Object.create(Vi.prototype)),
      (vh.prototype.constructor = vh),
      (vh.prototype.isMeshPhongMaterial = !0),
      (vh.prototype.copy = function (e) {
        return (
          Vi.prototype.copy.call(this, e),
          this.color.copy(e.color),
          this.specular.copy(e.specular),
          (this.shininess = e.shininess),
          (this.map = e.map),
          (this.lightMap = e.lightMap),
          (this.lightMapIntensity = e.lightMapIntensity),
          (this.aoMap = e.aoMap),
          (this.aoMapIntensity = e.aoMapIntensity),
          this.emissive.copy(e.emissive),
          (this.emissiveMap = e.emissiveMap),
          (this.emissiveIntensity = e.emissiveIntensity),
          (this.bumpMap = e.bumpMap),
          (this.bumpScale = e.bumpScale),
          (this.normalMap = e.normalMap),
          (this.normalMapType = e.normalMapType),
          this.normalScale.copy(e.normalScale),
          (this.displacementMap = e.displacementMap),
          (this.displacementScale = e.displacementScale),
          (this.displacementBias = e.displacementBias),
          (this.specularMap = e.specularMap),
          (this.alphaMap = e.alphaMap),
          (this.envMap = e.envMap),
          (this.combine = e.combine),
          (this.reflectivity = e.reflectivity),
          (this.refractionRatio = e.refractionRatio),
          (this.wireframe = e.wireframe),
          (this.wireframeLinewidth = e.wireframeLinewidth),
          (this.wireframeLinecap = e.wireframeLinecap),
          (this.wireframeLinejoin = e.wireframeLinejoin),
          (this.skinning = e.skinning),
          (this.morphTargets = e.morphTargets),
          (this.morphNormals = e.morphNormals),
          this
        );
      }),
      (gh.prototype = Object.create(Vi.prototype)),
      (gh.prototype.constructor = gh),
      (gh.prototype.isMeshToonMaterial = !0),
      (gh.prototype.copy = function (e) {
        return (
          Vi.prototype.copy.call(this, e),
          this.color.copy(e.color),
          this.specular.copy(e.specular),
          (this.shininess = e.shininess),
          (this.map = e.map),
          (this.gradientMap = e.gradientMap),
          (this.lightMap = e.lightMap),
          (this.lightMapIntensity = e.lightMapIntensity),
          (this.aoMap = e.aoMap),
          (this.aoMapIntensity = e.aoMapIntensity),
          this.emissive.copy(e.emissive),
          (this.emissiveMap = e.emissiveMap),
          (this.emissiveIntensity = e.emissiveIntensity),
          (this.bumpMap = e.bumpMap),
          (this.bumpScale = e.bumpScale),
          (this.normalMap = e.normalMap),
          (this.normalMapType = e.normalMapType),
          this.normalScale.copy(e.normalScale),
          (this.displacementMap = e.displacementMap),
          (this.displacementScale = e.displacementScale),
          (this.displacementBias = e.displacementBias),
          (this.specularMap = e.specularMap),
          (this.alphaMap = e.alphaMap),
          (this.wireframe = e.wireframe),
          (this.wireframeLinewidth = e.wireframeLinewidth),
          (this.wireframeLinecap = e.wireframeLinecap),
          (this.wireframeLinejoin = e.wireframeLinejoin),
          (this.skinning = e.skinning),
          (this.morphTargets = e.morphTargets),
          (this.morphNormals = e.morphNormals),
          this
        );
      }),
      (yh.prototype = Object.create(Vi.prototype)),
      (yh.prototype.constructor = yh),
      (yh.prototype.isMeshNormalMaterial = !0),
      (yh.prototype.copy = function (e) {
        return (
          Vi.prototype.copy.call(this, e),
          (this.bumpMap = e.bumpMap),
          (this.bumpScale = e.bumpScale),
          (this.normalMap = e.normalMap),
          (this.normalMapType = e.normalMapType),
          this.normalScale.copy(e.normalScale),
          (this.displacementMap = e.displacementMap),
          (this.displacementScale = e.displacementScale),
          (this.displacementBias = e.displacementBias),
          (this.wireframe = e.wireframe),
          (this.wireframeLinewidth = e.wireframeLinewidth),
          (this.skinning = e.skinning),
          (this.morphTargets = e.morphTargets),
          (this.morphNormals = e.morphNormals),
          this
        );
      }),
      (bh.prototype = Object.create(Vi.prototype)),
      (bh.prototype.constructor = bh),
      (bh.prototype.isMeshLambertMaterial = !0),
      (bh.prototype.copy = function (e) {
        return (
          Vi.prototype.copy.call(this, e),
          this.color.copy(e.color),
          (this.map = e.map),
          (this.lightMap = e.lightMap),
          (this.lightMapIntensity = e.lightMapIntensity),
          (this.aoMap = e.aoMap),
          (this.aoMapIntensity = e.aoMapIntensity),
          this.emissive.copy(e.emissive),
          (this.emissiveMap = e.emissiveMap),
          (this.emissiveIntensity = e.emissiveIntensity),
          (this.specularMap = e.specularMap),
          (this.alphaMap = e.alphaMap),
          (this.envMap = e.envMap),
          (this.combine = e.combine),
          (this.reflectivity = e.reflectivity),
          (this.refractionRatio = e.refractionRatio),
          (this.wireframe = e.wireframe),
          (this.wireframeLinewidth = e.wireframeLinewidth),
          (this.wireframeLinecap = e.wireframeLinecap),
          (this.wireframeLinejoin = e.wireframeLinejoin),
          (this.skinning = e.skinning),
          (this.morphTargets = e.morphTargets),
          (this.morphNormals = e.morphNormals),
          this
        );
      }),
      (wh.prototype = Object.create(Vi.prototype)),
      (wh.prototype.constructor = wh),
      (wh.prototype.isMeshMatcapMaterial = !0),
      (wh.prototype.copy = function (e) {
        return (
          Vi.prototype.copy.call(this, e),
          (this.defines = { MATCAP: '' }),
          this.color.copy(e.color),
          (this.matcap = e.matcap),
          (this.map = e.map),
          (this.bumpMap = e.bumpMap),
          (this.bumpScale = e.bumpScale),
          (this.normalMap = e.normalMap),
          (this.normalMapType = e.normalMapType),
          this.normalScale.copy(e.normalScale),
          (this.displacementMap = e.displacementMap),
          (this.displacementScale = e.displacementScale),
          (this.displacementBias = e.displacementBias),
          (this.alphaMap = e.alphaMap),
          (this.skinning = e.skinning),
          (this.morphTargets = e.morphTargets),
          (this.morphNormals = e.morphNormals),
          this
        );
      }),
      (Ah.prototype = Object.create(Al.prototype)),
      (Ah.prototype.constructor = Ah),
      (Ah.prototype.isLineDashedMaterial = !0),
      (Ah.prototype.copy = function (e) {
        return (
          Al.prototype.copy.call(this, e),
          (this.scale = e.scale),
          (this.dashSize = e.dashSize),
          (this.gapSize = e.gapSize),
          this
        );
      });
    var xh = Object.freeze({
        __proto__: null,
        ShadowMaterial: mh,
        SpriteMaterial: Ju,
        RawShaderMaterial: fh,
        ShaderMaterial: Gr,
        PointsMaterial: Nl,
        MeshPhysicalMaterial: Mh,
        MeshStandardMaterial: _h,
        MeshPhongMaterial: vh,
        MeshToonMaterial: gh,
        MeshNormalMaterial: yh,
        MeshLambertMaterial: bh,
        MeshDepthMaterial: Eu,
        MeshDistanceMaterial: ku,
        MeshBasicMaterial: Gi,
        MeshMatcapMaterial: wh,
        LineDashedMaterial: Ah,
        LineBasicMaterial: Al,
        Material: Vi,
      }),
      Lh = {
        arraySlice: function (e, t, n) {
          return Lh.isTypedArray(e)
            ? new e.constructor(e.subarray(t, void 0 !== n ? n : e.length))
            : e.slice(t, n);
        },
        convertArray: function (e, t, n) {
          return !e || (!n && e.constructor === t)
            ? e
            : 'number' === typeof t.BYTES_PER_ELEMENT
            ? new t(e)
            : Array.prototype.slice.call(e);
        },
        isTypedArray: function (e) {
          return ArrayBuffer.isView(e) && !(e instanceof DataView);
        },
        getKeyframeOrder: function (e) {
          function t(t, n) {
            return e[t] - e[n];
          }
          for (var n = e.length, i = new Array(n), r = 0; r !== n; ++r)
            i[r] = r;
          return i.sort(t), i;
        },
        sortedArray: function (e, t, n) {
          for (
            var i = e.length, r = new e.constructor(i), a = 0, o = 0;
            o !== i;
            ++a
          )
            for (var s = n[a] * t, c = 0; c !== t; ++c) r[o++] = e[s + c];
          return r;
        },
        flattenJSON: function (e, t, n, i) {
          var r = 1,
            a = e[0];
          while (void 0 !== a && void 0 === a[i]) a = e[r++];
          if (void 0 !== a) {
            var o = a[i];
            if (void 0 !== o)
              if (Array.isArray(o))
                do {
                  (o = a[i]),
                    void 0 !== o && (t.push(a.time), n.push.apply(n, o)),
                    (a = e[r++]);
                } while (void 0 !== a);
              else if (void 0 !== o.toArray)
                do {
                  (o = a[i]),
                    void 0 !== o && (t.push(a.time), o.toArray(n, n.length)),
                    (a = e[r++]);
                } while (void 0 !== a);
              else
                do {
                  (o = a[i]),
                    void 0 !== o && (t.push(a.time), n.push(o)),
                    (a = e[r++]);
                } while (void 0 !== a);
          }
        },
        subclip: function (e, t, n, i, r) {
          r = r || 30;
          var a = e.clone();
          a.name = t;
          for (var o = [], s = 0; s < a.tracks.length; ++s) {
            for (
              var c = a.tracks[s], u = c.getValueSize(), l = [], d = [], h = 0;
              h < c.times.length;
              ++h
            ) {
              var p = c.times[h] * r;
              if (!(p < n || p >= i)) {
                l.push(c.times[h]);
                for (var m = 0; m < u; ++m) d.push(c.values[h * u + m]);
              }
            }
            0 !== l.length &&
              ((c.times = Lh.convertArray(l, c.times.constructor)),
              (c.values = Lh.convertArray(d, c.values.constructor)),
              o.push(c));
          }
          a.tracks = o;
          var f = 1 / 0;
          for (s = 0; s < a.tracks.length; ++s)
            f > a.tracks[s].times[0] && (f = a.tracks[s].times[0]);
          for (s = 0; s < a.tracks.length; ++s) a.tracks[s].shift(-1 * f);
          return a.resetDuration(), a;
        },
        makeClipAdditive: function (e, t, n, i) {
          void 0 === t && (t = 0),
            void 0 === n && (n = e),
            (void 0 === i || i <= 0) && (i = 30);
          for (var r = e.tracks.length, a = t / i, o = 0; o < r; ++o) {
            var s = n.tracks[o],
              c = s.ValueTypeName;
            if ('bool' !== c && 'string' !== c) {
              var u = e.tracks.find(function (e) {
                return e.name === s.name && e.ValueTypeName === c;
              });
              if (void 0 !== u) {
                var l,
                  d = s.getValueSize(),
                  h = s.times.length - 1;
                if (a <= s.times[0])
                  l = Lh.arraySlice(s.values, 0, s.valueSize);
                else if (a >= s.times[h]) {
                  var p = h * d;
                  l = Lh.arraySlice(s.values, p);
                } else {
                  var m = s.createInterpolant();
                  m.evaluate(a), (l = m.resultBuffer);
                }
                if ('quaternion' === c) {
                  var f = new bn(l[0], l[1], l[2], l[3])
                    .normalize()
                    .conjugate();
                  f.toArray(l);
                }
                for (var _ = u.times.length, M = 0; M < _; ++M) {
                  var v = M * d;
                  if ('quaternion' === c)
                    bn.multiplyQuaternionsFlat(u.values, v, l, 0, u.values, v);
                  else for (var g = 0; g < d; ++g) u.values[v + g] -= l[g];
                }
              }
            }
          }
          return (e.blendMode = It), e;
        },
      };
    function Th(e, t, n, i) {
      (this.parameterPositions = e),
        (this._cachedIndex = 0),
        (this.resultBuffer = void 0 !== i ? i : new t.constructor(n)),
        (this.sampleValues = t),
        (this.valueSize = n);
    }
    function zh(e, t, n, i) {
      Th.call(this, e, t, n, i),
        (this._weightPrev = -0),
        (this._offsetPrev = -0),
        (this._weightNext = -0),
        (this._offsetNext = -0);
    }
    function Sh(e, t, n, i) {
      Th.call(this, e, t, n, i);
    }
    function Oh(e, t, n, i) {
      Th.call(this, e, t, n, i);
    }
    function Eh(e, t, n, i) {
      if (void 0 === e)
        throw new Error('THREE.KeyframeTrack: track name is undefined');
      if (void 0 === t || 0 === t.length)
        throw new Error(
          'THREE.KeyframeTrack: no keyframes in track named ' + e
        );
      (this.name = e),
        (this.times = Lh.convertArray(t, this.TimeBufferType)),
        (this.values = Lh.convertArray(n, this.ValueBufferType)),
        this.setInterpolation(i || this.DefaultInterpolation);
    }
    function kh(e, t, n) {
      Eh.call(this, e, t, n);
    }
    function Ch(e, t, n, i) {
      Eh.call(this, e, t, n, i);
    }
    function Dh(e, t, n, i) {
      Eh.call(this, e, t, n, i);
    }
    function Nh(e, t, n, i) {
      Th.call(this, e, t, n, i);
    }
    function Ph(e, t, n, i) {
      Eh.call(this, e, t, n, i);
    }
    function jh(e, t, n, i) {
      Eh.call(this, e, t, n, i);
    }
    function Yh(e, t, n, i) {
      Eh.call(this, e, t, n, i);
    }
    function Rh(e, t, n, i) {
      (this.name = e),
        (this.tracks = n),
        (this.duration = void 0 !== t ? t : -1),
        (this.blendMode = void 0 !== i ? i : Wt),
        (this.uuid = hn.generateUUID()),
        this.duration < 0 && this.resetDuration();
    }
    function Bh(e) {
      switch (e.toLowerCase()) {
        case 'scalar':
        case 'double':
        case 'float':
        case 'number':
        case 'integer':
          return Dh;
        case 'vector':
        case 'vector2':
        case 'vector3':
        case 'vector4':
          return Yh;
        case 'color':
          return Ch;
        case 'quaternion':
          return Ph;
        case 'bool':
        case 'boolean':
          return kh;
        case 'string':
          return jh;
      }
      throw new Error('THREE.KeyframeTrack: Unsupported typeName: ' + e);
    }
    function Wh(e) {
      if (void 0 === e.type)
        throw new Error(
          'THREE.KeyframeTrack: track type undefined, can not parse'
        );
      var t = Bh(e.type);
      if (void 0 === e.times) {
        var n = [],
          i = [];
        Lh.flattenJSON(e.keys, n, i, 'value'), (e.times = n), (e.values = i);
      }
      return void 0 !== t.parse
        ? t.parse(e)
        : new t(e.name, e.times, e.values, e.interpolation);
    }
    Object.assign(Th.prototype, {
      evaluate: function (e) {
        var t = this.parameterPositions,
          n = this._cachedIndex,
          i = t[n],
          r = t[n - 1];
        e: {
          t: {
            var a;
            n: {
              i: if (!(e < i)) {
                for (var o = n + 2; ; ) {
                  if (void 0 === i) {
                    if (e < r) break i;
                    return (
                      (n = t.length),
                      (this._cachedIndex = n),
                      this.afterEnd_(n - 1, e, r)
                    );
                  }
                  if (n === o) break;
                  if (((r = i), (i = t[++n]), e < i)) break t;
                }
                a = t.length;
                break n;
              }
              if (e >= r) break e;
              var s = t[1];
              e < s && ((n = 2), (r = s));
              for (o = n - 2; ; ) {
                if (void 0 === r)
                  return (this._cachedIndex = 0), this.beforeStart_(0, e, i);
                if (n === o) break;
                if (((i = r), (r = t[--n - 1]), e >= r)) break t;
              }
              (a = n), (n = 0);
            }
            while (n < a) {
              var c = (n + a) >>> 1;
              e < t[c] ? (a = c) : (n = c + 1);
            }
            if (((i = t[n]), (r = t[n - 1]), void 0 === r))
              return (this._cachedIndex = 0), this.beforeStart_(0, e, i);
            if (void 0 === i)
              return (
                (n = t.length),
                (this._cachedIndex = n),
                this.afterEnd_(n - 1, r, e)
              );
          }
          (this._cachedIndex = n), this.intervalChanged_(n, r, i);
        }
        return this.interpolate_(n, r, e, i);
      },
      settings: null,
      DefaultSettings_: {},
      getSettings_: function () {
        return this.settings || this.DefaultSettings_;
      },
      copySampleValue_: function (e) {
        for (
          var t = this.resultBuffer,
            n = this.sampleValues,
            i = this.valueSize,
            r = e * i,
            a = 0;
          a !== i;
          ++a
        )
          t[a] = n[r + a];
        return t;
      },
      interpolate_: function () {
        throw new Error('call to abstract method');
      },
      intervalChanged_: function () {},
    }),
      Object.assign(Th.prototype, {
        beforeStart_: Th.prototype.copySampleValue_,
        afterEnd_: Th.prototype.copySampleValue_,
      }),
      (zh.prototype = Object.assign(Object.create(Th.prototype), {
        constructor: zh,
        DefaultSettings_: { endingStart: Yt, endingEnd: Yt },
        intervalChanged_: function (e, t, n) {
          var i = this.parameterPositions,
            r = e - 2,
            a = e + 1,
            o = i[r],
            s = i[a];
          if (void 0 === o)
            switch (this.getSettings_().endingStart) {
              case Rt:
                (r = e), (o = 2 * t - n);
                break;
              case Bt:
                (r = i.length - 2), (o = t + i[r] - i[r + 1]);
                break;
              default:
                (r = e), (o = n);
            }
          if (void 0 === s)
            switch (this.getSettings_().endingEnd) {
              case Rt:
                (a = e), (s = 2 * n - t);
                break;
              case Bt:
                (a = 1), (s = n + i[1] - i[0]);
                break;
              default:
                (a = e - 1), (s = t);
            }
          var c = 0.5 * (n - t),
            u = this.valueSize;
          (this._weightPrev = c / (t - o)),
            (this._weightNext = c / (s - n)),
            (this._offsetPrev = r * u),
            (this._offsetNext = a * u);
        },
        interpolate_: function (e, t, n, i) {
          for (
            var r = this.resultBuffer,
              a = this.sampleValues,
              o = this.valueSize,
              s = e * o,
              c = s - o,
              u = this._offsetPrev,
              l = this._offsetNext,
              d = this._weightPrev,
              h = this._weightNext,
              p = (n - t) / (i - t),
              m = p * p,
              f = m * p,
              _ = -d * f + 2 * d * m - d * p,
              M = (1 + d) * f + (-1.5 - 2 * d) * m + (-0.5 + d) * p + 1,
              v = (-1 - h) * f + (1.5 + h) * m + 0.5 * p,
              g = h * f - h * m,
              y = 0;
            y !== o;
            ++y
          )
            r[y] = _ * a[u + y] + M * a[c + y] + v * a[s + y] + g * a[l + y];
          return r;
        },
      })),
      (Sh.prototype = Object.assign(Object.create(Th.prototype), {
        constructor: Sh,
        interpolate_: function (e, t, n, i) {
          for (
            var r = this.resultBuffer,
              a = this.sampleValues,
              o = this.valueSize,
              s = e * o,
              c = s - o,
              u = (n - t) / (i - t),
              l = 1 - u,
              d = 0;
            d !== o;
            ++d
          )
            r[d] = a[c + d] * l + a[s + d] * u;
          return r;
        },
      })),
      (Oh.prototype = Object.assign(Object.create(Th.prototype), {
        constructor: Oh,
        interpolate_: function (e) {
          return this.copySampleValue_(e - 1);
        },
      })),
      Object.assign(Eh, {
        toJSON: function (e) {
          var t,
            n = e.constructor;
          if (void 0 !== n.toJSON) t = n.toJSON(e);
          else {
            t = {
              name: e.name,
              times: Lh.convertArray(e.times, Array),
              values: Lh.convertArray(e.values, Array),
            };
            var i = e.getInterpolation();
            i !== e.DefaultInterpolation && (t.interpolation = i);
          }
          return (t.type = e.ValueTypeName), t;
        },
      }),
      Object.assign(Eh.prototype, {
        constructor: Eh,
        TimeBufferType: Float32Array,
        ValueBufferType: Float32Array,
        DefaultInterpolation: Pt,
        InterpolantFactoryMethodDiscrete: function (e) {
          return new Oh(this.times, this.values, this.getValueSize(), e);
        },
        InterpolantFactoryMethodLinear: function (e) {
          return new Sh(this.times, this.values, this.getValueSize(), e);
        },
        InterpolantFactoryMethodSmooth: function (e) {
          return new zh(this.times, this.values, this.getValueSize(), e);
        },
        setInterpolation: function (e) {
          var t;
          switch (e) {
            case Nt:
              t = this.InterpolantFactoryMethodDiscrete;
              break;
            case Pt:
              t = this.InterpolantFactoryMethodLinear;
              break;
            case jt:
              t = this.InterpolantFactoryMethodSmooth;
              break;
          }
          if (void 0 === t) {
            var n =
              'unsupported interpolation for ' +
              this.ValueTypeName +
              ' keyframe track named ' +
              this.name;
            if (void 0 === this.createInterpolant) {
              if (e === this.DefaultInterpolation) throw new Error(n);
              this.setInterpolation(this.DefaultInterpolation);
            }
            return void 0, this;
          }
          return (this.createInterpolant = t), this;
        },
        getInterpolation: function () {
          switch (this.createInterpolant) {
            case this.InterpolantFactoryMethodDiscrete:
              return Nt;
            case this.InterpolantFactoryMethodLinear:
              return Pt;
            case this.InterpolantFactoryMethodSmooth:
              return jt;
          }
        },
        getValueSize: function () {
          return this.values.length / this.times.length;
        },
        shift: function (e) {
          if (0 !== e)
            for (var t = this.times, n = 0, i = t.length; n !== i; ++n)
              t[n] += e;
          return this;
        },
        scale: function (e) {
          if (1 !== e)
            for (var t = this.times, n = 0, i = t.length; n !== i; ++n)
              t[n] *= e;
          return this;
        },
        trim: function (e, t) {
          var n = this.times,
            i = n.length,
            r = 0,
            a = i - 1;
          while (r !== i && n[r] < e) ++r;
          while (-1 !== a && n[a] > t) --a;
          if ((++a, 0 !== r || a !== i)) {
            r >= a && ((a = Math.max(a, 1)), (r = a - 1));
            var o = this.getValueSize();
            (this.times = Lh.arraySlice(n, r, a)),
              (this.values = Lh.arraySlice(this.values, r * o, a * o));
          }
          return this;
        },
        validate: function () {
          var e = !0,
            t = this.getValueSize();
          t - Math.floor(t) !== 0 && (void 0, (e = !1));
          var n = this.times,
            i = this.values,
            r = n.length;
          void 0, 0 === r && (e = !1);
          for (var a = null, o = 0; o !== r; o++) {
            var s = n[o];
            if ('number' === typeof s && isNaN(s)) {
              void 0, (e = !1);
              break;
            }
            if (null !== a && a > s) {
              void 0, (e = !1);
              break;
            }
            a = s;
          }
          if (void 0 !== i && Lh.isTypedArray(i)) {
            o = 0;
            for (var c = i.length; o !== c; ++o) {
              var u = i[o];
              if (isNaN(u)) {
                void 0, (e = !1);
                break;
              }
            }
          }
          return e;
        },
        optimize: function () {
          for (
            var e = Lh.arraySlice(this.times),
              t = Lh.arraySlice(this.values),
              n = this.getValueSize(),
              i = this.getInterpolation() === jt,
              r = 1,
              a = e.length - 1,
              o = 1;
            o < a;
            ++o
          ) {
            var s = !1,
              c = e[o],
              u = e[o + 1];
            if (c !== u && (1 !== o || c !== c[0]))
              if (i) s = !0;
              else
                for (var l = o * n, d = l - n, h = l + n, p = 0; p !== n; ++p) {
                  var m = t[l + p];
                  if (m !== t[d + p] || m !== t[h + p]) {
                    s = !0;
                    break;
                  }
                }
            if (s) {
              if (o !== r) {
                e[r] = e[o];
                var f = o * n,
                  _ = r * n;
                for (p = 0; p !== n; ++p) t[_ + p] = t[f + p];
              }
              ++r;
            }
          }
          if (a > 0) {
            e[r] = e[a];
            for (f = a * n, _ = r * n, p = 0; p !== n; ++p) t[_ + p] = t[f + p];
            ++r;
          }
          return (
            r !== e.length
              ? ((this.times = Lh.arraySlice(e, 0, r)),
                (this.values = Lh.arraySlice(t, 0, r * n)))
              : ((this.times = e), (this.values = t)),
            this
          );
        },
        clone: function () {
          var e = Lh.arraySlice(this.times, 0),
            t = Lh.arraySlice(this.values, 0),
            n = this.constructor,
            i = new n(this.name, e, t);
          return (i.createInterpolant = this.createInterpolant), i;
        },
      }),
      (kh.prototype = Object.assign(Object.create(Eh.prototype), {
        constructor: kh,
        ValueTypeName: 'bool',
        ValueBufferType: Array,
        DefaultInterpolation: Nt,
        InterpolantFactoryMethodLinear: void 0,
        InterpolantFactoryMethodSmooth: void 0,
      })),
      (Ch.prototype = Object.assign(Object.create(Eh.prototype), {
        constructor: Ch,
        ValueTypeName: 'color',
      })),
      (Dh.prototype = Object.assign(Object.create(Eh.prototype), {
        constructor: Dh,
        ValueTypeName: 'number',
      })),
      (Nh.prototype = Object.assign(Object.create(Th.prototype), {
        constructor: Nh,
        interpolate_: function (e, t, n, i) {
          for (
            var r = this.resultBuffer,
              a = this.sampleValues,
              o = this.valueSize,
              s = e * o,
              c = (n - t) / (i - t),
              u = s + o;
            s !== u;
            s += 4
          )
            bn.slerpFlat(r, 0, a, s - o, a, s, c);
          return r;
        },
      })),
      (Ph.prototype = Object.assign(Object.create(Eh.prototype), {
        constructor: Ph,
        ValueTypeName: 'quaternion',
        DefaultInterpolation: Pt,
        InterpolantFactoryMethodLinear: function (e) {
          return new Nh(this.times, this.values, this.getValueSize(), e);
        },
        InterpolantFactoryMethodSmooth: void 0,
      })),
      (jh.prototype = Object.assign(Object.create(Eh.prototype), {
        constructor: jh,
        ValueTypeName: 'string',
        ValueBufferType: Array,
        DefaultInterpolation: Nt,
        InterpolantFactoryMethodLinear: void 0,
        InterpolantFactoryMethodSmooth: void 0,
      })),
      (Yh.prototype = Object.assign(Object.create(Eh.prototype), {
        constructor: Yh,
        ValueTypeName: 'vector',
      })),
      Object.assign(Rh, {
        parse: function (e) {
          for (
            var t = [], n = e.tracks, i = 1 / (e.fps || 1), r = 0, a = n.length;
            r !== a;
            ++r
          )
            t.push(Wh(n[r]).scale(i));
          return new Rh(e.name, e.duration, t, e.blendMode);
        },
        toJSON: function (e) {
          for (
            var t = [],
              n = e.tracks,
              i = {
                name: e.name,
                duration: e.duration,
                tracks: t,
                uuid: e.uuid,
                blendMode: e.blendMode,
              },
              r = 0,
              a = n.length;
            r !== a;
            ++r
          )
            t.push(Eh.toJSON(n[r]));
          return i;
        },
        CreateFromMorphTargetSequence: function (e, t, n, i) {
          for (var r = t.length, a = [], o = 0; o < r; o++) {
            var s = [],
              c = [];
            s.push((o + r - 1) % r, o, (o + 1) % r), c.push(0, 1, 0);
            var u = Lh.getKeyframeOrder(s);
            (s = Lh.sortedArray(s, 1, u)),
              (c = Lh.sortedArray(c, 1, u)),
              i || 0 !== s[0] || (s.push(r), c.push(c[0])),
              a.push(
                new Dh('.morphTargetInfluences[' + t[o].name + ']', s, c).scale(
                  1 / n
                )
              );
          }
          return new Rh(e, -1, a);
        },
        findByName: function (e, t) {
          var n = e;
          if (!Array.isArray(e)) {
            var i = e;
            n = (i.geometry && i.geometry.animations) || i.animations;
          }
          for (var r = 0; r < n.length; r++) if (n[r].name === t) return n[r];
          return null;
        },
        CreateClipsFromMorphTargetSequences: function (e, t, n) {
          for (
            var i = {}, r = /^([\w-]*?)([\d]+)$/, a = 0, o = e.length;
            a < o;
            a++
          ) {
            var s = e[a],
              c = s.name.match(r);
            if (c && c.length > 1) {
              var u = c[1],
                l = i[u];
              l || (i[u] = l = []), l.push(s);
            }
          }
          var d = [];
          for (var u in i)
            d.push(Rh.CreateFromMorphTargetSequence(u, i[u], t, n));
          return d;
        },
        parseAnimation: function (e, t) {
          if (!e) return void 0, null;
          for (
            var n = function (e, t, n, i, r) {
                if (0 !== n.length) {
                  var a = [],
                    o = [];
                  Lh.flattenJSON(n, a, o, i),
                    0 !== a.length && r.push(new e(t, a, o));
                }
              },
              i = [],
              r = e.name || 'default',
              a = e.length || -1,
              o = e.fps || 30,
              s = e.blendMode,
              c = e.hierarchy || [],
              u = 0;
            u < c.length;
            u++
          ) {
            var l = c[u].keys;
            if (l && 0 !== l.length)
              if (l[0].morphTargets) {
                for (var d = {}, h = 0; h < l.length; h++)
                  if (l[h].morphTargets)
                    for (var p = 0; p < l[h].morphTargets.length; p++)
                      d[l[h].morphTargets[p]] = -1;
                for (var m in d) {
                  var f = [],
                    _ = [];
                  for (p = 0; p !== l[h].morphTargets.length; ++p) {
                    var M = l[h];
                    f.push(M.time), _.push(M.morphTarget === m ? 1 : 0);
                  }
                  i.push(new Dh('.morphTargetInfluence[' + m + ']', f, _));
                }
                a = d.length * (o || 1);
              } else {
                var v = '.bones[' + t[u].name + ']';
                n(Yh, v + '.position', l, 'pos', i),
                  n(Ph, v + '.quaternion', l, 'rot', i),
                  n(Yh, v + '.scale', l, 'scl', i);
              }
          }
          if (0 === i.length) return null;
          var g = new Rh(r, a, i, s);
          return g;
        },
      }),
      Object.assign(Rh.prototype, {
        resetDuration: function () {
          for (var e = this.tracks, t = 0, n = 0, i = e.length; n !== i; ++n) {
            var r = this.tracks[n];
            t = Math.max(t, r.times[r.times.length - 1]);
          }
          return (this.duration = t), this;
        },
        trim: function () {
          for (var e = 0; e < this.tracks.length; e++)
            this.tracks[e].trim(0, this.duration);
          return this;
        },
        validate: function () {
          for (var e = !0, t = 0; t < this.tracks.length; t++)
            e = e && this.tracks[t].validate();
          return e;
        },
        optimize: function () {
          for (var e = 0; e < this.tracks.length; e++)
            this.tracks[e].optimize();
          return this;
        },
        clone: function () {
          for (var e = [], t = 0; t < this.tracks.length; t++)
            e.push(this.tracks[t].clone());
          return new Rh(this.name, this.duration, e, this.blendMode);
        },
      });
    var Ih = {
      enabled: !1,
      files: {},
      add: function (e, t) {
        !1 !== this.enabled && (this.files[e] = t);
      },
      get: function (e) {
        if (!1 !== this.enabled) return this.files[e];
      },
      remove: function (e) {
        delete this.files[e];
      },
      clear: function () {
        this.files = {};
      },
    };
    function qh(e, t, n) {
      var i = this,
        r = !1,
        a = 0,
        o = 0,
        s = void 0,
        c = [];
      (this.onStart = void 0),
        (this.onLoad = e),
        (this.onProgress = t),
        (this.onError = n),
        (this.itemStart = function (e) {
          o++, !1 === r && void 0 !== i.onStart && i.onStart(e, a, o), (r = !0);
        }),
        (this.itemEnd = function (e) {
          a++,
            void 0 !== i.onProgress && i.onProgress(e, a, o),
            a === o && ((r = !1), void 0 !== i.onLoad && i.onLoad());
        }),
        (this.itemError = function (e) {
          void 0 !== i.onError && i.onError(e);
        }),
        (this.resolveURL = function (e) {
          return s ? s(e) : e;
        }),
        (this.setURLModifier = function (e) {
          return (s = e), this;
        }),
        (this.addHandler = function (e, t) {
          return c.push(e, t), this;
        }),
        (this.removeHandler = function (e) {
          var t = c.indexOf(e);
          return -1 !== t && c.splice(t, 2), this;
        }),
        (this.getHandler = function (e) {
          for (var t = 0, n = c.length; t < n; t += 2) {
            var i = c[t],
              r = c[t + 1];
            if ((i.global && (i.lastIndex = 0), i.test(e))) return r;
          }
          return null;
        });
    }
    var Hh = new qh();
    function Fh(e) {
      (this.manager = void 0 !== e ? e : Hh),
        (this.crossOrigin = 'anonymous'),
        (this.path = ''),
        (this.resourcePath = '');
    }
    Object.assign(Fh.prototype, {
      load: function () {},
      loadAsync: function (e, t) {
        var n = this;
        return new Promise(function (i, r) {
          n.load(e, i, t, r);
        });
      },
      parse: function () {},
      setCrossOrigin: function (e) {
        return (this.crossOrigin = e), this;
      },
      setPath: function (e) {
        return (this.path = e), this;
      },
      setResourcePath: function (e) {
        return (this.resourcePath = e), this;
      },
    });
    var Uh = {};
    function Xh(e) {
      Fh.call(this, e);
    }
    function Vh(e) {
      Fh.call(this, e);
    }
    function Gh(e) {
      Fh.call(this, e);
    }
    function Jh(e) {
      Fh.call(this, e);
    }
    function Zh(e) {
      Fh.call(this, e);
    }
    function Kh(e) {
      Fh.call(this, e);
    }
    function Qh(e) {
      Fh.call(this, e);
    }
    function $h() {
      (this.type = 'Curve'), (this.arcLengthDivisions = 200);
    }
    function ep(e, t, n, i, r, a, o, s) {
      $h.call(this),
        (this.type = 'EllipseCurve'),
        (this.aX = e || 0),
        (this.aY = t || 0),
        (this.xRadius = n || 1),
        (this.yRadius = i || 1),
        (this.aStartAngle = r || 0),
        (this.aEndAngle = a || 2 * Math.PI),
        (this.aClockwise = o || !1),
        (this.aRotation = s || 0);
    }
    function tp(e, t, n, i, r, a) {
      ep.call(this, e, t, n, n, i, r, a), (this.type = 'ArcCurve');
    }
    function np() {
      var e = 0,
        t = 0,
        n = 0,
        i = 0;
      function r(r, a, o, s) {
        (e = r),
          (t = o),
          (n = -3 * r + 3 * a - 2 * o - s),
          (i = 2 * r - 2 * a + o + s);
      }
      return {
        initCatmullRom: function (e, t, n, i, a) {
          r(t, n, a * (n - e), a * (i - t));
        },
        initNonuniformCatmullRom: function (e, t, n, i, a, o, s) {
          var c = (t - e) / a - (n - e) / (a + o) + (n - t) / o,
            u = (n - t) / o - (i - t) / (o + s) + (i - n) / s;
          (c *= o), (u *= o), r(t, n, c, u);
        },
        calc: function (r) {
          var a = r * r,
            o = a * r;
          return e + t * r + n * a + i * o;
        },
      };
    }
    (Xh.prototype = Object.assign(Object.create(Fh.prototype), {
      constructor: Xh,
      load: function (e, t, n, i) {
        void 0 === e && (e = ''),
          void 0 !== this.path && (e = this.path + e),
          (e = this.manager.resolveURL(e));
        var r = this,
          a = Ih.get(e);
        if (void 0 !== a)
          return (
            r.manager.itemStart(e),
            setTimeout(function () {
              t && t(a), r.manager.itemEnd(e);
            }, 0),
            a
          );
        if (void 0 !== Uh[e])
          return Uh[e].push({ onLoad: t, onProgress: n, onError: i }), void 0;
        var o = /^data:(.*?)(;base64)?,(.*)$/,
          s = e.match(o);
        if (s) {
          var c = s[1],
            u = !!s[2],
            l = s[3];
          (l = decodeURIComponent(l)), u && (l = atob(l));
          try {
            var d,
              h = (this.responseType || '').toLowerCase();
            switch (h) {
              case 'arraybuffer':
              case 'blob':
                for (var p = new Uint8Array(l.length), m = 0; m < l.length; m++)
                  p[m] = l.charCodeAt(m);
                d = 'blob' === h ? new Blob([p.buffer], { type: c }) : p.buffer;
                break;
              case 'document':
                var f = new DOMParser();
                d = f.parseFromString(l, c);
                break;
              case 'json':
                d = JSON.parse(l);
                break;
              default:
                d = l;
                break;
            }
            setTimeout(function () {
              t && t(d), r.manager.itemEnd(e);
            }, 0);
          } catch (t) {
            setTimeout(function () {
              i && i(t), r.manager.itemError(e), r.manager.itemEnd(e);
            }, 0);
          }
        } else {
          (Uh[e] = []), Uh[e].push({ onLoad: t, onProgress: n, onError: i });
          var _ = new XMLHttpRequest();
          for (var M in (_.open('GET', e, !0),
          _.addEventListener(
            'load',
            function (t) {
              var n = this.response,
                i = Uh[e];
              if ((delete Uh[e], 200 === this.status || 0 === this.status)) {
                0 === this.status && void 0, Ih.add(e, n);
                for (var a = 0, o = i.length; a < o; a++) {
                  var s = i[a];
                  s.onLoad && s.onLoad(n);
                }
                r.manager.itemEnd(e);
              } else {
                for (a = 0, o = i.length; a < o; a++) {
                  s = i[a];
                  s.onError && s.onError(t);
                }
                r.manager.itemError(e), r.manager.itemEnd(e);
              }
            },
            !1
          ),
          _.addEventListener(
            'progress',
            function (t) {
              for (var n = Uh[e], i = 0, r = n.length; i < r; i++) {
                var a = n[i];
                a.onProgress && a.onProgress(t);
              }
            },
            !1
          ),
          _.addEventListener(
            'error',
            function (t) {
              var n = Uh[e];
              delete Uh[e];
              for (var i = 0, a = n.length; i < a; i++) {
                var o = n[i];
                o.onError && o.onError(t);
              }
              r.manager.itemError(e), r.manager.itemEnd(e);
            },
            !1
          ),
          _.addEventListener(
            'abort',
            function (t) {
              var n = Uh[e];
              delete Uh[e];
              for (var i = 0, a = n.length; i < a; i++) {
                var o = n[i];
                o.onError && o.onError(t);
              }
              r.manager.itemError(e), r.manager.itemEnd(e);
            },
            !1
          ),
          void 0 !== this.responseType && (_.responseType = this.responseType),
          void 0 !== this.withCredentials &&
            (_.withCredentials = this.withCredentials),
          _.overrideMimeType &&
            _.overrideMimeType(
              void 0 !== this.mimeType ? this.mimeType : 'text/plain'
            ),
          this.requestHeader))
            _.setRequestHeader(M, this.requestHeader[M]);
          _.send(null);
        }
        return r.manager.itemStart(e), _;
      },
      setResponseType: function (e) {
        return (this.responseType = e), this;
      },
      setWithCredentials: function (e) {
        return (this.withCredentials = e), this;
      },
      setMimeType: function (e) {
        return (this.mimeType = e), this;
      },
      setRequestHeader: function (e) {
        return (this.requestHeader = e), this;
      },
    })),
      (Vh.prototype = Object.assign(Object.create(Fh.prototype), {
        constructor: Vh,
        load: function (e, t, n, i) {
          var r = this,
            a = new Xh(r.manager);
          a.setPath(r.path),
            a.load(
              e,
              function (e) {
                t(r.parse(JSON.parse(e)));
              },
              n,
              i
            );
        },
        parse: function (e) {
          for (var t = [], n = 0; n < e.length; n++) {
            var i = Rh.parse(e[n]);
            t.push(i);
          }
          return t;
        },
      })),
      (Gh.prototype = Object.assign(Object.create(Fh.prototype), {
        constructor: Gh,
        load: function (e, t, n, i) {
          var r = this,
            a = [],
            o = new ql();
          o.image = a;
          var s = new Xh(this.manager);
          function c(c) {
            s.load(
              e[c],
              function (e) {
                var n = r.parse(e, !0);
                (a[c] = {
                  width: n.width,
                  height: n.height,
                  format: n.format,
                  mipmaps: n.mipmaps,
                }),
                  (u += 1),
                  6 === u &&
                    (1 === n.mipmapCount && (o.minFilter = fe),
                    (o.format = n.format),
                    (o.needsUpdate = !0),
                    t && t(o));
              },
              n,
              i
            );
          }
          if (
            (s.setPath(this.path),
            s.setResponseType('arraybuffer'),
            Array.isArray(e))
          )
            for (var u = 0, l = 0, d = e.length; l < d; ++l) c(l);
          else
            s.load(
              e,
              function (e) {
                var n = r.parse(e, !0);
                if (n.isCubemap)
                  for (
                    var i = n.mipmaps.length / n.mipmapCount, s = 0;
                    s < i;
                    s++
                  ) {
                    a[s] = { mipmaps: [] };
                    for (var c = 0; c < n.mipmapCount; c++)
                      a[s].mipmaps.push(n.mipmaps[s * n.mipmapCount + c]),
                        (a[s].format = n.format),
                        (a[s].width = n.width),
                        (a[s].height = n.height);
                  }
                else
                  (o.image.width = n.width),
                    (o.image.height = n.height),
                    (o.mipmaps = n.mipmaps);
                1 === n.mipmapCount && (o.minFilter = fe),
                  (o.format = n.format),
                  (o.needsUpdate = !0),
                  t && t(o);
              },
              n,
              i
            );
          return o;
        },
      })),
      (Jh.prototype = Object.assign(Object.create(Fh.prototype), {
        constructor: Jh,
        load: function (e, t, n, i) {
          var r = this,
            a = new ta(),
            o = new Xh(this.manager);
          return (
            o.setResponseType('arraybuffer'),
            o.setPath(this.path),
            o.load(
              e,
              function (e) {
                var n = r.parse(e);
                n &&
                  (void 0 !== n.image
                    ? (a.image = n.image)
                    : void 0 !== n.data &&
                      ((a.image.width = n.width),
                      (a.image.height = n.height),
                      (a.image.data = n.data)),
                  (a.wrapS = void 0 !== n.wrapS ? n.wrapS : le),
                  (a.wrapT = void 0 !== n.wrapT ? n.wrapT : le),
                  (a.magFilter = void 0 !== n.magFilter ? n.magFilter : fe),
                  (a.minFilter = void 0 !== n.minFilter ? n.minFilter : fe),
                  (a.anisotropy = void 0 !== n.anisotropy ? n.anisotropy : 1),
                  void 0 !== n.format && (a.format = n.format),
                  void 0 !== n.type && (a.type = n.type),
                  void 0 !== n.mipmaps &&
                    ((a.mipmaps = n.mipmaps), (a.minFilter = Me)),
                  1 === n.mipmapCount && (a.minFilter = fe),
                  (a.needsUpdate = !0),
                  t && t(a, n));
              },
              n,
              i
            ),
            a
          );
        },
      })),
      (Zh.prototype = Object.assign(Object.create(Fh.prototype), {
        constructor: Zh,
        load: function (e, t, n, i) {
          void 0 !== this.path && (e = this.path + e),
            (e = this.manager.resolveURL(e));
          var r = this,
            a = Ih.get(e);
          if (void 0 !== a)
            return (
              r.manager.itemStart(e),
              setTimeout(function () {
                t && t(a), r.manager.itemEnd(e);
              }, 0),
              a
            );
          var o = document.createElementNS(
            'http://www.w3.org/1999/xhtml',
            'img'
          );
          function s() {
            o.removeEventListener('load', s, !1),
              o.removeEventListener('error', c, !1),
              Ih.add(e, this),
              t && t(this),
              r.manager.itemEnd(e);
          }
          function c(t) {
            o.removeEventListener('load', s, !1),
              o.removeEventListener('error', c, !1),
              i && i(t),
              r.manager.itemError(e),
              r.manager.itemEnd(e);
          }
          return (
            o.addEventListener('load', s, !1),
            o.addEventListener('error', c, !1),
            'data:' !== e.substr(0, 5) &&
              void 0 !== this.crossOrigin &&
              (o.crossOrigin = this.crossOrigin),
            r.manager.itemStart(e),
            (o.src = e),
            o
          );
        },
      })),
      (Kh.prototype = Object.assign(Object.create(Fh.prototype), {
        constructor: Kh,
        load: function (e, t, n, i) {
          var r = new Hs(),
            a = new Zh(this.manager);
          a.setCrossOrigin(this.crossOrigin), a.setPath(this.path);
          var o = 0;
          function s(n) {
            a.load(
              e[n],
              function (e) {
                (r.images[n] = e),
                  o++,
                  6 === o && ((r.needsUpdate = !0), t && t(r));
              },
              void 0,
              i
            );
          }
          for (var c = 0; c < e.length; ++c) s(c);
          return r;
        },
      })),
      (Qh.prototype = Object.assign(Object.create(Fh.prototype), {
        constructor: Qh,
        load: function (e, t, n, i) {
          var r = new Mn(),
            a = new Zh(this.manager);
          return (
            a.setCrossOrigin(this.crossOrigin),
            a.setPath(this.path),
            a.load(
              e,
              function (n) {
                r.image = n;
                var i =
                  e.search(/\.jpe?g($|\?)/i) > 0 ||
                  0 === e.search(/^data\:image\/jpeg/);
                (r.format = i ? Ce : De),
                  (r.needsUpdate = !0),
                  void 0 !== t && t(r);
              },
              n,
              i
            ),
            r
          );
        },
      })),
      Object.assign($h.prototype, {
        getPoint: function () {
          return void 0, null;
        },
        getPointAt: function (e, t) {
          var n = this.getUtoTmapping(e);
          return this.getPoint(n, t);
        },
        getPoints: function (e) {
          void 0 === e && (e = 5);
          for (var t = [], n = 0; n <= e; n++) t.push(this.getPoint(n / e));
          return t;
        },
        getSpacedPoints: function (e) {
          void 0 === e && (e = 5);
          for (var t = [], n = 0; n <= e; n++) t.push(this.getPointAt(n / e));
          return t;
        },
        getLength: function () {
          var e = this.getLengths();
          return e[e.length - 1];
        },
        getLengths: function (e) {
          if (
            (void 0 === e && (e = this.arcLengthDivisions),
            this.cacheArcLengths &&
              this.cacheArcLengths.length === e + 1 &&
              !this.needsUpdate)
          )
            return this.cacheArcLengths;
          this.needsUpdate = !1;
          var t,
            n,
            i = [],
            r = this.getPoint(0),
            a = 0;
          for (i.push(0), n = 1; n <= e; n++)
            (t = this.getPoint(n / e)),
              (a += t.distanceTo(r)),
              i.push(a),
              (r = t);
          return (this.cacheArcLengths = i), i;
        },
        updateArcLengths: function () {
          (this.needsUpdate = !0), this.getLengths();
        },
        getUtoTmapping: function (e, t) {
          var n,
            i = this.getLengths(),
            r = 0,
            a = i.length;
          n = t || e * i[a - 1];
          var o,
            s = 0,
            c = a - 1;
          while (s <= c)
            if (((r = Math.floor(s + (c - s) / 2)), (o = i[r] - n), o < 0))
              s = r + 1;
            else {
              if (!(o > 0)) {
                c = r;
                break;
              }
              c = r - 1;
            }
          if (((r = c), i[r] === n)) return r / (a - 1);
          var u = i[r],
            l = i[r + 1],
            d = l - u,
            h = (n - u) / d,
            p = (r + h) / (a - 1);
          return p;
        },
        getTangent: function (e, t) {
          var n = 1e-4,
            i = e - n,
            r = e + n;
          i < 0 && (i = 0), r > 1 && (r = 1);
          var a = this.getPoint(i),
            o = this.getPoint(r),
            s = t || (a.isVector2 ? new pn() : new xn());
          return s.copy(o).sub(a).normalize(), s;
        },
        getTangentAt: function (e, t) {
          var n = this.getUtoTmapping(e);
          return this.getTangent(n, t);
        },
        computeFrenetFrames: function (e, t) {
          var n,
            i,
            r,
            a = new xn(),
            o = [],
            s = [],
            c = [],
            u = new xn(),
            l = new Cn();
          for (n = 0; n <= e; n++)
            (i = n / e),
              (o[n] = this.getTangentAt(i, new xn())),
              o[n].normalize();
          (s[0] = new xn()), (c[0] = new xn());
          var d = Number.MAX_VALUE,
            h = Math.abs(o[0].x),
            p = Math.abs(o[0].y),
            m = Math.abs(o[0].z);
          for (
            h <= d && ((d = h), a.set(1, 0, 0)),
              p <= d && ((d = p), a.set(0, 1, 0)),
              m <= d && a.set(0, 0, 1),
              u.crossVectors(o[0], a).normalize(),
              s[0].crossVectors(o[0], u),
              c[0].crossVectors(o[0], s[0]),
              n = 1;
            n <= e;
            n++
          )
            (s[n] = s[n - 1].clone()),
              (c[n] = c[n - 1].clone()),
              u.crossVectors(o[n - 1], o[n]),
              u.length() > Number.EPSILON &&
                (u.normalize(),
                (r = Math.acos(hn.clamp(o[n - 1].dot(o[n]), -1, 1))),
                s[n].applyMatrix4(l.makeRotationAxis(u, r))),
              c[n].crossVectors(o[n], s[n]);
          if (!0 === t)
            for (
              r = Math.acos(hn.clamp(s[0].dot(s[e]), -1, 1)),
                r /= e,
                o[0].dot(u.crossVectors(s[0], s[e])) > 0 && (r = -r),
                n = 1;
              n <= e;
              n++
            )
              s[n].applyMatrix4(l.makeRotationAxis(o[n], r * n)),
                c[n].crossVectors(o[n], s[n]);
          return { tangents: o, normals: s, binormals: c };
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          return (this.arcLengthDivisions = e.arcLengthDivisions), this;
        },
        toJSON: function () {
          var e = {
            metadata: {
              version: 4.5,
              type: 'Curve',
              generator: 'Curve.toJSON',
            },
          };
          return (
            (e.arcLengthDivisions = this.arcLengthDivisions),
            (e.type = this.type),
            e
          );
        },
        fromJSON: function (e) {
          return (this.arcLengthDivisions = e.arcLengthDivisions), this;
        },
      }),
      (ep.prototype = Object.create($h.prototype)),
      (ep.prototype.constructor = ep),
      (ep.prototype.isEllipseCurve = !0),
      (ep.prototype.getPoint = function (e, t) {
        var n = t || new pn(),
          i = 2 * Math.PI,
          r = this.aEndAngle - this.aStartAngle,
          a = Math.abs(r) < Number.EPSILON;
        while (r < 0) r += i;
        while (r > i) r -= i;
        r < Number.EPSILON && (r = a ? 0 : i),
          !0 !== this.aClockwise || a || (r === i ? (r = -i) : (r -= i));
        var o = this.aStartAngle + e * r,
          s = this.aX + this.xRadius * Math.cos(o),
          c = this.aY + this.yRadius * Math.sin(o);
        if (0 !== this.aRotation) {
          var u = Math.cos(this.aRotation),
            l = Math.sin(this.aRotation),
            d = s - this.aX,
            h = c - this.aY;
          (s = d * u - h * l + this.aX), (c = d * l + h * u + this.aY);
        }
        return n.set(s, c);
      }),
      (ep.prototype.copy = function (e) {
        return (
          $h.prototype.copy.call(this, e),
          (this.aX = e.aX),
          (this.aY = e.aY),
          (this.xRadius = e.xRadius),
          (this.yRadius = e.yRadius),
          (this.aStartAngle = e.aStartAngle),
          (this.aEndAngle = e.aEndAngle),
          (this.aClockwise = e.aClockwise),
          (this.aRotation = e.aRotation),
          this
        );
      }),
      (ep.prototype.toJSON = function () {
        var e = $h.prototype.toJSON.call(this);
        return (
          (e.aX = this.aX),
          (e.aY = this.aY),
          (e.xRadius = this.xRadius),
          (e.yRadius = this.yRadius),
          (e.aStartAngle = this.aStartAngle),
          (e.aEndAngle = this.aEndAngle),
          (e.aClockwise = this.aClockwise),
          (e.aRotation = this.aRotation),
          e
        );
      }),
      (ep.prototype.fromJSON = function (e) {
        return (
          $h.prototype.fromJSON.call(this, e),
          (this.aX = e.aX),
          (this.aY = e.aY),
          (this.xRadius = e.xRadius),
          (this.yRadius = e.yRadius),
          (this.aStartAngle = e.aStartAngle),
          (this.aEndAngle = e.aEndAngle),
          (this.aClockwise = e.aClockwise),
          (this.aRotation = e.aRotation),
          this
        );
      }),
      (tp.prototype = Object.create(ep.prototype)),
      (tp.prototype.constructor = tp),
      (tp.prototype.isArcCurve = !0);
    var ip = new xn(),
      rp = new np(),
      ap = new np(),
      op = new np();
    function sp(e, t, n, i) {
      $h.call(this),
        (this.type = 'CatmullRomCurve3'),
        (this.points = e || []),
        (this.closed = t || !1),
        (this.curveType = n || 'centripetal'),
        (this.tension = i || 0.5);
    }
    function cp(e, t, n, i, r) {
      var a = 0.5 * (i - t),
        o = 0.5 * (r - n),
        s = e * e,
        c = e * s;
      return (
        (2 * n - 2 * i + a + o) * c +
        (-3 * n + 3 * i - 2 * a - o) * s +
        a * e +
        n
      );
    }
    function up(e, t) {
      var n = 1 - e;
      return n * n * t;
    }
    function lp(e, t) {
      return 2 * (1 - e) * e * t;
    }
    function dp(e, t) {
      return e * e * t;
    }
    function hp(e, t, n, i) {
      return up(e, t) + lp(e, n) + dp(e, i);
    }
    function pp(e, t) {
      var n = 1 - e;
      return n * n * n * t;
    }
    function mp(e, t) {
      var n = 1 - e;
      return 3 * n * n * e * t;
    }
    function fp(e, t) {
      return 3 * (1 - e) * e * e * t;
    }
    function _p(e, t) {
      return e * e * e * t;
    }
    function Mp(e, t, n, i, r) {
      return pp(e, t) + mp(e, n) + fp(e, i) + _p(e, r);
    }
    function vp(e, t, n, i) {
      $h.call(this),
        (this.type = 'CubicBezierCurve'),
        (this.v0 = e || new pn()),
        (this.v1 = t || new pn()),
        (this.v2 = n || new pn()),
        (this.v3 = i || new pn());
    }
    function gp(e, t, n, i) {
      $h.call(this),
        (this.type = 'CubicBezierCurve3'),
        (this.v0 = e || new xn()),
        (this.v1 = t || new xn()),
        (this.v2 = n || new xn()),
        (this.v3 = i || new xn());
    }
    function yp(e, t) {
      $h.call(this),
        (this.type = 'LineCurve'),
        (this.v1 = e || new pn()),
        (this.v2 = t || new pn());
    }
    function bp(e, t) {
      $h.call(this),
        (this.type = 'LineCurve3'),
        (this.v1 = e || new xn()),
        (this.v2 = t || new xn());
    }
    function wp(e, t, n) {
      $h.call(this),
        (this.type = 'QuadraticBezierCurve'),
        (this.v0 = e || new pn()),
        (this.v1 = t || new pn()),
        (this.v2 = n || new pn());
    }
    function Ap(e, t, n) {
      $h.call(this),
        (this.type = 'QuadraticBezierCurve3'),
        (this.v0 = e || new xn()),
        (this.v1 = t || new xn()),
        (this.v2 = n || new xn());
    }
    function xp(e) {
      $h.call(this), (this.type = 'SplineCurve'), (this.points = e || []);
    }
    (sp.prototype = Object.create($h.prototype)),
      (sp.prototype.constructor = sp),
      (sp.prototype.isCatmullRomCurve3 = !0),
      (sp.prototype.getPoint = function (e, t) {
        var n,
          i,
          r,
          a,
          o = t || new xn(),
          s = this.points,
          c = s.length,
          u = (c - (this.closed ? 0 : 1)) * e,
          l = Math.floor(u),
          d = u - l;
        if (
          (this.closed
            ? (l += l > 0 ? 0 : (Math.floor(Math.abs(l) / c) + 1) * c)
            : 0 === d && l === c - 1 && ((l = c - 2), (d = 1)),
          this.closed || l > 0
            ? (n = s[(l - 1) % c])
            : (ip.subVectors(s[0], s[1]).add(s[0]), (n = ip)),
          (i = s[l % c]),
          (r = s[(l + 1) % c]),
          this.closed || l + 2 < c
            ? (a = s[(l + 2) % c])
            : (ip.subVectors(s[c - 1], s[c - 2]).add(s[c - 1]), (a = ip)),
          'centripetal' === this.curveType || 'chordal' === this.curveType)
        ) {
          var h = 'chordal' === this.curveType ? 0.5 : 0.25,
            p = Math.pow(n.distanceToSquared(i), h),
            m = Math.pow(i.distanceToSquared(r), h),
            f = Math.pow(r.distanceToSquared(a), h);
          m < 1e-4 && (m = 1),
            p < 1e-4 && (p = m),
            f < 1e-4 && (f = m),
            rp.initNonuniformCatmullRom(n.x, i.x, r.x, a.x, p, m, f),
            ap.initNonuniformCatmullRom(n.y, i.y, r.y, a.y, p, m, f),
            op.initNonuniformCatmullRom(n.z, i.z, r.z, a.z, p, m, f);
        } else
          'catmullrom' === this.curveType &&
            (rp.initCatmullRom(n.x, i.x, r.x, a.x, this.tension),
            ap.initCatmullRom(n.y, i.y, r.y, a.y, this.tension),
            op.initCatmullRom(n.z, i.z, r.z, a.z, this.tension));
        return o.set(rp.calc(d), ap.calc(d), op.calc(d)), o;
      }),
      (sp.prototype.copy = function (e) {
        $h.prototype.copy.call(this, e), (this.points = []);
        for (var t = 0, n = e.points.length; t < n; t++) {
          var i = e.points[t];
          this.points.push(i.clone());
        }
        return (
          (this.closed = e.closed),
          (this.curveType = e.curveType),
          (this.tension = e.tension),
          this
        );
      }),
      (sp.prototype.toJSON = function () {
        var e = $h.prototype.toJSON.call(this);
        e.points = [];
        for (var t = 0, n = this.points.length; t < n; t++) {
          var i = this.points[t];
          e.points.push(i.toArray());
        }
        return (
          (e.closed = this.closed),
          (e.curveType = this.curveType),
          (e.tension = this.tension),
          e
        );
      }),
      (sp.prototype.fromJSON = function (e) {
        $h.prototype.fromJSON.call(this, e), (this.points = []);
        for (var t = 0, n = e.points.length; t < n; t++) {
          var i = e.points[t];
          this.points.push(new xn().fromArray(i));
        }
        return (
          (this.closed = e.closed),
          (this.curveType = e.curveType),
          (this.tension = e.tension),
          this
        );
      }),
      (vp.prototype = Object.create($h.prototype)),
      (vp.prototype.constructor = vp),
      (vp.prototype.isCubicBezierCurve = !0),
      (vp.prototype.getPoint = function (e, t) {
        var n = t || new pn(),
          i = this.v0,
          r = this.v1,
          a = this.v2,
          o = this.v3;
        return n.set(Mp(e, i.x, r.x, a.x, o.x), Mp(e, i.y, r.y, a.y, o.y)), n;
      }),
      (vp.prototype.copy = function (e) {
        return (
          $h.prototype.copy.call(this, e),
          this.v0.copy(e.v0),
          this.v1.copy(e.v1),
          this.v2.copy(e.v2),
          this.v3.copy(e.v3),
          this
        );
      }),
      (vp.prototype.toJSON = function () {
        var e = $h.prototype.toJSON.call(this);
        return (
          (e.v0 = this.v0.toArray()),
          (e.v1 = this.v1.toArray()),
          (e.v2 = this.v2.toArray()),
          (e.v3 = this.v3.toArray()),
          e
        );
      }),
      (vp.prototype.fromJSON = function (e) {
        return (
          $h.prototype.fromJSON.call(this, e),
          this.v0.fromArray(e.v0),
          this.v1.fromArray(e.v1),
          this.v2.fromArray(e.v2),
          this.v3.fromArray(e.v3),
          this
        );
      }),
      (gp.prototype = Object.create($h.prototype)),
      (gp.prototype.constructor = gp),
      (gp.prototype.isCubicBezierCurve3 = !0),
      (gp.prototype.getPoint = function (e, t) {
        var n = t || new xn(),
          i = this.v0,
          r = this.v1,
          a = this.v2,
          o = this.v3;
        return (
          n.set(
            Mp(e, i.x, r.x, a.x, o.x),
            Mp(e, i.y, r.y, a.y, o.y),
            Mp(e, i.z, r.z, a.z, o.z)
          ),
          n
        );
      }),
      (gp.prototype.copy = function (e) {
        return (
          $h.prototype.copy.call(this, e),
          this.v0.copy(e.v0),
          this.v1.copy(e.v1),
          this.v2.copy(e.v2),
          this.v3.copy(e.v3),
          this
        );
      }),
      (gp.prototype.toJSON = function () {
        var e = $h.prototype.toJSON.call(this);
        return (
          (e.v0 = this.v0.toArray()),
          (e.v1 = this.v1.toArray()),
          (e.v2 = this.v2.toArray()),
          (e.v3 = this.v3.toArray()),
          e
        );
      }),
      (gp.prototype.fromJSON = function (e) {
        return (
          $h.prototype.fromJSON.call(this, e),
          this.v0.fromArray(e.v0),
          this.v1.fromArray(e.v1),
          this.v2.fromArray(e.v2),
          this.v3.fromArray(e.v3),
          this
        );
      }),
      (yp.prototype = Object.create($h.prototype)),
      (yp.prototype.constructor = yp),
      (yp.prototype.isLineCurve = !0),
      (yp.prototype.getPoint = function (e, t) {
        var n = t || new pn();
        return (
          1 === e
            ? n.copy(this.v2)
            : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)),
          n
        );
      }),
      (yp.prototype.getPointAt = function (e, t) {
        return this.getPoint(e, t);
      }),
      (yp.prototype.getTangent = function (e, t) {
        var n = t || new pn();
        n = n.copy(this.v2).sub(this.v1).normalize();
        return n;
      }),
      (yp.prototype.copy = function (e) {
        return (
          $h.prototype.copy.call(this, e),
          this.v1.copy(e.v1),
          this.v2.copy(e.v2),
          this
        );
      }),
      (yp.prototype.toJSON = function () {
        var e = $h.prototype.toJSON.call(this);
        return (e.v1 = this.v1.toArray()), (e.v2 = this.v2.toArray()), e;
      }),
      (yp.prototype.fromJSON = function (e) {
        return (
          $h.prototype.fromJSON.call(this, e),
          this.v1.fromArray(e.v1),
          this.v2.fromArray(e.v2),
          this
        );
      }),
      (bp.prototype = Object.create($h.prototype)),
      (bp.prototype.constructor = bp),
      (bp.prototype.isLineCurve3 = !0),
      (bp.prototype.getPoint = function (e, t) {
        var n = t || new xn();
        return (
          1 === e
            ? n.copy(this.v2)
            : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)),
          n
        );
      }),
      (bp.prototype.getPointAt = function (e, t) {
        return this.getPoint(e, t);
      }),
      (bp.prototype.copy = function (e) {
        return (
          $h.prototype.copy.call(this, e),
          this.v1.copy(e.v1),
          this.v2.copy(e.v2),
          this
        );
      }),
      (bp.prototype.toJSON = function () {
        var e = $h.prototype.toJSON.call(this);
        return (e.v1 = this.v1.toArray()), (e.v2 = this.v2.toArray()), e;
      }),
      (bp.prototype.fromJSON = function (e) {
        return (
          $h.prototype.fromJSON.call(this, e),
          this.v1.fromArray(e.v1),
          this.v2.fromArray(e.v2),
          this
        );
      }),
      (wp.prototype = Object.create($h.prototype)),
      (wp.prototype.constructor = wp),
      (wp.prototype.isQuadraticBezierCurve = !0),
      (wp.prototype.getPoint = function (e, t) {
        var n = t || new pn(),
          i = this.v0,
          r = this.v1,
          a = this.v2;
        return n.set(hp(e, i.x, r.x, a.x), hp(e, i.y, r.y, a.y)), n;
      }),
      (wp.prototype.copy = function (e) {
        return (
          $h.prototype.copy.call(this, e),
          this.v0.copy(e.v0),
          this.v1.copy(e.v1),
          this.v2.copy(e.v2),
          this
        );
      }),
      (wp.prototype.toJSON = function () {
        var e = $h.prototype.toJSON.call(this);
        return (
          (e.v0 = this.v0.toArray()),
          (e.v1 = this.v1.toArray()),
          (e.v2 = this.v2.toArray()),
          e
        );
      }),
      (wp.prototype.fromJSON = function (e) {
        return (
          $h.prototype.fromJSON.call(this, e),
          this.v0.fromArray(e.v0),
          this.v1.fromArray(e.v1),
          this.v2.fromArray(e.v2),
          this
        );
      }),
      (Ap.prototype = Object.create($h.prototype)),
      (Ap.prototype.constructor = Ap),
      (Ap.prototype.isQuadraticBezierCurve3 = !0),
      (Ap.prototype.getPoint = function (e, t) {
        var n = t || new xn(),
          i = this.v0,
          r = this.v1,
          a = this.v2;
        return (
          n.set(
            hp(e, i.x, r.x, a.x),
            hp(e, i.y, r.y, a.y),
            hp(e, i.z, r.z, a.z)
          ),
          n
        );
      }),
      (Ap.prototype.copy = function (e) {
        return (
          $h.prototype.copy.call(this, e),
          this.v0.copy(e.v0),
          this.v1.copy(e.v1),
          this.v2.copy(e.v2),
          this
        );
      }),
      (Ap.prototype.toJSON = function () {
        var e = $h.prototype.toJSON.call(this);
        return (
          (e.v0 = this.v0.toArray()),
          (e.v1 = this.v1.toArray()),
          (e.v2 = this.v2.toArray()),
          e
        );
      }),
      (Ap.prototype.fromJSON = function (e) {
        return (
          $h.prototype.fromJSON.call(this, e),
          this.v0.fromArray(e.v0),
          this.v1.fromArray(e.v1),
          this.v2.fromArray(e.v2),
          this
        );
      }),
      (xp.prototype = Object.create($h.prototype)),
      (xp.prototype.constructor = xp),
      (xp.prototype.isSplineCurve = !0),
      (xp.prototype.getPoint = function (e, t) {
        var n = t || new pn(),
          i = this.points,
          r = (i.length - 1) * e,
          a = Math.floor(r),
          o = r - a,
          s = i[0 === a ? a : a - 1],
          c = i[a],
          u = i[a > i.length - 2 ? i.length - 1 : a + 1],
          l = i[a > i.length - 3 ? i.length - 1 : a + 2];
        return n.set(cp(o, s.x, c.x, u.x, l.x), cp(o, s.y, c.y, u.y, l.y)), n;
      }),
      (xp.prototype.copy = function (e) {
        $h.prototype.copy.call(this, e), (this.points = []);
        for (var t = 0, n = e.points.length; t < n; t++) {
          var i = e.points[t];
          this.points.push(i.clone());
        }
        return this;
      }),
      (xp.prototype.toJSON = function () {
        var e = $h.prototype.toJSON.call(this);
        e.points = [];
        for (var t = 0, n = this.points.length; t < n; t++) {
          var i = this.points[t];
          e.points.push(i.toArray());
        }
        return e;
      }),
      (xp.prototype.fromJSON = function (e) {
        $h.prototype.fromJSON.call(this, e), (this.points = []);
        for (var t = 0, n = e.points.length; t < n; t++) {
          var i = e.points[t];
          this.points.push(new pn().fromArray(i));
        }
        return this;
      });
    var Lp = Object.freeze({
      __proto__: null,
      ArcCurve: tp,
      CatmullRomCurve3: sp,
      CubicBezierCurve: vp,
      CubicBezierCurve3: gp,
      EllipseCurve: ep,
      LineCurve: yp,
      LineCurve3: bp,
      QuadraticBezierCurve: wp,
      QuadraticBezierCurve3: Ap,
      SplineCurve: xp,
    });
    function Tp() {
      $h.call(this),
        (this.type = 'CurvePath'),
        (this.curves = []),
        (this.autoClose = !1);
    }
    function zp(e) {
      Tp.call(this),
        (this.type = 'Path'),
        (this.currentPoint = new pn()),
        e && this.setFromPoints(e);
    }
    function Sp(e) {
      zp.call(this, e),
        (this.uuid = hn.generateUUID()),
        (this.type = 'Shape'),
        (this.holes = []);
    }
    function Op(e, t) {
      Zn.call(this),
        (this.type = 'Light'),
        (this.color = new Ii(e)),
        (this.intensity = void 0 !== t ? t : 1),
        (this.receiveShadow = void 0);
    }
    function Ep(e, t, n) {
      Op.call(this, e, n),
        (this.type = 'HemisphereLight'),
        (this.castShadow = void 0),
        this.position.copy(Zn.DefaultUp),
        this.updateMatrix(),
        (this.groundColor = new Ii(t));
    }
    function kp(e) {
      (this.camera = e),
        (this.bias = 0),
        (this.radius = 1),
        (this.mapSize = new pn(512, 512)),
        (this.map = null),
        (this.mapPass = null),
        (this.matrix = new Cn()),
        (this._frustum = new ra()),
        (this._frameExtents = new pn(1, 1)),
        (this._viewportCount = 1),
        (this._viewports = [new vn(0, 0, 1, 1)]);
    }
    function Cp() {
      kp.call(this, new Zr(50, 1, 0.5, 500));
    }
    function Dp(e, t, n, i, r, a) {
      Op.call(this, e, t),
        (this.type = 'SpotLight'),
        this.position.copy(Zn.DefaultUp),
        this.updateMatrix(),
        (this.target = new Zn()),
        Object.defineProperty(this, 'power', {
          get: function () {
            return this.intensity * Math.PI;
          },
          set: function (e) {
            this.intensity = e / Math.PI;
          },
        }),
        (this.distance = void 0 !== n ? n : 0),
        (this.angle = void 0 !== i ? i : Math.PI / 3),
        (this.penumbra = void 0 !== r ? r : 0),
        (this.decay = void 0 !== a ? a : 1),
        (this.shadow = new Cp());
    }
    function Np() {
      kp.call(this, new Zr(90, 1, 0.5, 500)),
        (this._frameExtents = new pn(4, 2)),
        (this._viewportCount = 6),
        (this._viewports = [
          new vn(2, 1, 1, 1),
          new vn(0, 1, 1, 1),
          new vn(3, 1, 1, 1),
          new vn(1, 1, 1, 1),
          new vn(3, 0, 1, 1),
          new vn(1, 0, 1, 1),
        ]),
        (this._cubeDirections = [
          new xn(1, 0, 0),
          new xn(-1, 0, 0),
          new xn(0, 0, 1),
          new xn(0, 0, -1),
          new xn(0, 1, 0),
          new xn(0, -1, 0),
        ]),
        (this._cubeUps = [
          new xn(0, 1, 0),
          new xn(0, 1, 0),
          new xn(0, 1, 0),
          new xn(0, 1, 0),
          new xn(0, 0, 1),
          new xn(0, 0, -1),
        ]);
    }
    function Pp(e, t, n, i) {
      Op.call(this, e, t),
        (this.type = 'PointLight'),
        Object.defineProperty(this, 'power', {
          get: function () {
            return 4 * this.intensity * Math.PI;
          },
          set: function (e) {
            this.intensity = e / (4 * Math.PI);
          },
        }),
        (this.distance = void 0 !== n ? n : 0),
        (this.decay = void 0 !== i ? i : 1),
        (this.shadow = new Np());
    }
    function jp(e, t, n, i, r, a) {
      Jr.call(this),
        (this.type = 'OrthographicCamera'),
        (this.zoom = 1),
        (this.view = null),
        (this.left = void 0 !== e ? e : -1),
        (this.right = void 0 !== t ? t : 1),
        (this.top = void 0 !== n ? n : 1),
        (this.bottom = void 0 !== i ? i : -1),
        (this.near = void 0 !== r ? r : 0.1),
        (this.far = void 0 !== a ? a : 2e3),
        this.updateProjectionMatrix();
    }
    function Yp() {
      kp.call(this, new jp(-5, 5, 5, -5, 0.5, 500));
    }
    function Rp(e, t) {
      Op.call(this, e, t),
        (this.type = 'DirectionalLight'),
        this.position.copy(Zn.DefaultUp),
        this.updateMatrix(),
        (this.target = new Zn()),
        (this.shadow = new Yp());
    }
    function Bp(e, t) {
      Op.call(this, e, t),
        (this.type = 'AmbientLight'),
        (this.castShadow = void 0);
    }
    function Wp(e, t, n, i) {
      Op.call(this, e, t),
        (this.type = 'RectAreaLight'),
        (this.width = void 0 !== n ? n : 10),
        (this.height = void 0 !== i ? i : 10);
    }
    function Ip() {
      this.coefficients = [];
      for (var e = 0; e < 9; e++) this.coefficients.push(new xn());
    }
    function qp(e, t) {
      Op.call(this, void 0, t),
        (this.type = 'LightProbe'),
        (this.sh = void 0 !== e ? e : new Ip());
    }
    function Hp(e) {
      Fh.call(this, e), (this.textures = {});
    }
    (Tp.prototype = Object.assign(Object.create($h.prototype), {
      constructor: Tp,
      add: function (e) {
        this.curves.push(e);
      },
      closePath: function () {
        var e = this.curves[0].getPoint(0),
          t = this.curves[this.curves.length - 1].getPoint(1);
        e.equals(t) || this.curves.push(new yp(t, e));
      },
      getPoint: function (e) {
        var t = e * this.getLength(),
          n = this.getCurveLengths(),
          i = 0;
        while (i < n.length) {
          if (n[i] >= t) {
            var r = n[i] - t,
              a = this.curves[i],
              o = a.getLength(),
              s = 0 === o ? 0 : 1 - r / o;
            return a.getPointAt(s);
          }
          i++;
        }
        return null;
      },
      getLength: function () {
        var e = this.getCurveLengths();
        return e[e.length - 1];
      },
      updateArcLengths: function () {
        (this.needsUpdate = !0),
          (this.cacheLengths = null),
          this.getCurveLengths();
      },
      getCurveLengths: function () {
        if (
          this.cacheLengths &&
          this.cacheLengths.length === this.curves.length
        )
          return this.cacheLengths;
        for (var e = [], t = 0, n = 0, i = this.curves.length; n < i; n++)
          (t += this.curves[n].getLength()), e.push(t);
        return (this.cacheLengths = e), e;
      },
      getSpacedPoints: function (e) {
        void 0 === e && (e = 40);
        for (var t = [], n = 0; n <= e; n++) t.push(this.getPoint(n / e));
        return this.autoClose && t.push(t[0]), t;
      },
      getPoints: function (e) {
        e = e || 12;
        for (var t, n = [], i = 0, r = this.curves; i < r.length; i++)
          for (
            var a = r[i],
              o =
                a && a.isEllipseCurve
                  ? 2 * e
                  : a && (a.isLineCurve || a.isLineCurve3)
                  ? 1
                  : a && a.isSplineCurve
                  ? e * a.points.length
                  : e,
              s = a.getPoints(o),
              c = 0;
            c < s.length;
            c++
          ) {
            var u = s[c];
            (t && t.equals(u)) || (n.push(u), (t = u));
          }
        return (
          this.autoClose &&
            n.length > 1 &&
            !n[n.length - 1].equals(n[0]) &&
            n.push(n[0]),
          n
        );
      },
      copy: function (e) {
        $h.prototype.copy.call(this, e), (this.curves = []);
        for (var t = 0, n = e.curves.length; t < n; t++) {
          var i = e.curves[t];
          this.curves.push(i.clone());
        }
        return (this.autoClose = e.autoClose), this;
      },
      toJSON: function () {
        var e = $h.prototype.toJSON.call(this);
        (e.autoClose = this.autoClose), (e.curves = []);
        for (var t = 0, n = this.curves.length; t < n; t++) {
          var i = this.curves[t];
          e.curves.push(i.toJSON());
        }
        return e;
      },
      fromJSON: function (e) {
        $h.prototype.fromJSON.call(this, e),
          (this.autoClose = e.autoClose),
          (this.curves = []);
        for (var t = 0, n = e.curves.length; t < n; t++) {
          var i = e.curves[t];
          this.curves.push(new Lp[i.type]().fromJSON(i));
        }
        return this;
      },
    })),
      (zp.prototype = Object.assign(Object.create(Tp.prototype), {
        constructor: zp,
        setFromPoints: function (e) {
          this.moveTo(e[0].x, e[0].y);
          for (var t = 1, n = e.length; t < n; t++) this.lineTo(e[t].x, e[t].y);
          return this;
        },
        moveTo: function (e, t) {
          return this.currentPoint.set(e, t), this;
        },
        lineTo: function (e, t) {
          var n = new yp(this.currentPoint.clone(), new pn(e, t));
          return this.curves.push(n), this.currentPoint.set(e, t), this;
        },
        quadraticCurveTo: function (e, t, n, i) {
          var r = new wp(this.currentPoint.clone(), new pn(e, t), new pn(n, i));
          return this.curves.push(r), this.currentPoint.set(n, i), this;
        },
        bezierCurveTo: function (e, t, n, i, r, a) {
          var o = new vp(
            this.currentPoint.clone(),
            new pn(e, t),
            new pn(n, i),
            new pn(r, a)
          );
          return this.curves.push(o), this.currentPoint.set(r, a), this;
        },
        splineThru: function (e) {
          var t = [this.currentPoint.clone()].concat(e),
            n = new xp(t);
          return (
            this.curves.push(n), this.currentPoint.copy(e[e.length - 1]), this
          );
        },
        arc: function (e, t, n, i, r, a) {
          var o = this.currentPoint.x,
            s = this.currentPoint.y;
          return this.absarc(e + o, t + s, n, i, r, a), this;
        },
        absarc: function (e, t, n, i, r, a) {
          return this.absellipse(e, t, n, n, i, r, a), this;
        },
        ellipse: function (e, t, n, i, r, a, o, s) {
          var c = this.currentPoint.x,
            u = this.currentPoint.y;
          return this.absellipse(e + c, t + u, n, i, r, a, o, s), this;
        },
        absellipse: function (e, t, n, i, r, a, o, s) {
          var c = new ep(e, t, n, i, r, a, o, s);
          if (this.curves.length > 0) {
            var u = c.getPoint(0);
            u.equals(this.currentPoint) || this.lineTo(u.x, u.y);
          }
          this.curves.push(c);
          var l = c.getPoint(1);
          return this.currentPoint.copy(l), this;
        },
        copy: function (e) {
          return (
            Tp.prototype.copy.call(this, e),
            this.currentPoint.copy(e.currentPoint),
            this
          );
        },
        toJSON: function () {
          var e = Tp.prototype.toJSON.call(this);
          return (e.currentPoint = this.currentPoint.toArray()), e;
        },
        fromJSON: function (e) {
          return (
            Tp.prototype.fromJSON.call(this, e),
            this.currentPoint.fromArray(e.currentPoint),
            this
          );
        },
      })),
      (Sp.prototype = Object.assign(Object.create(zp.prototype), {
        constructor: Sp,
        getPointsHoles: function (e) {
          for (var t = [], n = 0, i = this.holes.length; n < i; n++)
            t[n] = this.holes[n].getPoints(e);
          return t;
        },
        extractPoints: function (e) {
          return { shape: this.getPoints(e), holes: this.getPointsHoles(e) };
        },
        copy: function (e) {
          zp.prototype.copy.call(this, e), (this.holes = []);
          for (var t = 0, n = e.holes.length; t < n; t++) {
            var i = e.holes[t];
            this.holes.push(i.clone());
          }
          return this;
        },
        toJSON: function () {
          var e = zp.prototype.toJSON.call(this);
          (e.uuid = this.uuid), (e.holes = []);
          for (var t = 0, n = this.holes.length; t < n; t++) {
            var i = this.holes[t];
            e.holes.push(i.toJSON());
          }
          return e;
        },
        fromJSON: function (e) {
          zp.prototype.fromJSON.call(this, e),
            (this.uuid = e.uuid),
            (this.holes = []);
          for (var t = 0, n = e.holes.length; t < n; t++) {
            var i = e.holes[t];
            this.holes.push(new zp().fromJSON(i));
          }
          return this;
        },
      })),
      (Op.prototype = Object.assign(Object.create(Zn.prototype), {
        constructor: Op,
        isLight: !0,
        copy: function (e) {
          return (
            Zn.prototype.copy.call(this, e),
            this.color.copy(e.color),
            (this.intensity = e.intensity),
            this
          );
        },
        toJSON: function (e) {
          var t = Zn.prototype.toJSON.call(this, e);
          return (
            (t.object.color = this.color.getHex()),
            (t.object.intensity = this.intensity),
            void 0 !== this.groundColor &&
              (t.object.groundColor = this.groundColor.getHex()),
            void 0 !== this.distance && (t.object.distance = this.distance),
            void 0 !== this.angle && (t.object.angle = this.angle),
            void 0 !== this.decay && (t.object.decay = this.decay),
            void 0 !== this.penumbra && (t.object.penumbra = this.penumbra),
            void 0 !== this.shadow && (t.object.shadow = this.shadow.toJSON()),
            t
          );
        },
      })),
      (Ep.prototype = Object.assign(Object.create(Op.prototype), {
        constructor: Ep,
        isHemisphereLight: !0,
        copy: function (e) {
          return (
            Op.prototype.copy.call(this, e),
            this.groundColor.copy(e.groundColor),
            this
          );
        },
      })),
      Object.assign(kp.prototype, {
        _projScreenMatrix: new Cn(),
        _lightPositionWorld: new xn(),
        _lookTarget: new xn(),
        getViewportCount: function () {
          return this._viewportCount;
        },
        getFrustum: function () {
          return this._frustum;
        },
        updateMatrices: function (e) {
          var t = this.camera,
            n = this.matrix,
            i = this._projScreenMatrix,
            r = this._lookTarget,
            a = this._lightPositionWorld;
          a.setFromMatrixPosition(e.matrixWorld),
            t.position.copy(a),
            r.setFromMatrixPosition(e.target.matrixWorld),
            t.lookAt(r),
            t.updateMatrixWorld(),
            i.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse),
            this._frustum.setFromProjectionMatrix(i),
            n.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1),
            n.multiply(t.projectionMatrix),
            n.multiply(t.matrixWorldInverse);
        },
        getViewport: function (e) {
          return this._viewports[e];
        },
        getFrameExtents: function () {
          return this._frameExtents;
        },
        copy: function (e) {
          return (
            (this.camera = e.camera.clone()),
            (this.bias = e.bias),
            (this.radius = e.radius),
            this.mapSize.copy(e.mapSize),
            this
          );
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
        toJSON: function () {
          var e = {};
          return (
            0 !== this.bias && (e.bias = this.bias),
            1 !== this.radius && (e.radius = this.radius),
            (512 === this.mapSize.x && 512 === this.mapSize.y) ||
              (e.mapSize = this.mapSize.toArray()),
            (e.camera = this.camera.toJSON(!1).object),
            delete e.camera.matrix,
            e
          );
        },
      }),
      (Cp.prototype = Object.assign(Object.create(kp.prototype), {
        constructor: Cp,
        isSpotLightShadow: !0,
        updateMatrices: function (e) {
          var t = this.camera,
            n = 2 * hn.RAD2DEG * e.angle,
            i = this.mapSize.width / this.mapSize.height,
            r = e.distance || t.far;
          (n === t.fov && i === t.aspect && r === t.far) ||
            ((t.fov = n),
            (t.aspect = i),
            (t.far = r),
            t.updateProjectionMatrix()),
            kp.prototype.updateMatrices.call(this, e);
        },
      })),
      (Dp.prototype = Object.assign(Object.create(Op.prototype), {
        constructor: Dp,
        isSpotLight: !0,
        copy: function (e) {
          return (
            Op.prototype.copy.call(this, e),
            (this.distance = e.distance),
            (this.angle = e.angle),
            (this.penumbra = e.penumbra),
            (this.decay = e.decay),
            (this.target = e.target.clone()),
            (this.shadow = e.shadow.clone()),
            this
          );
        },
      })),
      (Np.prototype = Object.assign(Object.create(kp.prototype), {
        constructor: Np,
        isPointLightShadow: !0,
        updateMatrices: function (e, t) {
          void 0 === t && (t = 0);
          var n = this.camera,
            i = this.matrix,
            r = this._lightPositionWorld,
            a = this._lookTarget,
            o = this._projScreenMatrix;
          r.setFromMatrixPosition(e.matrixWorld),
            n.position.copy(r),
            a.copy(n.position),
            a.add(this._cubeDirections[t]),
            n.up.copy(this._cubeUps[t]),
            n.lookAt(a),
            n.updateMatrixWorld(),
            i.makeTranslation(-r.x, -r.y, -r.z),
            o.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse),
            this._frustum.setFromProjectionMatrix(o);
        },
      })),
      (Pp.prototype = Object.assign(Object.create(Op.prototype), {
        constructor: Pp,
        isPointLight: !0,
        copy: function (e) {
          return (
            Op.prototype.copy.call(this, e),
            (this.distance = e.distance),
            (this.decay = e.decay),
            (this.shadow = e.shadow.clone()),
            this
          );
        },
      })),
      (jp.prototype = Object.assign(Object.create(Jr.prototype), {
        constructor: jp,
        isOrthographicCamera: !0,
        copy: function (e, t) {
          return (
            Jr.prototype.copy.call(this, e, t),
            (this.left = e.left),
            (this.right = e.right),
            (this.top = e.top),
            (this.bottom = e.bottom),
            (this.near = e.near),
            (this.far = e.far),
            (this.zoom = e.zoom),
            (this.view = null === e.view ? null : Object.assign({}, e.view)),
            this
          );
        },
        setViewOffset: function (e, t, n, i, r, a) {
          null === this.view &&
            (this.view = {
              enabled: !0,
              fullWidth: 1,
              fullHeight: 1,
              offsetX: 0,
              offsetY: 0,
              width: 1,
              height: 1,
            }),
            (this.view.enabled = !0),
            (this.view.fullWidth = e),
            (this.view.fullHeight = t),
            (this.view.offsetX = n),
            (this.view.offsetY = i),
            (this.view.width = r),
            (this.view.height = a),
            this.updateProjectionMatrix();
        },
        clearViewOffset: function () {
          null !== this.view && (this.view.enabled = !1),
            this.updateProjectionMatrix();
        },
        updateProjectionMatrix: function () {
          var e = (this.right - this.left) / (2 * this.zoom),
            t = (this.top - this.bottom) / (2 * this.zoom),
            n = (this.right + this.left) / 2,
            i = (this.top + this.bottom) / 2,
            r = n - e,
            a = n + e,
            o = i + t,
            s = i - t;
          if (null !== this.view && this.view.enabled) {
            var c = (this.right - this.left) / this.view.fullWidth / this.zoom,
              u = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
            (r += c * this.view.offsetX),
              (a = r + c * this.view.width),
              (o -= u * this.view.offsetY),
              (s = o - u * this.view.height);
          }
          this.projectionMatrix.makeOrthographic(
            r,
            a,
            o,
            s,
            this.near,
            this.far
          ),
            this.projectionMatrixInverse.getInverse(this.projectionMatrix);
        },
        toJSON: function (e) {
          var t = Zn.prototype.toJSON.call(this, e);
          return (
            (t.object.zoom = this.zoom),
            (t.object.left = this.left),
            (t.object.right = this.right),
            (t.object.top = this.top),
            (t.object.bottom = this.bottom),
            (t.object.near = this.near),
            (t.object.far = this.far),
            null !== this.view &&
              (t.object.view = Object.assign({}, this.view)),
            t
          );
        },
      })),
      (Yp.prototype = Object.assign(Object.create(kp.prototype), {
        constructor: Yp,
        isDirectionalLightShadow: !0,
        updateMatrices: function (e) {
          kp.prototype.updateMatrices.call(this, e);
        },
      })),
      (Rp.prototype = Object.assign(Object.create(Op.prototype), {
        constructor: Rp,
        isDirectionalLight: !0,
        copy: function (e) {
          return (
            Op.prototype.copy.call(this, e),
            (this.target = e.target.clone()),
            (this.shadow = e.shadow.clone()),
            this
          );
        },
      })),
      (Bp.prototype = Object.assign(Object.create(Op.prototype), {
        constructor: Bp,
        isAmbientLight: !0,
      })),
      (Wp.prototype = Object.assign(Object.create(Op.prototype), {
        constructor: Wp,
        isRectAreaLight: !0,
        copy: function (e) {
          return (
            Op.prototype.copy.call(this, e),
            (this.width = e.width),
            (this.height = e.height),
            this
          );
        },
        toJSON: function (e) {
          var t = Op.prototype.toJSON.call(this, e);
          return (
            (t.object.width = this.width), (t.object.height = this.height), t
          );
        },
      })),
      Object.assign(Ip.prototype, {
        isSphericalHarmonics3: !0,
        set: function (e) {
          for (var t = 0; t < 9; t++) this.coefficients[t].copy(e[t]);
          return this;
        },
        zero: function () {
          for (var e = 0; e < 9; e++) this.coefficients[e].set(0, 0, 0);
          return this;
        },
        getAt: function (e, t) {
          var n = e.x,
            i = e.y,
            r = e.z,
            a = this.coefficients;
          return (
            t.copy(a[0]).multiplyScalar(0.282095),
            t.addScaledVector(a[1], 0.488603 * i),
            t.addScaledVector(a[2], 0.488603 * r),
            t.addScaledVector(a[3], 0.488603 * n),
            t.addScaledVector(a[4], 1.092548 * (n * i)),
            t.addScaledVector(a[5], 1.092548 * (i * r)),
            t.addScaledVector(a[6], 0.315392 * (3 * r * r - 1)),
            t.addScaledVector(a[7], 1.092548 * (n * r)),
            t.addScaledVector(a[8], 0.546274 * (n * n - i * i)),
            t
          );
        },
        getIrradianceAt: function (e, t) {
          var n = e.x,
            i = e.y,
            r = e.z,
            a = this.coefficients;
          return (
            t.copy(a[0]).multiplyScalar(0.886227),
            t.addScaledVector(a[1], 2 * 0.511664 * i),
            t.addScaledVector(a[2], 2 * 0.511664 * r),
            t.addScaledVector(a[3], 2 * 0.511664 * n),
            t.addScaledVector(a[4], 2 * 0.429043 * n * i),
            t.addScaledVector(a[5], 2 * 0.429043 * i * r),
            t.addScaledVector(a[6], 0.743125 * r * r - 0.247708),
            t.addScaledVector(a[7], 2 * 0.429043 * n * r),
            t.addScaledVector(a[8], 0.429043 * (n * n - i * i)),
            t
          );
        },
        add: function (e) {
          for (var t = 0; t < 9; t++)
            this.coefficients[t].add(e.coefficients[t]);
          return this;
        },
        addScaledSH: function (e, t) {
          for (var n = 0; n < 9; n++)
            this.coefficients[n].addScaledVector(e.coefficients[n], t);
          return this;
        },
        scale: function (e) {
          for (var t = 0; t < 9; t++) this.coefficients[t].multiplyScalar(e);
          return this;
        },
        lerp: function (e, t) {
          for (var n = 0; n < 9; n++)
            this.coefficients[n].lerp(e.coefficients[n], t);
          return this;
        },
        equals: function (e) {
          for (var t = 0; t < 9; t++)
            if (!this.coefficients[t].equals(e.coefficients[t])) return !1;
          return !0;
        },
        copy: function (e) {
          return this.set(e.coefficients);
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
        fromArray: function (e, t) {
          void 0 === t && (t = 0);
          for (var n = this.coefficients, i = 0; i < 9; i++)
            n[i].fromArray(e, t + 3 * i);
          return this;
        },
        toArray: function (e, t) {
          void 0 === e && (e = []), void 0 === t && (t = 0);
          for (var n = this.coefficients, i = 0; i < 9; i++)
            n[i].toArray(e, t + 3 * i);
          return e;
        },
      }),
      Object.assign(Ip, {
        getBasisAt: function (e, t) {
          var n = e.x,
            i = e.y,
            r = e.z;
          (t[0] = 0.282095),
            (t[1] = 0.488603 * i),
            (t[2] = 0.488603 * r),
            (t[3] = 0.488603 * n),
            (t[4] = 1.092548 * n * i),
            (t[5] = 1.092548 * i * r),
            (t[6] = 0.315392 * (3 * r * r - 1)),
            (t[7] = 1.092548 * n * r),
            (t[8] = 0.546274 * (n * n - i * i));
        },
      }),
      (qp.prototype = Object.assign(Object.create(Op.prototype), {
        constructor: qp,
        isLightProbe: !0,
        copy: function (e) {
          return Op.prototype.copy.call(this, e), this.sh.copy(e.sh), this;
        },
        fromJSON: function (e) {
          return (this.intensity = e.intensity), this.sh.fromArray(e.sh), this;
        },
        toJSON: function (e) {
          var t = Op.prototype.toJSON.call(this, e);
          return (t.object.sh = this.sh.toArray()), t;
        },
      })),
      (Hp.prototype = Object.assign(Object.create(Fh.prototype), {
        constructor: Hp,
        load: function (e, t, n, i) {
          var r = this,
            a = new Xh(r.manager);
          a.setPath(r.path),
            a.load(
              e,
              function (e) {
                t(r.parse(JSON.parse(e)));
              },
              n,
              i
            );
        },
        parse: function (e) {
          var t = this.textures;
          function n(e) {
            return void 0 === t[e] && void 0, t[e];
          }
          var i = new xh[e.type]();
          if (
            (void 0 !== e.uuid && (i.uuid = e.uuid),
            void 0 !== e.name && (i.name = e.name),
            void 0 !== e.color && i.color.setHex(e.color),
            void 0 !== e.roughness && (i.roughness = e.roughness),
            void 0 !== e.metalness && (i.metalness = e.metalness),
            void 0 !== e.sheen && (i.sheen = new Ii().setHex(e.sheen)),
            void 0 !== e.emissive && i.emissive.setHex(e.emissive),
            void 0 !== e.specular && i.specular.setHex(e.specular),
            void 0 !== e.shininess && (i.shininess = e.shininess),
            void 0 !== e.clearcoat && (i.clearcoat = e.clearcoat),
            void 0 !== e.clearcoatRoughness &&
              (i.clearcoatRoughness = e.clearcoatRoughness),
            void 0 !== e.fog && (i.fog = e.fog),
            void 0 !== e.flatShading && (i.flatShading = e.flatShading),
            void 0 !== e.blending && (i.blending = e.blending),
            void 0 !== e.combine && (i.combine = e.combine),
            void 0 !== e.side && (i.side = e.side),
            void 0 !== e.opacity && (i.opacity = e.opacity),
            void 0 !== e.transparent && (i.transparent = e.transparent),
            void 0 !== e.alphaTest && (i.alphaTest = e.alphaTest),
            void 0 !== e.depthTest && (i.depthTest = e.depthTest),
            void 0 !== e.depthWrite && (i.depthWrite = e.depthWrite),
            void 0 !== e.colorWrite && (i.colorWrite = e.colorWrite),
            void 0 !== e.stencilWrite && (i.stencilWrite = e.stencilWrite),
            void 0 !== e.stencilWriteMask &&
              (i.stencilWriteMask = e.stencilWriteMask),
            void 0 !== e.stencilFunc && (i.stencilFunc = e.stencilFunc),
            void 0 !== e.stencilRef && (i.stencilRef = e.stencilRef),
            void 0 !== e.stencilFuncMask &&
              (i.stencilFuncMask = e.stencilFuncMask),
            void 0 !== e.stencilFail && (i.stencilFail = e.stencilFail),
            void 0 !== e.stencilZFail && (i.stencilZFail = e.stencilZFail),
            void 0 !== e.stencilZPass && (i.stencilZPass = e.stencilZPass),
            void 0 !== e.wireframe && (i.wireframe = e.wireframe),
            void 0 !== e.wireframeLinewidth &&
              (i.wireframeLinewidth = e.wireframeLinewidth),
            void 0 !== e.wireframeLinecap &&
              (i.wireframeLinecap = e.wireframeLinecap),
            void 0 !== e.wireframeLinejoin &&
              (i.wireframeLinejoin = e.wireframeLinejoin),
            void 0 !== e.rotation && (i.rotation = e.rotation),
            1 !== e.linewidth && (i.linewidth = e.linewidth),
            void 0 !== e.dashSize && (i.dashSize = e.dashSize),
            void 0 !== e.gapSize && (i.gapSize = e.gapSize),
            void 0 !== e.scale && (i.scale = e.scale),
            void 0 !== e.polygonOffset && (i.polygonOffset = e.polygonOffset),
            void 0 !== e.polygonOffsetFactor &&
              (i.polygonOffsetFactor = e.polygonOffsetFactor),
            void 0 !== e.polygonOffsetUnits &&
              (i.polygonOffsetUnits = e.polygonOffsetUnits),
            void 0 !== e.skinning && (i.skinning = e.skinning),
            void 0 !== e.morphTargets && (i.morphTargets = e.morphTargets),
            void 0 !== e.morphNormals && (i.morphNormals = e.morphNormals),
            void 0 !== e.dithering && (i.dithering = e.dithering),
            void 0 !== e.vertexTangents &&
              (i.vertexTangents = e.vertexTangents),
            void 0 !== e.visible && (i.visible = e.visible),
            void 0 !== e.toneMapped && (i.toneMapped = e.toneMapped),
            void 0 !== e.userData && (i.userData = e.userData),
            void 0 !== e.vertexColors &&
              ('number' === typeof e.vertexColors
                ? (i.vertexColors = e.vertexColors > 0)
                : (i.vertexColors = e.vertexColors)),
            void 0 !== e.uniforms)
          )
            for (var r in e.uniforms) {
              var a = e.uniforms[r];
              switch (((i.uniforms[r] = {}), a.type)) {
                case 't':
                  i.uniforms[r].value = n(a.value);
                  break;
                case 'c':
                  i.uniforms[r].value = new Ii().setHex(a.value);
                  break;
                case 'v2':
                  i.uniforms[r].value = new pn().fromArray(a.value);
                  break;
                case 'v3':
                  i.uniforms[r].value = new xn().fromArray(a.value);
                  break;
                case 'v4':
                  i.uniforms[r].value = new vn().fromArray(a.value);
                  break;
                case 'm3':
                  i.uniforms[r].value = new mn().fromArray(a.value);
                case 'm4':
                  i.uniforms[r].value = new Cn().fromArray(a.value);
                  break;
                default:
                  i.uniforms[r].value = a.value;
              }
            }
          if (
            (void 0 !== e.defines && (i.defines = e.defines),
            void 0 !== e.vertexShader && (i.vertexShader = e.vertexShader),
            void 0 !== e.fragmentShader &&
              (i.fragmentShader = e.fragmentShader),
            void 0 !== e.extensions)
          )
            for (var o in e.extensions) i.extensions[o] = e.extensions[o];
          if (
            (void 0 !== e.shading && (i.flatShading = 1 === e.shading),
            void 0 !== e.size && (i.size = e.size),
            void 0 !== e.sizeAttenuation &&
              (i.sizeAttenuation = e.sizeAttenuation),
            void 0 !== e.map && (i.map = n(e.map)),
            void 0 !== e.matcap && (i.matcap = n(e.matcap)),
            void 0 !== e.alphaMap && (i.alphaMap = n(e.alphaMap)),
            void 0 !== e.bumpMap && (i.bumpMap = n(e.bumpMap)),
            void 0 !== e.bumpScale && (i.bumpScale = e.bumpScale),
            void 0 !== e.normalMap && (i.normalMap = n(e.normalMap)),
            void 0 !== e.normalMapType && (i.normalMapType = e.normalMapType),
            void 0 !== e.normalScale)
          ) {
            var s = e.normalScale;
            !1 === Array.isArray(s) && (s = [s, s]),
              (i.normalScale = new pn().fromArray(s));
          }
          return (
            void 0 !== e.displacementMap &&
              (i.displacementMap = n(e.displacementMap)),
            void 0 !== e.displacementScale &&
              (i.displacementScale = e.displacementScale),
            void 0 !== e.displacementBias &&
              (i.displacementBias = e.displacementBias),
            void 0 !== e.roughnessMap && (i.roughnessMap = n(e.roughnessMap)),
            void 0 !== e.metalnessMap && (i.metalnessMap = n(e.metalnessMap)),
            void 0 !== e.emissiveMap && (i.emissiveMap = n(e.emissiveMap)),
            void 0 !== e.emissiveIntensity &&
              (i.emissiveIntensity = e.emissiveIntensity),
            void 0 !== e.specularMap && (i.specularMap = n(e.specularMap)),
            void 0 !== e.envMap && (i.envMap = n(e.envMap)),
            void 0 !== e.envMapIntensity &&
              (i.envMapIntensity = e.envMapIntensity),
            void 0 !== e.reflectivity && (i.reflectivity = e.reflectivity),
            void 0 !== e.refractionRatio &&
              (i.refractionRatio = e.refractionRatio),
            void 0 !== e.lightMap && (i.lightMap = n(e.lightMap)),
            void 0 !== e.lightMapIntensity &&
              (i.lightMapIntensity = e.lightMapIntensity),
            void 0 !== e.aoMap && (i.aoMap = n(e.aoMap)),
            void 0 !== e.aoMapIntensity &&
              (i.aoMapIntensity = e.aoMapIntensity),
            void 0 !== e.gradientMap && (i.gradientMap = n(e.gradientMap)),
            void 0 !== e.clearcoatMap && (i.clearcoatMap = n(e.clearcoatMap)),
            void 0 !== e.clearcoatRoughnessMap &&
              (i.clearcoatRoughnessMap = n(e.clearcoatRoughnessMap)),
            void 0 !== e.clearcoatNormalMap &&
              (i.clearcoatNormalMap = n(e.clearcoatNormalMap)),
            void 0 !== e.clearcoatNormalScale &&
              (i.clearcoatNormalScale = new pn().fromArray(
                e.clearcoatNormalScale
              )),
            i
          );
        },
        setTextures: function (e) {
          return (this.textures = e), this;
        },
      }));
    var Fp = {
      decodeText: function (e) {
        if ('undefined' !== typeof TextDecoder)
          return new TextDecoder().decode(e);
        for (var t = '', n = 0, i = e.length; n < i; n++)
          t += String.fromCharCode(e[n]);
        try {
          return decodeURIComponent(escape(t));
        } catch (e) {
          return t;
        }
      },
      extractUrlBase: function (e) {
        var t = e.lastIndexOf('/');
        return -1 === t ? './' : e.substr(0, t + 1);
      },
    };
    function Up() {
      fr.call(this),
        (this.type = 'InstancedBufferGeometry'),
        (this.maxInstancedCount = void 0);
    }
    function Xp(e, t, n, i) {
      'number' === typeof n && ((i = n), (n = !1)),
        Zi.call(this, e, t, n),
        (this.meshPerAttribute = i || 1);
    }
    function Vp(e) {
      Fh.call(this, e);
    }
    (Up.prototype = Object.assign(Object.create(fr.prototype), {
      constructor: Up,
      isInstancedBufferGeometry: !0,
      copy: function (e) {
        return (
          fr.prototype.copy.call(this, e),
          (this.maxInstancedCount = e.maxInstancedCount),
          this
        );
      },
      clone: function () {
        return new this.constructor().copy(this);
      },
      toJSON: function () {
        var e = fr.prototype.toJSON.call(this);
        return (
          (e.maxInstancedCount = this.maxInstancedCount),
          (e.isInstancedBufferGeometry = !0),
          e
        );
      },
    })),
      (Xp.prototype = Object.assign(Object.create(Zi.prototype), {
        constructor: Xp,
        isInstancedBufferAttribute: !0,
        copy: function (e) {
          return (
            Zi.prototype.copy.call(this, e),
            (this.meshPerAttribute = e.meshPerAttribute),
            this
          );
        },
        toJSON: function () {
          var e = Zi.prototype.toJSON.call(this);
          return (
            (e.meshPerAttribute = this.meshPerAttribute),
            (e.isInstancedBufferAttribute = !0),
            e
          );
        },
      })),
      (Vp.prototype = Object.assign(Object.create(Fh.prototype), {
        constructor: Vp,
        load: function (e, t, n, i) {
          var r = this,
            a = new Xh(r.manager);
          a.setPath(r.path),
            a.load(
              e,
              function (e) {
                t(r.parse(JSON.parse(e)));
              },
              n,
              i
            );
        },
        parse: function (e) {
          var t = e.isInstancedBufferGeometry ? new Up() : new fr(),
            n = e.data.index;
          if (void 0 !== n) {
            var i = new Gp[n.type](n.array);
            t.setIndex(new Zi(i, 1));
          }
          var r = e.data.attributes;
          for (var a in r) {
            var o = r[a],
              s =
                ((i = new Gp[o.type](o.array)),
                o.isInstancedBufferAttribute ? Xp : Zi),
              c = new s(i, o.itemSize, o.normalized);
            void 0 !== o.name && (c.name = o.name), t.setAttribute(a, c);
          }
          var u = e.data.morphAttributes;
          if (u)
            for (var a in u) {
              for (var l = u[a], d = [], h = 0, p = l.length; h < p; h++) {
                (o = l[h]),
                  (i = new Gp[o.type](o.array)),
                  (c = new Zi(i, o.itemSize, o.normalized));
                void 0 !== o.name && (c.name = o.name), d.push(c);
              }
              t.morphAttributes[a] = d;
            }
          var m = e.data.morphTargetsRelative;
          m && (t.morphTargetsRelative = !0);
          var f = e.data.groups || e.data.drawcalls || e.data.offsets;
          if (void 0 !== f) {
            h = 0;
            for (var _ = f.length; h !== _; ++h) {
              var M = f[h];
              t.addGroup(M.start, M.count, M.materialIndex);
            }
          }
          var v = e.data.boundingSphere;
          if (void 0 !== v) {
            var g = new xn();
            void 0 !== v.center && g.fromArray(v.center),
              (t.boundingSphere = new mi(g, v.radius));
          }
          return (
            e.name && (t.name = e.name),
            e.userData && (t.userData = e.userData),
            t
          );
        },
      }));
    var Gp = {
      Int8Array: Int8Array,
      Uint8Array: Uint8Array,
      Uint8ClampedArray:
        'undefined' !== typeof Uint8ClampedArray
          ? Uint8ClampedArray
          : Uint8Array,
      Int16Array: Int16Array,
      Uint16Array: Uint16Array,
      Int32Array: Int32Array,
      Uint32Array: Uint32Array,
      Float32Array: Float32Array,
      Float64Array: Float64Array,
    };
    function Jp(e) {
      Fh.call(this, e);
    }
    Jp.prototype = Object.assign(Object.create(Fh.prototype), {
      constructor: Jp,
      load: function (e, t, n, i) {
        var r = this,
          a = '' === this.path ? Fp.extractUrlBase(e) : this.path;
        this.resourcePath = this.resourcePath || a;
        var o = new Xh(r.manager);
        o.setPath(this.path),
          o.load(
            e,
            function (e) {
              var n = null;
              try {
                n = JSON.parse(e);
              } catch (e) {
                return void 0 !== i && i(e), void 0;
              }
              var a = n.metadata;
              if (
                void 0 === a ||
                void 0 === a.type ||
                'geometry' === a.type.toLowerCase()
              )
                return void 0, void 0;
              r.parse(n, t);
            },
            n,
            i
          );
      },
      parse: function (e, t) {
        var n = this.parseShape(e.shapes),
          i = this.parseGeometries(e.geometries, n),
          r = this.parseImages(e.images, function () {
            void 0 !== t && t(s);
          }),
          a = this.parseTextures(e.textures, r),
          o = this.parseMaterials(e.materials, a),
          s = this.parseObject(e.object, i, o);
        return (
          e.animations && (s.animations = this.parseAnimations(e.animations)),
          (void 0 !== e.images && 0 !== e.images.length) ||
            (void 0 !== t && t(s)),
          s
        );
      },
      parseShape: function (e) {
        var t = {};
        if (void 0 !== e)
          for (var n = 0, i = e.length; n < i; n++) {
            var r = new Sp().fromJSON(e[n]);
            t[r.uuid] = r;
          }
        return t;
      },
      parseGeometries: function (e, t) {
        var n = {};
        if (void 0 !== e)
          for (var i = new Vp(), r = 0, a = e.length; r < a; r++) {
            var o,
              s = e[r];
            switch (s.type) {
              case 'PlaneGeometry':
              case 'PlaneBufferGeometry':
                o = new ph[s.type](
                  s.width,
                  s.height,
                  s.widthSegments,
                  s.heightSegments
                );
                break;
              case 'BoxGeometry':
              case 'BoxBufferGeometry':
              case 'CubeGeometry':
                o = new ph[s.type](
                  s.width,
                  s.height,
                  s.depth,
                  s.widthSegments,
                  s.heightSegments,
                  s.depthSegments
                );
                break;
              case 'CircleGeometry':
              case 'CircleBufferGeometry':
                o = new ph[s.type](
                  s.radius,
                  s.segments,
                  s.thetaStart,
                  s.thetaLength
                );
                break;
              case 'CylinderGeometry':
              case 'CylinderBufferGeometry':
                o = new ph[s.type](
                  s.radiusTop,
                  s.radiusBottom,
                  s.height,
                  s.radialSegments,
                  s.heightSegments,
                  s.openEnded,
                  s.thetaStart,
                  s.thetaLength
                );
                break;
              case 'ConeGeometry':
              case 'ConeBufferGeometry':
                o = new ph[s.type](
                  s.radius,
                  s.height,
                  s.radialSegments,
                  s.heightSegments,
                  s.openEnded,
                  s.thetaStart,
                  s.thetaLength
                );
                break;
              case 'SphereGeometry':
              case 'SphereBufferGeometry':
                o = new ph[s.type](
                  s.radius,
                  s.widthSegments,
                  s.heightSegments,
                  s.phiStart,
                  s.phiLength,
                  s.thetaStart,
                  s.thetaLength
                );
                break;
              case 'DodecahedronGeometry':
              case 'DodecahedronBufferGeometry':
              case 'IcosahedronGeometry':
              case 'IcosahedronBufferGeometry':
              case 'OctahedronGeometry':
              case 'OctahedronBufferGeometry':
              case 'TetrahedronGeometry':
              case 'TetrahedronBufferGeometry':
                o = new ph[s.type](s.radius, s.detail);
                break;
              case 'RingGeometry':
              case 'RingBufferGeometry':
                o = new ph[s.type](
                  s.innerRadius,
                  s.outerRadius,
                  s.thetaSegments,
                  s.phiSegments,
                  s.thetaStart,
                  s.thetaLength
                );
                break;
              case 'TorusGeometry':
              case 'TorusBufferGeometry':
                o = new ph[s.type](
                  s.radius,
                  s.tube,
                  s.radialSegments,
                  s.tubularSegments,
                  s.arc
                );
                break;
              case 'TorusKnotGeometry':
              case 'TorusKnotBufferGeometry':
                o = new ph[s.type](
                  s.radius,
                  s.tube,
                  s.tubularSegments,
                  s.radialSegments,
                  s.p,
                  s.q
                );
                break;
              case 'TubeGeometry':
              case 'TubeBufferGeometry':
                o = new ph[s.type](
                  new Lp[s.path.type]().fromJSON(s.path),
                  s.tubularSegments,
                  s.radius,
                  s.radialSegments,
                  s.closed
                );
                break;
              case 'LatheGeometry':
              case 'LatheBufferGeometry':
                o = new ph[s.type](
                  s.points,
                  s.segments,
                  s.phiStart,
                  s.phiLength
                );
                break;
              case 'PolyhedronGeometry':
              case 'PolyhedronBufferGeometry':
                o = new ph[s.type](s.vertices, s.indices, s.radius, s.details);
                break;
              case 'ShapeGeometry':
              case 'ShapeBufferGeometry':
                for (var c = [], u = 0, l = s.shapes.length; u < l; u++) {
                  var d = t[s.shapes[u]];
                  c.push(d);
                }
                o = new ph[s.type](c, s.curveSegments);
                break;
              case 'ExtrudeGeometry':
              case 'ExtrudeBufferGeometry':
                for (c = [], u = 0, l = s.shapes.length; u < l; u++) {
                  d = t[s.shapes[u]];
                  c.push(d);
                }
                var h = s.options.extrudePath;
                void 0 !== h &&
                  (s.options.extrudePath = new Lp[h.type]().fromJSON(h)),
                  (o = new ph[s.type](c, s.options));
                break;
              case 'BufferGeometry':
              case 'InstancedBufferGeometry':
                o = i.parse(s);
                break;
              case 'Geometry':
                void 0;
                break;
              default:
                void 0;
                continue;
            }
            (o.uuid = s.uuid),
              void 0 !== s.name && (o.name = s.name),
              !0 === o.isBufferGeometry &&
                void 0 !== s.userData &&
                (o.userData = s.userData),
              (n[s.uuid] = o);
          }
        return n;
      },
      parseMaterials: function (e, t) {
        var n = {},
          i = {};
        if (void 0 !== e) {
          var r = new Hp();
          r.setTextures(t);
          for (var a = 0, o = e.length; a < o; a++) {
            var s = e[a];
            if ('MultiMaterial' === s.type) {
              for (var c = [], u = 0; u < s.materials.length; u++) {
                var l = s.materials[u];
                void 0 === n[l.uuid] && (n[l.uuid] = r.parse(l)),
                  c.push(n[l.uuid]);
              }
              i[s.uuid] = c;
            } else
              void 0 === n[s.uuid] && (n[s.uuid] = r.parse(s)),
                (i[s.uuid] = n[s.uuid]);
          }
        }
        return i;
      },
      parseAnimations: function (e) {
        for (var t = [], n = 0; n < e.length; n++) {
          var i = e[n],
            r = Rh.parse(i);
          void 0 !== i.uuid && (r.uuid = i.uuid), t.push(r);
        }
        return t;
      },
      parseImages: function (e, t) {
        var n = this,
          i = {};
        function r(e) {
          return (
            n.manager.itemStart(e),
            o.load(
              e,
              function () {
                n.manager.itemEnd(e);
              },
              void 0,
              function () {
                n.manager.itemError(e), n.manager.itemEnd(e);
              }
            )
          );
        }
        if (void 0 !== e && e.length > 0) {
          var a = new qh(t),
            o = new Zh(a);
          o.setCrossOrigin(this.crossOrigin);
          for (var s = 0, c = e.length; s < c; s++) {
            var u = e[s],
              l = u.url;
            if (Array.isArray(l)) {
              i[u.uuid] = [];
              for (var d = 0, h = l.length; d < h; d++) {
                var p = l[d],
                  m = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(p)
                    ? p
                    : n.resourcePath + p;
                i[u.uuid].push(r(m));
              }
            } else {
              m = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(u.url)
                ? u.url
                : n.resourcePath + u.url;
              i[u.uuid] = r(m);
            }
          }
        }
        return i;
      },
      parseTextures: function (e, t) {
        function n(e, t) {
          return 'number' === typeof e ? e : (void 0, t[e]);
        }
        var i = {};
        if (void 0 !== e)
          for (var r = 0, a = e.length; r < a; r++) {
            var o,
              s = e[r];
            void 0 === s.image && void 0,
              t[s.image],
              (o = Array.isArray(t[s.image])
                ? new Hs(t[s.image])
                : new Mn(t[s.image])),
              (o.needsUpdate = !0),
              (o.uuid = s.uuid),
              void 0 !== s.name && (o.name = s.name),
              void 0 !== s.mapping && (o.mapping = n(s.mapping, Kp)),
              void 0 !== s.offset && o.offset.fromArray(s.offset),
              void 0 !== s.repeat && o.repeat.fromArray(s.repeat),
              void 0 !== s.center && o.center.fromArray(s.center),
              void 0 !== s.rotation && (o.rotation = s.rotation),
              void 0 !== s.wrap &&
                ((o.wrapS = n(s.wrap[0], Qp)), (o.wrapT = n(s.wrap[1], Qp))),
              void 0 !== s.format && (o.format = s.format),
              void 0 !== s.type && (o.type = s.type),
              void 0 !== s.encoding && (o.encoding = s.encoding),
              void 0 !== s.minFilter && (o.minFilter = n(s.minFilter, $p)),
              void 0 !== s.magFilter && (o.magFilter = n(s.magFilter, $p)),
              void 0 !== s.anisotropy && (o.anisotropy = s.anisotropy),
              void 0 !== s.flipY && (o.flipY = s.flipY),
              void 0 !== s.premultiplyAlpha &&
                (o.premultiplyAlpha = s.premultiplyAlpha),
              void 0 !== s.unpackAlignment &&
                (o.unpackAlignment = s.unpackAlignment),
              (i[s.uuid] = o);
          }
        return i;
      },
      parseObject: function (e, t, n) {
        var i;
        function r(e) {
          return void 0 === t[e] && void 0, t[e];
        }
        function a(e) {
          if (void 0 !== e) {
            if (Array.isArray(e)) {
              for (var t = [], i = 0, r = e.length; i < r; i++) {
                var a = e[i];
                void 0 === n[a] && void 0, t.push(n[a]);
              }
              return t;
            }
            return void 0 === n[e] && void 0, n[e];
          }
        }
        switch (e.type) {
          case 'Scene':
            (i = new Kn()),
              void 0 !== e.background &&
                Number.isInteger(e.background) &&
                (i.background = new Ii(e.background)),
              void 0 !== e.fog &&
                ('Fog' === e.fog.type
                  ? (i.fog = new Fu(e.fog.color, e.fog.near, e.fog.far))
                  : 'FogExp2' === e.fog.type &&
                    (i.fog = new Hu(e.fog.color, e.fog.density)));
            break;
          case 'PerspectiveCamera':
            (i = new Zr(e.fov, e.aspect, e.near, e.far)),
              void 0 !== e.focus && (i.focus = e.focus),
              void 0 !== e.zoom && (i.zoom = e.zoom),
              void 0 !== e.filmGauge && (i.filmGauge = e.filmGauge),
              void 0 !== e.filmOffset && (i.filmOffset = e.filmOffset),
              void 0 !== e.view && (i.view = Object.assign({}, e.view));
            break;
          case 'OrthographicCamera':
            (i = new jp(e.left, e.right, e.top, e.bottom, e.near, e.far)),
              void 0 !== e.zoom && (i.zoom = e.zoom),
              void 0 !== e.view && (i.view = Object.assign({}, e.view));
            break;
          case 'AmbientLight':
            i = new Bp(e.color, e.intensity);
            break;
          case 'DirectionalLight':
            i = new Rp(e.color, e.intensity);
            break;
          case 'PointLight':
            i = new Pp(e.color, e.intensity, e.distance, e.decay);
            break;
          case 'RectAreaLight':
            i = new Wp(e.color, e.intensity, e.width, e.height);
            break;
          case 'SpotLight':
            i = new Dp(
              e.color,
              e.intensity,
              e.distance,
              e.angle,
              e.penumbra,
              e.decay
            );
            break;
          case 'HemisphereLight':
            i = new Ep(e.color, e.groundColor, e.intensity);
            break;
          case 'LightProbe':
            i = new qp().fromJSON(e);
            break;
          case 'SkinnedMesh':
            void 0;
          case 'Mesh':
            var o = r(e.geometry),
              s = a(e.material);
            i = new Dr(o, s);
            break;
          case 'InstancedMesh':
            (o = r(e.geometry)), (s = a(e.material));
            var c = e.count,
              u = e.instanceMatrix;
            (i = new wl(o, s, c)),
              (i.instanceMatrix = new Zi(new Float32Array(u.array), 16));
            break;
          case 'LOD':
            i = new hl();
            break;
          case 'Line':
            i = new Ol(r(e.geometry), a(e.material), e.mode);
            break;
          case 'LineLoop':
            i = new Dl(r(e.geometry), a(e.material));
            break;
          case 'LineSegments':
            i = new Cl(r(e.geometry), a(e.material));
            break;
          case 'PointCloud':
          case 'Points':
            i = new Bl(r(e.geometry), a(e.material));
            break;
          case 'Sprite':
            i = new cl(a(e.material));
            break;
          case 'Group':
            i = new Bu();
            break;
          default:
            i = new Zn();
        }
        if (
          ((i.uuid = e.uuid),
          void 0 !== e.name && (i.name = e.name),
          void 0 !== e.matrix
            ? (i.matrix.fromArray(e.matrix),
              void 0 !== e.matrixAutoUpdate &&
                (i.matrixAutoUpdate = e.matrixAutoUpdate),
              i.matrixAutoUpdate &&
                i.matrix.decompose(i.position, i.quaternion, i.scale))
            : (void 0 !== e.position && i.position.fromArray(e.position),
              void 0 !== e.rotation && i.rotation.fromArray(e.rotation),
              void 0 !== e.quaternion && i.quaternion.fromArray(e.quaternion),
              void 0 !== e.scale && i.scale.fromArray(e.scale)),
          void 0 !== e.castShadow && (i.castShadow = e.castShadow),
          void 0 !== e.receiveShadow && (i.receiveShadow = e.receiveShadow),
          e.shadow &&
            (void 0 !== e.shadow.bias && (i.shadow.bias = e.shadow.bias),
            void 0 !== e.shadow.radius && (i.shadow.radius = e.shadow.radius),
            void 0 !== e.shadow.mapSize &&
              i.shadow.mapSize.fromArray(e.shadow.mapSize),
            void 0 !== e.shadow.camera &&
              (i.shadow.camera = this.parseObject(e.shadow.camera))),
          void 0 !== e.visible && (i.visible = e.visible),
          void 0 !== e.frustumCulled && (i.frustumCulled = e.frustumCulled),
          void 0 !== e.renderOrder && (i.renderOrder = e.renderOrder),
          void 0 !== e.userData && (i.userData = e.userData),
          void 0 !== e.layers && (i.layers.mask = e.layers),
          void 0 !== e.children)
        )
          for (var l = e.children, d = 0; d < l.length; d++)
            i.add(this.parseObject(l[d], t, n));
        if ('LOD' === e.type) {
          void 0 !== e.autoUpdate && (i.autoUpdate = e.autoUpdate);
          for (var h = e.levels, p = 0; p < h.length; p++) {
            var m = h[p],
              f = i.getObjectByProperty('uuid', m.object);
            void 0 !== f && i.addLevel(f, m.distance);
          }
        }
        return i;
      },
    });
    var Zp,
      Kp = {
        UVMapping: te,
        CubeReflectionMapping: ne,
        CubeRefractionMapping: ie,
        EquirectangularReflectionMapping: re,
        EquirectangularRefractionMapping: ae,
        SphericalReflectionMapping: oe,
        CubeUVReflectionMapping: se,
        CubeUVRefractionMapping: ce,
      },
      Qp = {
        RepeatWrapping: ue,
        ClampToEdgeWrapping: le,
        MirroredRepeatWrapping: de,
      },
      $p = {
        NearestFilter: he,
        NearestMipmapNearestFilter: pe,
        NearestMipmapLinearFilter: me,
        LinearFilter: fe,
        LinearMipmapNearestFilter: _e,
        LinearMipmapLinearFilter: Me,
      };
    function em(e) {
      'undefined' === typeof createImageBitmap && void 0,
        Fh.call(this, e),
        (this.options = void 0);
    }
    function tm() {
      (this.type = 'ShapePath'),
        (this.color = new Ii()),
        (this.subPaths = []),
        (this.currentPath = null);
    }
    function nm(e) {
      (this.type = 'Font'), (this.data = e);
    }
    function im(e, t, n) {
      for (
        var i = Array.from ? Array.from(e) : String(e).split(''),
          r = t / n.resolution,
          a =
            (n.boundingBox.yMax - n.boundingBox.yMin + n.underlineThickness) *
            r,
          o = [],
          s = 0,
          c = 0,
          u = 0;
        u < i.length;
        u++
      ) {
        var l = i[u];
        if ('\n' === l) (s = 0), (c -= a);
        else {
          var d = rm(l, r, s, c, n);
          (s += d.offsetX), o.push(d.path);
        }
      }
      return o;
    }
    function rm(e, t, n, i, r) {
      var a = r.glyphs[e] || r.glyphs['?'];
      if (!a) return void 0, void 0;
      var o,
        s,
        c,
        u,
        l,
        d,
        h,
        p,
        m = new tm();
      if (a.o)
        for (
          var f = a._cachedOutline || (a._cachedOutline = a.o.split(' ')),
            _ = 0,
            M = f.length;
          _ < M;

        ) {
          var v = f[_++];
          switch (v) {
            case 'm':
              (o = f[_++] * t + n), (s = f[_++] * t + i), m.moveTo(o, s);
              break;
            case 'l':
              (o = f[_++] * t + n), (s = f[_++] * t + i), m.lineTo(o, s);
              break;
            case 'q':
              (c = f[_++] * t + n),
                (u = f[_++] * t + i),
                (l = f[_++] * t + n),
                (d = f[_++] * t + i),
                m.quadraticCurveTo(l, d, c, u);
              break;
            case 'b':
              (c = f[_++] * t + n),
                (u = f[_++] * t + i),
                (l = f[_++] * t + n),
                (d = f[_++] * t + i),
                (h = f[_++] * t + n),
                (p = f[_++] * t + i),
                m.bezierCurveTo(l, d, h, p, c, u);
              break;
          }
        }
      return { offsetX: a.ha * t, path: m };
    }
    function am(e) {
      Fh.call(this, e);
    }
    (em.prototype = Object.assign(Object.create(Fh.prototype), {
      constructor: em,
      setOptions: function e(t) {
        return (this.options = t), this;
      },
      load: function (e, t, n, i) {
        void 0 === e && (e = ''),
          void 0 !== this.path && (e = this.path + e),
          (e = this.manager.resolveURL(e));
        var r = this,
          a = Ih.get(e);
        if (void 0 !== a)
          return (
            r.manager.itemStart(e),
            setTimeout(function () {
              t && t(a), r.manager.itemEnd(e);
            }, 0),
            a
          );
        fetch(e)
          .then(function (e) {
            return e.blob();
          })
          .then(function (e) {
            return void 0 === r.options
              ? createImageBitmap(e)
              : createImageBitmap(e, r.options);
          })
          .then(function (n) {
            Ih.add(e, n), t && t(n), r.manager.itemEnd(e);
          })
          .catch(function (t) {
            i && i(t), r.manager.itemError(e), r.manager.itemEnd(e);
          }),
          r.manager.itemStart(e);
      },
    })),
      Object.assign(tm.prototype, {
        moveTo: function (e, t) {
          return (
            (this.currentPath = new zp()),
            this.subPaths.push(this.currentPath),
            this.currentPath.moveTo(e, t),
            this
          );
        },
        lineTo: function (e, t) {
          return this.currentPath.lineTo(e, t), this;
        },
        quadraticCurveTo: function (e, t, n, i) {
          return this.currentPath.quadraticCurveTo(e, t, n, i), this;
        },
        bezierCurveTo: function (e, t, n, i, r, a) {
          return this.currentPath.bezierCurveTo(e, t, n, i, r, a), this;
        },
        splineThru: function (e) {
          return this.currentPath.splineThru(e), this;
        },
        toShapes: function (e, t) {
          function n(e) {
            for (var t = [], n = 0, i = e.length; n < i; n++) {
              var r = e[n],
                a = new Sp();
              (a.curves = r.curves), t.push(a);
            }
            return t;
          }
          function i(e, t) {
            for (var n = t.length, i = !1, r = n - 1, a = 0; a < n; r = a++) {
              var o = t[r],
                s = t[a],
                c = s.x - o.x,
                u = s.y - o.y;
              if (Math.abs(u) > Number.EPSILON) {
                if (
                  (u < 0 && ((o = t[a]), (c = -c), (s = t[r]), (u = -u)),
                  e.y < o.y || e.y > s.y)
                )
                  continue;
                if (e.y === o.y) {
                  if (e.x === o.x) return !0;
                } else {
                  var l = u * (e.x - o.x) - c * (e.y - o.y);
                  if (0 === l) return !0;
                  if (l < 0) continue;
                  i = !i;
                }
              } else {
                if (e.y !== o.y) continue;
                if ((s.x <= e.x && e.x <= o.x) || (o.x <= e.x && e.x <= s.x))
                  return !0;
              }
            }
            return i;
          }
          var r = qd.isClockWise,
            a = this.subPaths;
          if (0 === a.length) return [];
          if (!0 === t) return n(a);
          var o,
            s,
            c,
            u = [];
          if (1 === a.length)
            return (
              (s = a[0]), (c = new Sp()), (c.curves = s.curves), u.push(c), u
            );
          var l = !r(a[0].getPoints());
          l = e ? !l : l;
          var d,
            h,
            p = [],
            m = [],
            f = [],
            _ = 0;
          (m[_] = void 0), (f[_] = []);
          for (var M = 0, v = a.length; M < v; M++)
            (s = a[M]),
              (d = s.getPoints()),
              (o = r(d)),
              (o = e ? !o : o),
              o
                ? (!l && m[_] && _++,
                  (m[_] = { s: new Sp(), p: d }),
                  (m[_].s.curves = s.curves),
                  l && _++,
                  (f[_] = []))
                : f[_].push({ h: s, p: d[0] });
          if (!m[0]) return n(a);
          if (m.length > 1) {
            for (var g = !1, y = [], b = 0, w = m.length; b < w; b++) p[b] = [];
            for (b = 0, w = m.length; b < w; b++)
              for (var A = f[b], x = 0; x < A.length; x++) {
                for (var L = A[x], T = !0, z = 0; z < m.length; z++)
                  i(L.p, m[z].p) &&
                    (b !== z && y.push({ froms: b, tos: z, hole: x }),
                    T ? ((T = !1), p[z].push(L)) : (g = !0));
                T && p[b].push(L);
              }
            y.length > 0 && (g || (f = p));
          }
          M = 0;
          for (var S = m.length; M < S; M++) {
            (c = m[M].s), u.push(c), (h = f[M]);
            for (var O = 0, E = h.length; O < E; O++) c.holes.push(h[O].h);
          }
          return u;
        },
      }),
      Object.assign(nm.prototype, {
        isFont: !0,
        generateShapes: function (e, t) {
          void 0 === t && (t = 100);
          for (
            var n = [], i = im(e, t, this.data), r = 0, a = i.length;
            r < a;
            r++
          )
            Array.prototype.push.apply(n, i[r].toShapes());
          return n;
        },
      }),
      (am.prototype = Object.assign(Object.create(Fh.prototype), {
        constructor: am,
        load: function (e, t, n, i) {
          var r = this,
            a = new Xh(this.manager);
          a.setPath(this.path),
            a.load(
              e,
              function (e) {
                var n;
                try {
                  n = JSON.parse(e);
                } catch (t) {
                  void 0, (n = JSON.parse(e.substring(65, e.length - 2)));
                }
                var i = r.parse(n);
                t && t(i);
              },
              n,
              i
            );
        },
        parse: function (e) {
          return new nm(e);
        },
      }));
    var om = {
      getContext: function () {
        return (
          void 0 === Zp &&
            (Zp = new (window.AudioContext || window.webkitAudioContext)()),
          Zp
        );
      },
      setContext: function (e) {
        Zp = e;
      },
    };
    function sm(e) {
      Fh.call(this, e);
    }
    function cm(e, t, n) {
      qp.call(this, void 0, n);
      var i = new Ii().set(e),
        r = new Ii().set(t),
        a = new xn(i.r, i.g, i.b),
        o = new xn(r.r, r.g, r.b),
        s = Math.sqrt(Math.PI),
        c = s * Math.sqrt(0.75);
      this.sh.coefficients[0].copy(a).add(o).multiplyScalar(s),
        this.sh.coefficients[1].copy(a).sub(o).multiplyScalar(c);
    }
    function um(e, t) {
      qp.call(this, void 0, t);
      var n = new Ii().set(e);
      this.sh.coefficients[0]
        .set(n.r, n.g, n.b)
        .multiplyScalar(2 * Math.sqrt(Math.PI));
    }
    (sm.prototype = Object.assign(Object.create(Fh.prototype), {
      constructor: sm,
      load: function (e, t, n, i) {
        var r = new Xh(this.manager);
        r.setResponseType('arraybuffer'),
          r.setPath(this.path),
          r.load(
            e,
            function (e) {
              var n = e.slice(0),
                i = om.getContext();
              i.decodeAudioData(n, function (e) {
                t(e);
              });
            },
            n,
            i
          );
      },
    })),
      (cm.prototype = Object.assign(Object.create(qp.prototype), {
        constructor: cm,
        isHemisphereLightProbe: !0,
        copy: function (e) {
          return qp.prototype.copy.call(this, e), this;
        },
        toJSON: function (e) {
          var t = qp.prototype.toJSON.call(this, e);
          return t;
        },
      })),
      (um.prototype = Object.assign(Object.create(qp.prototype), {
        constructor: um,
        isAmbientLightProbe: !0,
        copy: function (e) {
          return qp.prototype.copy.call(this, e), this;
        },
        toJSON: function (e) {
          var t = qp.prototype.toJSON.call(this, e);
          return t;
        },
      }));
    var lm = new Cn(),
      dm = new Cn();
    function hm() {
      (this.type = 'StereoCamera'),
        (this.aspect = 1),
        (this.eyeSep = 0.064),
        (this.cameraL = new Zr()),
        this.cameraL.layers.enable(1),
        (this.cameraL.matrixAutoUpdate = !1),
        (this.cameraR = new Zr()),
        this.cameraR.layers.enable(2),
        (this.cameraR.matrixAutoUpdate = !1),
        (this._cache = {
          focus: null,
          fov: null,
          aspect: null,
          near: null,
          far: null,
          zoom: null,
          eyeSep: null,
        });
    }
    function pm(e) {
      (this.autoStart = void 0 === e || e),
        (this.startTime = 0),
        (this.oldTime = 0),
        (this.elapsedTime = 0),
        (this.running = !1);
    }
    Object.assign(hm.prototype, {
      update: function (e) {
        var t = this._cache,
          n =
            t.focus !== e.focus ||
            t.fov !== e.fov ||
            t.aspect !== e.aspect * this.aspect ||
            t.near !== e.near ||
            t.far !== e.far ||
            t.zoom !== e.zoom ||
            t.eyeSep !== this.eyeSep;
        if (n) {
          (t.focus = e.focus),
            (t.fov = e.fov),
            (t.aspect = e.aspect * this.aspect),
            (t.near = e.near),
            (t.far = e.far),
            (t.zoom = e.zoom),
            (t.eyeSep = this.eyeSep);
          var i,
            r,
            a = e.projectionMatrix.clone(),
            o = t.eyeSep / 2,
            s = (o * t.near) / t.focus,
            c = (t.near * Math.tan(hn.DEG2RAD * t.fov * 0.5)) / t.zoom;
          (dm.elements[12] = -o),
            (lm.elements[12] = o),
            (i = -c * t.aspect + s),
            (r = c * t.aspect + s),
            (a.elements[0] = (2 * t.near) / (r - i)),
            (a.elements[8] = (r + i) / (r - i)),
            this.cameraL.projectionMatrix.copy(a),
            (i = -c * t.aspect - s),
            (r = c * t.aspect - s),
            (a.elements[0] = (2 * t.near) / (r - i)),
            (a.elements[8] = (r + i) / (r - i)),
            this.cameraR.projectionMatrix.copy(a);
        }
        this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(dm),
          this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(lm);
      },
    }),
      Object.assign(pm.prototype, {
        start: function () {
          (this.startTime = ('undefined' === typeof performance
            ? Date
            : performance
          ).now()),
            (this.oldTime = this.startTime),
            (this.elapsedTime = 0),
            (this.running = !0);
        },
        stop: function () {
          this.getElapsedTime(), (this.running = !1), (this.autoStart = !1);
        },
        getElapsedTime: function () {
          return this.getDelta(), this.elapsedTime;
        },
        getDelta: function () {
          var e = 0;
          if (this.autoStart && !this.running) return this.start(), 0;
          if (this.running) {
            var t = ('undefined' === typeof performance
              ? Date
              : performance
            ).now();
            (e = (t - this.oldTime) / 1e3),
              (this.oldTime = t),
              (this.elapsedTime += e);
          }
          return e;
        },
      });
    var mm = new xn(),
      fm = new bn(),
      _m = new xn(),
      Mm = new xn();
    function vm() {
      Zn.call(this),
        (this.type = 'AudioListener'),
        (this.context = om.getContext()),
        (this.gain = this.context.createGain()),
        this.gain.connect(this.context.destination),
        (this.filter = null),
        (this.timeDelta = 0),
        (this._clock = new pm());
    }
    function gm(e) {
      Zn.call(this),
        (this.type = 'Audio'),
        (this.listener = e),
        (this.context = e.context),
        (this.gain = this.context.createGain()),
        this.gain.connect(e.getInput()),
        (this.autoplay = !1),
        (this.buffer = null),
        (this.detune = 0),
        (this.loop = !1),
        (this.loopStart = 0),
        (this.loopEnd = 0),
        (this.offset = 0),
        (this.duration = void 0),
        (this.playbackRate = 1),
        (this.isPlaying = !1),
        (this.hasPlaybackControl = !0),
        (this.sourceType = 'empty'),
        (this._startedAt = 0),
        (this._progress = 0),
        (this.filters = []);
    }
    (vm.prototype = Object.assign(Object.create(Zn.prototype), {
      constructor: vm,
      getInput: function () {
        return this.gain;
      },
      removeFilter: function () {
        return (
          null !== this.filter &&
            (this.gain.disconnect(this.filter),
            this.filter.disconnect(this.context.destination),
            this.gain.connect(this.context.destination),
            (this.filter = null)),
          this
        );
      },
      getFilter: function () {
        return this.filter;
      },
      setFilter: function (e) {
        return (
          null !== this.filter
            ? (this.gain.disconnect(this.filter),
              this.filter.disconnect(this.context.destination))
            : this.gain.disconnect(this.context.destination),
          (this.filter = e),
          this.gain.connect(this.filter),
          this.filter.connect(this.context.destination),
          this
        );
      },
      getMasterVolume: function () {
        return this.gain.gain.value;
      },
      setMasterVolume: function (e) {
        return (
          this.gain.gain.setTargetAtTime(e, this.context.currentTime, 0.01),
          this
        );
      },
      updateMatrixWorld: function (e) {
        Zn.prototype.updateMatrixWorld.call(this, e);
        var t = this.context.listener,
          n = this.up;
        if (
          ((this.timeDelta = this._clock.getDelta()),
          this.matrixWorld.decompose(mm, fm, _m),
          Mm.set(0, 0, -1).applyQuaternion(fm),
          t.positionX)
        ) {
          var i = this.context.currentTime + this.timeDelta;
          t.positionX.linearRampToValueAtTime(mm.x, i),
            t.positionY.linearRampToValueAtTime(mm.y, i),
            t.positionZ.linearRampToValueAtTime(mm.z, i),
            t.forwardX.linearRampToValueAtTime(Mm.x, i),
            t.forwardY.linearRampToValueAtTime(Mm.y, i),
            t.forwardZ.linearRampToValueAtTime(Mm.z, i),
            t.upX.linearRampToValueAtTime(n.x, i),
            t.upY.linearRampToValueAtTime(n.y, i),
            t.upZ.linearRampToValueAtTime(n.z, i);
        } else
          t.setPosition(mm.x, mm.y, mm.z),
            t.setOrientation(Mm.x, Mm.y, Mm.z, n.x, n.y, n.z);
      },
    })),
      (gm.prototype = Object.assign(Object.create(Zn.prototype), {
        constructor: gm,
        getOutput: function () {
          return this.gain;
        },
        setNodeSource: function (e) {
          return (
            (this.hasPlaybackControl = !1),
            (this.sourceType = 'audioNode'),
            (this.source = e),
            this.connect(),
            this
          );
        },
        setMediaElementSource: function (e) {
          return (
            (this.hasPlaybackControl = !1),
            (this.sourceType = 'mediaNode'),
            (this.source = this.context.createMediaElementSource(e)),
            this.connect(),
            this
          );
        },
        setMediaStreamSource: function (e) {
          return (
            (this.hasPlaybackControl = !1),
            (this.sourceType = 'mediaStreamNode'),
            (this.source = this.context.createMediaStreamSource(e)),
            this.connect(),
            this
          );
        },
        setBuffer: function (e) {
          return (
            (this.buffer = e),
            (this.sourceType = 'buffer'),
            this.autoplay && this.play(),
            this
          );
        },
        play: function (e) {
          if ((void 0 === e && (e = 0), !0 === this.isPlaying))
            return void 0, void 0;
          if (!1 === this.hasPlaybackControl) return void 0, void 0;
          this._startedAt = this.context.currentTime + e;
          var t = this.context.createBufferSource();
          return (
            (t.buffer = this.buffer),
            (t.loop = this.loop),
            (t.loopStart = this.loopStart),
            (t.loopEnd = this.loopEnd),
            (t.onended = this.onEnded.bind(this)),
            t.start(
              this._startedAt,
              this._progress + this.offset,
              this.duration
            ),
            (this.isPlaying = !0),
            (this.source = t),
            this.setDetune(this.detune),
            this.setPlaybackRate(this.playbackRate),
            this.connect()
          );
        },
        pause: function () {
          return !1 === this.hasPlaybackControl
            ? (void 0, void 0)
            : (!0 === this.isPlaying &&
                ((this._progress +=
                  Math.max(this.context.currentTime - this._startedAt, 0) *
                  this.playbackRate),
                !0 === this.loop &&
                  (this._progress =
                    this._progress % (this.duration || this.buffer.duration)),
                this.source.stop(),
                (this.source.onended = null),
                (this.isPlaying = !1)),
              this);
        },
        stop: function () {
          return !1 === this.hasPlaybackControl
            ? (void 0, void 0)
            : ((this._progress = 0),
              this.source.stop(),
              (this.source.onended = null),
              (this.isPlaying = !1),
              this);
        },
        connect: function () {
          if (this.filters.length > 0) {
            this.source.connect(this.filters[0]);
            for (var e = 1, t = this.filters.length; e < t; e++)
              this.filters[e - 1].connect(this.filters[e]);
            this.filters[this.filters.length - 1].connect(this.getOutput());
          } else this.source.connect(this.getOutput());
          return this;
        },
        disconnect: function () {
          if (this.filters.length > 0) {
            this.source.disconnect(this.filters[0]);
            for (var e = 1, t = this.filters.length; e < t; e++)
              this.filters[e - 1].disconnect(this.filters[e]);
            this.filters[this.filters.length - 1].disconnect(this.getOutput());
          } else this.source.disconnect(this.getOutput());
          return this;
        },
        getFilters: function () {
          return this.filters;
        },
        setFilters: function (e) {
          return (
            e || (e = []),
            !0 === this.isPlaying
              ? (this.disconnect(), (this.filters = e), this.connect())
              : (this.filters = e),
            this
          );
        },
        setDetune: function (e) {
          if (((this.detune = e), void 0 !== this.source.detune))
            return (
              !0 === this.isPlaying &&
                this.source.detune.setTargetAtTime(
                  this.detune,
                  this.context.currentTime,
                  0.01
                ),
              this
            );
        },
        getDetune: function () {
          return this.detune;
        },
        getFilter: function () {
          return this.getFilters()[0];
        },
        setFilter: function (e) {
          return this.setFilters(e ? [e] : []);
        },
        setPlaybackRate: function (e) {
          return !1 === this.hasPlaybackControl
            ? (void 0, void 0)
            : ((this.playbackRate = e),
              !0 === this.isPlaying &&
                this.source.playbackRate.setTargetAtTime(
                  this.playbackRate,
                  this.context.currentTime,
                  0.01
                ),
              this);
        },
        getPlaybackRate: function () {
          return this.playbackRate;
        },
        onEnded: function () {
          this.isPlaying = !1;
        },
        getLoop: function () {
          return !1 === this.hasPlaybackControl ? (void 0, !1) : this.loop;
        },
        setLoop: function (e) {
          return !1 === this.hasPlaybackControl
            ? (void 0, void 0)
            : ((this.loop = e),
              !0 === this.isPlaying && (this.source.loop = this.loop),
              this);
        },
        setLoopStart: function (e) {
          return (this.loopStart = e), this;
        },
        setLoopEnd: function (e) {
          return (this.loopEnd = e), this;
        },
        getVolume: function () {
          return this.gain.gain.value;
        },
        setVolume: function (e) {
          return (
            this.gain.gain.setTargetAtTime(e, this.context.currentTime, 0.01),
            this
          );
        },
      }));
    var ym = new xn(),
      bm = new bn(),
      wm = new xn(),
      Am = new xn();
    function xm(e) {
      gm.call(this, e),
        (this.panner = this.context.createPanner()),
        (this.panner.panningModel = 'HRTF'),
        this.panner.connect(this.gain);
    }
    function Lm(e, t) {
      (this.analyser = e.context.createAnalyser()),
        (this.analyser.fftSize = void 0 !== t ? t : 2048),
        (this.data = new Uint8Array(this.analyser.frequencyBinCount)),
        e.getOutput().connect(this.analyser);
    }
    function Tm(e, t, n) {
      var i, r, a;
      switch (((this.binding = e), (this.valueSize = n), t)) {
        case 'quaternion':
          (i = this._slerp),
            (r = this._slerpAdditive),
            (a = this._setAdditiveIdentityQuaternion),
            (this.buffer = new Float64Array(6 * n)),
            (this._workIndex = 5);
          break;
        case 'string':
        case 'bool':
          (i = this._select),
            (r = this._select),
            (a = this._setAdditiveIdentityOther),
            (this.buffer = new Array(5 * n));
          break;
        default:
          (i = this._lerp),
            (r = this._lerpAdditive),
            (a = this._setAdditiveIdentityNumeric),
            (this.buffer = new Float64Array(5 * n));
      }
      (this._mixBufferRegion = i),
        (this._mixBufferRegionAdditive = r),
        (this._setIdentity = a),
        (this._origIndex = 3),
        (this._addIndex = 4),
        (this.cumulativeWeight = 0),
        (this.cumulativeWeightAdditive = 0),
        (this.useCount = 0),
        (this.referenceCount = 0);
    }
    (xm.prototype = Object.assign(Object.create(gm.prototype), {
      constructor: xm,
      getOutput: function () {
        return this.panner;
      },
      getRefDistance: function () {
        return this.panner.refDistance;
      },
      setRefDistance: function (e) {
        return (this.panner.refDistance = e), this;
      },
      getRolloffFactor: function () {
        return this.panner.rolloffFactor;
      },
      setRolloffFactor: function (e) {
        return (this.panner.rolloffFactor = e), this;
      },
      getDistanceModel: function () {
        return this.panner.distanceModel;
      },
      setDistanceModel: function (e) {
        return (this.panner.distanceModel = e), this;
      },
      getMaxDistance: function () {
        return this.panner.maxDistance;
      },
      setMaxDistance: function (e) {
        return (this.panner.maxDistance = e), this;
      },
      setDirectionalCone: function (e, t, n) {
        return (
          (this.panner.coneInnerAngle = e),
          (this.panner.coneOuterAngle = t),
          (this.panner.coneOuterGain = n),
          this
        );
      },
      updateMatrixWorld: function (e) {
        if (
          (Zn.prototype.updateMatrixWorld.call(this, e),
          !0 !== this.hasPlaybackControl || !1 !== this.isPlaying)
        ) {
          this.matrixWorld.decompose(ym, bm, wm),
            Am.set(0, 0, 1).applyQuaternion(bm);
          var t = this.panner;
          if (t.positionX) {
            var n = this.context.currentTime + this.listener.timeDelta;
            t.positionX.linearRampToValueAtTime(ym.x, n),
              t.positionY.linearRampToValueAtTime(ym.y, n),
              t.positionZ.linearRampToValueAtTime(ym.z, n),
              t.orientationX.linearRampToValueAtTime(Am.x, n),
              t.orientationY.linearRampToValueAtTime(Am.y, n),
              t.orientationZ.linearRampToValueAtTime(Am.z, n);
          } else
            t.setPosition(ym.x, ym.y, ym.z), t.setOrientation(Am.x, Am.y, Am.z);
        }
      },
    })),
      Object.assign(Lm.prototype, {
        getFrequencyData: function () {
          return this.analyser.getByteFrequencyData(this.data), this.data;
        },
        getAverageFrequency: function () {
          for (var e = 0, t = this.getFrequencyData(), n = 0; n < t.length; n++)
            e += t[n];
          return e / t.length;
        },
      }),
      Object.assign(Tm.prototype, {
        accumulate: function (e, t) {
          var n = this.buffer,
            i = this.valueSize,
            r = e * i + i,
            a = this.cumulativeWeight;
          if (0 === a) {
            for (var o = 0; o !== i; ++o) n[r + o] = n[o];
            a = t;
          } else {
            a += t;
            var s = t / a;
            this._mixBufferRegion(n, r, 0, s, i);
          }
          this.cumulativeWeight = a;
        },
        accumulateAdditive: function (e) {
          var t = this.buffer,
            n = this.valueSize,
            i = n * this._addIndex;
          0 === this.cumulativeWeightAdditive && this._setIdentity(),
            this._mixBufferRegionAdditive(t, i, 0, e, n),
            (this.cumulativeWeightAdditive += e);
        },
        apply: function (e) {
          var t = this.valueSize,
            n = this.buffer,
            i = e * t + t,
            r = this.cumulativeWeight,
            a = this.cumulativeWeightAdditive,
            o = this.binding;
          if (
            ((this.cumulativeWeight = 0),
            (this.cumulativeWeightAdditive = 0),
            r < 1)
          ) {
            var s = t * this._origIndex;
            this._mixBufferRegion(n, i, s, 1 - r, t);
          }
          a > 0 &&
            this._mixBufferRegionAdditive(n, i, this._addIndex * t, 1, t);
          for (var c = t, u = t + t; c !== u; ++c)
            if (n[c] !== n[c + t]) {
              o.setValue(n, i);
              break;
            }
        },
        saveOriginalState: function () {
          var e = this.binding,
            t = this.buffer,
            n = this.valueSize,
            i = n * this._origIndex;
          e.getValue(t, i);
          for (var r = n, a = i; r !== a; ++r) t[r] = t[i + (r % n)];
          this._setIdentity(),
            (this.cumulativeWeight = 0),
            (this.cumulativeWeightAdditive = 0);
        },
        restoreOriginalState: function () {
          var e = 3 * this.valueSize;
          this.binding.setValue(this.buffer, e);
        },
        _setAdditiveIdentityNumeric: function () {
          var e = this._addIndex * this.valueSize;
          this.buffer.fill(0, e, e + this.valueSize);
        },
        _setAdditiveIdentityQuaternion: function () {
          this._setAdditiveIdentityNumeric(),
            (this.buffer[4 * this._addIndex + 3] = 1);
        },
        _setAdditiveIdentityOther: function () {
          var e = this._origIndex * this.valueSize,
            t = this._addIndex * this.valueSize;
          this.buffer.copyWithin(t, e, this.valueSize);
        },
        _select: function (e, t, n, i, r) {
          if (i >= 0.5) for (var a = 0; a !== r; ++a) e[t + a] = e[n + a];
        },
        _slerp: function (e, t, n, i) {
          bn.slerpFlat(e, t, e, t, e, n, i);
        },
        _slerpAdditive: function (e, t, n, i, r) {
          var a = this._workIndex * r;
          bn.multiplyQuaternionsFlat(e, a, e, t, e, n),
            bn.slerpFlat(e, t, e, t, e, a, i);
        },
        _lerp: function (e, t, n, i, r) {
          for (var a = 1 - i, o = 0; o !== r; ++o) {
            var s = t + o;
            e[s] = e[s] * a + e[n + o] * i;
          }
        },
        _lerpAdditive: function (e, t, n, i, r) {
          for (var a = 0; a !== r; ++a) {
            var o = t + a;
            e[o] = e[o] + e[n + a] * i;
          }
        },
      });
    var zm = '\\[\\]\\.:\\/',
      Sm = new RegExp('[' + zm + ']', 'g'),
      Om = '[^' + zm + ']',
      Em = '[^' + zm.replace('\\.', '') + ']',
      km = /((?:WC+[\/:])*)/.source.replace('WC', Om),
      Cm = /(WCOD+)?/.source.replace('WCOD', Em),
      Dm = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace('WC', Om),
      Nm = /\.(WC+)(?:\[(.+)\])?/.source.replace('WC', Om),
      Pm = new RegExp('^' + km + Cm + Dm + Nm + '$'),
      jm = ['material', 'materials', 'bones'];
    function Ym(e, t, n) {
      var i = n || Rm.parseTrackName(t);
      (this._targetGroup = e), (this._bindings = e.subscribe_(t, i));
    }
    function Rm(e, t, n) {
      (this.path = t),
        (this.parsedPath = n || Rm.parseTrackName(t)),
        (this.node = Rm.findNode(e, this.parsedPath.nodeName) || e),
        (this.rootNode = e);
    }
    function Bm() {
      (this.uuid = hn.generateUUID()),
        (this._objects = Array.prototype.slice.call(arguments)),
        (this.nCachedObjects_ = 0);
      var e = {};
      this._indicesByUUID = e;
      for (var t = 0, n = arguments.length; t !== n; ++t)
        e[arguments[t].uuid] = t;
      (this._paths = []),
        (this._parsedPaths = []),
        (this._bindings = []),
        (this._bindingsIndicesByPath = {});
      var i = this;
      this.stats = {
        objects: {
          get total() {
            return i._objects.length;
          },
          get inUse() {
            return this.total - i.nCachedObjects_;
          },
        },
        get bindingsPerObject() {
          return i._bindings.length;
        },
      };
    }
    function Wm(e, t, n, i) {
      (this._mixer = e),
        (this._clip = t),
        (this._localRoot = n || null),
        (this.blendMode = i || t.blendMode);
      for (
        var r = t.tracks,
          a = r.length,
          o = new Array(a),
          s = { endingStart: Yt, endingEnd: Yt },
          c = 0;
        c !== a;
        ++c
      ) {
        var u = r[c].createInterpolant(null);
        (o[c] = u), (u.settings = s);
      }
      (this._interpolantSettings = s),
        (this._interpolants = o),
        (this._propertyBindings = new Array(a)),
        (this._cacheIndex = null),
        (this._byClipCacheIndex = null),
        (this._timeScaleInterpolant = null),
        (this._weightInterpolant = null),
        (this.loop = Ct),
        (this._loopCount = -1),
        (this._startTime = null),
        (this.time = 0),
        (this.timeScale = 1),
        (this._effectiveTimeScale = 1),
        (this.weight = 1),
        (this._effectiveWeight = 1),
        (this.repetitions = 1 / 0),
        (this.paused = !1),
        (this.enabled = !0),
        (this.clampWhenFinished = !1),
        (this.zeroSlopeAtStart = !0),
        (this.zeroSlopeAtEnd = !0);
    }
    function Im(e) {
      (this._root = e),
        this._initMemoryManager(),
        (this._accuIndex = 0),
        (this.time = 0),
        (this.timeScale = 1);
    }
    function qm(e) {
      void 0, 'string' === typeof e && (e = arguments[1]), (this.value = e);
    }
    function Hm(e, t, n) {
      Uu.call(this, e, t), (this.meshPerAttribute = n || 1);
    }
    function Fm(e, t, n, i) {
      (this.ray = new wi(e, t)),
        (this.near = n || 0),
        (this.far = i || 1 / 0),
        (this.camera = null),
        (this.layers = new jn()),
        (this.params = {
          Mesh: {},
          Line: { threshold: 1 },
          LOD: {},
          Points: { threshold: 1 },
          Sprite: {},
        }),
        Object.defineProperties(this.params, {
          PointCloud: {
            get: function () {
              return void 0, this.Points;
            },
          },
        });
    }
    function Um(e, t) {
      return e.distance - t.distance;
    }
    function Xm(e, t, n, i) {
      if ((e.layers.test(t.layers) && e.raycast(t, n), !0 === i))
        for (var r = e.children, a = 0, o = r.length; a < o; a++)
          Xm(r[a], t, n, !0);
    }
    function Vm(e, t, n) {
      return (
        (this.radius = void 0 !== e ? e : 1),
        (this.phi = void 0 !== t ? t : 0),
        (this.theta = void 0 !== n ? n : 0),
        this
      );
    }
    function Gm(e, t, n) {
      return (
        (this.radius = void 0 !== e ? e : 1),
        (this.theta = void 0 !== t ? t : 0),
        (this.y = void 0 !== n ? n : 0),
        this
      );
    }
    Object.assign(Ym.prototype, {
      getValue: function (e, t) {
        this.bind();
        var n = this._targetGroup.nCachedObjects_,
          i = this._bindings[n];
        void 0 !== i && i.getValue(e, t);
      },
      setValue: function (e, t) {
        for (
          var n = this._bindings,
            i = this._targetGroup.nCachedObjects_,
            r = n.length;
          i !== r;
          ++i
        )
          n[i].setValue(e, t);
      },
      bind: function () {
        for (
          var e = this._bindings,
            t = this._targetGroup.nCachedObjects_,
            n = e.length;
          t !== n;
          ++t
        )
          e[t].bind();
      },
      unbind: function () {
        for (
          var e = this._bindings,
            t = this._targetGroup.nCachedObjects_,
            n = e.length;
          t !== n;
          ++t
        )
          e[t].unbind();
      },
    }),
      Object.assign(Rm, {
        Composite: Ym,
        create: function (e, t, n) {
          return e && e.isAnimationObjectGroup
            ? new Rm.Composite(e, t, n)
            : new Rm(e, t, n);
        },
        sanitizeNodeName: function (e) {
          return e.replace(/\s/g, '_').replace(Sm, '');
        },
        parseTrackName: function (e) {
          var t = Pm.exec(e);
          if (!t)
            throw new Error('PropertyBinding: Cannot parse trackName: ' + e);
          var n = {
              nodeName: t[2],
              objectName: t[3],
              objectIndex: t[4],
              propertyName: t[5],
              propertyIndex: t[6],
            },
            i = n.nodeName && n.nodeName.lastIndexOf('.');
          if (void 0 !== i && -1 !== i) {
            var r = n.nodeName.substring(i + 1);
            -1 !== jm.indexOf(r) &&
              ((n.nodeName = n.nodeName.substring(0, i)), (n.objectName = r));
          }
          if (null === n.propertyName || 0 === n.propertyName.length)
            throw new Error(
              'PropertyBinding: can not parse propertyName from trackName: ' + e
            );
          return n;
        },
        findNode: function (e, t) {
          if (
            !t ||
            '' === t ||
            '.' === t ||
            -1 === t ||
            t === e.name ||
            t === e.uuid
          )
            return e;
          if (e.skeleton) {
            var n = e.skeleton.getBoneByName(t);
            if (void 0 !== n) return n;
          }
          if (e.children) {
            var i = function (e) {
                for (var n = 0; n < e.length; n++) {
                  var r = e[n];
                  if (r.name === t || r.uuid === t) return r;
                  var a = i(r.children);
                  if (a) return a;
                }
                return null;
              },
              r = i(e.children);
            if (r) return r;
          }
          return null;
        },
      }),
      Object.assign(Rm.prototype, {
        _getValue_unavailable: function () {},
        _setValue_unavailable: function () {},
        BindingType: {
          Direct: 0,
          EntireArray: 1,
          ArrayElement: 2,
          HasFromToArray: 3,
        },
        Versioning: { None: 0, NeedsUpdate: 1, MatrixWorldNeedsUpdate: 2 },
        GetterByBindingType: [
          function e(t, n) {
            t[n] = this.node[this.propertyName];
          },
          function e(t, n) {
            for (
              var i = this.resolvedProperty, r = 0, a = i.length;
              r !== a;
              ++r
            )
              t[n++] = i[r];
          },
          function e(t, n) {
            t[n] = this.resolvedProperty[this.propertyIndex];
          },
          function e(t, n) {
            this.resolvedProperty.toArray(t, n);
          },
        ],
        SetterByBindingTypeAndVersioning: [
          [
            function e(t, n) {
              this.targetObject[this.propertyName] = t[n];
            },
            function e(t, n) {
              (this.targetObject[this.propertyName] = t[n]),
                (this.targetObject.needsUpdate = !0);
            },
            function e(t, n) {
              (this.targetObject[this.propertyName] = t[n]),
                (this.targetObject.matrixWorldNeedsUpdate = !0);
            },
          ],
          [
            function e(t, n) {
              for (
                var i = this.resolvedProperty, r = 0, a = i.length;
                r !== a;
                ++r
              )
                i[r] = t[n++];
            },
            function e(t, n) {
              for (
                var i = this.resolvedProperty, r = 0, a = i.length;
                r !== a;
                ++r
              )
                i[r] = t[n++];
              this.targetObject.needsUpdate = !0;
            },
            function e(t, n) {
              for (
                var i = this.resolvedProperty, r = 0, a = i.length;
                r !== a;
                ++r
              )
                i[r] = t[n++];
              this.targetObject.matrixWorldNeedsUpdate = !0;
            },
          ],
          [
            function e(t, n) {
              this.resolvedProperty[this.propertyIndex] = t[n];
            },
            function e(t, n) {
              (this.resolvedProperty[this.propertyIndex] = t[n]),
                (this.targetObject.needsUpdate = !0);
            },
            function e(t, n) {
              (this.resolvedProperty[this.propertyIndex] = t[n]),
                (this.targetObject.matrixWorldNeedsUpdate = !0);
            },
          ],
          [
            function e(t, n) {
              this.resolvedProperty.fromArray(t, n);
            },
            function e(t, n) {
              this.resolvedProperty.fromArray(t, n),
                (this.targetObject.needsUpdate = !0);
            },
            function e(t, n) {
              this.resolvedProperty.fromArray(t, n),
                (this.targetObject.matrixWorldNeedsUpdate = !0);
            },
          ],
        ],
        getValue: function e(t, n) {
          this.bind(), this.getValue(t, n);
        },
        setValue: function e(t, n) {
          this.bind(), this.setValue(t, n);
        },
        bind: function () {
          var e = this.node,
            t = this.parsedPath,
            n = t.objectName,
            i = t.propertyName,
            r = t.propertyIndex;
          if (
            (e ||
              ((e = Rm.findNode(this.rootNode, t.nodeName) || this.rootNode),
              (this.node = e)),
            (this.getValue = this._getValue_unavailable),
            (this.setValue = this._setValue_unavailable),
            !e)
          )
            return void 0, void 0;
          if (n) {
            var a = t.objectIndex;
            switch (n) {
              case 'materials':
                if (!e.material) return void 0, void 0;
                if (!e.material.materials) return void 0, void 0;
                e = e.material.materials;
                break;
              case 'bones':
                if (!e.skeleton) return void 0, void 0;
                e = e.skeleton.bones;
                for (var o = 0; o < e.length; o++)
                  if (e[o].name === a) {
                    a = o;
                    break;
                  }
                break;
              default:
                if (void 0 === e[n]) return void 0, void 0;
                e = e[n];
            }
            if (void 0 !== a) {
              if (void 0 === e[a]) return void 0, void 0;
              e = e[a];
            }
          }
          var s = e[i];
          if (void 0 === s) {
            t.nodeName;
            return void 0, void 0;
          }
          var c = this.Versioning.None;
          (this.targetObject = e),
            void 0 !== e.needsUpdate
              ? (c = this.Versioning.NeedsUpdate)
              : void 0 !== e.matrixWorldNeedsUpdate &&
                (c = this.Versioning.MatrixWorldNeedsUpdate);
          var u = this.BindingType.Direct;
          if (void 0 !== r) {
            if ('morphTargetInfluences' === i) {
              if (!e.geometry) return void 0, void 0;
              if (e.geometry.isBufferGeometry) {
                if (!e.geometry.morphAttributes) return void 0, void 0;
                for (
                  o = 0;
                  o < this.node.geometry.morphAttributes.position.length;
                  o++
                )
                  if (e.geometry.morphAttributes.position[o].name === r) {
                    r = o;
                    break;
                  }
              } else {
                if (!e.geometry.morphTargets) return void 0, void 0;
                for (o = 0; o < this.node.geometry.morphTargets.length; o++)
                  if (e.geometry.morphTargets[o].name === r) {
                    r = o;
                    break;
                  }
              }
            }
            (u = this.BindingType.ArrayElement),
              (this.resolvedProperty = s),
              (this.propertyIndex = r);
          } else
            void 0 !== s.fromArray && void 0 !== s.toArray
              ? ((u = this.BindingType.HasFromToArray),
                (this.resolvedProperty = s))
              : Array.isArray(s)
              ? ((u = this.BindingType.EntireArray),
                (this.resolvedProperty = s))
              : (this.propertyName = i);
          (this.getValue = this.GetterByBindingType[u]),
            (this.setValue = this.SetterByBindingTypeAndVersioning[u][c]);
        },
        unbind: function () {
          (this.node = null),
            (this.getValue = this._getValue_unbound),
            (this.setValue = this._setValue_unbound);
        },
      }),
      Object.assign(Rm.prototype, {
        _getValue_unbound: Rm.prototype.getValue,
        _setValue_unbound: Rm.prototype.setValue,
      }),
      Object.assign(Bm.prototype, {
        isAnimationObjectGroup: !0,
        add: function () {
          for (
            var e = this._objects,
              t = e.length,
              n = this.nCachedObjects_,
              i = this._indicesByUUID,
              r = this._paths,
              a = this._parsedPaths,
              o = this._bindings,
              s = o.length,
              c = void 0,
              u = 0,
              l = arguments.length;
            u !== l;
            ++u
          ) {
            var d = arguments[u],
              h = d.uuid,
              p = i[h];
            if (void 0 === p) {
              (p = t++), (i[h] = p), e.push(d);
              for (var m = 0, f = s; m !== f; ++m)
                o[m].push(new Rm(d, r[m], a[m]));
            } else if (p < n) {
              c = e[p];
              var _ = --n,
                M = e[_];
              (i[M.uuid] = p), (e[p] = M), (i[h] = _), (e[_] = d);
              for (m = 0, f = s; m !== f; ++m) {
                var v = o[m],
                  g = v[_],
                  y = v[p];
                (v[p] = g),
                  void 0 === y && (y = new Rm(d, r[m], a[m])),
                  (v[_] = y);
              }
            } else e[p] !== c && void 0;
          }
          this.nCachedObjects_ = n;
        },
        remove: function () {
          for (
            var e = this._objects,
              t = this.nCachedObjects_,
              n = this._indicesByUUID,
              i = this._bindings,
              r = i.length,
              a = 0,
              o = arguments.length;
            a !== o;
            ++a
          ) {
            var s = arguments[a],
              c = s.uuid,
              u = n[c];
            if (void 0 !== u && u >= t) {
              var l = t++,
                d = e[l];
              (n[d.uuid] = u), (e[u] = d), (n[c] = l), (e[l] = s);
              for (var h = 0, p = r; h !== p; ++h) {
                var m = i[h],
                  f = m[l],
                  _ = m[u];
                (m[u] = f), (m[l] = _);
              }
            }
          }
          this.nCachedObjects_ = t;
        },
        uncache: function () {
          for (
            var e = this._objects,
              t = e.length,
              n = this.nCachedObjects_,
              i = this._indicesByUUID,
              r = this._bindings,
              a = r.length,
              o = 0,
              s = arguments.length;
            o !== s;
            ++o
          ) {
            var c = arguments[o],
              u = c.uuid,
              l = i[u];
            if (void 0 !== l)
              if ((delete i[u], l < n)) {
                var d = --n,
                  h = e[d],
                  p = --t,
                  m = e[p];
                (i[h.uuid] = l),
                  (e[l] = h),
                  (i[m.uuid] = d),
                  (e[d] = m),
                  e.pop();
                for (var f = 0, _ = a; f !== _; ++f) {
                  var M = r[f],
                    v = M[d],
                    g = M[p];
                  (M[l] = v), (M[d] = g), M.pop();
                }
              } else {
                (p = --t), (m = e[p]);
                (i[m.uuid] = l), (e[l] = m), e.pop();
                for (f = 0, _ = a; f !== _; ++f) {
                  M = r[f];
                  (M[l] = M[p]), M.pop();
                }
              }
          }
          this.nCachedObjects_ = n;
        },
        subscribe_: function (e, t) {
          var n = this._bindingsIndicesByPath,
            i = n[e],
            r = this._bindings;
          if (void 0 !== i) return r[i];
          var a = this._paths,
            o = this._parsedPaths,
            s = this._objects,
            c = s.length,
            u = this.nCachedObjects_,
            l = new Array(c);
          (i = r.length), (n[e] = i), a.push(e), o.push(t), r.push(l);
          for (var d = u, h = s.length; d !== h; ++d) {
            var p = s[d];
            l[d] = new Rm(p, e, t);
          }
          return l;
        },
        unsubscribe_: function (e) {
          var t = this._bindingsIndicesByPath,
            n = t[e];
          if (void 0 !== n) {
            var i = this._paths,
              r = this._parsedPaths,
              a = this._bindings,
              o = a.length - 1,
              s = a[o],
              c = e[o];
            (t[c] = n),
              (a[n] = s),
              a.pop(),
              (r[n] = r[o]),
              r.pop(),
              (i[n] = i[o]),
              i.pop();
          }
        },
      }),
      Object.assign(Wm.prototype, {
        play: function () {
          return this._mixer._activateAction(this), this;
        },
        stop: function () {
          return this._mixer._deactivateAction(this), this.reset();
        },
        reset: function () {
          return (
            (this.paused = !1),
            (this.enabled = !0),
            (this.time = 0),
            (this._loopCount = -1),
            (this._startTime = null),
            this.stopFading().stopWarping()
          );
        },
        isRunning: function () {
          return (
            this.enabled &&
            !this.paused &&
            0 !== this.timeScale &&
            null === this._startTime &&
            this._mixer._isActiveAction(this)
          );
        },
        isScheduled: function () {
          return this._mixer._isActiveAction(this);
        },
        startAt: function (e) {
          return (this._startTime = e), this;
        },
        setLoop: function (e, t) {
          return (this.loop = e), (this.repetitions = t), this;
        },
        setEffectiveWeight: function (e) {
          return (
            (this.weight = e),
            (this._effectiveWeight = this.enabled ? e : 0),
            this.stopFading()
          );
        },
        getEffectiveWeight: function () {
          return this._effectiveWeight;
        },
        fadeIn: function (e) {
          return this._scheduleFading(e, 0, 1);
        },
        fadeOut: function (e) {
          return this._scheduleFading(e, 1, 0);
        },
        crossFadeFrom: function (e, t, n) {
          if ((e.fadeOut(t), this.fadeIn(t), n)) {
            var i = this._clip.duration,
              r = e._clip.duration,
              a = r / i,
              o = i / r;
            e.warp(1, a, t), this.warp(o, 1, t);
          }
          return this;
        },
        crossFadeTo: function (e, t, n) {
          return e.crossFadeFrom(this, t, n);
        },
        stopFading: function () {
          var e = this._weightInterpolant;
          return (
            null !== e &&
              ((this._weightInterpolant = null),
              this._mixer._takeBackControlInterpolant(e)),
            this
          );
        },
        setEffectiveTimeScale: function (e) {
          return (
            (this.timeScale = e),
            (this._effectiveTimeScale = this.paused ? 0 : e),
            this.stopWarping()
          );
        },
        getEffectiveTimeScale: function () {
          return this._effectiveTimeScale;
        },
        setDuration: function (e) {
          return (this.timeScale = this._clip.duration / e), this.stopWarping();
        },
        syncWith: function (e) {
          return (
            (this.time = e.time),
            (this.timeScale = e.timeScale),
            this.stopWarping()
          );
        },
        halt: function (e) {
          return this.warp(this._effectiveTimeScale, 0, e);
        },
        warp: function (e, t, n) {
          var i = this._mixer,
            r = i.time,
            a = this._timeScaleInterpolant,
            o = this.timeScale;
          null === a &&
            ((a = i._lendControlInterpolant()),
            (this._timeScaleInterpolant = a));
          var s = a.parameterPositions,
            c = a.sampleValues;
          return (
            (s[0] = r), (s[1] = r + n), (c[0] = e / o), (c[1] = t / o), this
          );
        },
        stopWarping: function () {
          var e = this._timeScaleInterpolant;
          return (
            null !== e &&
              ((this._timeScaleInterpolant = null),
              this._mixer._takeBackControlInterpolant(e)),
            this
          );
        },
        getMixer: function () {
          return this._mixer;
        },
        getClip: function () {
          return this._clip;
        },
        getRoot: function () {
          return this._localRoot || this._mixer._root;
        },
        _update: function (e, t, n, i) {
          if (!this.enabled) return this._updateWeight(e), void 0;
          var r = this._startTime;
          if (null !== r) {
            var a = (e - r) * n;
            if (a < 0 || 0 === n) return;
            (this._startTime = null), (t = n * a);
          }
          t *= this._updateTimeScale(e);
          var o = this._updateTime(t),
            s = this._updateWeight(e);
          if (s > 0) {
            var c = this._interpolants,
              u = this._propertyBindings;
            switch (this.blendMode) {
              case It:
                for (var l = 0, d = c.length; l !== d; ++l)
                  c[l].evaluate(o), u[l].accumulateAdditive(s);
                break;
              case Wt:
              default:
                for (l = 0, d = c.length; l !== d; ++l)
                  c[l].evaluate(o), u[l].accumulate(i, s);
            }
          }
        },
        _updateWeight: function (e) {
          var t = 0;
          if (this.enabled) {
            t = this.weight;
            var n = this._weightInterpolant;
            if (null !== n) {
              var i = n.evaluate(e)[0];
              (t *= i),
                e > n.parameterPositions[1] &&
                  (this.stopFading(), 0 === i && (this.enabled = !1));
            }
          }
          return (this._effectiveWeight = t), t;
        },
        _updateTimeScale: function (e) {
          var t = 0;
          if (!this.paused) {
            t = this.timeScale;
            var n = this._timeScaleInterpolant;
            if (null !== n) {
              var i = n.evaluate(e)[0];
              (t *= i),
                e > n.parameterPositions[1] &&
                  (this.stopWarping(),
                  0 === t ? (this.paused = !0) : (this.timeScale = t));
            }
          }
          return (this._effectiveTimeScale = t), t;
        },
        _updateTime: function (e) {
          var t = this.time + e,
            n = this._clip.duration,
            i = this.loop,
            r = this._loopCount,
            a = i === Dt;
          if (0 === e) return -1 === r ? t : a && 1 === (1 & r) ? n - t : t;
          if (i === kt) {
            -1 === r && ((this._loopCount = 0), this._setEndings(!0, !0, !1));
            e: {
              if (t >= n) t = n;
              else {
                if (!(t < 0)) {
                  this.time = t;
                  break e;
                }
                t = 0;
              }
              this.clampWhenFinished ? (this.paused = !0) : (this.enabled = !1),
                (this.time = t),
                this._mixer.dispatchEvent({
                  type: 'finished',
                  action: this,
                  direction: e < 0 ? -1 : 1,
                });
            }
          } else {
            if (
              (-1 === r &&
                (e >= 0
                  ? ((r = 0), this._setEndings(!0, 0 === this.repetitions, a))
                  : this._setEndings(0 === this.repetitions, !0, a)),
              t >= n || t < 0)
            ) {
              var o = Math.floor(t / n);
              (t -= n * o), (r += Math.abs(o));
              var s = this.repetitions - r;
              if (s <= 0)
                this.clampWhenFinished
                  ? (this.paused = !0)
                  : (this.enabled = !1),
                  (t = e > 0 ? n : 0),
                  (this.time = t),
                  this._mixer.dispatchEvent({
                    type: 'finished',
                    action: this,
                    direction: e > 0 ? 1 : -1,
                  });
              else {
                if (1 === s) {
                  var c = e < 0;
                  this._setEndings(c, !c, a);
                } else this._setEndings(!1, !1, a);
                (this._loopCount = r),
                  (this.time = t),
                  this._mixer.dispatchEvent({
                    type: 'loop',
                    action: this,
                    loopDelta: o,
                  });
              }
            } else this.time = t;
            if (a && 1 === (1 & r)) return n - t;
          }
          return t;
        },
        _setEndings: function (e, t, n) {
          var i = this._interpolantSettings;
          n
            ? ((i.endingStart = Rt), (i.endingEnd = Rt))
            : ((i.endingStart = e ? (this.zeroSlopeAtStart ? Rt : Yt) : Bt),
              (i.endingEnd = t ? (this.zeroSlopeAtEnd ? Rt : Yt) : Bt));
        },
        _scheduleFading: function (e, t, n) {
          var i = this._mixer,
            r = i.time,
            a = this._weightInterpolant;
          null === a &&
            ((a = i._lendControlInterpolant()), (this._weightInterpolant = a));
          var o = a.parameterPositions,
            s = a.sampleValues;
          return (o[0] = r), (s[0] = t), (o[1] = r + e), (s[1] = n), this;
        },
      }),
      (Im.prototype = Object.assign(Object.create(cn.prototype), {
        constructor: Im,
        _bindAction: function (e, t) {
          var n = e._localRoot || this._root,
            i = e._clip.tracks,
            r = i.length,
            a = e._propertyBindings,
            o = e._interpolants,
            s = n.uuid,
            c = this._bindingsByRootAndName,
            u = c[s];
          void 0 === u && ((u = {}), (c[s] = u));
          for (var l = 0; l !== r; ++l) {
            var d = i[l],
              h = d.name,
              p = u[h];
            if (void 0 !== p) a[l] = p;
            else {
              if (((p = a[l]), void 0 !== p)) {
                null === p._cacheIndex &&
                  (++p.referenceCount, this._addInactiveBinding(p, s, h));
                continue;
              }
              var m = t && t._propertyBindings[l].binding.parsedPath;
              (p = new Tm(
                Rm.create(n, h, m),
                d.ValueTypeName,
                d.getValueSize()
              )),
                ++p.referenceCount,
                this._addInactiveBinding(p, s, h),
                (a[l] = p);
            }
            o[l].resultBuffer = p.buffer;
          }
        },
        _activateAction: function (e) {
          if (!this._isActiveAction(e)) {
            if (null === e._cacheIndex) {
              var t = (e._localRoot || this._root).uuid,
                n = e._clip.uuid,
                i = this._actionsByClip[n];
              this._bindAction(e, i && i.knownActions[0]),
                this._addInactiveAction(e, n, t);
            }
            for (
              var r = e._propertyBindings, a = 0, o = r.length;
              a !== o;
              ++a
            ) {
              var s = r[a];
              0 === s.useCount++ &&
                (this._lendBinding(s), s.saveOriginalState());
            }
            this._lendAction(e);
          }
        },
        _deactivateAction: function (e) {
          if (this._isActiveAction(e)) {
            for (
              var t = e._propertyBindings, n = 0, i = t.length;
              n !== i;
              ++n
            ) {
              var r = t[n];
              0 === --r.useCount &&
                (r.restoreOriginalState(), this._takeBackBinding(r));
            }
            this._takeBackAction(e);
          }
        },
        _initMemoryManager: function () {
          (this._actions = []),
            (this._nActiveActions = 0),
            (this._actionsByClip = {}),
            (this._bindings = []),
            (this._nActiveBindings = 0),
            (this._bindingsByRootAndName = {}),
            (this._controlInterpolants = []),
            (this._nActiveControlInterpolants = 0);
          var e = this;
          this.stats = {
            actions: {
              get total() {
                return e._actions.length;
              },
              get inUse() {
                return e._nActiveActions;
              },
            },
            bindings: {
              get total() {
                return e._bindings.length;
              },
              get inUse() {
                return e._nActiveBindings;
              },
            },
            controlInterpolants: {
              get total() {
                return e._controlInterpolants.length;
              },
              get inUse() {
                return e._nActiveControlInterpolants;
              },
            },
          };
        },
        _isActiveAction: function (e) {
          var t = e._cacheIndex;
          return null !== t && t < this._nActiveActions;
        },
        _addInactiveAction: function (e, t, n) {
          var i = this._actions,
            r = this._actionsByClip,
            a = r[t];
          if (void 0 === a)
            (a = { knownActions: [e], actionByRoot: {} }),
              (e._byClipCacheIndex = 0),
              (r[t] = a);
          else {
            var o = a.knownActions;
            (e._byClipCacheIndex = o.length), o.push(e);
          }
          (e._cacheIndex = i.length), i.push(e), (a.actionByRoot[n] = e);
        },
        _removeInactiveAction: function (e) {
          var t = this._actions,
            n = t[t.length - 1],
            i = e._cacheIndex;
          (n._cacheIndex = i), (t[i] = n), t.pop(), (e._cacheIndex = null);
          var r = e._clip.uuid,
            a = this._actionsByClip,
            o = a[r],
            s = o.knownActions,
            c = s[s.length - 1],
            u = e._byClipCacheIndex;
          (c._byClipCacheIndex = u),
            (s[u] = c),
            s.pop(),
            (e._byClipCacheIndex = null);
          var l = o.actionByRoot,
            d = (e._localRoot || this._root).uuid;
          delete l[d],
            0 === s.length && delete a[r],
            this._removeInactiveBindingsForAction(e);
        },
        _removeInactiveBindingsForAction: function (e) {
          for (var t = e._propertyBindings, n = 0, i = t.length; n !== i; ++n) {
            var r = t[n];
            0 === --r.referenceCount && this._removeInactiveBinding(r);
          }
        },
        _lendAction: function (e) {
          var t = this._actions,
            n = e._cacheIndex,
            i = this._nActiveActions++,
            r = t[i];
          (e._cacheIndex = i), (t[i] = e), (r._cacheIndex = n), (t[n] = r);
        },
        _takeBackAction: function (e) {
          var t = this._actions,
            n = e._cacheIndex,
            i = --this._nActiveActions,
            r = t[i];
          (e._cacheIndex = i), (t[i] = e), (r._cacheIndex = n), (t[n] = r);
        },
        _addInactiveBinding: function (e, t, n) {
          var i = this._bindingsByRootAndName,
            r = i[t],
            a = this._bindings;
          void 0 === r && ((r = {}), (i[t] = r)),
            (r[n] = e),
            (e._cacheIndex = a.length),
            a.push(e);
        },
        _removeInactiveBinding: function (e) {
          var t = this._bindings,
            n = e.binding,
            i = n.rootNode.uuid,
            r = n.path,
            a = this._bindingsByRootAndName,
            o = a[i],
            s = t[t.length - 1],
            c = e._cacheIndex;
          (s._cacheIndex = c),
            (t[c] = s),
            t.pop(),
            delete o[r],
            0 === Object.keys(o).length && delete a[i];
        },
        _lendBinding: function (e) {
          var t = this._bindings,
            n = e._cacheIndex,
            i = this._nActiveBindings++,
            r = t[i];
          (e._cacheIndex = i), (t[i] = e), (r._cacheIndex = n), (t[n] = r);
        },
        _takeBackBinding: function (e) {
          var t = this._bindings,
            n = e._cacheIndex,
            i = --this._nActiveBindings,
            r = t[i];
          (e._cacheIndex = i), (t[i] = e), (r._cacheIndex = n), (t[n] = r);
        },
        _lendControlInterpolant: function () {
          var e = this._controlInterpolants,
            t = this._nActiveControlInterpolants++,
            n = e[t];
          return (
            void 0 === n &&
              ((n = new Sh(
                new Float32Array(2),
                new Float32Array(2),
                1,
                this._controlInterpolantsResultBuffer
              )),
              (n.__cacheIndex = t),
              (e[t] = n)),
            n
          );
        },
        _takeBackControlInterpolant: function (e) {
          var t = this._controlInterpolants,
            n = e.__cacheIndex,
            i = --this._nActiveControlInterpolants,
            r = t[i];
          (e.__cacheIndex = i), (t[i] = e), (r.__cacheIndex = n), (t[n] = r);
        },
        _controlInterpolantsResultBuffer: new Float32Array(1),
        clipAction: function (e, t, n) {
          var i = t || this._root,
            r = i.uuid,
            a = 'string' === typeof e ? Rh.findByName(i, e) : e,
            o = null !== a ? a.uuid : e,
            s = this._actionsByClip[o],
            c = null;
          if (
            (void 0 === n && (n = null !== a ? a.blendMode : Wt), void 0 !== s)
          ) {
            var u = s.actionByRoot[r];
            if (void 0 !== u && u.blendMode === n) return u;
            (c = s.knownActions[0]), null === a && (a = c._clip);
          }
          if (null === a) return null;
          var l = new Wm(this, a, t, n);
          return this._bindAction(l, c), this._addInactiveAction(l, o, r), l;
        },
        existingAction: function (e, t) {
          var n = t || this._root,
            i = n.uuid,
            r = 'string' === typeof e ? Rh.findByName(n, e) : e,
            a = r ? r.uuid : e,
            o = this._actionsByClip[a];
          return (void 0 !== o && o.actionByRoot[i]) || null;
        },
        stopAllAction: function () {
          var e = this._actions,
            t = this._nActiveActions,
            n = this._bindings,
            i = this._nActiveBindings;
          (this._nActiveActions = 0), (this._nActiveBindings = 0);
          for (var r = 0; r !== t; ++r) e[r].reset();
          for (r = 0; r !== i; ++r) n[r].useCount = 0;
          return this;
        },
        update: function (e) {
          e *= this.timeScale;
          for (
            var t = this._actions,
              n = this._nActiveActions,
              i = (this.time += e),
              r = Math.sign(e),
              a = (this._accuIndex ^= 1),
              o = 0;
            o !== n;
            ++o
          ) {
            var s = t[o];
            s._update(i, e, r, a);
          }
          var c = this._bindings,
            u = this._nActiveBindings;
          for (o = 0; o !== u; ++o) c[o].apply(a);
          return this;
        },
        setTime: function (e) {
          this.time = 0;
          for (var t = 0; t < this._actions.length; t++)
            this._actions[t].time = 0;
          return this.update(e);
        },
        getRoot: function () {
          return this._root;
        },
        uncacheClip: function (e) {
          var t = this._actions,
            n = e.uuid,
            i = this._actionsByClip,
            r = i[n];
          if (void 0 !== r) {
            for (var a = r.knownActions, o = 0, s = a.length; o !== s; ++o) {
              var c = a[o];
              this._deactivateAction(c);
              var u = c._cacheIndex,
                l = t[t.length - 1];
              (c._cacheIndex = null),
                (c._byClipCacheIndex = null),
                (l._cacheIndex = u),
                (t[u] = l),
                t.pop(),
                this._removeInactiveBindingsForAction(c);
            }
            delete i[n];
          }
        },
        uncacheRoot: function (e) {
          var t = e.uuid,
            n = this._actionsByClip;
          for (var i in n) {
            var r = n[i].actionByRoot,
              a = r[t];
            void 0 !== a &&
              (this._deactivateAction(a), this._removeInactiveAction(a));
          }
          var o = this._bindingsByRootAndName,
            s = o[t];
          if (void 0 !== s)
            for (var c in s) {
              var u = s[c];
              u.restoreOriginalState(), this._removeInactiveBinding(u);
            }
        },
        uncacheAction: function (e, t) {
          var n = this.existingAction(e, t);
          null !== n &&
            (this._deactivateAction(n), this._removeInactiveAction(n));
        },
      })),
      (qm.prototype.clone = function () {
        return new qm(
          void 0 === this.value.clone ? this.value : this.value.clone()
        );
      }),
      (Hm.prototype = Object.assign(Object.create(Uu.prototype), {
        constructor: Hm,
        isInstancedInterleavedBuffer: !0,
        copy: function (e) {
          return (
            Uu.prototype.copy.call(this, e),
            (this.meshPerAttribute = e.meshPerAttribute),
            this
          );
        },
      })),
      Object.assign(Fm.prototype, {
        set: function (e, t) {
          this.ray.set(e, t);
        },
        setFromCamera: function (e, t) {
          t && t.isPerspectiveCamera
            ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld),
              this.ray.direction
                .set(e.x, e.y, 0.5)
                .unproject(t)
                .sub(this.ray.origin)
                .normalize(),
              (this.camera = t))
            : t && t.isOrthographicCamera
            ? (this.ray.origin
                .set(e.x, e.y, (t.near + t.far) / (t.near - t.far))
                .unproject(t),
              this.ray.direction
                .set(0, 0, -1)
                .transformDirection(t.matrixWorld),
              (this.camera = t))
            : void 0;
        },
        intersectObject: function (e, t, n) {
          var i = n || [];
          return Xm(e, this, i, t), i.sort(Um), i;
        },
        intersectObjects: function (e, t, n) {
          var i = n || [];
          if (!1 === Array.isArray(e)) return void 0, i;
          for (var r = 0, a = e.length; r < a; r++) Xm(e[r], this, i, t);
          return i.sort(Um), i;
        },
      }),
      Object.assign(Vm.prototype, {
        set: function (e, t, n) {
          return (this.radius = e), (this.phi = t), (this.theta = n), this;
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          return (
            (this.radius = e.radius),
            (this.phi = e.phi),
            (this.theta = e.theta),
            this
          );
        },
        makeSafe: function () {
          var e = 1e-6;
          return (
            (this.phi = Math.max(e, Math.min(Math.PI - e, this.phi))), this
          );
        },
        setFromVector3: function (e) {
          return this.setFromCartesianCoords(e.x, e.y, e.z);
        },
        setFromCartesianCoords: function (e, t, n) {
          return (
            (this.radius = Math.sqrt(e * e + t * t + n * n)),
            0 === this.radius
              ? ((this.theta = 0), (this.phi = 0))
              : ((this.theta = Math.atan2(e, n)),
                (this.phi = Math.acos(hn.clamp(t / this.radius, -1, 1)))),
            this
          );
        },
      }),
      Object.assign(Gm.prototype, {
        set: function (e, t, n) {
          return (this.radius = e), (this.theta = t), (this.y = n), this;
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          return (
            (this.radius = e.radius),
            (this.theta = e.theta),
            (this.y = e.y),
            this
          );
        },
        setFromVector3: function (e) {
          return this.setFromCartesianCoords(e.x, e.y, e.z);
        },
        setFromCartesianCoords: function (e, t, n) {
          return (
            (this.radius = Math.sqrt(e * e + n * n)),
            (this.theta = Math.atan2(e, n)),
            (this.y = t),
            this
          );
        },
      });
    var Jm = new pn();
    function Zm(e, t) {
      (this.min = void 0 !== e ? e : new pn(+1 / 0, +1 / 0)),
        (this.max = void 0 !== t ? t : new pn(-1 / 0, -1 / 0));
    }
    Object.assign(Zm.prototype, {
      set: function (e, t) {
        return this.min.copy(e), this.max.copy(t), this;
      },
      setFromPoints: function (e) {
        this.makeEmpty();
        for (var t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
        return this;
      },
      setFromCenterAndSize: function (e, t) {
        var n = Jm.copy(t).multiplyScalar(0.5);
        return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
      },
      clone: function () {
        return new this.constructor().copy(this);
      },
      copy: function (e) {
        return this.min.copy(e.min), this.max.copy(e.max), this;
      },
      makeEmpty: function () {
        return (
          (this.min.x = this.min.y = +1 / 0),
          (this.max.x = this.max.y = -1 / 0),
          this
        );
      },
      isEmpty: function () {
        return this.max.x < this.min.x || this.max.y < this.min.y;
      },
      getCenter: function (e) {
        return (
          void 0,
          void 0 === e && (e = new pn()),
          this.isEmpty()
            ? e.set(0, 0)
            : e.addVectors(this.min, this.max).multiplyScalar(0.5)
        );
      },
      getSize: function (e) {
        return (
          void 0,
          void 0 === e && (e = new pn()),
          this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min)
        );
      },
      expandByPoint: function (e) {
        return this.min.min(e), this.max.max(e), this;
      },
      expandByVector: function (e) {
        return this.min.sub(e), this.max.add(e), this;
      },
      expandByScalar: function (e) {
        return this.min.addScalar(-e), this.max.addScalar(e), this;
      },
      containsPoint: function (e) {
        return !(
          e.x < this.min.x ||
          e.x > this.max.x ||
          e.y < this.min.y ||
          e.y > this.max.y
        );
      },
      containsBox: function (e) {
        return (
          this.min.x <= e.min.x &&
          e.max.x <= this.max.x &&
          this.min.y <= e.min.y &&
          e.max.y <= this.max.y
        );
      },
      getParameter: function (e, t) {
        return (
          void 0,
          void 0 === t && (t = new pn()),
          t.set(
            (e.x - this.min.x) / (this.max.x - this.min.x),
            (e.y - this.min.y) / (this.max.y - this.min.y)
          )
        );
      },
      intersectsBox: function (e) {
        return !(
          e.max.x < this.min.x ||
          e.min.x > this.max.x ||
          e.max.y < this.min.y ||
          e.min.y > this.max.y
        );
      },
      clampPoint: function (e, t) {
        return (
          void 0,
          void 0 === t && (t = new pn()),
          t.copy(e).clamp(this.min, this.max)
        );
      },
      distanceToPoint: function (e) {
        var t = Jm.copy(e).clamp(this.min, this.max);
        return t.sub(e).length();
      },
      intersect: function (e) {
        return this.min.max(e.min), this.max.min(e.max), this;
      },
      union: function (e) {
        return this.min.min(e.min), this.max.max(e.max), this;
      },
      translate: function (e) {
        return this.min.add(e), this.max.add(e), this;
      },
      equals: function (e) {
        return e.min.equals(this.min) && e.max.equals(this.max);
      },
    });
    var Km = new xn(),
      Qm = new xn();
    function $m(e, t) {
      (this.start = void 0 !== e ? e : new xn()),
        (this.end = void 0 !== t ? t : new xn());
    }
    function ef(e) {
      Zn.call(this), (this.material = e), (this.render = function () {});
    }
    Object.assign($m.prototype, {
      set: function (e, t) {
        return this.start.copy(e), this.end.copy(t), this;
      },
      clone: function () {
        return new this.constructor().copy(this);
      },
      copy: function (e) {
        return this.start.copy(e.start), this.end.copy(e.end), this;
      },
      getCenter: function (e) {
        return (
          void 0,
          void 0 === e && (e = new xn()),
          e.addVectors(this.start, this.end).multiplyScalar(0.5)
        );
      },
      delta: function (e) {
        return (
          void 0,
          void 0 === e && (e = new xn()),
          e.subVectors(this.end, this.start)
        );
      },
      distanceSq: function () {
        return this.start.distanceToSquared(this.end);
      },
      distance: function () {
        return this.start.distanceTo(this.end);
      },
      at: function (e, t) {
        return (
          void 0,
          void 0 === t && (t = new xn()),
          this.delta(t).multiplyScalar(e).add(this.start)
        );
      },
      closestPointToPointParameter: function (e, t) {
        Km.subVectors(e, this.start), Qm.subVectors(this.end, this.start);
        var n = Qm.dot(Qm),
          i = Qm.dot(Km),
          r = i / n;
        return t && (r = hn.clamp(r, 0, 1)), r;
      },
      closestPointToPoint: function (e, t, n) {
        var i = this.closestPointToPointParameter(e, t);
        return (
          void 0,
          void 0 === n && (n = new xn()),
          this.delta(n).multiplyScalar(i).add(this.start)
        );
      },
      applyMatrix4: function (e) {
        return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this;
      },
      equals: function (e) {
        return e.start.equals(this.start) && e.end.equals(this.end);
      },
    }),
      (ef.prototype = Object.create(Zn.prototype)),
      (ef.prototype.constructor = ef),
      (ef.prototype.isImmediateRenderObject = !0);
    var tf = new xn();
    function nf(e, t) {
      Zn.call(this),
        (this.light = e),
        this.light.updateMatrixWorld(),
        (this.matrix = e.matrixWorld),
        (this.matrixAutoUpdate = !1),
        (this.color = t);
      for (
        var n = new fr(),
          i = [
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            -1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            -1,
            1,
          ],
          r = 0,
          a = 1,
          o = 32;
        r < o;
        r++, a++
      ) {
        var s = (r / o) * Math.PI * 2,
          c = (a / o) * Math.PI * 2;
        i.push(Math.cos(s), Math.sin(s), 1, Math.cos(c), Math.sin(c), 1);
      }
      n.setAttribute('position', new rr(i, 3));
      var u = new Al({ fog: !1, toneMapped: !1 });
      (this.cone = new Cl(n, u)), this.add(this.cone), this.update();
    }
    (nf.prototype = Object.create(Zn.prototype)),
      (nf.prototype.constructor = nf),
      (nf.prototype.dispose = function () {
        this.cone.geometry.dispose(), this.cone.material.dispose();
      }),
      (nf.prototype.update = function () {
        this.light.updateMatrixWorld();
        var e = this.light.distance ? this.light.distance : 1e3,
          t = e * Math.tan(this.light.angle);
        this.cone.scale.set(t, t, e),
          tf.setFromMatrixPosition(this.light.target.matrixWorld),
          this.cone.lookAt(tf),
          void 0 !== this.color
            ? this.cone.material.color.set(this.color)
            : this.cone.material.color.copy(this.light.color);
      });
    var rf = new xn(),
      af = new Cn(),
      of = new Cn();
    function sf(e) {
      var t = [];
      e && e.isBone && t.push(e);
      for (var n = 0; n < e.children.length; n++)
        t.push.apply(t, sf(e.children[n]));
      return t;
    }
    function cf(e) {
      for (
        var t = sf(e),
          n = new fr(),
          i = [],
          r = [],
          a = new Ii(0, 0, 1),
          o = new Ii(0, 1, 0),
          s = 0;
        s < t.length;
        s++
      ) {
        var c = t[s];
        c.parent &&
          c.parent.isBone &&
          (i.push(0, 0, 0),
          i.push(0, 0, 0),
          r.push(a.r, a.g, a.b),
          r.push(o.r, o.g, o.b));
      }
      n.setAttribute('position', new rr(i, 3)),
        n.setAttribute('color', new rr(r, 3));
      var u = new Al({
        vertexColors: !0,
        depthTest: !1,
        depthWrite: !1,
        toneMapped: !1,
        transparent: !0,
      });
      Cl.call(this, n, u),
        (this.type = 'SkeletonHelper'),
        (this.root = e),
        (this.bones = t),
        (this.matrix = e.matrixWorld),
        (this.matrixAutoUpdate = !1);
    }
    function uf(e, t, n) {
      (this.light = e), this.light.updateMatrixWorld(), (this.color = n);
      var i = new Qd(t, 4, 2),
        r = new Gi({ wireframe: !0, fog: !1, toneMapped: !1 });
      Dr.call(this, i, r),
        (this.type = 'PointLightHelper'),
        (this.matrix = this.light.matrixWorld),
        (this.matrixAutoUpdate = !1),
        this.update();
    }
    (cf.prototype = Object.create(Cl.prototype)),
      (cf.prototype.constructor = cf),
      (cf.prototype.isSkeletonHelper = !0),
      (cf.prototype.updateMatrixWorld = function (e) {
        var t = this.bones,
          n = this.geometry,
          i = n.getAttribute('position');
        of.getInverse(this.root.matrixWorld);
        for (var r = 0, a = 0; r < t.length; r++) {
          var o = t[r];
          o.parent &&
            o.parent.isBone &&
            (af.multiplyMatrices(of, o.matrixWorld),
            rf.setFromMatrixPosition(af),
            i.setXYZ(a, rf.x, rf.y, rf.z),
            af.multiplyMatrices(of, o.parent.matrixWorld),
            rf.setFromMatrixPosition(af),
            i.setXYZ(a + 1, rf.x, rf.y, rf.z),
            (a += 2));
        }
        (n.getAttribute('position').needsUpdate = !0),
          Zn.prototype.updateMatrixWorld.call(this, e);
      }),
      (uf.prototype = Object.create(Dr.prototype)),
      (uf.prototype.constructor = uf),
      (uf.prototype.dispose = function () {
        this.geometry.dispose(), this.material.dispose();
      }),
      (uf.prototype.update = function () {
        void 0 !== this.color
          ? this.material.color.set(this.color)
          : this.material.color.copy(this.light.color);
      });
    var lf = new xn(),
      df = new Ii(),
      hf = new Ii();
    function pf(e, t, n) {
      Zn.call(this),
        (this.light = e),
        this.light.updateMatrixWorld(),
        (this.matrix = e.matrixWorld),
        (this.matrixAutoUpdate = !1),
        (this.color = n);
      var i = new $l(t);
      i.rotateY(0.5 * Math.PI),
        (this.material = new Gi({ wireframe: !0, fog: !1, toneMapped: !1 })),
        void 0 === this.color && (this.material.vertexColors = !0);
      var r = i.getAttribute('position'),
        a = new Float32Array(3 * r.count);
      i.setAttribute('color', new Zi(a, 3)),
        this.add(new Dr(i, this.material)),
        this.update();
    }
    function mf(e, t, n, i) {
      (e = e || 10),
        (t = t || 10),
        (n = new Ii(void 0 !== n ? n : 4473924)),
        (i = new Ii(void 0 !== i ? i : 8947848));
      for (
        var r = t / 2,
          a = e / t,
          o = e / 2,
          s = [],
          c = [],
          u = 0,
          l = 0,
          d = -o;
        u <= t;
        u++, d += a
      ) {
        s.push(-o, 0, d, o, 0, d), s.push(d, 0, -o, d, 0, o);
        var h = u === r ? n : i;
        h.toArray(c, l),
          (l += 3),
          h.toArray(c, l),
          (l += 3),
          h.toArray(c, l),
          (l += 3),
          h.toArray(c, l),
          (l += 3);
      }
      var p = new fr();
      p.setAttribute('position', new rr(s, 3)),
        p.setAttribute('color', new rr(c, 3));
      var m = new Al({ vertexColors: !0, toneMapped: !1 });
      Cl.call(this, p, m), (this.type = 'GridHelper');
    }
    function ff(e, t, n, i, r, a) {
      (e = e || 10),
        (t = t || 16),
        (n = n || 8),
        (i = i || 64),
        (r = new Ii(void 0 !== r ? r : 4473924)),
        (a = new Ii(void 0 !== a ? a : 8947848));
      var o,
        s,
        c,
        u,
        l,
        d,
        h,
        p = [],
        m = [];
      for (u = 0; u <= t; u++)
        (c = (u / t) * (2 * Math.PI)),
          (o = Math.sin(c) * e),
          (s = Math.cos(c) * e),
          p.push(0, 0, 0),
          p.push(o, 0, s),
          (h = 1 & u ? r : a),
          m.push(h.r, h.g, h.b),
          m.push(h.r, h.g, h.b);
      for (u = 0; u <= n; u++)
        for (h = 1 & u ? r : a, d = e - (e / n) * u, l = 0; l < i; l++)
          (c = (l / i) * (2 * Math.PI)),
            (o = Math.sin(c) * d),
            (s = Math.cos(c) * d),
            p.push(o, 0, s),
            m.push(h.r, h.g, h.b),
            (c = ((l + 1) / i) * (2 * Math.PI)),
            (o = Math.sin(c) * d),
            (s = Math.cos(c) * d),
            p.push(o, 0, s),
            m.push(h.r, h.g, h.b);
      var f = new fr();
      f.setAttribute('position', new rr(p, 3)),
        f.setAttribute('color', new rr(m, 3));
      var _ = new Al({ vertexColors: !0, toneMapped: !1 });
      Cl.call(this, f, _), (this.type = 'PolarGridHelper');
    }
    (pf.prototype = Object.create(Zn.prototype)),
      (pf.prototype.constructor = pf),
      (pf.prototype.dispose = function () {
        this.children[0].geometry.dispose(),
          this.children[0].material.dispose();
      }),
      (pf.prototype.update = function () {
        var e = this.children[0];
        if (void 0 !== this.color) this.material.color.set(this.color);
        else {
          var t = e.geometry.getAttribute('color');
          df.copy(this.light.color), hf.copy(this.light.groundColor);
          for (var n = 0, i = t.count; n < i; n++) {
            var r = n < i / 2 ? df : hf;
            t.setXYZ(n, r.r, r.g, r.b);
          }
          t.needsUpdate = !0;
        }
        e.lookAt(lf.setFromMatrixPosition(this.light.matrixWorld).negate());
      }),
      (mf.prototype = Object.assign(Object.create(Cl.prototype), {
        constructor: mf,
        copy: function (e) {
          return (
            Cl.prototype.copy.call(this, e),
            this.geometry.copy(e.geometry),
            this.material.copy(e.material),
            this
          );
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
      })),
      (ff.prototype = Object.create(Cl.prototype)),
      (ff.prototype.constructor = ff);
    var _f = new xn(),
      Mf = new xn(),
      vf = new xn();
    function gf(e, t, n) {
      Zn.call(this),
        (this.light = e),
        this.light.updateMatrixWorld(),
        (this.matrix = e.matrixWorld),
        (this.matrixAutoUpdate = !1),
        (this.color = n),
        void 0 === t && (t = 1);
      var i = new fr();
      i.setAttribute(
        'position',
        new rr([-t, t, 0, t, t, 0, t, -t, 0, -t, -t, 0, -t, t, 0], 3)
      );
      var r = new Al({ fog: !1, toneMapped: !1 });
      (this.lightPlane = new Ol(i, r)),
        this.add(this.lightPlane),
        (i = new fr()),
        i.setAttribute('position', new rr([0, 0, 0, 0, 0, 1], 3)),
        (this.targetLine = new Ol(i, r)),
        this.add(this.targetLine),
        this.update();
    }
    (gf.prototype = Object.create(Zn.prototype)),
      (gf.prototype.constructor = gf),
      (gf.prototype.dispose = function () {
        this.lightPlane.geometry.dispose(),
          this.lightPlane.material.dispose(),
          this.targetLine.geometry.dispose(),
          this.targetLine.material.dispose();
      }),
      (gf.prototype.update = function () {
        _f.setFromMatrixPosition(this.light.matrixWorld),
          Mf.setFromMatrixPosition(this.light.target.matrixWorld),
          vf.subVectors(Mf, _f),
          this.lightPlane.lookAt(Mf),
          void 0 !== this.color
            ? (this.lightPlane.material.color.set(this.color),
              this.targetLine.material.color.set(this.color))
            : (this.lightPlane.material.color.copy(this.light.color),
              this.targetLine.material.color.copy(this.light.color)),
          this.targetLine.lookAt(Mf),
          (this.targetLine.scale.z = vf.length());
      });
    var yf = new xn(),
      bf = new Jr();
    function wf(e) {
      var t = new fr(),
        n = new Al({ color: 16777215, vertexColors: !0, toneMapped: !1 }),
        i = [],
        r = [],
        a = {},
        o = new Ii(16755200),
        s = new Ii(16711680),
        c = new Ii(43775),
        u = new Ii(16777215),
        l = new Ii(3355443);
      function d(e, t, n) {
        h(e, n), h(t, n);
      }
      function h(e, t) {
        i.push(0, 0, 0),
          r.push(t.r, t.g, t.b),
          void 0 === a[e] && (a[e] = []),
          a[e].push(i.length / 3 - 1);
      }
      d('n1', 'n2', o),
        d('n2', 'n4', o),
        d('n4', 'n3', o),
        d('n3', 'n1', o),
        d('f1', 'f2', o),
        d('f2', 'f4', o),
        d('f4', 'f3', o),
        d('f3', 'f1', o),
        d('n1', 'f1', o),
        d('n2', 'f2', o),
        d('n3', 'f3', o),
        d('n4', 'f4', o),
        d('p', 'n1', s),
        d('p', 'n2', s),
        d('p', 'n3', s),
        d('p', 'n4', s),
        d('u1', 'u2', c),
        d('u2', 'u3', c),
        d('u3', 'u1', c),
        d('c', 't', u),
        d('p', 'c', l),
        d('cn1', 'cn2', l),
        d('cn3', 'cn4', l),
        d('cf1', 'cf2', l),
        d('cf3', 'cf4', l),
        t.setAttribute('position', new rr(i, 3)),
        t.setAttribute('color', new rr(r, 3)),
        Cl.call(this, t, n),
        (this.type = 'CameraHelper'),
        (this.camera = e),
        this.camera.updateProjectionMatrix &&
          this.camera.updateProjectionMatrix(),
        (this.matrix = e.matrixWorld),
        (this.matrixAutoUpdate = !1),
        (this.pointMap = a),
        this.update();
    }
    function Af(e, t, n, i, r, a, o) {
      yf.set(r, a, o).unproject(i);
      var s = t[e];
      if (void 0 !== s)
        for (
          var c = n.getAttribute('position'), u = 0, l = s.length;
          u < l;
          u++
        )
          c.setXYZ(s[u], yf.x, yf.y, yf.z);
    }
    (wf.prototype = Object.create(Cl.prototype)),
      (wf.prototype.constructor = wf),
      (wf.prototype.update = function () {
        var e = this.geometry,
          t = this.pointMap,
          n = 1,
          i = 1;
        bf.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),
          Af('c', t, e, bf, 0, 0, -1),
          Af('t', t, e, bf, 0, 0, 1),
          Af('n1', t, e, bf, -n, -i, -1),
          Af('n2', t, e, bf, n, -i, -1),
          Af('n3', t, e, bf, -n, i, -1),
          Af('n4', t, e, bf, n, i, -1),
          Af('f1', t, e, bf, -n, -i, 1),
          Af('f2', t, e, bf, n, -i, 1),
          Af('f3', t, e, bf, -n, i, 1),
          Af('f4', t, e, bf, n, i, 1),
          Af('u1', t, e, bf, 0.7 * n, 1.1 * i, -1),
          Af('u2', t, e, bf, 0.7 * -n, 1.1 * i, -1),
          Af('u3', t, e, bf, 0, 2 * i, -1),
          Af('cf1', t, e, bf, -n, 0, 1),
          Af('cf2', t, e, bf, n, 0, 1),
          Af('cf3', t, e, bf, 0, -i, 1),
          Af('cf4', t, e, bf, 0, i, 1),
          Af('cn1', t, e, bf, -n, 0, -1),
          Af('cn2', t, e, bf, n, 0, -1),
          Af('cn3', t, e, bf, 0, -i, -1),
          Af('cn4', t, e, bf, 0, i, -1),
          (e.getAttribute('position').needsUpdate = !0);
      });
    var xf = new di();
    function Lf(e, t) {
      (this.object = e), void 0 === t && (t = 16776960);
      var n = new Uint16Array([
          0,
          1,
          1,
          2,
          2,
          3,
          3,
          0,
          4,
          5,
          5,
          6,
          6,
          7,
          7,
          4,
          0,
          4,
          1,
          5,
          2,
          6,
          3,
          7,
        ]),
        i = new Float32Array(8 * 3),
        r = new fr();
      r.setIndex(new Zi(n, 1)),
        r.setAttribute('position', new Zi(i, 3)),
        Cl.call(this, r, new Al({ color: t, toneMapped: !1 })),
        (this.type = 'BoxHelper'),
        (this.matrixAutoUpdate = !1),
        this.update();
    }
    function Tf(e, t) {
      (this.type = 'Box3Helper'), (this.box = e), (t = t || 16776960);
      var n = new Uint16Array([
          0,
          1,
          1,
          2,
          2,
          3,
          3,
          0,
          4,
          5,
          5,
          6,
          6,
          7,
          7,
          4,
          0,
          4,
          1,
          5,
          2,
          6,
          3,
          7,
        ]),
        i = [
          1,
          1,
          1,
          -1,
          1,
          1,
          -1,
          -1,
          1,
          1,
          -1,
          1,
          1,
          1,
          -1,
          -1,
          1,
          -1,
          -1,
          -1,
          -1,
          1,
          -1,
          -1,
        ],
        r = new fr();
      r.setIndex(new Zi(n, 1)),
        r.setAttribute('position', new rr(i, 3)),
        Cl.call(this, r, new Al({ color: t, toneMapped: !1 })),
        (this.type = 'Box3Helper'),
        this.geometry.computeBoundingSphere();
    }
    function zf(e, t, n) {
      (this.plane = e), (this.size = void 0 === t ? 1 : t);
      var i = void 0 !== n ? n : 16776960,
        r = [
          1,
          -1,
          1,
          -1,
          1,
          1,
          -1,
          -1,
          1,
          1,
          1,
          1,
          -1,
          1,
          1,
          -1,
          -1,
          1,
          1,
          -1,
          1,
          1,
          1,
          1,
          0,
          0,
          1,
          0,
          0,
          0,
        ],
        a = new fr();
      a.setAttribute('position', new rr(r, 3)),
        a.computeBoundingSphere(),
        Ol.call(this, a, new Al({ color: i, toneMapped: !1 })),
        (this.type = 'PlaneHelper');
      var o = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1],
        s = new fr();
      s.setAttribute('position', new rr(o, 3)),
        s.computeBoundingSphere(),
        this.add(
          new Dr(
            s,
            new Gi({
              color: i,
              opacity: 0.2,
              transparent: !0,
              depthWrite: !1,
              toneMapped: !1,
            })
          )
        );
    }
    (Lf.prototype = Object.create(Cl.prototype)),
      (Lf.prototype.constructor = Lf),
      (Lf.prototype.update = function (e) {
        if (
          (void 0 !== e && void 0,
          void 0 !== this.object && xf.setFromObject(this.object),
          !xf.isEmpty())
        ) {
          var t = xf.min,
            n = xf.max,
            i = this.geometry.attributes.position,
            r = i.array;
          (r[0] = n.x),
            (r[1] = n.y),
            (r[2] = n.z),
            (r[3] = t.x),
            (r[4] = n.y),
            (r[5] = n.z),
            (r[6] = t.x),
            (r[7] = t.y),
            (r[8] = n.z),
            (r[9] = n.x),
            (r[10] = t.y),
            (r[11] = n.z),
            (r[12] = n.x),
            (r[13] = n.y),
            (r[14] = t.z),
            (r[15] = t.x),
            (r[16] = n.y),
            (r[17] = t.z),
            (r[18] = t.x),
            (r[19] = t.y),
            (r[20] = t.z),
            (r[21] = n.x),
            (r[22] = t.y),
            (r[23] = t.z),
            (i.needsUpdate = !0),
            this.geometry.computeBoundingSphere();
        }
      }),
      (Lf.prototype.setFromObject = function (e) {
        return (this.object = e), this.update(), this;
      }),
      (Lf.prototype.copy = function (e) {
        return Cl.prototype.copy.call(this, e), (this.object = e.object), this;
      }),
      (Lf.prototype.clone = function () {
        return new this.constructor().copy(this);
      }),
      (Tf.prototype = Object.create(Cl.prototype)),
      (Tf.prototype.constructor = Tf),
      (Tf.prototype.updateMatrixWorld = function (e) {
        var t = this.box;
        t.isEmpty() ||
          (t.getCenter(this.position),
          t.getSize(this.scale),
          this.scale.multiplyScalar(0.5),
          Zn.prototype.updateMatrixWorld.call(this, e));
      }),
      (zf.prototype = Object.create(Ol.prototype)),
      (zf.prototype.constructor = zf),
      (zf.prototype.updateMatrixWorld = function (e) {
        var t = -this.plane.constant;
        Math.abs(t) < 1e-8 && (t = 1e-8),
          this.scale.set(0.5 * this.size, 0.5 * this.size, t),
          (this.children[0].material.side = t < 0 ? p : h),
          this.lookAt(this.plane.normal),
          Zn.prototype.updateMatrixWorld.call(this, e);
      });
    var Sf,
      Of,
      Ef = new xn();
    function kf(e, t, n, i, r, a) {
      Zn.call(this),
        (this.type = 'ArrowHelper'),
        void 0 === e && (e = new xn(0, 0, 1)),
        void 0 === t && (t = new xn(0, 0, 0)),
        void 0 === n && (n = 1),
        void 0 === i && (i = 16776960),
        void 0 === r && (r = 0.2 * n),
        void 0 === a && (a = 0.2 * r),
        void 0 === Sf &&
          ((Sf = new fr()),
          Sf.setAttribute('position', new rr([0, 0, 0, 0, 1, 0], 3)),
          (Of = new ch(0, 0.5, 1, 5, 1)),
          Of.translate(0, -0.5, 0)),
        this.position.copy(t),
        (this.line = new Ol(Sf, new Al({ color: i, toneMapped: !1 }))),
        (this.line.matrixAutoUpdate = !1),
        this.add(this.line),
        (this.cone = new Dr(Of, new Gi({ color: i, toneMapped: !1 }))),
        (this.cone.matrixAutoUpdate = !1),
        this.add(this.cone),
        this.setDirection(e),
        this.setLength(n, r, a);
    }
    function Cf(e) {
      e = e || 1;
      var t = [0, 0, 0, e, 0, 0, 0, 0, 0, 0, e, 0, 0, 0, 0, 0, 0, e],
        n = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1],
        i = new fr();
      i.setAttribute('position', new rr(t, 3)),
        i.setAttribute('color', new rr(n, 3));
      var r = new Al({ vertexColors: !0, toneMapped: !1 });
      Cl.call(this, i, r), (this.type = 'AxesHelper');
    }
    (kf.prototype = Object.create(Zn.prototype)),
      (kf.prototype.constructor = kf),
      (kf.prototype.setDirection = function (e) {
        if (e.y > 0.99999) this.quaternion.set(0, 0, 0, 1);
        else if (e.y < -0.99999) this.quaternion.set(1, 0, 0, 0);
        else {
          Ef.set(e.z, 0, -e.x).normalize();
          var t = Math.acos(e.y);
          this.quaternion.setFromAxisAngle(Ef, t);
        }
      }),
      (kf.prototype.setLength = function (e, t, n) {
        void 0 === t && (t = 0.2 * e),
          void 0 === n && (n = 0.2 * t),
          this.line.scale.set(1, Math.max(1e-4, e - t), 1),
          this.line.updateMatrix(),
          this.cone.scale.set(n, t, n),
          (this.cone.position.y = e),
          this.cone.updateMatrix();
      }),
      (kf.prototype.setColor = function (e) {
        this.line.material.color.set(e), this.cone.material.color.set(e);
      }),
      (kf.prototype.copy = function (e) {
        return (
          Zn.prototype.copy.call(this, e, !1),
          this.line.copy(e.line),
          this.cone.copy(e.cone),
          this
        );
      }),
      (kf.prototype.clone = function () {
        return new this.constructor().copy(this);
      }),
      (Cf.prototype = Object.create(Cl.prototype)),
      (Cf.prototype.constructor = Cf);
    var Df = 4,
      Nf = 8,
      Pf = Math.pow(2, Nf),
      jf = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582],
      Yf = Nf - Df + 1 + jf.length,
      Rf = 20,
      Bf = { [Ut]: 0, [Xt]: 1, [Gt]: 2, [Zt]: 3, [Kt]: 4, [Qt]: 5, [Vt]: 6 },
      Wf = new jp(),
      { _lodPlanes: If, _sizeLods: qf, _sigmas: Hf } = Zf(),
      Ff = null,
      Uf = (1 + Math.sqrt(5)) / 2,
      Xf = 1 / Uf,
      Vf = [
        new xn(1, 1, 1),
        new xn(-1, 1, 1),
        new xn(1, 1, -1),
        new xn(-1, 1, -1),
        new xn(0, Uf, Xf),
        new xn(0, Uf, -Xf),
        new xn(Xf, 0, Uf),
        new xn(-Xf, 0, Uf),
        new xn(Uf, Xf, 0),
        new xn(-Uf, Xf, 0),
      ];
    function Gf(e) {
      (this._renderer = e),
        (this._pingPongRenderTarget = null),
        (this._blurMaterial = $f(Rf)),
        (this._equirectShader = null),
        (this._cubemapShader = null),
        this._compileMaterial(this._blurMaterial);
    }
    function Jf(e) {
      return (
        void 0 !== e &&
        e.type === ge &&
        (e.encoding === Ut || e.encoding === Xt || e.encoding === Vt)
      );
    }
    function Zf() {
      for (var e = [], t = [], n = [], i = Nf, r = 0; r < Yf; r++) {
        var a = Math.pow(2, i);
        t.push(a);
        var o = 1 / a;
        r > Nf - Df ? (o = jf[r - Nf + Df - 1]) : 0 == r && (o = 0), n.push(o);
        for (
          var s = 1 / (a - 1),
            c = -s / 2,
            u = 1 + s / 2,
            l = [c, c, u, c, u, u, c, c, u, u, c, u],
            d = 6,
            h = 6,
            p = 3,
            m = 2,
            f = 1,
            _ = new Float32Array(p * h * d),
            M = new Float32Array(m * h * d),
            v = new Float32Array(f * h * d),
            g = 0;
          g < d;
          g++
        ) {
          var y = ((g % 3) * 2) / 3 - 1,
            b = g > 2 ? 0 : -1,
            w = [
              y,
              b,
              0,
              y + 2 / 3,
              b,
              0,
              y + 2 / 3,
              b + 1,
              0,
              y,
              b,
              0,
              y + 2 / 3,
              b + 1,
              0,
              y,
              b + 1,
              0,
            ];
          _.set(w, p * h * g), M.set(l, m * h * g);
          var A = [g, g, g, g, g, g];
          v.set(A, f * h * g);
        }
        var x = new fr();
        x.setAttribute('position', new Zi(_, p)),
          x.setAttribute('uv', new Zi(M, m)),
          x.setAttribute('faceIndex', new Zi(v, f)),
          e.push(x),
          i > Df && i--;
      }
      return { _lodPlanes: e, _sizeLods: t, _sigmas: n };
    }
    function Kf(e) {
      var t = new gn(3 * Pf, 3 * Pf, e);
      return (
        (t.texture.mapping = se),
        (t.texture.name = 'PMREM.cubeUv'),
        (t.scissorTest = !0),
        t
      );
    }
    function Qf(e, t, n, i, r) {
      e.viewport.set(t, n, i, r), e.scissor.set(t, n, i, r);
    }
    function $f(e) {
      var t = new Float32Array(e),
        n = new xn(0, 1, 0),
        i = new fh({
          defines: { n: e },
          uniforms: {
            envMap: { value: null },
            samples: { value: 1 },
            weights: { value: t },
            latitudinal: { value: !1 },
            dTheta: { value: 0 },
            mipInt: { value: 0 },
            poleAxis: { value: n },
            inputEncoding: { value: Bf[Ut] },
            outputEncoding: { value: Bf[Ut] },
          },
          vertexShader: n_(),
          fragmentShader: `\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform int samples;\nuniform float weights[n];\nuniform bool latitudinal;\nuniform float dTheta;\nuniform float mipInt;\nuniform vec3 poleAxis;\n\n${i_()}\n\n#define ENVMAP_TYPE_CUBE_UV\n#include <cube_uv_reflection_fragment>\n\nvec3 getSample(float theta, vec3 axis) {\n\tfloat cosTheta = cos(theta);\n\t// Rodrigues' axis-angle rotation\n\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t+ cross(axis, vOutputDirection) * sin(theta)\n\t\t+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);\n\treturn bilinearCubeUV(envMap, sampleDirection, mipInt);\n}\n\nvoid main() {\n\tvec3 axis = latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);\n\tif (all(equal(axis, vec3(0.0))))\n\t\taxis = vec3(vOutputDirection.z, 0.0, - vOutputDirection.x);\n\taxis = normalize(axis);\n\tgl_FragColor = vec4(0.0);\n\tgl_FragColor.rgb += weights[0] * getSample(0.0, axis);\n\tfor (int i = 1; i < n; i++) {\n\t\tif (i >= samples)\n\t\t\tbreak;\n\t\tfloat theta = dTheta * float(i);\n\t\tgl_FragColor.rgb += weights[i] * getSample(-1.0 * theta, axis);\n\t\tgl_FragColor.rgb += weights[i] * getSample(theta, axis);\n\t}\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,
          blending: _,
          depthTest: !1,
          depthWrite: !1,
        });
      return (i.type = 'SphericalGaussianBlur'), i;
    }
    function e_() {
      var e = new pn(1, 1),
        t = new fh({
          uniforms: {
            envMap: { value: null },
            texelSize: { value: e },
            inputEncoding: { value: Bf[Ut] },
            outputEncoding: { value: Bf[Ut] },
          },
          vertexShader: n_(),
          fragmentShader: `\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform vec2 texelSize;\n\n${i_()}\n\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tvec3 outputDirection = normalize(vOutputDirection);\n\tvec2 uv;\n\tuv.y = asin(clamp(outputDirection.y, -1.0, 1.0)) * RECIPROCAL_PI + 0.5;\n\tuv.x = atan(outputDirection.z, outputDirection.x) * RECIPROCAL_PI2 + 0.5;\n\tvec2 f = fract(uv / texelSize - 0.5);\n\tuv -= f * texelSize;\n\tvec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x += texelSize.x;\n\tvec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.y += texelSize.y;\n\tvec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x -= texelSize.x;\n\tvec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tvec3 tm = mix(tl, tr, f.x);\n\tvec3 bm = mix(bl, br, f.x);\n\tgl_FragColor.rgb = mix(tm, bm, f.y);\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,
          blending: _,
          depthTest: !1,
          depthWrite: !1,
        });
      return (t.type = 'EquirectangularToCubeUV'), t;
    }
    function t_() {
      var e = new fh({
        uniforms: {
          envMap: { value: null },
          inputEncoding: { value: Bf[Ut] },
          outputEncoding: { value: Bf[Ut] },
        },
        vertexShader: n_(),
        fragmentShader: `\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform samplerCube envMap;\n\n${i_()}\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tgl_FragColor.rgb = envMapTexelToLinear(textureCube(envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ))).rgb;\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,
        blending: _,
        depthTest: !1,
        depthWrite: !1,
      });
      return (e.type = 'CubemapToCubeUV'), e;
    }
    function n_() {
      return `\nprecision mediump float;\nprecision mediump int;\nattribute vec3 position;\nattribute vec2 uv;\nattribute float faceIndex;\nvarying vec3 vOutputDirection;\nvec3 getDirection(vec2 uv, float face) {\n\tuv = 2.0 * uv - 1.0;\n\tvec3 direction = vec3(uv, 1.0);\n\tif (face == 0.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 1.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 3.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.x *= -1.0;\n\t} else if (face == 4.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.y *= -1.0;\n\t} else if (face == 5.0) {\n\t\tdirection.xz *= -1.0;\n\t}\n\treturn direction;\n}\nvoid main() {\n\tvOutputDirection = getDirection(uv, faceIndex);\n\tgl_Position = vec4( position, 1.0 );\n}\n\t`;
    }
    function i_() {
      return `\nuniform int inputEncoding;\nuniform int outputEncoding;\n\n#include <encodings_pars_fragment>\n\nvec4 inputTexelToLinear(vec4 value){\n\tif(inputEncoding == 0){\n\t\treturn value;\n\t}else if(inputEncoding == 1){\n\t\treturn sRGBToLinear(value);\n\t}else if(inputEncoding == 2){\n\t\treturn RGBEToLinear(value);\n\t}else if(inputEncoding == 3){\n\t\treturn RGBMToLinear(value, 7.0);\n\t}else if(inputEncoding == 4){\n\t\treturn RGBMToLinear(value, 16.0);\n\t}else if(inputEncoding == 5){\n\t\treturn RGBDToLinear(value, 256.0);\n\t}else{\n\t\treturn GammaToLinear(value, 2.2);\n\t}\n}\n\nvec4 linearToOutputTexel(vec4 value){\n\tif(outputEncoding == 0){\n\t\treturn value;\n\t}else if(outputEncoding == 1){\n\t\treturn LinearTosRGB(value);\n\t}else if(outputEncoding == 2){\n\t\treturn LinearToRGBE(value);\n\t}else if(outputEncoding == 3){\n\t\treturn LinearToRGBM(value, 7.0);\n\t}else if(outputEncoding == 4){\n\t\treturn LinearToRGBM(value, 16.0);\n\t}else if(outputEncoding == 5){\n\t\treturn LinearToRGBD(value, 256.0);\n\t}else{\n\t\treturn LinearToGamma(value, 2.2);\n\t}\n}\n\nvec4 envMapTexelToLinear(vec4 color) {\n\treturn inputTexelToLinear(color);\n}\n\t`;
    }
    Gf.prototype = {
      constructor: Gf,
      fromScene: function (e, t = 0, n = 0.1, i = 100) {
        Ff = this._renderer.getRenderTarget();
        var r = this._allocateTargets();
        return (
          this._sceneToCubeUV(e, n, i, r),
          t > 0 && this._blur(r, 0, 0, t),
          this._applyPMREM(r),
          this._cleanup(r),
          r
        );
      },
      fromEquirectangular: function (e) {
        return (
          (e.magFilter = he),
          (e.minFilter = he),
          (e.generateMipmaps = !1),
          this.fromCubemap(e)
        );
      },
      fromCubemap: function (e) {
        Ff = this._renderer.getRenderTarget();
        var t = this._allocateTargets(e);
        return (
          this._textureToCubeUV(e, t), this._applyPMREM(t), this._cleanup(t), t
        );
      },
      compileCubemapShader: function () {
        null === this._cubemapShader &&
          ((this._cubemapShader = t_()),
          this._compileMaterial(this._cubemapShader));
      },
      compileEquirectangularShader: function () {
        null === this._equirectShader &&
          ((this._equirectShader = e_()),
          this._compileMaterial(this._equirectShader));
      },
      dispose: function () {
        this._blurMaterial.dispose(),
          null !== this._cubemapShader && this._cubemapShader.dispose(),
          null !== this._equirectShader && this._equirectShader.dispose();
        for (var e = 0; e < If.length; e++) If[e].dispose();
      },
      _cleanup: function (e) {
        this._pingPongRenderTarget.dispose(),
          this._renderer.setRenderTarget(Ff),
          (e.scissorTest = !1),
          e.setSize(e.width, e.height);
      },
      _allocateTargets: function (e) {
        var t = {
            magFilter: he,
            minFilter: he,
            generateMipmaps: !1,
            type: ge,
            format: je,
            encoding: Jf(e) ? e.encoding : Gt,
            depthBuffer: !1,
            stencilBuffer: !1,
          },
          n = Kf(t);
        return (n.depthBuffer = !e), (this._pingPongRenderTarget = Kf(t)), n;
      },
      _compileMaterial: function (e) {
        var t = new Kn();
        t.add(new Dr(If[0], e)), this._renderer.compile(t, Wf);
      },
      _sceneToCubeUV: function (e, t, n, i) {
        var r = 90,
          a = 1,
          o = new Zr(r, a, t, n),
          s = [1, 1, 1, 1, -1, 1],
          c = [1, 1, -1, -1, -1, 1],
          u = this._renderer,
          l = u.outputEncoding,
          d = u.toneMapping,
          h = u.toneMappingExposure,
          p = u.getClearColor(),
          m = u.getClearAlpha();
        (u.toneMapping = Z),
          (u.toneMappingExposure = 1),
          (u.outputEncoding = Ut),
          (e.scale.z *= -1);
        var f = e.background;
        if (f && f.isColor) {
          f.convertSRGBToLinear();
          var _ = Math.max(f.r, f.g, f.b),
            M = Math.min(Math.max(Math.ceil(Math.log2(_)), -128), 127);
          f = f.multiplyScalar(Math.pow(2, -M));
          var v = (M + 128) / 255;
          u.setClearColor(f, v), (e.background = null);
        }
        for (var g = 0; g < 6; g++) {
          var y = g % 3;
          0 == y
            ? (o.up.set(0, s[g], 0), o.lookAt(c[g], 0, 0))
            : 1 == y
            ? (o.up.set(0, 0, s[g]), o.lookAt(0, c[g], 0))
            : (o.up.set(0, s[g], 0), o.lookAt(0, 0, c[g])),
            Qf(i, y * Pf, g > 2 ? Pf : 0, Pf, Pf),
            u.setRenderTarget(i),
            u.render(e, o);
        }
        (u.toneMapping = d),
          (u.toneMappingExposure = h),
          (u.outputEncoding = l),
          u.setClearColor(p, m),
          (e.scale.z *= -1);
      },
      _textureToCubeUV: function (e, t) {
        var n = new Kn(),
          i = this._renderer;
        e.isCubeTexture
          ? null == this._cubemapShader && (this._cubemapShader = t_())
          : null == this._equirectShader && (this._equirectShader = e_());
        var r = e.isCubeTexture ? this._cubemapShader : this._equirectShader;
        n.add(new Dr(If[0], r));
        var a = r.uniforms;
        (a['envMap'].value = e),
          e.isCubeTexture ||
            a['texelSize'].value.set(1 / e.image.width, 1 / e.image.height),
          (a['inputEncoding'].value = Bf[e.encoding]),
          (a['outputEncoding'].value = Bf[t.texture.encoding]),
          Qf(t, 0, 0, 3 * Pf, 2 * Pf),
          i.setRenderTarget(t),
          i.render(n, Wf);
      },
      _applyPMREM: function (e) {
        var t = this._renderer,
          n = t.autoClear;
        t.autoClear = !1;
        for (var i = 1; i < Yf; i++) {
          var r = Math.sqrt(Hf[i] * Hf[i] - Hf[i - 1] * Hf[i - 1]),
            a = Vf[(i - 1) % Vf.length];
          this._blur(e, i - 1, i, r, a);
        }
        t.autoClear = n;
      },
      _blur: function (e, t, n, i, r) {
        var a = this._pingPongRenderTarget;
        this._halfBlur(e, a, t, n, i, 'latitudinal', r),
          this._halfBlur(a, e, n, n, i, 'longitudinal', r);
      },
      _halfBlur: function (e, t, n, i, r, a, o) {
        var s = this._renderer,
          c = this._blurMaterial;
        'latitudinal' !== a && 'longitudinal' !== a && void 0;
        var u = 3,
          l = new Kn();
        l.add(new Dr(If[i], c));
        var d = c.uniforms,
          h = qf[n] - 1,
          p = isFinite(r) ? Math.PI / (2 * h) : (2 * Math.PI) / (2 * Rf - 1),
          m = r / p,
          f = isFinite(r) ? 1 + Math.floor(u * m) : Rf;
        f > Rf && void 0;
        for (var _ = [], M = 0, v = 0; v < Rf; ++v) {
          var g = v / m,
            y = Math.exp((-g * g) / 2);
          _.push(y), 0 == v ? (M += y) : v < f && (M += 2 * y);
        }
        for (v = 0; v < _.length; v++) _[v] = _[v] / M;
        (d['envMap'].value = e.texture),
          (d['samples'].value = f),
          (d['weights'].value = _),
          (d['latitudinal'].value = 'latitudinal' === a),
          o && (d['poleAxis'].value = o),
          (d['dTheta'].value = p),
          (d['mipInt'].value = Nf - n),
          (d['inputEncoding'].value = Bf[e.texture.encoding]),
          (d['outputEncoding'].value = Bf[e.texture.encoding]);
        var b = qf[i],
          w =
            ((g = 3 * Math.max(0, Pf - 2 * b)),
            (0 === i ? 0 : 2 * Pf) + 2 * b * (i > Nf - Df ? i - Nf + Df : 0));
        Qf(t, g, w, 3 * b, 2 * b), s.setRenderTarget(t), s.render(l, Wf);
      },
    };
    function r_(e) {
      void 0, sp.call(this, e), (this.type = 'catmullrom'), (this.closed = !0);
    }
    function a_(e) {
      void 0, sp.call(this, e), (this.type = 'catmullrom');
    }
    function o_(e) {
      void 0, sp.call(this, e), (this.type = 'catmullrom');
    }
    ($h.create = function (e, t) {
      return (
        void 0,
        (e.prototype = Object.create($h.prototype)),
        (e.prototype.constructor = e),
        (e.prototype.getPoint = t),
        e
      );
    }),
      Object.assign(Tp.prototype, {
        createPointsGeometry: function (e) {
          void 0;
          var t = this.getPoints(e);
          return this.createGeometry(t);
        },
        createSpacedPointsGeometry: function (e) {
          void 0;
          var t = this.getSpacedPoints(e);
          return this.createGeometry(t);
        },
        createGeometry: function (e) {
          void 0;
          for (var t = new Wr(), n = 0, i = e.length; n < i; n++) {
            var r = e[n];
            t.vertices.push(new xn(r.x, r.y, r.z || 0));
          }
          return t;
        },
      }),
      Object.assign(zp.prototype, {
        fromPoints: function (e) {
          return void 0, this.setFromPoints(e);
        },
      }),
      (r_.prototype = Object.create(sp.prototype)),
      (a_.prototype = Object.create(sp.prototype)),
      (o_.prototype = Object.create(sp.prototype)),
      Object.assign(o_.prototype, {
        initFromArray: function () {
          void 0;
        },
        getControlPointsArray: function () {
          void 0;
        },
        reparametrizeByArcLength: function () {
          void 0;
        },
      }),
      (mf.prototype.setColors = function () {
        void 0;
      }),
      (cf.prototype.update = function () {
        void 0;
      }),
      Object.assign(Fh.prototype, {
        extractUrlBase: function (e) {
          return void 0, Fp.extractUrlBase(e);
        },
      }),
      (Fh.Handlers = {
        add: function () {
          void 0;
        },
        get: function () {
          void 0;
        },
      }),
      Object.assign(Jp.prototype, {
        setTexturePath: function (e) {
          return void 0, this.setResourcePath(e);
        },
      }),
      Object.assign(Zm.prototype, {
        center: function (e) {
          return void 0, this.getCenter(e);
        },
        empty: function () {
          return void 0, this.isEmpty();
        },
        isIntersectionBox: function (e) {
          return void 0, this.intersectsBox(e);
        },
        size: function (e) {
          return void 0, this.getSize(e);
        },
      }),
      Object.assign(di.prototype, {
        center: function (e) {
          return void 0, this.getCenter(e);
        },
        empty: function () {
          return void 0, this.isEmpty();
        },
        isIntersectionBox: function (e) {
          return void 0, this.intersectsBox(e);
        },
        isIntersectionSphere: function (e) {
          return void 0, this.intersectsSphere(e);
        },
        size: function (e) {
          return void 0, this.getSize(e);
        },
      }),
      Object.assign(mi.prototype, {
        empty: function () {
          return void 0, this.isEmpty();
        },
      }),
      (ra.prototype.setFromMatrix = function (e) {
        return void 0, this.setFromProjectionMatrix(e);
      }),
      ($m.prototype.center = function (e) {
        return void 0, this.getCenter(e);
      }),
      Object.assign(hn, {
        random16: function () {
          return void 0, Math.random();
        },
        nearestPowerOfTwo: function (e) {
          return void 0, hn.floorPowerOfTwo(e);
        },
        nextPowerOfTwo: function (e) {
          return void 0, hn.ceilPowerOfTwo(e);
        },
      }),
      Object.assign(mn.prototype, {
        flattenToArrayOffset: function (e, t) {
          return void 0, this.toArray(e, t);
        },
        multiplyVector3: function (e) {
          return void 0, e.applyMatrix3(this);
        },
        multiplyVector3Array: function () {
          void 0;
        },
        applyToBufferAttribute: function (e) {
          return void 0, e.applyMatrix3(this);
        },
        applyToVector3Array: function () {
          void 0;
        },
      }),
      Object.assign(Cn.prototype, {
        extractPosition: function (e) {
          return void 0, this.copyPosition(e);
        },
        flattenToArrayOffset: function (e, t) {
          return void 0, this.toArray(e, t);
        },
        getPosition: function () {
          return void 0, new xn().setFromMatrixColumn(this, 3);
        },
        setRotationFromQuaternion: function (e) {
          return void 0, this.makeRotationFromQuaternion(e);
        },
        multiplyToArray: function () {
          void 0;
        },
        multiplyVector3: function (e) {
          return void 0, e.applyMatrix4(this);
        },
        multiplyVector4: function (e) {
          return void 0, e.applyMatrix4(this);
        },
        multiplyVector3Array: function () {
          void 0;
        },
        rotateAxis: function (e) {
          void 0, e.transformDirection(this);
        },
        crossVector: function (e) {
          return void 0, e.applyMatrix4(this);
        },
        translate: function () {
          void 0;
        },
        rotateX: function () {
          void 0;
        },
        rotateY: function () {
          void 0;
        },
        rotateZ: function () {
          void 0;
        },
        rotateByAxis: function () {
          void 0;
        },
        applyToBufferAttribute: function (e) {
          return void 0, e.applyMatrix4(this);
        },
        applyToVector3Array: function () {
          void 0;
        },
        makeFrustum: function (e, t, n, i, r, a) {
          return void 0, this.makePerspective(e, t, i, n, r, a);
        },
      }),
      (Ti.prototype.isIntersectionLine = function (e) {
        return void 0, this.intersectsLine(e);
      }),
      (bn.prototype.multiplyVector3 = function (e) {
        return void 0, e.applyQuaternion(this);
      }),
      Object.assign(wi.prototype, {
        isIntersectionBox: function (e) {
          return void 0, this.intersectsBox(e);
        },
        isIntersectionPlane: function (e) {
          return void 0, this.intersectsPlane(e);
        },
        isIntersectionSphere: function (e) {
          return void 0, this.intersectsSphere(e);
        },
      }),
      Object.assign(Yi.prototype, {
        area: function () {
          return void 0, this.getArea();
        },
        barycoordFromPoint: function (e, t) {
          return void 0, this.getBarycoord(e, t);
        },
        midpoint: function (e) {
          return void 0, this.getMidpoint(e);
        },
        normal: function (e) {
          return void 0, this.getNormal(e);
        },
        plane: function (e) {
          return void 0, this.getPlane(e);
        },
      }),
      Object.assign(Yi, {
        barycoordFromPoint: function (e, t, n, i, r) {
          return void 0, Yi.getBarycoord(e, t, n, i, r);
        },
        normal: function (e, t, n, i) {
          return void 0, Yi.getNormal(e, t, n, i);
        },
      }),
      Object.assign(Sp.prototype, {
        extractAllPoints: function (e) {
          return void 0, this.extractPoints(e);
        },
        extrude: function (e) {
          return void 0, new Ud(this, e);
        },
        makeGeometry: function (e) {
          return void 0, new ih(this, e);
        },
      }),
      Object.assign(pn.prototype, {
        fromAttribute: function (e, t, n) {
          return void 0, this.fromBufferAttribute(e, t, n);
        },
        distanceToManhattan: function (e) {
          return void 0, this.manhattanDistanceTo(e);
        },
        lengthManhattan: function () {
          return void 0, this.manhattanLength();
        },
      }),
      Object.assign(xn.prototype, {
        setEulerFromRotationMatrix: function () {
          void 0;
        },
        setEulerFromQuaternion: function () {
          void 0;
        },
        getPositionFromMatrix: function (e) {
          return void 0, this.setFromMatrixPosition(e);
        },
        getScaleFromMatrix: function (e) {
          return void 0, this.setFromMatrixScale(e);
        },
        getColumnFromMatrix: function (e, t) {
          return void 0, this.setFromMatrixColumn(t, e);
        },
        applyProjection: function (e) {
          return void 0, this.applyMatrix4(e);
        },
        fromAttribute: function (e, t, n) {
          return void 0, this.fromBufferAttribute(e, t, n);
        },
        distanceToManhattan: function (e) {
          return void 0, this.manhattanDistanceTo(e);
        },
        lengthManhattan: function () {
          return void 0, this.manhattanLength();
        },
      }),
      Object.assign(vn.prototype, {
        fromAttribute: function (e, t, n) {
          return void 0, this.fromBufferAttribute(e, t, n);
        },
        lengthManhattan: function () {
          return void 0, this.manhattanLength();
        },
      }),
      Object.assign(Wr.prototype, {
        computeTangents: function () {
          void 0;
        },
        computeLineDistances: function () {
          void 0;
        },
        applyMatrix: function (e) {
          return void 0, this.applyMatrix4(e);
        },
      }),
      Object.assign(Zn.prototype, {
        getChildByName: function (e) {
          return void 0, this.getObjectByName(e);
        },
        renderDepth: function () {
          void 0;
        },
        translate: function (e, t) {
          return void 0, this.translateOnAxis(t, e);
        },
        getWorldRotation: function () {
          void 0;
        },
        applyMatrix: function (e) {
          return void 0, this.applyMatrix4(e);
        },
      }),
      Object.defineProperties(Zn.prototype, {
        eulerOrder: {
          get: function () {
            return void 0, this.rotation.order;
          },
          set: function (e) {
            void 0, (this.rotation.order = e);
          },
        },
        useQuaternion: {
          get: function () {
            void 0;
          },
          set: function () {
            void 0;
          },
        },
      }),
      Object.assign(Dr.prototype, {
        setDrawMode: function () {
          void 0;
        },
      }),
      Object.defineProperties(Dr.prototype, {
        drawMode: {
          get: function () {
            return void 0, qt;
          },
          set: function () {
            void 0;
          },
        },
      }),
      Object.defineProperties(hl.prototype, {
        objects: {
          get: function () {
            return void 0, this.levels;
          },
        },
      }),
      Object.defineProperty(_l.prototype, 'useVertexTexture', {
        get: function () {
          void 0;
        },
        set: function () {
          void 0;
        },
      }),
      (pl.prototype.initBones = function () {
        void 0;
      }),
      Object.defineProperty($h.prototype, '__arcLengthDivisions', {
        get: function () {
          return void 0, this.arcLengthDivisions;
        },
        set: function (e) {
          void 0, (this.arcLengthDivisions = e);
        },
      }),
      (Zr.prototype.setLens = function (e, t) {
        void 0, void 0 !== t && (this.filmGauge = t), this.setFocalLength(e);
      }),
      Object.defineProperties(Op.prototype, {
        onlyShadow: {
          set: function () {
            void 0;
          },
        },
        shadowCameraFov: {
          set: function (e) {
            void 0, (this.shadow.camera.fov = e);
          },
        },
        shadowCameraLeft: {
          set: function (e) {
            void 0, (this.shadow.camera.left = e);
          },
        },
        shadowCameraRight: {
          set: function (e) {
            void 0, (this.shadow.camera.right = e);
          },
        },
        shadowCameraTop: {
          set: function (e) {
            void 0, (this.shadow.camera.top = e);
          },
        },
        shadowCameraBottom: {
          set: function (e) {
            void 0, (this.shadow.camera.bottom = e);
          },
        },
        shadowCameraNear: {
          set: function (e) {
            void 0, (this.shadow.camera.near = e);
          },
        },
        shadowCameraFar: {
          set: function (e) {
            void 0, (this.shadow.camera.far = e);
          },
        },
        shadowCameraVisible: {
          set: function () {
            void 0;
          },
        },
        shadowBias: {
          set: function (e) {
            void 0, (this.shadow.bias = e);
          },
        },
        shadowDarkness: {
          set: function () {
            void 0;
          },
        },
        shadowMapWidth: {
          set: function (e) {
            void 0, (this.shadow.mapSize.width = e);
          },
        },
        shadowMapHeight: {
          set: function (e) {
            void 0, (this.shadow.mapSize.height = e);
          },
        },
      }),
      Object.defineProperties(Zi.prototype, {
        length: {
          get: function () {
            return void 0, this.array.length;
          },
        },
        dynamic: {
          get: function () {
            return void 0, this.usage === sn;
          },
          set: function () {
            void 0, this.setUsage(sn);
          },
        },
      }),
      Object.assign(Zi.prototype, {
        setDynamic: function (e) {
          return void 0, this.setUsage(!0 === e ? sn : on), this;
        },
        copyIndicesArray: function () {
          void 0;
        },
        setArray: function () {
          void 0;
        },
      }),
      Object.assign(fr.prototype, {
        addIndex: function (e) {
          void 0, this.setIndex(e);
        },
        addAttribute: function (e, t) {
          return (
            void 0,
            (t && t.isBufferAttribute) || (t && t.isInterleavedBufferAttribute)
              ? 'index' === e
                ? (void 0, this.setIndex(t), this)
                : this.setAttribute(e, t)
              : (void 0,
                this.setAttribute(e, new Zi(arguments[1], arguments[2])))
          );
        },
        addDrawCall: function (e, t, n) {
          void 0 !== n && void 0, this.addGroup(e, t);
        },
        clearDrawCalls: function () {
          void 0, this.clearGroups();
        },
        computeTangents: function () {
          void 0;
        },
        computeOffsets: function () {
          void 0;
        },
        removeAttribute: function (e) {
          return void 0, this.deleteAttribute(e);
        },
        applyMatrix: function (e) {
          return void 0, this.applyMatrix4(e);
        },
      }),
      Object.defineProperties(fr.prototype, {
        drawcalls: {
          get: function () {
            return void 0, this.groups;
          },
        },
        offsets: {
          get: function () {
            return void 0, this.groups;
          },
        },
      }),
      Object.defineProperties(Fm.prototype, {
        linePrecision: {
          get: function () {
            return void 0, this.params.Line.threshold;
          },
          set: function (e) {
            void 0, (this.params.Line.threshold = e);
          },
        },
      }),
      Object.defineProperties(Uu.prototype, {
        dynamic: {
          get: function () {
            return void 0, this.usage === sn;
          },
          set: function (e) {
            void 0, this.setUsage(e);
          },
        },
      }),
      Object.assign(Uu.prototype, {
        setDynamic: function (e) {
          return void 0, this.setUsage(!0 === e ? sn : on), this;
        },
        setArray: function () {
          void 0;
        },
      }),
      Object.assign(Xd.prototype, {
        getArrays: function () {
          void 0;
        },
        addShapeList: function () {
          void 0;
        },
        addShape: function () {
          void 0;
        },
      }),
      Object.defineProperties(qm.prototype, {
        dynamic: {
          set: function () {
            void 0;
          },
        },
        onUpdate: {
          value: function () {
            return void 0, this;
          },
        },
      }),
      Object.defineProperties(Vi.prototype, {
        wrapAround: {
          get: function () {
            void 0;
          },
          set: function () {
            void 0;
          },
        },
        overdraw: {
          get: function () {
            void 0;
          },
          set: function () {
            void 0;
          },
        },
        wrapRGB: {
          get: function () {
            return void 0, new Ii();
          },
        },
        shading: {
          get: function () {
            void 0;
          },
          set: function (e) {
            void 0, (this.flatShading = e === f);
          },
        },
        stencilMask: {
          get: function () {
            return void 0, this.stencilFuncMask;
          },
          set: function (e) {
            void 0, (this.stencilFuncMask = e);
          },
        },
      }),
      Object.defineProperties(vh.prototype, {
        metal: {
          get: function () {
            return void 0, !1;
          },
          set: function () {
            void 0;
          },
        },
      }),
      Object.defineProperties(Gr.prototype, {
        derivatives: {
          get: function () {
            return void 0, this.extensions.derivatives;
          },
          set: function (e) {
            void 0, (this.extensions.derivatives = e);
          },
        },
      }),
      Object.assign(qu.prototype, {
        clearTarget: function (e, t, n, i) {
          void 0, this.setRenderTarget(e), this.clear(t, n, i);
        },
        animate: function (e) {
          void 0, this.setAnimationLoop(e);
        },
        getCurrentRenderTarget: function () {
          return void 0, this.getRenderTarget();
        },
        getMaxAnisotropy: function () {
          return void 0, this.capabilities.getMaxAnisotropy();
        },
        getPrecision: function () {
          return void 0, this.capabilities.precision;
        },
        resetGLState: function () {
          return void 0, this.state.reset();
        },
        supportsFloatTextures: function () {
          return void 0, this.extensions.get('OES_texture_float');
        },
        supportsHalfFloatTextures: function () {
          return void 0, this.extensions.get('OES_texture_half_float');
        },
        supportsStandardDerivatives: function () {
          return void 0, this.extensions.get('OES_standard_derivatives');
        },
        supportsCompressedTextureS3TC: function () {
          return void 0, this.extensions.get('WEBGL_compressed_texture_s3tc');
        },
        supportsCompressedTexturePVRTC: function () {
          return void 0, this.extensions.get('WEBGL_compressed_texture_pvrtc');
        },
        supportsBlendMinMax: function () {
          return void 0, this.extensions.get('EXT_blend_minmax');
        },
        supportsVertexTextures: function () {
          return void 0, this.capabilities.vertexTextures;
        },
        supportsInstancedArrays: function () {
          return void 0, this.extensions.get('ANGLE_instanced_arrays');
        },
        enableScissorTest: function (e) {
          void 0, this.setScissorTest(e);
        },
        initMaterial: function () {
          void 0;
        },
        addPrePlugin: function () {
          void 0;
        },
        addPostPlugin: function () {
          void 0;
        },
        updateShadowMap: function () {
          void 0;
        },
        setFaceCulling: function () {
          void 0;
        },
        allocTextureUnit: function () {
          void 0;
        },
        setTexture: function () {
          void 0;
        },
        setTexture2D: function () {
          void 0;
        },
        setTextureCube: function () {
          void 0;
        },
        getActiveMipMapLevel: function () {
          return void 0, this.getActiveMipmapLevel();
        },
      }),
      Object.defineProperties(qu.prototype, {
        shadowMapEnabled: {
          get: function () {
            return this.shadowMap.enabled;
          },
          set: function (e) {
            void 0, (this.shadowMap.enabled = e);
          },
        },
        shadowMapType: {
          get: function () {
            return this.shadowMap.type;
          },
          set: function (e) {
            void 0, (this.shadowMap.type = e);
          },
        },
        shadowMapCullFace: {
          get: function () {
            void 0;
          },
          set: function () {
            void 0;
          },
        },
        context: {
          get: function () {
            return void 0, this.getContext();
          },
        },
        vr: {
          get: function () {
            return void 0, this.xr;
          },
        },
        gammaInput: {
          get: function () {
            return void 0, !1;
          },
          set: function () {
            void 0;
          },
        },
        gammaOutput: {
          get: function () {
            return void 0, !1;
          },
          set: function (e) {
            void 0, (this.outputEncoding = !0 === e ? Xt : Ut);
          },
        },
      }),
      Object.defineProperties(Nu.prototype, {
        cullFace: {
          get: function () {
            void 0;
          },
          set: function () {
            void 0;
          },
        },
        renderReverseSided: {
          get: function () {
            void 0;
          },
          set: function () {
            void 0;
          },
        },
        renderSingleSided: {
          get: function () {
            void 0;
          },
          set: function () {
            void 0;
          },
        },
      }),
      Object.defineProperties(gn.prototype, {
        wrapS: {
          get: function () {
            return void 0, this.texture.wrapS;
          },
          set: function (e) {
            void 0, (this.texture.wrapS = e);
          },
        },
        wrapT: {
          get: function () {
            return void 0, this.texture.wrapT;
          },
          set: function (e) {
            void 0, (this.texture.wrapT = e);
          },
        },
        magFilter: {
          get: function () {
            return void 0, this.texture.magFilter;
          },
          set: function (e) {
            void 0, (this.texture.magFilter = e);
          },
        },
        minFilter: {
          get: function () {
            return void 0, this.texture.minFilter;
          },
          set: function (e) {
            void 0, (this.texture.minFilter = e);
          },
        },
        anisotropy: {
          get: function () {
            return void 0, this.texture.anisotropy;
          },
          set: function (e) {
            void 0, (this.texture.anisotropy = e);
          },
        },
        offset: {
          get: function () {
            return void 0, this.texture.offset;
          },
          set: function (e) {
            void 0, (this.texture.offset = e);
          },
        },
        repeat: {
          get: function () {
            return void 0, this.texture.repeat;
          },
          set: function (e) {
            void 0, (this.texture.repeat = e);
          },
        },
        format: {
          get: function () {
            return void 0, this.texture.format;
          },
          set: function (e) {
            void 0, (this.texture.format = e);
          },
        },
        type: {
          get: function () {
            return void 0, this.texture.type;
          },
          set: function (e) {
            void 0, (this.texture.type = e);
          },
        },
        generateMipmaps: {
          get: function () {
            return void 0, this.texture.generateMipmaps;
          },
          set: function (e) {
            void 0, (this.texture.generateMipmaps = e);
          },
        },
      }),
      Object.defineProperties(gm.prototype, {
        load: {
          value: function (e) {
            void 0;
            var t = this,
              n = new sm();
            return (
              n.load(e, function (e) {
                t.setBuffer(e);
              }),
              this
            );
          },
        },
        startTime: {
          set: function () {
            void 0;
          },
        },
      }),
      (Lm.prototype.getData = function () {
        return void 0, this.getFrequencyData();
      }),
      ($r.prototype.updateCubeMap = function (e, t) {
        return void 0, this.update(e, t);
      });
    (fn.crossOrigin = void 0),
      (fn.loadTexture = function (e, t, n, i) {
        void 0;
        var r = new Qh();
        r.setCrossOrigin(this.crossOrigin);
        var a = r.load(e, n, void 0, i);
        return t && (a.mapping = t), a;
      }),
      (fn.loadTextureCube = function (e, t, n, i) {
        void 0;
        var r = new Kh();
        r.setCrossOrigin(this.crossOrigin);
        var a = r.load(e, n, void 0, i);
        return t && (a.mapping = t), a;
      }),
      (fn.loadCompressedTexture = function () {
        void 0;
      }),
      (fn.loadCompressedTextureCube = function () {
        void 0;
      });
    'undefined' !== typeof __THREE_DEVTOOLS__ &&
      __THREE_DEVTOOLS__.dispatchEvent(
        new CustomEvent('register', { detail: { revision: i } })
      );
  },
  '../../../node_modules/three/src/math/MathUtils.js': function (e, t, n) {
    'use strict';
    n.d(t, 'a', function () {
      return a;
    });
    for (var i = [], r = 0; r < 256; r++)
      i[r] = (r < 16 ? '0' : '') + r.toString(16);
    var a = {
      DEG2RAD: Math.PI / 180,
      RAD2DEG: 180 / Math.PI,
      generateUUID: function () {
        var e = (4294967295 * Math.random()) | 0,
          t = (4294967295 * Math.random()) | 0,
          n = (4294967295 * Math.random()) | 0,
          r = (4294967295 * Math.random()) | 0,
          a =
            i[255 & e] +
            i[(e >> 8) & 255] +
            i[(e >> 16) & 255] +
            i[(e >> 24) & 255] +
            '-' +
            i[255 & t] +
            i[(t >> 8) & 255] +
            '-' +
            i[((t >> 16) & 15) | 64] +
            i[(t >> 24) & 255] +
            '-' +
            i[(63 & n) | 128] +
            i[(n >> 8) & 255] +
            '-' +
            i[(n >> 16) & 255] +
            i[(n >> 24) & 255] +
            i[255 & r] +
            i[(r >> 8) & 255] +
            i[(r >> 16) & 255] +
            i[(r >> 24) & 255];
        return a.toUpperCase();
      },
      clamp: function (e, t, n) {
        return Math.max(t, Math.min(n, e));
      },
      euclideanModulo: function (e, t) {
        return ((e % t) + t) % t;
      },
      mapLinear: function (e, t, n, i, r) {
        return i + ((e - t) * (r - i)) / (n - t);
      },
      lerp: function (e, t, n) {
        return (1 - n) * e + n * t;
      },
      smoothstep: function (e, t, n) {
        return e <= t
          ? 0
          : e >= n
          ? 1
          : ((e = (e - t) / (n - t)), e * e * (3 - 2 * e));
      },
      smootherstep: function (e, t, n) {
        return e <= t
          ? 0
          : e >= n
          ? 1
          : ((e = (e - t) / (n - t)), e * e * e * (e * (6 * e - 15) + 10));
      },
      randInt: function (e, t) {
        return e + Math.floor(Math.random() * (t - e + 1));
      },
      randFloat: function (e, t) {
        return e + Math.random() * (t - e);
      },
      randFloatSpread: function (e) {
        return e * (0.5 - Math.random());
      },
      degToRad: function (e) {
        return e * a.DEG2RAD;
      },
      radToDeg: function (e) {
        return e * a.RAD2DEG;
      },
      isPowerOfTwo: function (e) {
        return 0 === (e & (e - 1)) && 0 !== e;
      },
      ceilPowerOfTwo: function (e) {
        return Math.pow(2, Math.ceil(Math.log(e) / Math.LN2));
      },
      floorPowerOfTwo: function (e) {
        return Math.pow(2, Math.floor(Math.log(e) / Math.LN2));
      },
      setQuaternionFromProperEuler: function (e, t, n, i, r) {
        var a = Math.cos,
          o = Math.sin,
          s = a(n / 2),
          c = o(n / 2),
          u = a((t + i) / 2),
          l = o((t + i) / 2),
          d = a((t - i) / 2),
          h = o((t - i) / 2),
          p = a((i - t) / 2),
          m = o((i - t) / 2);
        switch (r) {
          case 'XYX':
            e.set(s * l, c * d, c * h, s * u);
            break;
          case 'YZY':
            e.set(c * h, s * l, c * d, s * u);
            break;
          case 'ZXZ':
            e.set(c * d, c * h, s * l, s * u);
            break;
          case 'XZX':
            e.set(s * l, c * m, c * p, s * u);
            break;
          case 'YXY':
            e.set(c * p, s * l, c * m, s * u);
            break;
          case 'ZYZ':
            e.set(c * m, c * p, s * l, s * u);
            break;
          default:
            void 0;
        }
      },
    };
  },
  '../../../node_modules/timers-browserify/main.js': function (e, t, n) {
    (function (e) {
      var i =
          ('undefined' !== typeof e && e) ||
          ('undefined' !== typeof self && self) ||
          window,
        r = Function.prototype.apply;
      function a(e, t) {
        (this._id = e), (this._clearFn = t);
      }
      (t.setTimeout = function () {
        return new a(r.call(setTimeout, i, arguments), clearTimeout);
      }),
        (t.setInterval = function () {
          return new a(r.call(setInterval, i, arguments), clearInterval);
        }),
        (t.clearTimeout = t.clearInterval = function (e) {
          e && e.close();
        }),
        (a.prototype.unref = a.prototype.ref = function () {}),
        (a.prototype.close = function () {
          this._clearFn.call(i, this._id);
        }),
        (t.enroll = function (e, t) {
          clearTimeout(e._idleTimeoutId), (e._idleTimeout = t);
        }),
        (t.unenroll = function (e) {
          clearTimeout(e._idleTimeoutId), (e._idleTimeout = -1);
        }),
        (t._unrefActive = t.active = function (e) {
          clearTimeout(e._idleTimeoutId);
          var t = e._idleTimeout;
          t >= 0 &&
            (e._idleTimeoutId = setTimeout(function t() {
              e._onTimeout && e._onTimeout();
            }, t));
        }),
        n('../../../node_modules/setimmediate/setImmediate.js'),
        (t.setImmediate =
          ('undefined' !== typeof self && self.setImmediate) ||
          ('undefined' !== typeof e && e.setImmediate) ||
          (this && this.setImmediate)),
        (t.clearImmediate =
          ('undefined' !== typeof self && self.clearImmediate) ||
          ('undefined' !== typeof e && e.clearImmediate) ||
          (this && this.clearImmediate));
    }.call(this, n('../../../node_modules/webpack/buildin/global.js')));
  },
  '../../../node_modules/util-deprecate/browser.js': function (e, t, n) {
    (function (t) {
      function n(e, t) {
        if (i('noDeprecation')) return e;
        var n = !1;
        function r() {
          if (!n) {
            if (i('throwDeprecation')) throw new Error(t);
            i('traceDeprecation'), void 0, (n = !0);
          }
          return e.apply(this, arguments);
        }
        return r;
      }
      function i(e) {
        try {
          if (!t.localStorage) return !1;
        } catch (e) {
          return !1;
        }
        var n = t.localStorage[e];
        return null != n && 'true' === String(n).toLowerCase();
      }
      e.exports = n;
    }.call(this, n('../../../node_modules/webpack/buildin/global.js')));
  },
  '../../../node_modules/webpack/buildin/global.js': function (e, t) {
    var n;
    n = (function () {
      return this;
    })();
    try {
      n = n || new Function('return this')();
    } catch (e) {
      'object' === typeof window && (n = window);
    }
    e.exports = n;
  },
  '../../../node_modules/webpack/buildin/module.js': function (e, t) {
    e.exports = function (e) {
      return (
        e.webpackPolyfill ||
          ((e.deprecate = function () {}),
          (e.paths = []),
          e.children || (e.children = []),
          Object.defineProperty(e, 'loaded', {
            enumerable: !0,
            get: function () {
              return e.l;
            },
          }),
          Object.defineProperty(e, 'id', {
            enumerable: !0,
            get: function () {
              return e.i;
            },
          }),
          (e.webpackPolyfill = 1)),
        e
      );
    };
  },
  './node_modules/jszip/lib/base64.js': function (e, t, n) {
    'use strict';
    var i = n('./node_modules/jszip/lib/utils.js'),
      r = n('./node_modules/jszip/lib/support.js'),
      a = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
    (t.encode = function (e) {
      var t,
        n,
        r,
        o,
        s,
        c,
        u,
        l = [],
        d = 0,
        h = e.length,
        p = h,
        m = 'string' !== i.getTypeOf(e);
      while (d < e.length)
        (p = h - d),
          m
            ? ((t = e[d++]), (n = d < h ? e[d++] : 0), (r = d < h ? e[d++] : 0))
            : ((t = e.charCodeAt(d++)),
              (n = d < h ? e.charCodeAt(d++) : 0),
              (r = d < h ? e.charCodeAt(d++) : 0)),
          (o = t >> 2),
          (s = ((3 & t) << 4) | (n >> 4)),
          (c = p > 1 ? ((15 & n) << 2) | (r >> 6) : 64),
          (u = p > 2 ? 63 & r : 64),
          l.push(a.charAt(o) + a.charAt(s) + a.charAt(c) + a.charAt(u));
      return l.join('');
    }),
      (t.decode = function (e) {
        var t,
          n,
          i,
          o,
          s,
          c,
          u,
          l = 0,
          d = 0,
          h = 'data:';
        if (e.substr(0, h.length) === h)
          throw new Error('Invalid base64 input, it looks like a data url.');
        e = e.replace(/[^A-Za-z0-9\+\/\=]/g, '');
        var p,
          m = (3 * e.length) / 4;
        if (
          (e.charAt(e.length - 1) === a.charAt(64) && m--,
          e.charAt(e.length - 2) === a.charAt(64) && m--,
          m % 1 !== 0)
        )
          throw new Error('Invalid base64 input, bad content length.');
        p = r.uint8array ? new Uint8Array(0 | m) : new Array(0 | m);
        while (l < e.length)
          (o = a.indexOf(e.charAt(l++))),
            (s = a.indexOf(e.charAt(l++))),
            (c = a.indexOf(e.charAt(l++))),
            (u = a.indexOf(e.charAt(l++))),
            (t = (o << 2) | (s >> 4)),
            (n = ((15 & s) << 4) | (c >> 2)),
            (i = ((3 & c) << 6) | u),
            (p[d++] = t),
            64 !== c && (p[d++] = n),
            64 !== u && (p[d++] = i);
        return p;
      });
  },
  './node_modules/jszip/lib/compressedObject.js': function (e, t, n) {
    'use strict';
    var i = n('./node_modules/jszip/lib/external.js'),
      r = n('./node_modules/jszip/lib/stream/DataWorker.js'),
      a = n('./node_modules/jszip/lib/stream/DataLengthProbe.js'),
      o = n('./node_modules/jszip/lib/stream/Crc32Probe.js');
    a = n('./node_modules/jszip/lib/stream/DataLengthProbe.js');
    function s(e, t, n, i, r) {
      (this.compressedSize = e),
        (this.uncompressedSize = t),
        (this.crc32 = n),
        (this.compression = i),
        (this.compressedContent = r);
    }
    (s.prototype = {
      getContentWorker: function () {
        var e = new r(i.Promise.resolve(this.compressedContent))
            .pipe(this.compression.uncompressWorker())
            .pipe(new a('data_length')),
          t = this;
        return (
          e.on('end', function () {
            if (this.streamInfo['data_length'] !== t.uncompressedSize)
              throw new Error('Bug : uncompressed data size mismatch');
          }),
          e
        );
      },
      getCompressedWorker: function () {
        return new r(i.Promise.resolve(this.compressedContent))
          .withStreamInfo('compressedSize', this.compressedSize)
          .withStreamInfo('uncompressedSize', this.uncompressedSize)
          .withStreamInfo('crc32', this.crc32)
          .withStreamInfo('compression', this.compression);
      },
    }),
      (s.createWorkerFrom = function (e, t, n) {
        return e
          .pipe(new o())
          .pipe(new a('uncompressedSize'))
          .pipe(t.compressWorker(n))
          .pipe(new a('compressedSize'))
          .withStreamInfo('compression', t);
      }),
      (e.exports = s);
  },
  './node_modules/jszip/lib/compressions.js': function (e, t, n) {
    'use strict';
    var i = n('./node_modules/jszip/lib/stream/GenericWorker.js');
    (t.STORE = {
      magic: '\0\0',
      compressWorker: function (e) {
        return new i('STORE compression');
      },
      uncompressWorker: function () {
        return new i('STORE decompression');
      },
    }),
      (t.DEFLATE = n('./node_modules/jszip/lib/flate.js'));
  },
  './node_modules/jszip/lib/crc32.js': function (e, t, n) {
    'use strict';
    var i = n('./node_modules/jszip/lib/utils.js');
    function r() {
      for (var e, t = [], n = 0; n < 256; n++) {
        e = n;
        for (var i = 0; i < 8; i++)
          e = 1 & e ? 3988292384 ^ (e >>> 1) : e >>> 1;
        t[n] = e;
      }
      return t;
    }
    var a = r();
    function o(e, t, n, i) {
      var r = a,
        o = i + n;
      e ^= -1;
      for (var s = i; s < o; s++) e = (e >>> 8) ^ r[255 & (e ^ t[s])];
      return -1 ^ e;
    }
    function s(e, t, n, i) {
      var r = a,
        o = i + n;
      e ^= -1;
      for (var s = i; s < o; s++)
        e = (e >>> 8) ^ r[255 & (e ^ t.charCodeAt(s))];
      return -1 ^ e;
    }
    e.exports = function e(t, n) {
      if ('undefined' === typeof t || !t.length) return 0;
      var r = 'string' !== i.getTypeOf(t);
      return r ? o(0 | n, t, t.length, 0) : s(0 | n, t, t.length, 0);
    };
  },
  './node_modules/jszip/lib/defaults.js': function (e, t, n) {
    'use strict';
    (t.base64 = !1),
      (t.binary = !1),
      (t.dir = !1),
      (t.createFolders = !0),
      (t.date = null),
      (t.compression = null),
      (t.compressionOptions = null),
      (t.comment = null),
      (t.unixPermissions = null),
      (t.dosPermissions = null);
  },
  './node_modules/jszip/lib/external.js': function (e, t, n) {
    'use strict';
    var i = null;
    (i =
      'undefined' !== typeof Promise
        ? Promise
        : n('../../../node_modules/lie/lib/browser.js')),
      (e.exports = { Promise: i });
  },
  './node_modules/jszip/lib/flate.js': function (e, t, n) {
    'use strict';
    var i =
        'undefined' !== typeof Uint8Array &&
        'undefined' !== typeof Uint16Array &&
        'undefined' !== typeof Uint32Array,
      r = n('../../../node_modules/pako/index.js'),
      a = n('./node_modules/jszip/lib/utils.js'),
      o = n('./node_modules/jszip/lib/stream/GenericWorker.js'),
      s = i ? 'uint8array' : 'array';
    function c(e, t) {
      o.call(this, 'FlateWorker/' + e),
        (this._pako = null),
        (this._pakoAction = e),
        (this._pakoOptions = t),
        (this.meta = {});
    }
    (t.magic = '\b\0'),
      a.inherits(c, o),
      (c.prototype.processChunk = function (e) {
        (this.meta = e.meta),
          null === this._pako && this._createPako(),
          this._pako.push(a.transformTo(s, e.data), !1);
      }),
      (c.prototype.flush = function () {
        o.prototype.flush.call(this),
          null === this._pako && this._createPako(),
          this._pako.push([], !0);
      }),
      (c.prototype.cleanUp = function () {
        o.prototype.cleanUp.call(this), (this._pako = null);
      }),
      (c.prototype._createPako = function () {
        this._pako = new r[this._pakoAction]({
          raw: !0,
          level: this._pakoOptions.level || -1,
        });
        var e = this;
        this._pako.onData = function (t) {
          e.push({ data: t, meta: e.meta });
        };
      }),
      (t.compressWorker = function (e) {
        return new c('Deflate', e);
      }),
      (t.uncompressWorker = function () {
        return new c('Inflate', {});
      });
  },
  './node_modules/jszip/lib/generate/ZipFileWorker.js': function (e, t, n) {
    'use strict';
    var i = n('./node_modules/jszip/lib/utils.js'),
      r = n('./node_modules/jszip/lib/stream/GenericWorker.js'),
      a = n('./node_modules/jszip/lib/utf8.js'),
      o = n('./node_modules/jszip/lib/crc32.js'),
      s = n('./node_modules/jszip/lib/signature.js'),
      c = function (e, t) {
        var n,
          i = '';
        for (n = 0; n < t; n++) (i += String.fromCharCode(255 & e)), (e >>>= 8);
        return i;
      },
      u = function (e, t) {
        var n = e;
        return e || (n = t ? 16893 : 33204), (65535 & n) << 16;
      },
      l = function (e, t) {
        return 63 & (e || 0);
      },
      d = function (e, t, n, r, d, h) {
        var p,
          m,
          f = e['file'],
          _ = e['compression'],
          M = h !== a.utf8encode,
          v = i.transformTo('string', h(f.name)),
          g = i.transformTo('string', a.utf8encode(f.name)),
          y = f.comment,
          b = i.transformTo('string', h(y)),
          w = i.transformTo('string', a.utf8encode(y)),
          A = g.length !== f.name.length,
          x = w.length !== y.length,
          L = '',
          T = '',
          z = '',
          S = f.dir,
          O = f.date,
          E = { crc32: 0, compressedSize: 0, uncompressedSize: 0 };
        (t && !n) ||
          ((E.crc32 = e['crc32']),
          (E.compressedSize = e['compressedSize']),
          (E.uncompressedSize = e['uncompressedSize']));
        var k = 0;
        t && (k |= 8), M || (!A && !x) || (k |= 2048);
        var C = 0,
          D = 0;
        S && (C |= 16),
          'UNIX' === d
            ? ((D = 798), (C |= u(f.unixPermissions, S)))
            : ((D = 20), (C |= l(f.dosPermissions, S))),
          (p = O.getUTCHours()),
          (p <<= 6),
          (p |= O.getUTCMinutes()),
          (p <<= 5),
          (p |= O.getUTCSeconds() / 2),
          (m = O.getUTCFullYear() - 1980),
          (m <<= 4),
          (m |= O.getUTCMonth() + 1),
          (m <<= 5),
          (m |= O.getUTCDate()),
          A &&
            ((T = c(1, 1) + c(o(v), 4) + g), (L += 'up' + c(T.length, 2) + T)),
          x &&
            ((z = c(1, 1) + c(o(b), 4) + w), (L += 'uc' + c(z.length, 2) + z));
        var N = '';
        (N += '\n\0'),
          (N += c(k, 2)),
          (N += _.magic),
          (N += c(p, 2)),
          (N += c(m, 2)),
          (N += c(E.crc32, 4)),
          (N += c(E.compressedSize, 4)),
          (N += c(E.uncompressedSize, 4)),
          (N += c(v.length, 2)),
          (N += c(L.length, 2));
        var P = s.LOCAL_FILE_HEADER + N + v + L,
          j =
            s.CENTRAL_FILE_HEADER +
            c(D, 2) +
            N +
            c(b.length, 2) +
            '\0\0' +
            '\0\0' +
            c(C, 4) +
            c(r, 4) +
            v +
            L +
            b;
        return { fileRecord: P, dirRecord: j };
      },
      h = function (e, t, n, r, a) {
        var o = '',
          u = i.transformTo('string', a(r));
        return (
          (o =
            s.CENTRAL_DIRECTORY_END +
            '\0\0' +
            '\0\0' +
            c(e, 2) +
            c(e, 2) +
            c(t, 4) +
            c(n, 4) +
            c(u.length, 2) +
            u),
          o
        );
      },
      p = function (e) {
        var t = '';
        return (
          (t =
            s.DATA_DESCRIPTOR +
            c(e['crc32'], 4) +
            c(e['compressedSize'], 4) +
            c(e['uncompressedSize'], 4)),
          t
        );
      };
    function m(e, t, n, i) {
      r.call(this, 'ZipFileWorker'),
        (this.bytesWritten = 0),
        (this.zipComment = t),
        (this.zipPlatform = n),
        (this.encodeFileName = i),
        (this.streamFiles = e),
        (this.accumulate = !1),
        (this.contentBuffer = []),
        (this.dirRecords = []),
        (this.currentSourceOffset = 0),
        (this.entriesCount = 0),
        (this.currentFile = null),
        (this._sources = []);
    }
    i.inherits(m, r),
      (m.prototype.push = function (e) {
        var t = e.meta.percent || 0,
          n = this.entriesCount,
          i = this._sources.length;
        this.accumulate
          ? this.contentBuffer.push(e)
          : ((this.bytesWritten += e.data.length),
            r.prototype.push.call(this, {
              data: e.data,
              meta: {
                currentFile: this.currentFile,
                percent: n ? (t + 100 * (n - i - 1)) / n : 100,
              },
            }));
      }),
      (m.prototype.openedSource = function (e) {
        (this.currentSourceOffset = this.bytesWritten),
          (this.currentFile = e['file'].name);
        var t = this.streamFiles && !e['file'].dir;
        if (t) {
          var n = d(
            e,
            t,
            !1,
            this.currentSourceOffset,
            this.zipPlatform,
            this.encodeFileName
          );
          this.push({ data: n.fileRecord, meta: { percent: 0 } });
        } else this.accumulate = !0;
      }),
      (m.prototype.closedSource = function (e) {
        this.accumulate = !1;
        var t = this.streamFiles && !e['file'].dir,
          n = d(
            e,
            t,
            !0,
            this.currentSourceOffset,
            this.zipPlatform,
            this.encodeFileName
          );
        if ((this.dirRecords.push(n.dirRecord), t))
          this.push({ data: p(e), meta: { percent: 100 } });
        else {
          this.push({ data: n.fileRecord, meta: { percent: 0 } });
          while (this.contentBuffer.length)
            this.push(this.contentBuffer.shift());
        }
        this.currentFile = null;
      }),
      (m.prototype.flush = function () {
        for (var e = this.bytesWritten, t = 0; t < this.dirRecords.length; t++)
          this.push({ data: this.dirRecords[t], meta: { percent: 100 } });
        var n = this.bytesWritten - e,
          i = h(
            this.dirRecords.length,
            n,
            e,
            this.zipComment,
            this.encodeFileName
          );
        this.push({ data: i, meta: { percent: 100 } });
      }),
      (m.prototype.prepareNextSource = function () {
        (this.previous = this._sources.shift()),
          this.openedSource(this.previous.streamInfo),
          this.isPaused ? this.previous.pause() : this.previous.resume();
      }),
      (m.prototype.registerPrevious = function (e) {
        this._sources.push(e);
        var t = this;
        return (
          e.on('data', function (e) {
            t.processChunk(e);
          }),
          e.on('end', function () {
            t.closedSource(t.previous.streamInfo),
              t._sources.length ? t.prepareNextSource() : t.end();
          }),
          e.on('error', function (e) {
            t.error(e);
          }),
          this
        );
      }),
      (m.prototype.resume = function () {
        return (
          !!r.prototype.resume.call(this) &&
          (!this.previous && this._sources.length
            ? (this.prepareNextSource(), !0)
            : this.previous || this._sources.length || this.generatedError
            ? void 0
            : (this.end(), !0))
        );
      }),
      (m.prototype.error = function (e) {
        var t = this._sources;
        if (!r.prototype.error.call(this, e)) return !1;
        for (var n = 0; n < t.length; n++)
          try {
            t[n].error(e);
          } catch (e) {}
        return !0;
      }),
      (m.prototype.lock = function () {
        r.prototype.lock.call(this);
        for (var e = this._sources, t = 0; t < e.length; t++) e[t].lock();
      }),
      (e.exports = m);
  },
  './node_modules/jszip/lib/generate/index.js': function (e, t, n) {
    'use strict';
    var i = n('./node_modules/jszip/lib/compressions.js'),
      r = n('./node_modules/jszip/lib/generate/ZipFileWorker.js'),
      a = function (e, t) {
        var n = e || t,
          r = i[n];
        if (!r) throw new Error(n + ' is not a valid compression method !');
        return r;
      };
    t.generateWorker = function (e, t, n) {
      var i = new r(t.streamFiles, n, t.platform, t.encodeFileName),
        o = 0;
      try {
        e.forEach(function (e, n) {
          o++;
          var r = a(n.options.compression, t.compression),
            s = n.options.compressionOptions || t.compressionOptions || {},
            c = n.dir,
            u = n.date;
          n._compressWorker(r, s)
            .withStreamInfo('file', {
              name: e,
              dir: c,
              date: u,
              comment: n.comment || '',
              unixPermissions: n.unixPermissions,
              dosPermissions: n.dosPermissions,
            })
            .pipe(i);
        }),
          (i.entriesCount = o);
      } catch (e) {
        i.error(e);
      }
      return i;
    };
  },
  './node_modules/jszip/lib/index.js': function (e, t, n) {
    'use strict';
    function i() {
      if (!(this instanceof i)) return new i();
      if (arguments.length)
        throw new Error(
          'The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.'
        );
      (this.files = {}),
        (this.comment = null),
        (this.root = ''),
        (this.clone = function () {
          var e = new i();
          for (var t in this) 'function' !== typeof this[t] && (e[t] = this[t]);
          return e;
        });
    }
    (i.prototype = n('./node_modules/jszip/lib/object.js')),
      (i.prototype.loadAsync = n('./node_modules/jszip/lib/load.js')),
      (i.support = n('./node_modules/jszip/lib/support.js')),
      (i.defaults = n('./node_modules/jszip/lib/defaults.js')),
      (i.version = '3.2.0'),
      (i.loadAsync = function (e, t) {
        return new i().loadAsync(e, t);
      }),
      (i.external = n('./node_modules/jszip/lib/external.js')),
      (e.exports = i);
  },
  './node_modules/jszip/lib/load.js': function (e, t, n) {
    'use strict';
    var i = n('./node_modules/jszip/lib/utils.js'),
      r = n('./node_modules/jszip/lib/external.js'),
      a = n('./node_modules/jszip/lib/utf8.js'),
      o =
        ((i = n('./node_modules/jszip/lib/utils.js')),
        n('./node_modules/jszip/lib/zipEntries.js')),
      s = n('./node_modules/jszip/lib/stream/Crc32Probe.js'),
      c = n('./node_modules/jszip/lib/nodejsUtils.js');
    function u(e) {
      return new r.Promise(function (t, n) {
        var i = e.decompressed.getContentWorker().pipe(new s());
        i.on('error', function (e) {
          n(e);
        })
          .on('end', function () {
            i.streamInfo.crc32 !== e.decompressed.crc32
              ? n(new Error('Corrupted zip : CRC32 mismatch'))
              : t();
          })
          .resume();
      });
    }
    e.exports = function (e, t) {
      var n = this;
      return (
        (t = i.extend(t || {}, {
          base64: !1,
          checkCRC32: !1,
          optimizedBinaryString: !1,
          createFolders: !1,
          decodeFileName: a.utf8decode,
        })),
        c.isNode && c.isStream(e)
          ? r.Promise.reject(
              new Error("JSZip can't accept a stream when loading a zip file.")
            )
          : i
              .prepareContent(
                'the loaded zip file',
                e,
                !0,
                t.optimizedBinaryString,
                t.base64
              )
              .then(function (e) {
                var n = new o(t);
                return n.load(e), n;
              })
              .then(function e(n) {
                var i = [r.Promise.resolve(n)],
                  a = n.files;
                if (t.checkCRC32)
                  for (var o = 0; o < a.length; o++) i.push(u(a[o]));
                return r.Promise.all(i);
              })
              .then(function e(i) {
                for (var r = i.shift(), a = r.files, o = 0; o < a.length; o++) {
                  var s = a[o];
                  n.file(s.fileNameStr, s.decompressed, {
                    binary: !0,
                    optimizedBinaryString: !0,
                    date: s.date,
                    dir: s.dir,
                    comment: s.fileCommentStr.length ? s.fileCommentStr : null,
                    unixPermissions: s.unixPermissions,
                    dosPermissions: s.dosPermissions,
                    createFolders: t.createFolders,
                  });
                }
                return r.zipComment.length && (n.comment = r.zipComment), n;
              })
      );
    };
  },
  './node_modules/jszip/lib/nodejs/NodejsStreamInputAdapter.js': function (
    e,
    t,
    n
  ) {
    'use strict';
    var i = n('./node_modules/jszip/lib/utils.js'),
      r = n('./node_modules/jszip/lib/stream/GenericWorker.js');
    function a(e, t) {
      r.call(this, 'Nodejs stream input adapter for ' + e),
        (this._upstreamEnded = !1),
        this._bindStream(t);
    }
    i.inherits(a, r),
      (a.prototype._bindStream = function (e) {
        var t = this;
        (this._stream = e),
          e.pause(),
          e
            .on('data', function (e) {
              t.push({ data: e, meta: { percent: 0 } });
            })
            .on('error', function (e) {
              t.isPaused ? (this.generatedError = e) : t.error(e);
            })
            .on('end', function () {
              t.isPaused ? (t._upstreamEnded = !0) : t.end();
            });
      }),
      (a.prototype.pause = function () {
        return !!r.prototype.pause.call(this) && (this._stream.pause(), !0);
      }),
      (a.prototype.resume = function () {
        return (
          !!r.prototype.resume.call(this) &&
          (this._upstreamEnded ? this.end() : this._stream.resume(), !0)
        );
      }),
      (e.exports = a);
  },
  './node_modules/jszip/lib/nodejs/NodejsStreamOutputAdapter.js': function (
    e,
    t,
    n
  ) {
    'use strict';
    var i = n('./node_modules/jszip/lib/readable-stream-browser.js').Readable,
      r = n('./node_modules/jszip/lib/utils.js');
    function a(e, t, n) {
      i.call(this, t), (this._helper = e);
      var r = this;
      e.on('data', function (e, t) {
        r.push(e) || r._helper.pause(), n && n(t);
      })
        .on('error', function (e) {
          r.emit('error', e);
        })
        .on('end', function () {
          r.push(null);
        });
    }
    r.inherits(a, i),
      (a.prototype._read = function () {
        this._helper.resume();
      }),
      (e.exports = a);
  },
  './node_modules/jszip/lib/nodejsUtils.js': function (e, t, n) {
    'use strict';
    (function (t) {
      e.exports = {
        isNode: 'undefined' !== typeof t,
        newBufferFrom: function (e, n) {
          if (t.from && t.from !== Uint8Array.from) return t.from(e, n);
          if ('number' === typeof e)
            throw new Error('The "data" argument must not be a number');
          return new t(e, n);
        },
        allocBuffer: function (e) {
          if (t.alloc) return t.alloc(e);
          var n = new t(e);
          return n.fill(0), n;
        },
        isBuffer: function (e) {
          return t.isBuffer(e);
        },
        isStream: function (e) {
          return (
            e &&
            'function' === typeof e.on &&
            'function' === typeof e.pause &&
            'function' === typeof e.resume
          );
        },
      };
    }.call(
      this,
      n('../../../node_modules/node-libs-browser/node_modules/buffer/index.js')
        .Buffer
    ));
  },
  './node_modules/jszip/lib/object.js': function (e, t, n) {
    'use strict';
    var i = n('./node_modules/jszip/lib/utf8.js'),
      r = n('./node_modules/jszip/lib/utils.js'),
      a = n('./node_modules/jszip/lib/stream/GenericWorker.js'),
      o = n('./node_modules/jszip/lib/stream/StreamHelper.js'),
      s = n('./node_modules/jszip/lib/defaults.js'),
      c = n('./node_modules/jszip/lib/compressedObject.js'),
      u = n('./node_modules/jszip/lib/zipObject.js'),
      l = n('./node_modules/jszip/lib/generate/index.js'),
      d = n('./node_modules/jszip/lib/nodejsUtils.js'),
      h = n('./node_modules/jszip/lib/nodejs/NodejsStreamInputAdapter.js'),
      p = function (e, t, n) {
        var i,
          o = r.getTypeOf(t),
          l = r.extend(n || {}, s);
        (l.date = l.date || new Date()),
          null !== l.compression &&
            (l.compression = l.compression.toUpperCase()),
          'string' === typeof l.unixPermissions &&
            (l.unixPermissions = parseInt(l.unixPermissions, 8)),
          l.unixPermissions && 16384 & l.unixPermissions && (l.dir = !0),
          l.dosPermissions && 16 & l.dosPermissions && (l.dir = !0),
          l.dir && (e = f(e)),
          l.createFolders && (i = m(e)) && _.call(this, i, !0);
        var p = 'string' === o && !1 === l.binary && !1 === l.base64;
        (n && 'undefined' !== typeof n.binary) || (l.binary = !p);
        var M = t instanceof c && 0 === t.uncompressedSize;
        (M || l.dir || !t || 0 === t.length) &&
          ((l.base64 = !1),
          (l.binary = !0),
          (t = ''),
          (l.compression = 'STORE'),
          (o = 'string'));
        var v = null;
        v =
          t instanceof c || t instanceof a
            ? t
            : d.isNode && d.isStream(t)
            ? new h(e, t)
            : r.prepareContent(
                e,
                t,
                l.binary,
                l.optimizedBinaryString,
                l.base64
              );
        var g = new u(e, v, l);
        this.files[e] = g;
      },
      m = function (e) {
        '/' === e.slice(-1) && (e = e.substring(0, e.length - 1));
        var t = e.lastIndexOf('/');
        return t > 0 ? e.substring(0, t) : '';
      },
      f = function (e) {
        return '/' !== e.slice(-1) && (e += '/'), e;
      },
      _ = function (e, t) {
        return (
          (t = 'undefined' !== typeof t ? t : s.createFolders),
          (e = f(e)),
          this.files[e] || p.call(this, e, null, { dir: !0, createFolders: t }),
          this.files[e]
        );
      };
    function M(e) {
      return '[object RegExp]' === Object.prototype.toString.call(e);
    }
    var v = {
      load: function () {
        throw new Error(
          'This method has been removed in JSZip 3.0, please check the upgrade guide.'
        );
      },
      forEach: function (e) {
        var t, n, i;
        for (t in this.files)
          this.files.hasOwnProperty(t) &&
            ((i = this.files[t]),
            (n = t.slice(this.root.length, t.length)),
            n && t.slice(0, this.root.length) === this.root && e(n, i));
      },
      filter: function (e) {
        var t = [];
        return (
          this.forEach(function (n, i) {
            e(n, i) && t.push(i);
          }),
          t
        );
      },
      file: function (e, t, n) {
        if (1 === arguments.length) {
          if (M(e)) {
            var i = e;
            return this.filter(function (e, t) {
              return !t.dir && i.test(e);
            });
          }
          var r = this.files[this.root + e];
          return r && !r.dir ? r : null;
        }
        return (e = this.root + e), p.call(this, e, t, n), this;
      },
      folder: function (e) {
        if (!e) return this;
        if (M(e))
          return this.filter(function (t, n) {
            return n.dir && e.test(t);
          });
        var t = this.root + e,
          n = _.call(this, t),
          i = this.clone();
        return (i.root = n.name), i;
      },
      remove: function (e) {
        e = this.root + e;
        var t = this.files[e];
        if (
          (t || ('/' !== e.slice(-1) && (e += '/'), (t = this.files[e])),
          t && !t.dir)
        )
          delete this.files[e];
        else
          for (
            var n = this.filter(function (t, n) {
                return n.name.slice(0, e.length) === e;
              }),
              i = 0;
            i < n.length;
            i++
          )
            delete this.files[n[i].name];
        return this;
      },
      generate: function (e) {
        throw new Error(
          'This method has been removed in JSZip 3.0, please check the upgrade guide.'
        );
      },
      generateInternalStream: function (e) {
        var t,
          n = {};
        try {
          if (
            ((n = r.extend(e || {}, {
              streamFiles: !1,
              compression: 'STORE',
              compressionOptions: null,
              type: '',
              platform: 'DOS',
              comment: null,
              mimeType: 'application/zip',
              encodeFileName: i.utf8encode,
            })),
            (n.type = n.type.toLowerCase()),
            (n.compression = n.compression.toUpperCase()),
            'binarystring' === n.type && (n.type = 'string'),
            !n.type)
          )
            throw new Error('No output type specified.');
          r.checkSupport(n.type),
            ('darwin' !== n.platform &&
              'freebsd' !== n.platform &&
              'linux' !== n.platform &&
              'sunos' !== n.platform) ||
              (n.platform = 'UNIX'),
            'win32' === n.platform && (n.platform = 'DOS');
          var s = n.comment || this.comment || '';
          t = l.generateWorker(this, n, s);
        } catch (e) {
          (t = new a('error')), t.error(e);
        }
        return new o(t, n.type || 'string', n.mimeType);
      },
      generateAsync: function (e, t) {
        return this.generateInternalStream(e).accumulate(t);
      },
      generateNodeStream: function (e, t) {
        return (
          (e = e || {}),
          e.type || (e.type = 'nodebuffer'),
          this.generateInternalStream(e).toNodejsStream(t)
        );
      },
    };
    e.exports = v;
  },
  './node_modules/jszip/lib/readable-stream-browser.js': function (e, t, n) {
    e.exports = n('../../../node_modules/stream-browserify/index.js');
  },
  './node_modules/jszip/lib/reader/ArrayReader.js': function (e, t, n) {
    'use strict';
    var i = n('./node_modules/jszip/lib/reader/DataReader.js'),
      r = n('./node_modules/jszip/lib/utils.js');
    function a(e) {
      i.call(this, e);
      for (var t = 0; t < this.data.length; t++) e[t] = 255 & e[t];
    }
    r.inherits(a, i),
      (a.prototype.byteAt = function (e) {
        return this.data[this.zero + e];
      }),
      (a.prototype.lastIndexOfSignature = function (e) {
        for (
          var t = e.charCodeAt(0),
            n = e.charCodeAt(1),
            i = e.charCodeAt(2),
            r = e.charCodeAt(3),
            a = this.length - 4;
          a >= 0;
          --a
        )
          if (
            this.data[a] === t &&
            this.data[a + 1] === n &&
            this.data[a + 2] === i &&
            this.data[a + 3] === r
          )
            return a - this.zero;
        return -1;
      }),
      (a.prototype.readAndCheckSignature = function (e) {
        var t = e.charCodeAt(0),
          n = e.charCodeAt(1),
          i = e.charCodeAt(2),
          r = e.charCodeAt(3),
          a = this.readData(4);
        return t === a[0] && n === a[1] && i === a[2] && r === a[3];
      }),
      (a.prototype.readData = function (e) {
        if ((this.checkOffset(e), 0 === e)) return [];
        var t = this.data.slice(
          this.zero + this.index,
          this.zero + this.index + e
        );
        return (this.index += e), t;
      }),
      (e.exports = a);
  },
  './node_modules/jszip/lib/reader/DataReader.js': function (e, t, n) {
    'use strict';
    var i = n('./node_modules/jszip/lib/utils.js');
    function r(e) {
      (this.data = e),
        (this.length = e.length),
        (this.index = 0),
        (this.zero = 0);
    }
    (r.prototype = {
      checkOffset: function (e) {
        this.checkIndex(this.index + e);
      },
      checkIndex: function (e) {
        if (this.length < this.zero + e || e < 0)
          throw new Error(
            'End of data reached (data length = ' +
              this.length +
              ', asked index = ' +
              e +
              '). Corrupted zip ?'
          );
      },
      setIndex: function (e) {
        this.checkIndex(e), (this.index = e);
      },
      skip: function (e) {
        this.setIndex(this.index + e);
      },
      byteAt: function (e) {},
      readInt: function (e) {
        var t,
          n = 0;
        for (this.checkOffset(e), t = this.index + e - 1; t >= this.index; t--)
          n = (n << 8) + this.byteAt(t);
        return (this.index += e), n;
      },
      readString: function (e) {
        return i.transformTo('string', this.readData(e));
      },
      readData: function (e) {},
      lastIndexOfSignature: function (e) {},
      readAndCheckSignature: function (e) {},
      readDate: function () {
        var e = this.readInt(4);
        return new Date(
          Date.UTC(
            ((e >> 25) & 127) + 1980,
            ((e >> 21) & 15) - 1,
            (e >> 16) & 31,
            (e >> 11) & 31,
            (e >> 5) & 63,
            (31 & e) << 1
          )
        );
      },
    }),
      (e.exports = r);
  },
  './node_modules/jszip/lib/reader/NodeBufferReader.js': function (e, t, n) {
    'use strict';
    var i = n('./node_modules/jszip/lib/reader/Uint8ArrayReader.js'),
      r = n('./node_modules/jszip/lib/utils.js');
    function a(e) {
      i.call(this, e);
    }
    r.inherits(a, i),
      (a.prototype.readData = function (e) {
        this.checkOffset(e);
        var t = this.data.slice(
          this.zero + this.index,
          this.zero + this.index + e
        );
        return (this.index += e), t;
      }),
      (e.exports = a);
  },
  './node_modules/jszip/lib/reader/StringReader.js': function (e, t, n) {
    'use strict';
    var i = n('./node_modules/jszip/lib/reader/DataReader.js'),
      r = n('./node_modules/jszip/lib/utils.js');
    function a(e) {
      i.call(this, e);
    }
    r.inherits(a, i),
      (a.prototype.byteAt = function (e) {
        return this.data.charCodeAt(this.zero + e);
      }),
      (a.prototype.lastIndexOfSignature = function (e) {
        return this.data.lastIndexOf(e) - this.zero;
      }),
      (a.prototype.readAndCheckSignature = function (e) {
        var t = this.readData(4);
        return e === t;
      }),
      (a.prototype.readData = function (e) {
        this.checkOffset(e);
        var t = this.data.slice(
          this.zero + this.index,
          this.zero + this.index + e
        );
        return (this.index += e), t;
      }),
      (e.exports = a);
  },
  './node_modules/jszip/lib/reader/Uint8ArrayReader.js': function (e, t, n) {
    'use strict';
    var i = n('./node_modules/jszip/lib/reader/ArrayReader.js'),
      r = n('./node_modules/jszip/lib/utils.js');
    function a(e) {
      i.call(this, e);
    }
    r.inherits(a, i),
      (a.prototype.readData = function (e) {
        if ((this.checkOffset(e), 0 === e)) return new Uint8Array(0);
        var t = this.data.subarray(
          this.zero + this.index,
          this.zero + this.index + e
        );
        return (this.index += e), t;
      }),
      (e.exports = a);
  },
  './node_modules/jszip/lib/reader/readerFor.js': function (e, t, n) {
    'use strict';
    var i = n('./node_modules/jszip/lib/utils.js'),
      r = n('./node_modules/jszip/lib/support.js'),
      a = n('./node_modules/jszip/lib/reader/ArrayReader.js'),
      o = n('./node_modules/jszip/lib/reader/StringReader.js'),
      s = n('./node_modules/jszip/lib/reader/NodeBufferReader.js'),
      c = n('./node_modules/jszip/lib/reader/Uint8ArrayReader.js');
    e.exports = function (e) {
      var t = i.getTypeOf(e);
      return (
        i.checkSupport(t),
        'string' !== t || r.uint8array
          ? 'nodebuffer' === t
            ? new s(e)
            : r.uint8array
            ? new c(i.transformTo('uint8array', e))
            : new a(i.transformTo('array', e))
          : new o(e)
      );
    };
  },
  './node_modules/jszip/lib/signature.js': function (e, t, n) {
    'use strict';
    (t.LOCAL_FILE_HEADER = 'PK'),
      (t.CENTRAL_FILE_HEADER = 'PK'),
      (t.CENTRAL_DIRECTORY_END = 'PK'),
      (t.ZIP64_CENTRAL_DIRECTORY_LOCATOR = 'PK'),
      (t.ZIP64_CENTRAL_DIRECTORY_END = 'PK'),
      (t.DATA_DESCRIPTOR = 'PK\b');
  },
  './node_modules/jszip/lib/stream/ConvertWorker.js': function (e, t, n) {
    'use strict';
    var i = n('./node_modules/jszip/lib/stream/GenericWorker.js'),
      r = n('./node_modules/jszip/lib/utils.js');
    function a(e) {
      i.call(this, 'ConvertWorker to ' + e), (this.destType = e);
    }
    r.inherits(a, i),
      (a.prototype.processChunk = function (e) {
        this.push({ data: r.transformTo(this.destType, e.data), meta: e.meta });
      }),
      (e.exports = a);
  },
  './node_modules/jszip/lib/stream/Crc32Probe.js': function (e, t, n) {
    'use strict';
    var i = n('./node_modules/jszip/lib/stream/GenericWorker.js'),
      r = n('./node_modules/jszip/lib/crc32.js'),
      a = n('./node_modules/jszip/lib/utils.js');
    function o() {
      i.call(this, 'Crc32Probe'), this.withStreamInfo('crc32', 0);
    }
    a.inherits(o, i),
      (o.prototype.processChunk = function (e) {
        (this.streamInfo.crc32 = r(e.data, this.streamInfo.crc32 || 0)),
          this.push(e);
      }),
      (e.exports = o);
  },
  './node_modules/jszip/lib/stream/DataLengthProbe.js': function (e, t, n) {
    'use strict';
    var i = n('./node_modules/jszip/lib/utils.js'),
      r = n('./node_modules/jszip/lib/stream/GenericWorker.js');
    function a(e) {
      r.call(this, 'DataLengthProbe for ' + e),
        (this.propName = e),
        this.withStreamInfo(e, 0);
    }
    i.inherits(a, r),
      (a.prototype.processChunk = function (e) {
        if (e) {
          var t = this.streamInfo[this.propName] || 0;
          this.streamInfo[this.propName] = t + e.data.length;
        }
        r.prototype.processChunk.call(this, e);
      }),
      (e.exports = a);
  },
  './node_modules/jszip/lib/stream/DataWorker.js': function (e, t, n) {
    'use strict';
    var i = n('./node_modules/jszip/lib/utils.js'),
      r = n('./node_modules/jszip/lib/stream/GenericWorker.js'),
      a = 16 * 1024;
    function o(e) {
      r.call(this, 'DataWorker');
      var t = this;
      (this.dataIsReady = !1),
        (this.index = 0),
        (this.max = 0),
        (this.data = null),
        (this.type = ''),
        (this._tickScheduled = !1),
        e.then(
          function (e) {
            (t.dataIsReady = !0),
              (t.data = e),
              (t.max = (e && e.length) || 0),
              (t.type = i.getTypeOf(e)),
              t.isPaused || t._tickAndRepeat();
          },
          function (e) {
            t.error(e);
          }
        );
    }
    i.inherits(o, r),
      (o.prototype.cleanUp = function () {
        r.prototype.cleanUp.call(this), (this.data = null);
      }),
      (o.prototype.resume = function () {
        return (
          !!r.prototype.resume.call(this) &&
          (!this._tickScheduled &&
            this.dataIsReady &&
            ((this._tickScheduled = !0),
            i.delay(this._tickAndRepeat, [], this)),
          !0)
        );
      }),
      (o.prototype._tickAndRepeat = function () {
        (this._tickScheduled = !1),
          this.isPaused ||
            this.isFinished ||
            (this._tick(),
            this.isFinished ||
              (i.delay(this._tickAndRepeat, [], this),
              (this._tickScheduled = !0)));
      }),
      (o.prototype._tick = function () {
        if (this.isPaused || this.isFinished) return !1;
        var e = a,
          t = null,
          n = Math.min(this.max, this.index + e);
        if (this.index >= this.max) return this.end();
        switch (this.type) {
          case 'string':
            t = this.data.substring(this.index, n);
            break;
          case 'uint8array':
            t = this.data.subarray(this.index, n);
            break;
          case 'array':
          case 'nodebuffer':
            t = this.data.slice(this.index, n);
            break;
        }
        return (
          (this.index = n),
          this.push({
            data: t,
            meta: { percent: this.max ? (this.index / this.max) * 100 : 0 },
          })
        );
      }),
      (e.exports = o);
  },
  './node_modules/jszip/lib/stream/GenericWorker.js': function (e, t, n) {
    'use strict';
    function i(e) {
      (this.name = e || 'default'),
        (this.streamInfo = {}),
        (this.generatedError = null),
        (this.extraStreamInfo = {}),
        (this.isPaused = !0),
        (this.isFinished = !1),
        (this.isLocked = !1),
        (this._listeners = { data: [], end: [], error: [] }),
        (this.previous = null);
    }
    (i.prototype = {
      push: function (e) {
        this.emit('data', e);
      },
      end: function () {
        if (this.isFinished) return !1;
        this.flush();
        try {
          this.emit('end'), this.cleanUp(), (this.isFinished = !0);
        } catch (e) {
          this.emit('error', e);
        }
        return !0;
      },
      error: function (e) {
        return (
          !this.isFinished &&
          (this.isPaused
            ? (this.generatedError = e)
            : ((this.isFinished = !0),
              this.emit('error', e),
              this.previous && this.previous.error(e),
              this.cleanUp()),
          !0)
        );
      },
      on: function (e, t) {
        return this._listeners[e].push(t), this;
      },
      cleanUp: function () {
        (this.streamInfo = this.generatedError = this.extraStreamInfo = null),
          (this._listeners = []);
      },
      emit: function (e, t) {
        if (this._listeners[e])
          for (var n = 0; n < this._listeners[e].length; n++)
            this._listeners[e][n].call(this, t);
      },
      pipe: function (e) {
        return e.registerPrevious(this);
      },
      registerPrevious: function (e) {
        if (this.isLocked)
          throw new Error("The stream '" + this + "' has already been used.");
        (this.streamInfo = e.streamInfo),
          this.mergeStreamInfo(),
          (this.previous = e);
        var t = this;
        return (
          e.on('data', function (e) {
            t.processChunk(e);
          }),
          e.on('end', function () {
            t.end();
          }),
          e.on('error', function (e) {
            t.error(e);
          }),
          this
        );
      },
      pause: function () {
        return (
          !this.isPaused &&
          !this.isFinished &&
          ((this.isPaused = !0), this.previous && this.previous.pause(), !0)
        );
      },
      resume: function () {
        if (!this.isPaused || this.isFinished) return !1;
        this.isPaused = !1;
        var e = !1;
        return (
          this.generatedError && (this.error(this.generatedError), (e = !0)),
          this.previous && this.previous.resume(),
          !e
        );
      },
      flush: function () {},
      processChunk: function (e) {
        this.push(e);
      },
      withStreamInfo: function (e, t) {
        return (this.extraStreamInfo[e] = t), this.mergeStreamInfo(), this;
      },
      mergeStreamInfo: function () {
        for (var e in this.extraStreamInfo)
          this.extraStreamInfo.hasOwnProperty(e) &&
            (this.streamInfo[e] = this.extraStreamInfo[e]);
      },
      lock: function () {
        if (this.isLocked)
          throw new Error("The stream '" + this + "' has already been used.");
        (this.isLocked = !0), this.previous && this.previous.lock();
      },
      toString: function () {
        var e = 'Worker ' + this.name;
        return this.previous ? this.previous + ' -> ' + e : e;
      },
    }),
      (e.exports = i);
  },
  './node_modules/jszip/lib/stream/StreamHelper.js': function (e, t, n) {
    'use strict';
    (function (t) {
      var i = n('./node_modules/jszip/lib/utils.js'),
        r = n('./node_modules/jszip/lib/stream/ConvertWorker.js'),
        a = n('./node_modules/jszip/lib/stream/GenericWorker.js'),
        o = n('./node_modules/jszip/lib/base64.js'),
        s = n('./node_modules/jszip/lib/support.js'),
        c = n('./node_modules/jszip/lib/external.js'),
        u = null;
      if (s.nodestream)
        try {
          u = n('./node_modules/jszip/lib/nodejs/NodejsStreamOutputAdapter.js');
        } catch (e) {}
      function l(e, t, n) {
        switch (e) {
          case 'blob':
            return i.newBlob(i.transformTo('arraybuffer', t), n);
          case 'base64':
            return o.encode(t);
          default:
            return i.transformTo(e, t);
        }
      }
      function d(e, n) {
        var i,
          r = 0,
          a = null,
          o = 0;
        for (i = 0; i < n.length; i++) o += n[i].length;
        switch (e) {
          case 'string':
            return n.join('');
          case 'array':
            return Array.prototype.concat.apply([], n);
          case 'uint8array':
            for (a = new Uint8Array(o), i = 0; i < n.length; i++)
              a.set(n[i], r), (r += n[i].length);
            return a;
          case 'nodebuffer':
            return t.concat(n);
          default:
            throw new Error("concat : unsupported type '" + e + "'");
        }
      }
      function h(e, t) {
        return new c.Promise(function (n, i) {
          var r = [],
            a = e._internalType,
            o = e._outputType,
            s = e._mimeType;
          e.on('data', function (e, n) {
            r.push(e), t && t(n);
          })
            .on('error', function (e) {
              (r = []), i(e);
            })
            .on('end', function () {
              try {
                var e = l(o, d(a, r), s);
                n(e);
              } catch (e) {
                i(e);
              }
              r = [];
            })
            .resume();
        });
      }
      function p(e, t, n) {
        var o = t;
        switch (t) {
          case 'blob':
          case 'arraybuffer':
            o = 'uint8array';
            break;
          case 'base64':
            o = 'string';
            break;
        }
        try {
          (this._internalType = o),
            (this._outputType = t),
            (this._mimeType = n),
            i.checkSupport(o),
            (this._worker = e.pipe(new r(o))),
            e.lock();
        } catch (e) {
          (this._worker = new a('error')), this._worker.error(e);
        }
      }
      (p.prototype = {
        accumulate: function (e) {
          return h(this, e);
        },
        on: function (e, t) {
          var n = this;
          return (
            'data' === e
              ? this._worker.on(e, function (e) {
                  t.call(n, e.data, e.meta);
                })
              : this._worker.on(e, function () {
                  i.delay(t, arguments, n);
                }),
            this
          );
        },
        resume: function () {
          return i.delay(this._worker.resume, [], this._worker), this;
        },
        pause: function () {
          return this._worker.pause(), this;
        },
        toNodejsStream: function (e) {
          if ((i.checkSupport('nodestream'), 'nodebuffer' !== this._outputType))
            throw new Error(
              this._outputType + ' is not supported by this method'
            );
          return new u(
            this,
            { objectMode: 'nodebuffer' !== this._outputType },
            e
          );
        },
      }),
        (e.exports = p);
    }.call(
      this,
      n('../../../node_modules/node-libs-browser/node_modules/buffer/index.js')
        .Buffer
    ));
  },
  './node_modules/jszip/lib/support.js': function (e, t, n) {
    'use strict';
    (function (e) {
      if (
        ((t.base64 = !0),
        (t.array = !0),
        (t.string = !0),
        (t.arraybuffer =
          'undefined' !== typeof ArrayBuffer &&
          'undefined' !== typeof Uint8Array),
        (t.nodebuffer = 'undefined' !== typeof e),
        (t.uint8array = 'undefined' !== typeof Uint8Array),
        'undefined' === typeof ArrayBuffer)
      )
        t.blob = !1;
      else {
        var i = new ArrayBuffer(0);
        try {
          t.blob = 0 === new Blob([i], { type: 'application/zip' }).size;
        } catch (e) {
          try {
            var r =
                self.BlobBuilder ||
                self.WebKitBlobBuilder ||
                self.MozBlobBuilder ||
                self.MSBlobBuilder,
              a = new r();
            a.append(i), (t.blob = 0 === a.getBlob('application/zip').size);
          } catch (e) {
            t.blob = !1;
          }
        }
      }
      try {
        t.nodestream = !!n(
          './node_modules/jszip/lib/readable-stream-browser.js'
        ).Readable;
      } catch (e) {
        t.nodestream = !1;
      }
    }.call(
      this,
      n('../../../node_modules/node-libs-browser/node_modules/buffer/index.js')
        .Buffer
    ));
  },
  './node_modules/jszip/lib/utf8.js': function (e, t, n) {
    'use strict';
    for (
      var i = n('./node_modules/jszip/lib/utils.js'),
        r = n('./node_modules/jszip/lib/support.js'),
        a = n('./node_modules/jszip/lib/nodejsUtils.js'),
        o = n('./node_modules/jszip/lib/stream/GenericWorker.js'),
        s = new Array(256),
        c = 0;
      c < 256;
      c++
    )
      s[c] =
        c >= 252
          ? 6
          : c >= 248
          ? 5
          : c >= 240
          ? 4
          : c >= 224
          ? 3
          : c >= 192
          ? 2
          : 1;
    s[254] = s[254] = 1;
    var u = function (e) {
        var t,
          n,
          i,
          a,
          o,
          s = e.length,
          c = 0;
        for (a = 0; a < s; a++)
          (n = e.charCodeAt(a)),
            55296 === (64512 & n) &&
              a + 1 < s &&
              ((i = e.charCodeAt(a + 1)),
              56320 === (64512 & i) &&
                ((n = 65536 + ((n - 55296) << 10) + (i - 56320)), a++)),
            (c += n < 128 ? 1 : n < 2048 ? 2 : n < 65536 ? 3 : 4);
        for (
          t = r.uint8array ? new Uint8Array(c) : new Array(c), o = 0, a = 0;
          o < c;
          a++
        )
          (n = e.charCodeAt(a)),
            55296 === (64512 & n) &&
              a + 1 < s &&
              ((i = e.charCodeAt(a + 1)),
              56320 === (64512 & i) &&
                ((n = 65536 + ((n - 55296) << 10) + (i - 56320)), a++)),
            n < 128
              ? (t[o++] = n)
              : n < 2048
              ? ((t[o++] = 192 | (n >>> 6)), (t[o++] = 128 | (63 & n)))
              : n < 65536
              ? ((t[o++] = 224 | (n >>> 12)),
                (t[o++] = 128 | ((n >>> 6) & 63)),
                (t[o++] = 128 | (63 & n)))
              : ((t[o++] = 240 | (n >>> 18)),
                (t[o++] = 128 | ((n >>> 12) & 63)),
                (t[o++] = 128 | ((n >>> 6) & 63)),
                (t[o++] = 128 | (63 & n)));
        return t;
      },
      l = function (e, t) {
        var n;
        (t = t || e.length), t > e.length && (t = e.length), (n = t - 1);
        while (n >= 0 && 128 === (192 & e[n])) n--;
        return n < 0 || 0 === n ? t : n + s[e[n]] > t ? n : t;
      },
      d = function (e) {
        var t,
          n,
          r,
          a,
          o = e.length,
          c = new Array(2 * o);
        for (n = 0, t = 0; t < o; )
          if (((r = e[t++]), r < 128)) c[n++] = r;
          else if (((a = s[r]), a > 4)) (c[n++] = 65533), (t += a - 1);
          else {
            r &= 2 === a ? 31 : 3 === a ? 15 : 7;
            while (a > 1 && t < o) (r = (r << 6) | (63 & e[t++])), a--;
            a > 1
              ? (c[n++] = 65533)
              : r < 65536
              ? (c[n++] = r)
              : ((r -= 65536),
                (c[n++] = 55296 | ((r >> 10) & 1023)),
                (c[n++] = 56320 | (1023 & r)));
          }
        return (
          c.length !== n &&
            (c.subarray ? (c = c.subarray(0, n)) : (c.length = n)),
          i.applyFromCharCode(c)
        );
      };
    function h() {
      o.call(this, 'utf-8 decode'), (this.leftOver = null);
    }
    function p() {
      o.call(this, 'utf-8 encode');
    }
    (t.utf8encode = function e(t) {
      return r.nodebuffer ? a.newBufferFrom(t, 'utf-8') : u(t);
    }),
      (t.utf8decode = function e(t) {
        return r.nodebuffer
          ? i.transformTo('nodebuffer', t).toString('utf-8')
          : ((t = i.transformTo(r.uint8array ? 'uint8array' : 'array', t)),
            d(t));
      }),
      i.inherits(h, o),
      (h.prototype.processChunk = function (e) {
        var n = i.transformTo(r.uint8array ? 'uint8array' : 'array', e.data);
        if (this.leftOver && this.leftOver.length) {
          if (r.uint8array) {
            var a = n;
            (n = new Uint8Array(a.length + this.leftOver.length)),
              n.set(this.leftOver, 0),
              n.set(a, this.leftOver.length);
          } else n = this.leftOver.concat(n);
          this.leftOver = null;
        }
        var o = l(n),
          s = n;
        o !== n.length &&
          (r.uint8array
            ? ((s = n.subarray(0, o)),
              (this.leftOver = n.subarray(o, n.length)))
            : ((s = n.slice(0, o)), (this.leftOver = n.slice(o, n.length)))),
          this.push({ data: t.utf8decode(s), meta: e.meta });
      }),
      (h.prototype.flush = function () {
        this.leftOver &&
          this.leftOver.length &&
          (this.push({ data: t.utf8decode(this.leftOver), meta: {} }),
          (this.leftOver = null));
      }),
      (t.Utf8DecodeWorker = h),
      i.inherits(p, o),
      (p.prototype.processChunk = function (e) {
        this.push({ data: t.utf8encode(e.data), meta: e.meta });
      }),
      (t.Utf8EncodeWorker = p);
  },
  './node_modules/jszip/lib/utils.js': function (e, t, n) {
    'use strict';
    var i = n('./node_modules/jszip/lib/support.js'),
      r = n('./node_modules/jszip/lib/base64.js'),
      a = n('./node_modules/jszip/lib/nodejsUtils.js'),
      o = n('../../../node_modules/set-immediate-shim/index.js'),
      s = n('./node_modules/jszip/lib/external.js');
    function c(e) {
      var t = null;
      return (
        (t = i.uint8array ? new Uint8Array(e.length) : new Array(e.length)),
        l(e, t)
      );
    }
    function u(e) {
      return e;
    }
    function l(e, t) {
      for (var n = 0; n < e.length; ++n) t[n] = 255 & e.charCodeAt(n);
      return t;
    }
    t.newBlob = function (e, n) {
      t.checkSupport('blob');
      try {
        return new Blob([e], { type: n });
      } catch (t) {
        try {
          var i =
              self.BlobBuilder ||
              self.WebKitBlobBuilder ||
              self.MozBlobBuilder ||
              self.MSBlobBuilder,
            r = new i();
          return r.append(e), r.getBlob(n);
        } catch (e) {
          throw new Error("Bug : can't construct the Blob.");
        }
      }
    };
    var d = {
      stringifyByChunk: function (e, t, n) {
        var i = [],
          r = 0,
          a = e.length;
        if (a <= n) return String.fromCharCode.apply(null, e);
        while (r < a)
          'array' === t || 'nodebuffer' === t
            ? i.push(
                String.fromCharCode.apply(null, e.slice(r, Math.min(r + n, a)))
              )
            : i.push(
                String.fromCharCode.apply(
                  null,
                  e.subarray(r, Math.min(r + n, a))
                )
              ),
            (r += n);
        return i.join('');
      },
      stringifyByChar: function (e) {
        for (var t = '', n = 0; n < e.length; n++)
          t += String.fromCharCode(e[n]);
        return t;
      },
      applyCanBeUsed: {
        uint8array: (function () {
          try {
            return (
              i.uint8array &&
              1 === String.fromCharCode.apply(null, new Uint8Array(1)).length
            );
          } catch (e) {
            return !1;
          }
        })(),
        nodebuffer: (function () {
          try {
            return (
              i.nodebuffer &&
              1 === String.fromCharCode.apply(null, a.allocBuffer(1)).length
            );
          } catch (e) {
            return !1;
          }
        })(),
      },
    };
    function h(e) {
      var n = 65536,
        i = t.getTypeOf(e),
        r = !0;
      if (
        ('uint8array' === i
          ? (r = d.applyCanBeUsed.uint8array)
          : 'nodebuffer' === i && (r = d.applyCanBeUsed.nodebuffer),
        r)
      )
        while (n > 1)
          try {
            return d.stringifyByChunk(e, i, n);
          } catch (e) {
            n = Math.floor(n / 2);
          }
      return d.stringifyByChar(e);
    }
    function p(e, t) {
      for (var n = 0; n < e.length; n++) t[n] = e[n];
      return t;
    }
    t.applyFromCharCode = h;
    var m = {};
    (m['string'] = {
      string: u,
      array: function (e) {
        return l(e, new Array(e.length));
      },
      arraybuffer: function (e) {
        return m['string']['uint8array'](e).buffer;
      },
      uint8array: function (e) {
        return l(e, new Uint8Array(e.length));
      },
      nodebuffer: function (e) {
        return l(e, a.allocBuffer(e.length));
      },
    }),
      (m['array'] = {
        string: h,
        array: u,
        arraybuffer: function (e) {
          return new Uint8Array(e).buffer;
        },
        uint8array: function (e) {
          return new Uint8Array(e);
        },
        nodebuffer: function (e) {
          return a.newBufferFrom(e);
        },
      }),
      (m['arraybuffer'] = {
        string: function (e) {
          return h(new Uint8Array(e));
        },
        array: function (e) {
          return p(new Uint8Array(e), new Array(e.byteLength));
        },
        arraybuffer: u,
        uint8array: function (e) {
          return new Uint8Array(e);
        },
        nodebuffer: function (e) {
          return a.newBufferFrom(new Uint8Array(e));
        },
      }),
      (m['uint8array'] = {
        string: h,
        array: function (e) {
          return p(e, new Array(e.length));
        },
        arraybuffer: function (e) {
          return e.buffer;
        },
        uint8array: u,
        nodebuffer: function (e) {
          return a.newBufferFrom(e);
        },
      }),
      (m['nodebuffer'] = {
        string: h,
        array: function (e) {
          return p(e, new Array(e.length));
        },
        arraybuffer: function (e) {
          return m['nodebuffer']['uint8array'](e).buffer;
        },
        uint8array: function (e) {
          return p(e, new Uint8Array(e.length));
        },
        nodebuffer: u,
      }),
      (t.transformTo = function (e, n) {
        if ((n || (n = ''), !e)) return n;
        t.checkSupport(e);
        var i = t.getTypeOf(n),
          r = m[i][e](n);
        return r;
      }),
      (t.getTypeOf = function (e) {
        return 'string' === typeof e
          ? 'string'
          : '[object Array]' === Object.prototype.toString.call(e)
          ? 'array'
          : i.nodebuffer && a.isBuffer(e)
          ? 'nodebuffer'
          : i.uint8array && e instanceof Uint8Array
          ? 'uint8array'
          : i.arraybuffer && e instanceof ArrayBuffer
          ? 'arraybuffer'
          : void 0;
      }),
      (t.checkSupport = function (e) {
        var t = i[e.toLowerCase()];
        if (!t) throw new Error(e + ' is not supported by this platform');
      }),
      (t.MAX_VALUE_16BITS = 65535),
      (t.MAX_VALUE_32BITS = -1),
      (t.pretty = function (e) {
        var t,
          n,
          i = '';
        for (n = 0; n < (e || '').length; n++)
          (t = e.charCodeAt(n)),
            (i += '\\x' + (t < 16 ? '0' : '') + t.toString(16).toUpperCase());
        return i;
      }),
      (t.delay = function (e, t, n) {
        o(function () {
          e.apply(n || null, t || []);
        });
      }),
      (t.inherits = function (e, t) {
        var n = function () {};
        (n.prototype = t.prototype), (e.prototype = new n());
      }),
      (t.extend = function () {
        var e,
          t,
          n = {};
        for (e = 0; e < arguments.length; e++)
          for (t in arguments[e])
            arguments[e].hasOwnProperty(t) &&
              'undefined' === typeof n[t] &&
              (n[t] = arguments[e][t]);
        return n;
      }),
      (t.prepareContent = function (e, n, a, o, u) {
        var l = s.Promise.resolve(n).then(function (e) {
          var t =
            i.blob &&
            (e instanceof Blob ||
              -1 !==
                ['[object File]', '[object Blob]'].indexOf(
                  Object.prototype.toString.call(e)
                ));
          return t && 'undefined' !== typeof FileReader
            ? new s.Promise(function (t, n) {
                var i = new FileReader();
                (i.onload = function (e) {
                  t(e.target.result);
                }),
                  (i.onerror = function (e) {
                    n(e.target.error);
                  }),
                  i.readAsArrayBuffer(e);
              })
            : e;
        });
        return l.then(function (n) {
          var i = t.getTypeOf(n);
          return i
            ? ('arraybuffer' === i
                ? (n = t.transformTo('uint8array', n))
                : 'string' === i &&
                  (u ? (n = r.decode(n)) : a && !0 !== o && (n = c(n))),
              n)
            : s.Promise.reject(
                new Error(
                  "Can't read the data of '" +
                    e +
                    "'. Is it " +
                    'in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?'
                )
              );
        });
      });
  },
  './node_modules/jszip/lib/zipEntries.js': function (e, t, n) {
    'use strict';
    var i = n('./node_modules/jszip/lib/reader/readerFor.js'),
      r = n('./node_modules/jszip/lib/utils.js'),
      a = n('./node_modules/jszip/lib/signature.js'),
      o = n('./node_modules/jszip/lib/zipEntry.js'),
      s =
        (n('./node_modules/jszip/lib/utf8.js'),
        n('./node_modules/jszip/lib/support.js'));
    function c(e) {
      (this.files = []), (this.loadOptions = e);
    }
    (c.prototype = {
      checkSignature: function (e) {
        if (!this.reader.readAndCheckSignature(e)) {
          this.reader.index -= 4;
          var t = this.reader.readString(4);
          throw new Error(
            'Corrupted zip or bug: unexpected signature ' +
              '(' +
              r.pretty(t) +
              ', expected ' +
              r.pretty(e) +
              ')'
          );
        }
      },
      isSignature: function (e, t) {
        var n = this.reader.index;
        this.reader.setIndex(e);
        var i = this.reader.readString(4),
          r = i === t;
        return this.reader.setIndex(n), r;
      },
      readBlockEndOfCentral: function () {
        (this.diskNumber = this.reader.readInt(2)),
          (this.diskWithCentralDirStart = this.reader.readInt(2)),
          (this.centralDirRecordsOnThisDisk = this.reader.readInt(2)),
          (this.centralDirRecords = this.reader.readInt(2)),
          (this.centralDirSize = this.reader.readInt(4)),
          (this.centralDirOffset = this.reader.readInt(4)),
          (this.zipCommentLength = this.reader.readInt(2));
        var e = this.reader.readData(this.zipCommentLength),
          t = s.uint8array ? 'uint8array' : 'array',
          n = r.transformTo(t, e);
        this.zipComment = this.loadOptions.decodeFileName(n);
      },
      readBlockZip64EndOfCentral: function () {
        (this.zip64EndOfCentralSize = this.reader.readInt(8)),
          this.reader.skip(4),
          (this.diskNumber = this.reader.readInt(4)),
          (this.diskWithCentralDirStart = this.reader.readInt(4)),
          (this.centralDirRecordsOnThisDisk = this.reader.readInt(8)),
          (this.centralDirRecords = this.reader.readInt(8)),
          (this.centralDirSize = this.reader.readInt(8)),
          (this.centralDirOffset = this.reader.readInt(8)),
          (this.zip64ExtensibleData = {});
        var e,
          t,
          n,
          i = this.zip64EndOfCentralSize - 44,
          r = 0;
        while (r < i)
          (e = this.reader.readInt(2)),
            (t = this.reader.readInt(4)),
            (n = this.reader.readData(t)),
            (this.zip64ExtensibleData[e] = { id: e, length: t, value: n });
      },
      readBlockZip64EndOfCentralLocator: function () {
        if (
          ((this.diskWithZip64CentralDirStart = this.reader.readInt(4)),
          (this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8)),
          (this.disksCount = this.reader.readInt(4)),
          this.disksCount > 1)
        )
          throw new Error('Multi-volumes zip are not supported');
      },
      readLocalFiles: function () {
        var e, t;
        for (e = 0; e < this.files.length; e++)
          (t = this.files[e]),
            this.reader.setIndex(t.localHeaderOffset),
            this.checkSignature(a.LOCAL_FILE_HEADER),
            t.readLocalPart(this.reader),
            t.handleUTF8(),
            t.processAttributes();
      },
      readCentralDir: function () {
        var e;
        this.reader.setIndex(this.centralDirOffset);
        while (this.reader.readAndCheckSignature(a.CENTRAL_FILE_HEADER))
          (e = new o({ zip64: this.zip64 }, this.loadOptions)),
            e.readCentralPart(this.reader),
            this.files.push(e);
        if (
          this.centralDirRecords !== this.files.length &&
          0 !== this.centralDirRecords &&
          0 === this.files.length
        )
          throw new Error(
            'Corrupted zip or bug: expected ' +
              this.centralDirRecords +
              ' records in central dir, got ' +
              this.files.length
          );
      },
      readEndOfCentral: function () {
        var e = this.reader.lastIndexOfSignature(a.CENTRAL_DIRECTORY_END);
        if (e < 0) {
          var t = !this.isSignature(0, a.LOCAL_FILE_HEADER);
          throw t
            ? new Error(
                "Can't find end of central directory : is this a zip file ? " +
                  'If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html'
              )
            : new Error("Corrupted zip: can't find end of central directory");
        }
        this.reader.setIndex(e);
        var n = e;
        if (
          (this.checkSignature(a.CENTRAL_DIRECTORY_END),
          this.readBlockEndOfCentral(),
          this.diskNumber === r.MAX_VALUE_16BITS ||
            this.diskWithCentralDirStart === r.MAX_VALUE_16BITS ||
            this.centralDirRecordsOnThisDisk === r.MAX_VALUE_16BITS ||
            this.centralDirRecords === r.MAX_VALUE_16BITS ||
            this.centralDirSize === r.MAX_VALUE_32BITS ||
            this.centralDirOffset === r.MAX_VALUE_32BITS)
        ) {
          if (
            ((this.zip64 = !0),
            (e = this.reader.lastIndexOfSignature(
              a.ZIP64_CENTRAL_DIRECTORY_LOCATOR
            )),
            e < 0)
          )
            throw new Error(
              "Corrupted zip: can't find the ZIP64 end of central directory locator"
            );
          if (
            (this.reader.setIndex(e),
            this.checkSignature(a.ZIP64_CENTRAL_DIRECTORY_LOCATOR),
            this.readBlockZip64EndOfCentralLocator(),
            !this.isSignature(
              this.relativeOffsetEndOfZip64CentralDir,
              a.ZIP64_CENTRAL_DIRECTORY_END
            ) &&
              ((this.relativeOffsetEndOfZip64CentralDir = this.reader.lastIndexOfSignature(
                a.ZIP64_CENTRAL_DIRECTORY_END
              )),
              this.relativeOffsetEndOfZip64CentralDir < 0))
          )
            throw new Error(
              "Corrupted zip: can't find the ZIP64 end of central directory"
            );
          this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),
            this.checkSignature(a.ZIP64_CENTRAL_DIRECTORY_END),
            this.readBlockZip64EndOfCentral();
        }
        var i = this.centralDirOffset + this.centralDirSize;
        this.zip64 && ((i += 20), (i += 12 + this.zip64EndOfCentralSize));
        var o = n - i;
        if (o > 0)
          this.isSignature(n, a.CENTRAL_FILE_HEADER) || (this.reader.zero = o);
        else if (o < 0)
          throw new Error('Corrupted zip: missing ' + Math.abs(o) + ' bytes.');
      },
      prepareReader: function (e) {
        this.reader = i(e);
      },
      load: function (e) {
        this.prepareReader(e),
          this.readEndOfCentral(),
          this.readCentralDir(),
          this.readLocalFiles();
      },
    }),
      (e.exports = c);
  },
  './node_modules/jszip/lib/zipEntry.js': function (e, t, n) {
    'use strict';
    var i = n('./node_modules/jszip/lib/reader/readerFor.js'),
      r = n('./node_modules/jszip/lib/utils.js'),
      a = n('./node_modules/jszip/lib/compressedObject.js'),
      o = n('./node_modules/jszip/lib/crc32.js'),
      s = n('./node_modules/jszip/lib/utf8.js'),
      c = n('./node_modules/jszip/lib/compressions.js'),
      u = n('./node_modules/jszip/lib/support.js'),
      l = 0,
      d = 3,
      h = function (e) {
        for (var t in c)
          if (c.hasOwnProperty(t) && c[t].magic === e) return c[t];
        return null;
      };
    function p(e, t) {
      (this.options = e), (this.loadOptions = t);
    }
    (p.prototype = {
      isEncrypted: function () {
        return 1 === (1 & this.bitFlag);
      },
      useUTF8: function () {
        return 2048 === (2048 & this.bitFlag);
      },
      readLocalPart: function (e) {
        var t, n;
        if (
          (e.skip(22),
          (this.fileNameLength = e.readInt(2)),
          (n = e.readInt(2)),
          (this.fileName = e.readData(this.fileNameLength)),
          e.skip(n),
          -1 === this.compressedSize || -1 === this.uncompressedSize)
        )
          throw new Error(
            "Bug or corrupted zip : didn't get enough informations from the central directory " +
              '(compressedSize === -1 || uncompressedSize === -1)'
          );
        if (((t = h(this.compressionMethod)), null === t))
          throw new Error(
            'Corrupted zip : compression ' +
              r.pretty(this.compressionMethod) +
              ' unknown (inner file : ' +
              r.transformTo('string', this.fileName) +
              ')'
          );
        this.decompressed = new a(
          this.compressedSize,
          this.uncompressedSize,
          this.crc32,
          t,
          e.readData(this.compressedSize)
        );
      },
      readCentralPart: function (e) {
        (this.versionMadeBy = e.readInt(2)),
          e.skip(2),
          (this.bitFlag = e.readInt(2)),
          (this.compressionMethod = e.readString(2)),
          (this.date = e.readDate()),
          (this.crc32 = e.readInt(4)),
          (this.compressedSize = e.readInt(4)),
          (this.uncompressedSize = e.readInt(4));
        var t = e.readInt(2);
        if (
          ((this.extraFieldsLength = e.readInt(2)),
          (this.fileCommentLength = e.readInt(2)),
          (this.diskNumberStart = e.readInt(2)),
          (this.internalFileAttributes = e.readInt(2)),
          (this.externalFileAttributes = e.readInt(4)),
          (this.localHeaderOffset = e.readInt(4)),
          this.isEncrypted())
        )
          throw new Error('Encrypted zip are not supported');
        e.skip(t),
          this.readExtraFields(e),
          this.parseZIP64ExtraField(e),
          (this.fileComment = e.readData(this.fileCommentLength));
      },
      processAttributes: function () {
        (this.unixPermissions = null), (this.dosPermissions = null);
        var e = this.versionMadeBy >> 8;
        (this.dir = !!(16 & this.externalFileAttributes)),
          e === l && (this.dosPermissions = 63 & this.externalFileAttributes),
          e === d &&
            (this.unixPermissions =
              (this.externalFileAttributes >> 16) & 65535),
          this.dir || '/' !== this.fileNameStr.slice(-1) || (this.dir = !0);
      },
      parseZIP64ExtraField: function (e) {
        if (this.extraFields[1]) {
          var t = i(this.extraFields[1].value);
          this.uncompressedSize === r.MAX_VALUE_32BITS &&
            (this.uncompressedSize = t.readInt(8)),
            this.compressedSize === r.MAX_VALUE_32BITS &&
              (this.compressedSize = t.readInt(8)),
            this.localHeaderOffset === r.MAX_VALUE_32BITS &&
              (this.localHeaderOffset = t.readInt(8)),
            this.diskNumberStart === r.MAX_VALUE_32BITS &&
              (this.diskNumberStart = t.readInt(4));
        }
      },
      readExtraFields: function (e) {
        var t,
          n,
          i,
          r = e.index + this.extraFieldsLength;
        this.extraFields || (this.extraFields = {});
        while (e.index < r)
          (t = e.readInt(2)),
            (n = e.readInt(2)),
            (i = e.readData(n)),
            (this.extraFields[t] = { id: t, length: n, value: i });
      },
      handleUTF8: function () {
        var e = u.uint8array ? 'uint8array' : 'array';
        if (this.useUTF8())
          (this.fileNameStr = s.utf8decode(this.fileName)),
            (this.fileCommentStr = s.utf8decode(this.fileComment));
        else {
          var t = this.findExtraFieldUnicodePath();
          if (null !== t) this.fileNameStr = t;
          else {
            var n = r.transformTo(e, this.fileName);
            this.fileNameStr = this.loadOptions.decodeFileName(n);
          }
          var i = this.findExtraFieldUnicodeComment();
          if (null !== i) this.fileCommentStr = i;
          else {
            var a = r.transformTo(e, this.fileComment);
            this.fileCommentStr = this.loadOptions.decodeFileName(a);
          }
        }
      },
      findExtraFieldUnicodePath: function () {
        var e = this.extraFields[28789];
        if (e) {
          var t = i(e.value);
          return 1 !== t.readInt(1) || o(this.fileName) !== t.readInt(4)
            ? null
            : s.utf8decode(t.readData(e.length - 5));
        }
        return null;
      },
      findExtraFieldUnicodeComment: function () {
        var e = this.extraFields[25461];
        if (e) {
          var t = i(e.value);
          return 1 !== t.readInt(1) || o(this.fileComment) !== t.readInt(4)
            ? null
            : s.utf8decode(t.readData(e.length - 5));
        }
        return null;
      },
    }),
      (e.exports = p);
  },
  './node_modules/jszip/lib/zipObject.js': function (e, t, n) {
    'use strict';
    var i = n('./node_modules/jszip/lib/stream/StreamHelper.js'),
      r = n('./node_modules/jszip/lib/stream/DataWorker.js'),
      a = n('./node_modules/jszip/lib/utf8.js'),
      o = n('./node_modules/jszip/lib/compressedObject.js'),
      s = n('./node_modules/jszip/lib/stream/GenericWorker.js'),
      c = function (e, t, n) {
        (this.name = e),
          (this.dir = n.dir),
          (this.date = n.date),
          (this.comment = n.comment),
          (this.unixPermissions = n.unixPermissions),
          (this.dosPermissions = n.dosPermissions),
          (this._data = t),
          (this._dataBinary = n.binary),
          (this.options = {
            compression: n.compression,
            compressionOptions: n.compressionOptions,
          });
      };
    c.prototype = {
      internalStream: function (e) {
        var t = null,
          n = 'string';
        try {
          if (!e) throw new Error('No output type specified.');
          n = e.toLowerCase();
          var r = 'string' === n || 'text' === n;
          ('binarystring' !== n && 'text' !== n) || (n = 'string'),
            (t = this._decompressWorker());
          var o = !this._dataBinary;
          o && !r && (t = t.pipe(new a.Utf8EncodeWorker())),
            !o && r && (t = t.pipe(new a.Utf8DecodeWorker()));
        } catch (e) {
          (t = new s('error')), t.error(e);
        }
        return new i(t, n, '');
      },
      async: function (e, t) {
        return this.internalStream(e).accumulate(t);
      },
      nodeStream: function (e, t) {
        return this.internalStream(e || 'nodebuffer').toNodejsStream(t);
      },
      _compressWorker: function (e, t) {
        if (this._data instanceof o && this._data.compression.magic === e.magic)
          return this._data.getCompressedWorker();
        var n = this._decompressWorker();
        return (
          this._dataBinary || (n = n.pipe(new a.Utf8EncodeWorker())),
          o.createWorkerFrom(n, e, t)
        );
      },
      _decompressWorker: function () {
        return this._data instanceof o
          ? this._data.getContentWorker()
          : this._data instanceof s
          ? this._data
          : new r(this._data);
      },
    };
    for (
      var u = [
          'asText',
          'asBinary',
          'asNodeBuffer',
          'asUint8Array',
          'asArrayBuffer',
        ],
        l = function () {
          throw new Error(
            'This method has been removed in JSZip 3.0, please check the upgrade guide.'
          );
        },
        d = 0;
      d < u.length;
      d++
    )
      c.prototype[u[d]] = l;
    e.exports = c;
  },
  './src/_common_/apis/counterApi.ts': function (e, t, n) {
    'use strict';
    n.d(t, 'b', function () {
      return i;
    }),
      n.d(t, 'a', function () {
        return a;
      });
    var i,
      r =
        (void 0 && (void 0).__awaiter) ||
        function (e, t, n, i) {
          function r(e) {
            return e instanceof n
              ? e
              : new n(function (t) {
                  t(e);
                });
          }
          return new (n || (n = Promise))(function (n, a) {
            function o(e) {
              try {
                c(i.next(e));
              } catch (e) {
                a(e);
              }
            }
            function s(e) {
              try {
                c(i['throw'](e));
              } catch (e) {
                a(e);
              }
            }
            function c(e) {
              e.done ? n(e.value) : r(e.value).then(o, s);
            }
            c((i = i.apply(e, t || [])).next());
          });
        };
    (function (e) {
      (e['ALLOWED'] = 'allowed'),
        (e['WATERMARK'] = 'watermark'),
        (e['DENIED'] = 'denied');
    })(i || (i = {}));
    class a {
      constructor() {
        this.vctrCounterPath = '/api/vctr-counter/v2/views';
      }
      postCount(e, t) {
        return r(this, void 0, void 0, function* () {
          return new Promise((n, i) =>
            r(this, void 0, void 0, function* () {
              try {
                const r = yield fetch(
                  `${this.vctrCounterPath}/${e}/?assetType=${t}`,
                  {
                    method: 'POST',
                    mode: 'cors',
                    cache: 'no-cache',
                    headers: {},
                  }
                );
                if (r.ok) {
                  const e = yield r.json();
                  (e.responseStatus = r.status), n(e);
                } else i(r.status);
              } catch (e) {
                i(e);
              }
            })
          );
        });
      }
    }
  },
  './src/_common_/components/component.ts': function (e, t, n) {
    'use strict';
    function i(e) {
      const t = document.createElement('div');
      t.innerHTML = e.trim();
      const n = document.createDocumentFragment();
      return n.appendChild(t.removeChild(t.firstChild));
    }
    n.d(t, 'a', function () {
      return i;
    });
  },
  './src/_common_/components/qr_code/qr_code.ts': function (e, t, n) {
    'use strict';
    n.d(t, 'a', function () {
      return a;
    });
    var i = n('./src/_common_/components/component.ts'),
      r = n('../../../node_modules/qrcode/lib/browser.js');
    class a {
      constructor(e, t = !1) {
        (this.css = `\n            <style>\n                .qr-code {\n                    position: absolute;\n                    display: flex;\n                    flex-direction: column;\n                    background: #FFFFFF;\n                    border-radius: 5px;\n                    box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.3);\n                    text-align: center;\n                    margin: 0;\n                    padding: 15px;\n                    z-index: 2;\n                }\n\n                .qr-code span {\n                    display: block;\n                }\n\n                .qr-code .title {\n                    color: #4f4f4f;\n                    font-weight: bold;\n                    font-size: 16px;\n                }\n\n                .qr-code .small {\n                    color: #adadad;\n                    font-size: 11px;\n                }\n\n                .qr-code .close {\n                    color: #adadad;\n                    cursor: pointer;\n                    font-size: 14px;\n                    text-align: right;\n                    margin: 15px 0 auto;\n                }\n            </style>\n        `),
          (this.el = Object(i['a'])(
            `\n            <div class="qr-code">\n                ${this.css}\n                <span class="title">Scan the QR code<br />for Augmented reality</span>\n                <img class="qr-code-image" src="" />\n                <span class="small">iOS 13+, iPadOS 13+ or Android<br />with ARCore 1.9+ required</span>\n            </div>\n        `
          )),
          (this.qrImage = this.el.querySelector('.qr-code-image')),
          r['toDataURL'](e, {}).then((e) => (this.qrImage.src = e)),
          t &&
            ((this.qrClose = Object(i['a'])(`<div class="close">Close</div>`)),
            this.qrClose.addEventListener(
              'click',
              (e) => (this.el.style.display = 'none')
            ),
            this.el.appendChild(this.qrClose));
      }
      element() {
        return this.el;
      }
    }
  },
  './src/_common_/types.ts': function (e, t, n) {
    'use strict';
    var i;
    n.d(t, 'a', function () {
      return i;
    }),
      (function (e) {
        (e[(e['ERROR'] = 0)] = 'ERROR'),
          (e[(e['READY'] = 1)] = 'READY'),
          (e[(e['GET_OBJECTS'] = 2)] = 'GET_OBJECTS'),
          (e[(e['GET_OBJECT_BY_NAME'] = 3)] = 'GET_OBJECT_BY_NAME'),
          (e[(e['GET_OBJECTS_BY_NAME'] = 4)] = 'GET_OBJECTS_BY_NAME'),
          (e[(e['GET_MESHES'] = 5)] = 'GET_MESHES'),
          (e[(e['GET_MESH_BY_NAME'] = 6)] = 'GET_MESH_BY_NAME'),
          (e[(e['GET_MESHES_BY_NAME'] = 7)] = 'GET_MESHES_BY_NAME'),
          (e[(e['GET_HIT_OBJECTS'] = 8)] = 'GET_HIT_OBJECTS'),
          (e[(e['GET_VISIBILITY'] = 9)] = 'GET_VISIBILITY'),
          (e[(e['SET_VISIBILITY'] = 10)] = 'SET_VISIBILITY'),
          (e[(e['GET_POSITION'] = 11)] = 'GET_POSITION'),
          (e[(e['SET_POSITION_REL'] = 12)] = 'SET_POSITION_REL'),
          (e[(e['SET_POSITION_ABS'] = 13)] = 'SET_POSITION_ABS'),
          (e[(e['GET_ROTATION'] = 14)] = 'GET_ROTATION'),
          (e[(e['SET_ROTATION_REL'] = 15)] = 'SET_ROTATION_REL'),
          (e[(e['SET_ROTATION_ABS'] = 16)] = 'SET_ROTATION_ABS'),
          (e[(e['GET_SCALE'] = 17)] = 'GET_SCALE'),
          (e[(e['SET_SCALE_REL'] = 18)] = 'SET_SCALE_REL'),
          (e[(e['SET_SCALE_ABS'] = 19)] = 'SET_SCALE_ABS'),
          (e[(e['GET_MATERIALS'] = 20)] = 'GET_MATERIALS'),
          (e[(e['SET_MATERIAL'] = 21)] = 'SET_MATERIAL'),
          (e[(e['GET_MATERIALS_BY_NAME'] = 22)] = 'GET_MATERIALS_BY_NAME'),
          (e[(e['GET_MATERIAL_BY_NAME'] = 23)] = 'GET_MATERIAL_BY_NAME'),
          (e[(e['GET_MATERIAL_PROPS'] = 24)] = 'GET_MATERIAL_PROPS'),
          (e[(e['CREATE_MATERIAL'] = 25)] = 'CREATE_MATERIAL'),
          (e[(e['UPDATE_MATERIAL'] = 26)] = 'UPDATE_MATERIAL'),
          (e[(e['GET_BACKGROUND'] = 27)] = 'GET_BACKGROUND'),
          (e[(e['SET_BACKGROUND'] = 28)] = 'SET_BACKGROUND'),
          (e[(e['GET_EXPOSURE'] = 29)] = 'GET_EXPOSURE'),
          (e[(e['SET_EXPOSURE'] = 30)] = 'SET_EXPOSURE'),
          (e[(e['GET_CAMERAS'] = 31)] = 'GET_CAMERAS'),
          (e[(e['GET_CAMERAS_BY_NAME'] = 32)] = 'GET_CAMERAS_BY_NAME'),
          (e[(e['GET_CAMERA_BY_NAME'] = 33)] = 'GET_CAMERA_BY_NAME'),
          (e[(e['SWITCH_VIEW'] = 34)] = 'SWITCH_VIEW'),
          (e[(e['SWITCH_VIEW_ASYNC'] = 35)] = 'SWITCH_VIEW_ASYNC'),
          (e[(e['MOVE_VIEW'] = 36)] = 'MOVE_VIEW'),
          (e[(e['ROTATE_VIEW'] = 37)] = 'ROTATE_VIEW'),
          (e[(e['ZOOM_VIEW'] = 38)] = 'ZOOM_VIEW'),
          (e[(e['GET_FOV'] = 39)] = 'GET_FOV'),
          (e[(e['SET_FOV'] = 40)] = 'SET_FOV'),
          (e[(e['TAKE_SCREENSHOT'] = 41)] = 'TAKE_SCREENSHOT'),
          (e[(e['ENABLE_ANNOTATIONS'] = 42)] = 'ENABLE_ANNOTATIONS'),
          (e[(e['GET_ANNOTATIONS'] = 43)] = 'GET_ANNOTATIONS'),
          (e[(e['GET_ANNOTATION_BY_ID'] = 44)] = 'GET_ANNOTATION_BY_ID'),
          (e[(e['ADD_ANNOTATION'] = 45)] = 'ADD_ANNOTATION'),
          (e[(e['REMOVE_ANNOTATION_BY_ID'] = 46)] = 'REMOVE_ANNOTATION_BY_ID'),
          (e[(e['EXPAND_ANNOTATIONS_BY_ID'] = 47)] =
            'EXPAND_ANNOTATIONS_BY_ID'),
          (e[(e['HIGHLIGHT_MESHES_BY_NAME'] = 48)] =
            'HIGHLIGHT_MESHES_BY_NAME'),
          (e[(e['UNHIGHLIGHT_MESHES_BY_NAME'] = 49)] =
            'UNHIGHLIGHT_MESHES_BY_NAME'),
          (e[(e['GET_VIEW_STATE'] = 50)] = 'GET_VIEW_STATE'),
          (e[(e['APPLY_VIEW_STATE'] = 51)] = 'APPLY_VIEW_STATE'),
          (e[(e['SEND_EVENT'] = 52)] = 'SEND_EVENT'),
          (e[(e['PLAY'] = 53)] = 'PLAY'),
          (e[(e['LOAD'] = 54)] = 'LOAD'),
          (e[(e['SET_UUID_AR'] = 55)] = 'SET_UUID_AR'),
          (e[(e['TRIGGER_AR_CLICK'] = 56)] = 'TRIGGER_AR_CLICK'),
          (e[(e['GET_2D_COORDINATES'] = 57)] = 'GET_2D_COORDINATES'),
          (e[(e['GET_CURRENT_USER'] = 58)] = 'GET_CURRENT_USER'),
          (e[(e['DID_RENDER_LAST_FRAME'] = 59)] = 'DID_RENDER_LAST_FRAME');
      })(i || (i = {}));
  },
  './src/_common_/utils/checkDevice.ts': function (e, t, n) {
    'use strict';
    n.d(t, 'b', function () {
      return i;
    }),
      n.d(t, 'c', function () {
        return r;
      }),
      n.d(t, 'a', function () {
        return a;
      });
    const i = () => {
        const e = /Mac OS X/;
        return null !== navigator.userAgent.match(e);
      },
      r = () => {
        const e = /(iPhone|iPad|Android)/;
        return null !== navigator.userAgent.match(e);
      },
      a = () => (s() ? 'android' : o() ? 'apple' : 'none'),
      o = () => {
        const e = () =>
          !!/Safari[\/\s](\d+\.\d+)/.test(window.navigator.userAgent) &&
          'ontouchstart' in window;
        function t() {
          const e = navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/);
          return [
            parseInt(e[1], 10),
            parseInt(e[2], 10),
            parseInt(e[3] || '0', 10),
          ];
        }
        let n;
        /iP(hone|od|ad)/.test(navigator.platform) && (n = t());
        const i = window.navigator.userAgent,
          r = !!i.match(/iPad/i) || !!i.match(/iPhone/i),
          a = navigator.userAgent.toLowerCase().indexOf('fxios') > -1;
        return !!((n && r && n[0] >= 12 && !a) || e());
      },
      s = () => {
        const e = navigator.userAgent.toLowerCase(),
          t = e.indexOf('android') > -1;
        return t;
      };
  },
  './src/_common_/utils/checkExists.ts': function (e, t, n) {
    'use strict';
    n.d(t, 'a', function () {
      return r;
    });
    var i =
      (void 0 && (void 0).__awaiter) ||
      function (e, t, n, i) {
        function r(e) {
          return e instanceof n
            ? e
            : new n(function (t) {
                t(e);
              });
        }
        return new (n || (n = Promise))(function (n, a) {
          function o(e) {
            try {
              c(i.next(e));
            } catch (e) {
              a(e);
            }
          }
          function s(e) {
            try {
              c(i['throw'](e));
            } catch (e) {
              a(e);
            }
          }
          function c(e) {
            e.done ? n(e.value) : r(e.value).then(o, s);
          }
          c((i = i.apply(e, t || [])).next());
        });
      };
    const r = (e) =>
      i(void 0, void 0, void 0, function* () {
        try {
          const t = yield fetch(e, { method: 'HEAD' });
          return 200 === t.status;
        } catch (e) {
          return !1;
        }
      });
  },
  './src/_common_/utils/hdr/hdrLoader.ts': function (e, t, n) {
    'use strict';
    n.d(t, 'a', function () {
      return Xn;
    }),
      n.d(t, 'b', function () {
        return Vn;
      });
    var i = n('./node_modules/jszip/lib/index.js'),
      r = n('../../../node_modules/three/build/three.module.js'),
      a = function (e) {
        r['p'].call(this, e), (this.type = r['Rb']);
      };
    a.prototype = Object.assign(Object.create(r['p'].prototype), {
      constructor: a,
      parse: function (e) {
        var t = -1,
          n = 1,
          i = 2,
          a = 3,
          o = 4,
          s = function (e, r) {
            switch (e) {
              case n:
                void 0;
                break;
              case i:
                void 0;
                break;
              case a:
                void 0;
                break;
              default:
              case o:
                void 0;
            }
            return t;
          },
          c = 1,
          u = 2,
          l = 4,
          d = '\n',
          h = function (e, t, n) {
            t = t || 1024;
            var i = e.pos,
              r = -1,
              a = 0,
              o = '',
              s = 128,
              c = String.fromCharCode.apply(
                null,
                new Uint16Array(e.subarray(i, i + s))
              );
            while (0 > (r = c.indexOf(d)) && a < t && i < e.byteLength)
              (o += c),
                (a += c.length),
                (i += s),
                (c += String.fromCharCode.apply(
                  null,
                  new Uint16Array(e.subarray(i, i + s))
                ));
            return (
              -1 < r && (!1 !== n && (e.pos += a + r + 1), o + c.slice(0, r))
            );
          },
          p = function (e) {
            var t,
              i,
              r = /^#\?(\S+)$/,
              o = /^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,
              d = /^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,
              p = /^\s*FORMAT=(\S+)\s*$/,
              m = /^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,
              f = {
                valid: 0,
                string: '',
                comments: '',
                programtype: 'RGBE',
                format: '',
                gamma: 1,
                exposure: 1,
                width: 0,
                height: 0,
              };
            if (e.pos >= e.byteLength || !(t = h(e)))
              return s(n, 'no header found');
            if (!(i = t.match(r))) return s(a, 'bad initial token');
            (f.valid |= c), (f.programtype = i[1]), (f.string += t + '\n');
            while (1) {
              if (((t = h(e)), !1 === t)) break;
              if (((f.string += t + '\n'), '#' !== t.charAt(0))) {
                if (
                  ((i = t.match(o)) && (f.gamma = parseFloat(i[1], 10)),
                  (i = t.match(d)) && (f.exposure = parseFloat(i[1], 10)),
                  (i = t.match(p)) && ((f.valid |= u), (f.format = i[1])),
                  (i = t.match(m)) &&
                    ((f.valid |= l),
                    (f.height = parseInt(i[1], 10)),
                    (f.width = parseInt(i[2], 10))),
                  f.valid & u && f.valid & l)
                )
                  break;
              } else f.comments += t + '\n';
            }
            return f.valid & u
              ? f.valid & l
                ? f
                : s(a, 'missing image size specifier')
              : s(a, 'missing format specifier');
          },
          m = function (e, t, i) {
            var r,
              c,
              u,
              l,
              d,
              h,
              p,
              m,
              f,
              _,
              M,
              v,
              g,
              y = t,
              b = i;
            if (y < 8 || y > 32767 || 2 !== e[0] || 2 !== e[1] || 128 & e[2])
              return new Uint8Array(e);
            if (y !== ((e[2] << 8) | e[3])) return s(a, 'wrong scanline width');
            if (((r = new Uint8Array(4 * t * i)), !r.length))
              return s(o, 'unable to allocate buffer space');
            (c = 0),
              (u = 0),
              (m = 4 * y),
              (g = new Uint8Array(4)),
              (h = new Uint8Array(m));
            while (b > 0 && u < e.byteLength) {
              if (u + 4 > e.byteLength) return s(n);
              if (
                ((g[0] = e[u++]),
                (g[1] = e[u++]),
                (g[2] = e[u++]),
                (g[3] = e[u++]),
                2 != g[0] || 2 != g[1] || ((g[2] << 8) | g[3]) != y)
              )
                return s(a, 'bad rgbe scanline format');
              p = 0;
              while (p < m && u < e.byteLength) {
                if (
                  ((l = e[u++]),
                  (v = l > 128),
                  v && (l -= 128),
                  0 === l || p + l > m)
                )
                  return s(a, 'bad scanline data');
                if (v) for (d = e[u++], f = 0; f < l; f++) h[p++] = d;
                else h.set(e.subarray(u, u + l), p), (p += l), (u += l);
              }
              for (_ = y, f = 0; f < _; f++)
                (M = 0),
                  (r[c] = h[f + M]),
                  (M += y),
                  (r[c + 1] = h[f + M]),
                  (M += y),
                  (r[c + 2] = h[f + M]),
                  (M += y),
                  (r[c + 3] = h[f + M]),
                  (c += 4);
              b--;
            }
            return r;
          },
          f = function (e, t, n, i) {
            var r = e[t + 3],
              a = Math.pow(2, r - 128) / 255;
            (n[i + 0] = e[t + 0] * a),
              (n[i + 1] = e[t + 1] * a),
              (n[i + 2] = e[t + 2] * a);
          },
          _ = (function () {
            var e = new Float32Array(1),
              t = new Int32Array(e.buffer);
            function n(n) {
              e[0] = n;
              var i = t[0],
                r = (i >> 16) & 32768,
                a = (i >> 12) & 2047,
                o = (i >> 23) & 255;
              return o < 103
                ? r
                : o > 142
                ? ((r |= 31744), (r |= (255 == o ? 0 : 1) && 8388607 & i), r)
                : o < 113
                ? ((a |= 2048),
                  (r |= (a >> (114 - o)) + ((a >> (113 - o)) & 1)),
                  r)
                : ((r |= ((o - 112) << 10) | (a >> 1)), (r += 1 & a), r);
            }
            return function (e, t, i, r) {
              var a = e[t + 3],
                o = Math.pow(2, a - 128) / 255;
              (i[r + 0] = n(e[t + 0] * o)),
                (i[r + 1] = n(e[t + 1] * o)),
                (i[r + 2] = n(e[t + 2] * o));
            };
          })(),
          M = new Uint8Array(e);
        M.pos = 0;
        var v = p(M);
        if (t !== v) {
          var g = v.width,
            y = v.height,
            b = m(M.subarray(M.pos), g, y);
          if (t !== b) {
            switch (this.type) {
              case r['Rb']:
                var w = b,
                  A = r['vb'],
                  x = r['Rb'];
                break;
              case r['w']:
                for (
                  var L = (b.length / 4) * 3, T = new Float32Array(L), z = 0;
                  z < L;
                  z++
                )
                  f(b, 4 * z, T, 3 * z);
                (w = T), (A = r['wb']), (x = r['w']);
                break;
              case r['A']:
                L = (b.length / 4) * 3;
                var S = new Uint16Array(L);
                for (z = 0; z < L; z++) _(b, 4 * z, S, 3 * z);
                (w = S), (A = r['wb']), (x = r['A']);
                break;
              default:
                void 0;
                break;
            }
            return {
              width: g,
              height: y,
              data: w,
              header: v.string,
              gamma: v.gamma,
              exposure: v.exposure,
              format: A,
              type: x,
            };
          }
        }
        return null;
      },
      setDataType: function (e) {
        return (this.type = e), this;
      },
      load: function (e, t, n, i) {
        function a(e, n) {
          switch (e.type) {
            case r['Rb']:
              (e.encoding = r['ub']),
                (e.minFilter = r['eb']),
                (e.magFilter = r['eb']),
                (e.generateMipmaps = !1),
                (e.flipY = !0);
              break;
            case r['w']:
              (e.encoding = r['M']),
                (e.minFilter = r['N']),
                (e.magFilter = r['N']),
                (e.generateMipmaps = !1),
                (e.flipY = !0);
              break;
            case r['A']:
              (e.encoding = r['M']),
                (e.minFilter = r['N']),
                (e.magFilter = r['N']),
                (e.generateMipmaps = !1),
                (e.flipY = !0);
              break;
          }
          t && t(e, n);
        }
        return r['p'].prototype.load.call(this, e, a, n, i);
      },
    });
    var o = 0,
      s = 1,
      c = 2,
      u = 1,
      l = 0,
      d = 1,
      h = 100,
      p = 204,
      m = 205,
      f = 3,
      _ = 0,
      M = 1,
      v = 300,
      g = 306,
      y = 1e3,
      b = 1001,
      w = 1002,
      A = 1003,
      x = 1006,
      L = 1008,
      T = 1009,
      z = 1023,
      S = z,
      O = 3e3,
      E = 3001,
      k = 3007,
      C = 3002,
      D = 3004,
      N = 3005,
      P = 3006,
      j = 7680,
      Y = 519,
      R = 35044;
    function B(e, t, n, i) {
      (this.x = e || 0),
        (this.y = t || 0),
        (this.z = n || 0),
        (this.w = void 0 !== i ? i : 1);
    }
    Object.defineProperties(B.prototype, {
      width: {
        get: function () {
          return this.z;
        },
        set: function (e) {
          this.z = e;
        },
      },
      height: {
        get: function () {
          return this.w;
        },
        set: function (e) {
          this.w = e;
        },
      },
    }),
      Object.assign(B.prototype, {
        isVector4: !0,
        set: function (e, t, n, i) {
          return (this.x = e), (this.y = t), (this.z = n), (this.w = i), this;
        },
        setScalar: function (e) {
          return (this.x = e), (this.y = e), (this.z = e), (this.w = e), this;
        },
        setX: function (e) {
          return (this.x = e), this;
        },
        setY: function (e) {
          return (this.y = e), this;
        },
        setZ: function (e) {
          return (this.z = e), this;
        },
        setW: function (e) {
          return (this.w = e), this;
        },
        setComponent: function (e, t) {
          switch (e) {
            case 0:
              this.x = t;
              break;
            case 1:
              this.y = t;
              break;
            case 2:
              this.z = t;
              break;
            case 3:
              this.w = t;
              break;
            default:
              throw new Error('index is out of range: ' + e);
          }
          return this;
        },
        getComponent: function (e) {
          switch (e) {
            case 0:
              return this.x;
            case 1:
              return this.y;
            case 2:
              return this.z;
            case 3:
              return this.w;
            default:
              throw new Error('index is out of range: ' + e);
          }
        },
        clone: function () {
          return new this.constructor(this.x, this.y, this.z, this.w);
        },
        copy: function (e) {
          return (
            (this.x = e.x),
            (this.y = e.y),
            (this.z = e.z),
            (this.w = void 0 !== e.w ? e.w : 1),
            this
          );
        },
        add: function (e, t) {
          return void 0 !== t
            ? (void 0, this.addVectors(e, t))
            : ((this.x += e.x),
              (this.y += e.y),
              (this.z += e.z),
              (this.w += e.w),
              this);
        },
        addScalar: function (e) {
          return (
            (this.x += e), (this.y += e), (this.z += e), (this.w += e), this
          );
        },
        addVectors: function (e, t) {
          return (
            (this.x = e.x + t.x),
            (this.y = e.y + t.y),
            (this.z = e.z + t.z),
            (this.w = e.w + t.w),
            this
          );
        },
        addScaledVector: function (e, t) {
          return (
            (this.x += e.x * t),
            (this.y += e.y * t),
            (this.z += e.z * t),
            (this.w += e.w * t),
            this
          );
        },
        sub: function (e, t) {
          return void 0 !== t
            ? (void 0, this.subVectors(e, t))
            : ((this.x -= e.x),
              (this.y -= e.y),
              (this.z -= e.z),
              (this.w -= e.w),
              this);
        },
        subScalar: function (e) {
          return (
            (this.x -= e), (this.y -= e), (this.z -= e), (this.w -= e), this
          );
        },
        subVectors: function (e, t) {
          return (
            (this.x = e.x - t.x),
            (this.y = e.y - t.y),
            (this.z = e.z - t.z),
            (this.w = e.w - t.w),
            this
          );
        },
        multiplyScalar: function (e) {
          return (
            (this.x *= e), (this.y *= e), (this.z *= e), (this.w *= e), this
          );
        },
        applyMatrix4: function (e) {
          var t = this.x,
            n = this.y,
            i = this.z,
            r = this.w,
            a = e.elements;
          return (
            (this.x = a[0] * t + a[4] * n + a[8] * i + a[12] * r),
            (this.y = a[1] * t + a[5] * n + a[9] * i + a[13] * r),
            (this.z = a[2] * t + a[6] * n + a[10] * i + a[14] * r),
            (this.w = a[3] * t + a[7] * n + a[11] * i + a[15] * r),
            this
          );
        },
        divideScalar: function (e) {
          return this.multiplyScalar(1 / e);
        },
        setAxisAngleFromQuaternion: function (e) {
          this.w = 2 * Math.acos(e.w);
          var t = Math.sqrt(1 - e.w * e.w);
          return (
            t < 1e-4
              ? ((this.x = 1), (this.y = 0), (this.z = 0))
              : ((this.x = e.x / t), (this.y = e.y / t), (this.z = e.z / t)),
            this
          );
        },
        setAxisAngleFromRotationMatrix: function (e) {
          var t,
            n,
            i,
            r,
            a = 0.01,
            o = 0.1,
            s = e.elements,
            c = s[0],
            u = s[4],
            l = s[8],
            d = s[1],
            h = s[5],
            p = s[9],
            m = s[2],
            f = s[6],
            _ = s[10];
          if (
            Math.abs(u - d) < a &&
            Math.abs(l - m) < a &&
            Math.abs(p - f) < a
          ) {
            if (
              Math.abs(u + d) < o &&
              Math.abs(l + m) < o &&
              Math.abs(p + f) < o &&
              Math.abs(c + h + _ - 3) < o
            )
              return this.set(1, 0, 0, 0), this;
            t = Math.PI;
            var M = (c + 1) / 2,
              v = (h + 1) / 2,
              g = (_ + 1) / 2,
              y = (u + d) / 4,
              b = (l + m) / 4,
              w = (p + f) / 4;
            return (
              M > v && M > g
                ? M < a
                  ? ((n = 0), (i = 0.707106781), (r = 0.707106781))
                  : ((n = Math.sqrt(M)), (i = y / n), (r = b / n))
                : v > g
                ? v < a
                  ? ((n = 0.707106781), (i = 0), (r = 0.707106781))
                  : ((i = Math.sqrt(v)), (n = y / i), (r = w / i))
                : g < a
                ? ((n = 0.707106781), (i = 0.707106781), (r = 0))
                : ((r = Math.sqrt(g)), (n = b / r), (i = w / r)),
              this.set(n, i, r, t),
              this
            );
          }
          var A = Math.sqrt(
            (f - p) * (f - p) + (l - m) * (l - m) + (d - u) * (d - u)
          );
          return (
            Math.abs(A) < 0.001 && (A = 1),
            (this.x = (f - p) / A),
            (this.y = (l - m) / A),
            (this.z = (d - u) / A),
            (this.w = Math.acos((c + h + _ - 1) / 2)),
            this
          );
        },
        min: function (e) {
          return (
            (this.x = Math.min(this.x, e.x)),
            (this.y = Math.min(this.y, e.y)),
            (this.z = Math.min(this.z, e.z)),
            (this.w = Math.min(this.w, e.w)),
            this
          );
        },
        max: function (e) {
          return (
            (this.x = Math.max(this.x, e.x)),
            (this.y = Math.max(this.y, e.y)),
            (this.z = Math.max(this.z, e.z)),
            (this.w = Math.max(this.w, e.w)),
            this
          );
        },
        clamp: function (e, t) {
          return (
            (this.x = Math.max(e.x, Math.min(t.x, this.x))),
            (this.y = Math.max(e.y, Math.min(t.y, this.y))),
            (this.z = Math.max(e.z, Math.min(t.z, this.z))),
            (this.w = Math.max(e.w, Math.min(t.w, this.w))),
            this
          );
        },
        clampScalar: function (e, t) {
          return (
            (this.x = Math.max(e, Math.min(t, this.x))),
            (this.y = Math.max(e, Math.min(t, this.y))),
            (this.z = Math.max(e, Math.min(t, this.z))),
            (this.w = Math.max(e, Math.min(t, this.w))),
            this
          );
        },
        clampLength: function (e, t) {
          var n = this.length();
          return this.divideScalar(n || 1).multiplyScalar(
            Math.max(e, Math.min(t, n))
          );
        },
        floor: function () {
          return (
            (this.x = Math.floor(this.x)),
            (this.y = Math.floor(this.y)),
            (this.z = Math.floor(this.z)),
            (this.w = Math.floor(this.w)),
            this
          );
        },
        ceil: function () {
          return (
            (this.x = Math.ceil(this.x)),
            (this.y = Math.ceil(this.y)),
            (this.z = Math.ceil(this.z)),
            (this.w = Math.ceil(this.w)),
            this
          );
        },
        round: function () {
          return (
            (this.x = Math.round(this.x)),
            (this.y = Math.round(this.y)),
            (this.z = Math.round(this.z)),
            (this.w = Math.round(this.w)),
            this
          );
        },
        roundToZero: function () {
          return (
            (this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
            (this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
            (this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z)),
            (this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w)),
            this
          );
        },
        negate: function () {
          return (
            (this.x = -this.x),
            (this.y = -this.y),
            (this.z = -this.z),
            (this.w = -this.w),
            this
          );
        },
        dot: function (e) {
          return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;
        },
        lengthSq: function () {
          return (
            this.x * this.x +
            this.y * this.y +
            this.z * this.z +
            this.w * this.w
          );
        },
        length: function () {
          return Math.sqrt(
            this.x * this.x +
              this.y * this.y +
              this.z * this.z +
              this.w * this.w
          );
        },
        manhattanLength: function () {
          return (
            Math.abs(this.x) +
            Math.abs(this.y) +
            Math.abs(this.z) +
            Math.abs(this.w)
          );
        },
        normalize: function () {
          return this.divideScalar(this.length() || 1);
        },
        setLength: function (e) {
          return this.normalize().multiplyScalar(e);
        },
        lerp: function (e, t) {
          return (
            (this.x += (e.x - this.x) * t),
            (this.y += (e.y - this.y) * t),
            (this.z += (e.z - this.z) * t),
            (this.w += (e.w - this.w) * t),
            this
          );
        },
        lerpVectors: function (e, t, n) {
          return this.subVectors(t, e).multiplyScalar(n).add(e);
        },
        equals: function (e) {
          return (
            e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w
          );
        },
        fromArray: function (e, t) {
          return (
            void 0 === t && (t = 0),
            (this.x = e[t]),
            (this.y = e[t + 1]),
            (this.z = e[t + 2]),
            (this.w = e[t + 3]),
            this
          );
        },
        toArray: function (e, t) {
          return (
            void 0 === e && (e = []),
            void 0 === t && (t = 0),
            (e[t] = this.x),
            (e[t + 1] = this.y),
            (e[t + 2] = this.z),
            (e[t + 3] = this.w),
            e
          );
        },
        fromBufferAttribute: function (e, t, n) {
          return (
            void 0 !== n && void 0,
            (this.x = e.getX(t)),
            (this.y = e.getY(t)),
            (this.z = e.getZ(t)),
            (this.w = e.getW(t)),
            this
          );
        },
        random: function () {
          return (
            (this.x = Math.random()),
            (this.y = Math.random()),
            (this.z = Math.random()),
            (this.w = Math.random()),
            this
          );
        },
      });
    var W = n('../../../node_modules/three/src/math/MathUtils.js');
    function I(e, t, n, i) {
      (this._x = e || 0),
        (this._y = t || 0),
        (this._z = n || 0),
        (this._w = void 0 !== i ? i : 1);
    }
    Object.assign(I, {
      slerp: function (e, t, n, i) {
        return n.copy(e).slerp(t, i);
      },
      slerpFlat: function (e, t, n, i, r, a, o) {
        var s = n[i + 0],
          c = n[i + 1],
          u = n[i + 2],
          l = n[i + 3],
          d = r[a + 0],
          h = r[a + 1],
          p = r[a + 2],
          m = r[a + 3];
        if (l !== m || s !== d || c !== h || u !== p) {
          var f = 1 - o,
            _ = s * d + c * h + u * p + l * m,
            M = _ >= 0 ? 1 : -1,
            v = 1 - _ * _;
          if (v > Number.EPSILON) {
            var g = Math.sqrt(v),
              y = Math.atan2(g, _ * M);
            (f = Math.sin(f * y) / g), (o = Math.sin(o * y) / g);
          }
          var b = o * M;
          if (
            ((s = s * f + d * b),
            (c = c * f + h * b),
            (u = u * f + p * b),
            (l = l * f + m * b),
            f === 1 - o)
          ) {
            var w = 1 / Math.sqrt(s * s + c * c + u * u + l * l);
            (s *= w), (c *= w), (u *= w), (l *= w);
          }
        }
        (e[t] = s), (e[t + 1] = c), (e[t + 2] = u), (e[t + 3] = l);
      },
      multiplyQuaternionsFlat: function (e, t, n, i, r, a) {
        var o = n[i],
          s = n[i + 1],
          c = n[i + 2],
          u = n[i + 3],
          l = r[a],
          d = r[a + 1],
          h = r[a + 2],
          p = r[a + 3];
        return (
          (e[t] = o * p + u * l + s * h - c * d),
          (e[t + 1] = s * p + u * d + c * l - o * h),
          (e[t + 2] = c * p + u * h + o * d - s * l),
          (e[t + 3] = u * p - o * l - s * d - c * h),
          e
        );
      },
    }),
      Object.defineProperties(I.prototype, {
        x: {
          get: function () {
            return this._x;
          },
          set: function (e) {
            (this._x = e), this._onChangeCallback();
          },
        },
        y: {
          get: function () {
            return this._y;
          },
          set: function (e) {
            (this._y = e), this._onChangeCallback();
          },
        },
        z: {
          get: function () {
            return this._z;
          },
          set: function (e) {
            (this._z = e), this._onChangeCallback();
          },
        },
        w: {
          get: function () {
            return this._w;
          },
          set: function (e) {
            (this._w = e), this._onChangeCallback();
          },
        },
      }),
      Object.assign(I.prototype, {
        isQuaternion: !0,
        set: function (e, t, n, i) {
          return (
            (this._x = e),
            (this._y = t),
            (this._z = n),
            (this._w = i),
            this._onChangeCallback(),
            this
          );
        },
        clone: function () {
          return new this.constructor(this._x, this._y, this._z, this._w);
        },
        copy: function (e) {
          return (
            (this._x = e.x),
            (this._y = e.y),
            (this._z = e.z),
            (this._w = e.w),
            this._onChangeCallback(),
            this
          );
        },
        setFromEuler: function (e, t) {
          if (!e || !e.isEuler)
            throw new Error(
              'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.'
            );
          var n = e._x,
            i = e._y,
            r = e._z,
            a = e.order,
            o = Math.cos,
            s = Math.sin,
            c = o(n / 2),
            u = o(i / 2),
            l = o(r / 2),
            d = s(n / 2),
            h = s(i / 2),
            p = s(r / 2);
          switch (a) {
            case 'XYZ':
              (this._x = d * u * l + c * h * p),
                (this._y = c * h * l - d * u * p),
                (this._z = c * u * p + d * h * l),
                (this._w = c * u * l - d * h * p);
              break;
            case 'YXZ':
              (this._x = d * u * l + c * h * p),
                (this._y = c * h * l - d * u * p),
                (this._z = c * u * p - d * h * l),
                (this._w = c * u * l + d * h * p);
              break;
            case 'ZXY':
              (this._x = d * u * l - c * h * p),
                (this._y = c * h * l + d * u * p),
                (this._z = c * u * p + d * h * l),
                (this._w = c * u * l - d * h * p);
              break;
            case 'ZYX':
              (this._x = d * u * l - c * h * p),
                (this._y = c * h * l + d * u * p),
                (this._z = c * u * p - d * h * l),
                (this._w = c * u * l + d * h * p);
              break;
            case 'YZX':
              (this._x = d * u * l + c * h * p),
                (this._y = c * h * l + d * u * p),
                (this._z = c * u * p - d * h * l),
                (this._w = c * u * l - d * h * p);
              break;
            case 'XZY':
              (this._x = d * u * l - c * h * p),
                (this._y = c * h * l - d * u * p),
                (this._z = c * u * p + d * h * l),
                (this._w = c * u * l + d * h * p);
              break;
            default:
              void 0;
          }
          return !1 !== t && this._onChangeCallback(), this;
        },
        setFromAxisAngle: function (e, t) {
          var n = t / 2,
            i = Math.sin(n);
          return (
            (this._x = e.x * i),
            (this._y = e.y * i),
            (this._z = e.z * i),
            (this._w = Math.cos(n)),
            this._onChangeCallback(),
            this
          );
        },
        setFromRotationMatrix: function (e) {
          var t,
            n = e.elements,
            i = n[0],
            r = n[4],
            a = n[8],
            o = n[1],
            s = n[5],
            c = n[9],
            u = n[2],
            l = n[6],
            d = n[10],
            h = i + s + d;
          return (
            h > 0
              ? ((t = 0.5 / Math.sqrt(h + 1)),
                (this._w = 0.25 / t),
                (this._x = (l - c) * t),
                (this._y = (a - u) * t),
                (this._z = (o - r) * t))
              : i > s && i > d
              ? ((t = 2 * Math.sqrt(1 + i - s - d)),
                (this._w = (l - c) / t),
                (this._x = 0.25 * t),
                (this._y = (r + o) / t),
                (this._z = (a + u) / t))
              : s > d
              ? ((t = 2 * Math.sqrt(1 + s - i - d)),
                (this._w = (a - u) / t),
                (this._x = (r + o) / t),
                (this._y = 0.25 * t),
                (this._z = (c + l) / t))
              : ((t = 2 * Math.sqrt(1 + d - i - s)),
                (this._w = (o - r) / t),
                (this._x = (a + u) / t),
                (this._y = (c + l) / t),
                (this._z = 0.25 * t)),
            this._onChangeCallback(),
            this
          );
        },
        setFromUnitVectors: function (e, t) {
          var n = 1e-6,
            i = e.dot(t) + 1;
          return (
            i < n
              ? ((i = 0),
                Math.abs(e.x) > Math.abs(e.z)
                  ? ((this._x = -e.y),
                    (this._y = e.x),
                    (this._z = 0),
                    (this._w = i))
                  : ((this._x = 0),
                    (this._y = -e.z),
                    (this._z = e.y),
                    (this._w = i)))
              : ((this._x = e.y * t.z - e.z * t.y),
                (this._y = e.z * t.x - e.x * t.z),
                (this._z = e.x * t.y - e.y * t.x),
                (this._w = i)),
            this.normalize()
          );
        },
        angleTo: function (e) {
          return 2 * Math.acos(Math.abs(W['a'].clamp(this.dot(e), -1, 1)));
        },
        rotateTowards: function (e, t) {
          var n = this.angleTo(e);
          if (0 === n) return this;
          var i = Math.min(1, t / n);
          return this.slerp(e, i), this;
        },
        inverse: function () {
          return this.conjugate();
        },
        conjugate: function () {
          return (
            (this._x *= -1),
            (this._y *= -1),
            (this._z *= -1),
            this._onChangeCallback(),
            this
          );
        },
        dot: function (e) {
          return (
            this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w
          );
        },
        lengthSq: function () {
          return (
            this._x * this._x +
            this._y * this._y +
            this._z * this._z +
            this._w * this._w
          );
        },
        length: function () {
          return Math.sqrt(
            this._x * this._x +
              this._y * this._y +
              this._z * this._z +
              this._w * this._w
          );
        },
        normalize: function () {
          var e = this.length();
          return (
            0 === e
              ? ((this._x = 0), (this._y = 0), (this._z = 0), (this._w = 1))
              : ((e = 1 / e),
                (this._x = this._x * e),
                (this._y = this._y * e),
                (this._z = this._z * e),
                (this._w = this._w * e)),
            this._onChangeCallback(),
            this
          );
        },
        multiply: function (e, t) {
          return void 0 !== t
            ? (void 0, this.multiplyQuaternions(e, t))
            : this.multiplyQuaternions(this, e);
        },
        premultiply: function (e) {
          return this.multiplyQuaternions(e, this);
        },
        multiplyQuaternions: function (e, t) {
          var n = e._x,
            i = e._y,
            r = e._z,
            a = e._w,
            o = t._x,
            s = t._y,
            c = t._z,
            u = t._w;
          return (
            (this._x = n * u + a * o + i * c - r * s),
            (this._y = i * u + a * s + r * o - n * c),
            (this._z = r * u + a * c + n * s - i * o),
            (this._w = a * u - n * o - i * s - r * c),
            this._onChangeCallback(),
            this
          );
        },
        slerp: function (e, t) {
          if (0 === t) return this;
          if (1 === t) return this.copy(e);
          var n = this._x,
            i = this._y,
            r = this._z,
            a = this._w,
            o = a * e._w + n * e._x + i * e._y + r * e._z;
          if (
            (o < 0
              ? ((this._w = -e._w),
                (this._x = -e._x),
                (this._y = -e._y),
                (this._z = -e._z),
                (o = -o))
              : this.copy(e),
            o >= 1)
          )
            return (
              (this._w = a), (this._x = n), (this._y = i), (this._z = r), this
            );
          var s = 1 - o * o;
          if (s <= Number.EPSILON) {
            var c = 1 - t;
            return (
              (this._w = c * a + t * this._w),
              (this._x = c * n + t * this._x),
              (this._y = c * i + t * this._y),
              (this._z = c * r + t * this._z),
              this.normalize(),
              this._onChangeCallback(),
              this
            );
          }
          var u = Math.sqrt(s),
            l = Math.atan2(u, o),
            d = Math.sin((1 - t) * l) / u,
            h = Math.sin(t * l) / u;
          return (
            (this._w = a * d + this._w * h),
            (this._x = n * d + this._x * h),
            (this._y = i * d + this._y * h),
            (this._z = r * d + this._z * h),
            this._onChangeCallback(),
            this
          );
        },
        equals: function (e) {
          return (
            e._x === this._x &&
            e._y === this._y &&
            e._z === this._z &&
            e._w === this._w
          );
        },
        fromArray: function (e, t) {
          return (
            void 0 === t && (t = 0),
            (this._x = e[t]),
            (this._y = e[t + 1]),
            (this._z = e[t + 2]),
            (this._w = e[t + 3]),
            this._onChangeCallback(),
            this
          );
        },
        toArray: function (e, t) {
          return (
            void 0 === e && (e = []),
            void 0 === t && (t = 0),
            (e[t] = this._x),
            (e[t + 1] = this._y),
            (e[t + 2] = this._z),
            (e[t + 3] = this._w),
            e
          );
        },
        fromBufferAttribute: function (e, t) {
          return (
            (this._x = e.getX(t)),
            (this._y = e.getY(t)),
            (this._z = e.getZ(t)),
            (this._w = e.getW(t)),
            this
          );
        },
        _onChange: function (e) {
          return (this._onChangeCallback = e), this;
        },
        _onChangeCallback: function () {},
      });
    var q = new F(),
      H = new I();
    function F(e, t, n) {
      (this.x = e || 0), (this.y = t || 0), (this.z = n || 0);
    }
    function U(e, t) {
      (this.x = e || 0), (this.y = t || 0);
    }
    Object.assign(F.prototype, {
      isVector3: !0,
      set: function (e, t, n) {
        return (this.x = e), (this.y = t), (this.z = n), this;
      },
      setScalar: function (e) {
        return (this.x = e), (this.y = e), (this.z = e), this;
      },
      setX: function (e) {
        return (this.x = e), this;
      },
      setY: function (e) {
        return (this.y = e), this;
      },
      setZ: function (e) {
        return (this.z = e), this;
      },
      setComponent: function (e, t) {
        switch (e) {
          case 0:
            this.x = t;
            break;
          case 1:
            this.y = t;
            break;
          case 2:
            this.z = t;
            break;
          default:
            throw new Error('index is out of range: ' + e);
        }
        return this;
      },
      getComponent: function (e) {
        switch (e) {
          case 0:
            return this.x;
          case 1:
            return this.y;
          case 2:
            return this.z;
          default:
            throw new Error('index is out of range: ' + e);
        }
      },
      clone: function () {
        return new this.constructor(this.x, this.y, this.z);
      },
      copy: function (e) {
        return (this.x = e.x), (this.y = e.y), (this.z = e.z), this;
      },
      add: function (e, t) {
        return void 0 !== t
          ? (void 0, this.addVectors(e, t))
          : ((this.x += e.x), (this.y += e.y), (this.z += e.z), this);
      },
      addScalar: function (e) {
        return (this.x += e), (this.y += e), (this.z += e), this;
      },
      addVectors: function (e, t) {
        return (
          (this.x = e.x + t.x), (this.y = e.y + t.y), (this.z = e.z + t.z), this
        );
      },
      addScaledVector: function (e, t) {
        return (
          (this.x += e.x * t), (this.y += e.y * t), (this.z += e.z * t), this
        );
      },
      sub: function (e, t) {
        return void 0 !== t
          ? (void 0, this.subVectors(e, t))
          : ((this.x -= e.x), (this.y -= e.y), (this.z -= e.z), this);
      },
      subScalar: function (e) {
        return (this.x -= e), (this.y -= e), (this.z -= e), this;
      },
      subVectors: function (e, t) {
        return (
          (this.x = e.x - t.x), (this.y = e.y - t.y), (this.z = e.z - t.z), this
        );
      },
      multiply: function (e, t) {
        return void 0 !== t
          ? (void 0, this.multiplyVectors(e, t))
          : ((this.x *= e.x), (this.y *= e.y), (this.z *= e.z), this);
      },
      multiplyScalar: function (e) {
        return (this.x *= e), (this.y *= e), (this.z *= e), this;
      },
      multiplyVectors: function (e, t) {
        return (
          (this.x = e.x * t.x), (this.y = e.y * t.y), (this.z = e.z * t.z), this
        );
      },
      applyEuler: function (e) {
        return (
          (e && e.isEuler) || void 0, this.applyQuaternion(H.setFromEuler(e))
        );
      },
      applyAxisAngle: function (e, t) {
        return this.applyQuaternion(H.setFromAxisAngle(e, t));
      },
      applyMatrix3: function (e) {
        var t = this.x,
          n = this.y,
          i = this.z,
          r = e.elements;
        return (
          (this.x = r[0] * t + r[3] * n + r[6] * i),
          (this.y = r[1] * t + r[4] * n + r[7] * i),
          (this.z = r[2] * t + r[5] * n + r[8] * i),
          this
        );
      },
      applyNormalMatrix: function (e) {
        return this.applyMatrix3(e).normalize();
      },
      applyMatrix4: function (e) {
        var t = this.x,
          n = this.y,
          i = this.z,
          r = e.elements,
          a = 1 / (r[3] * t + r[7] * n + r[11] * i + r[15]);
        return (
          (this.x = (r[0] * t + r[4] * n + r[8] * i + r[12]) * a),
          (this.y = (r[1] * t + r[5] * n + r[9] * i + r[13]) * a),
          (this.z = (r[2] * t + r[6] * n + r[10] * i + r[14]) * a),
          this
        );
      },
      applyQuaternion: function (e) {
        var t = this.x,
          n = this.y,
          i = this.z,
          r = e.x,
          a = e.y,
          o = e.z,
          s = e.w,
          c = s * t + a * i - o * n,
          u = s * n + o * t - r * i,
          l = s * i + r * n - a * t,
          d = -r * t - a * n - o * i;
        return (
          (this.x = c * s + d * -r + u * -o - l * -a),
          (this.y = u * s + d * -a + l * -r - c * -o),
          (this.z = l * s + d * -o + c * -a - u * -r),
          this
        );
      },
      project: function (e) {
        return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(
          e.projectionMatrix
        );
      },
      unproject: function (e) {
        return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(
          e.matrixWorld
        );
      },
      transformDirection: function (e) {
        var t = this.x,
          n = this.y,
          i = this.z,
          r = e.elements;
        return (
          (this.x = r[0] * t + r[4] * n + r[8] * i),
          (this.y = r[1] * t + r[5] * n + r[9] * i),
          (this.z = r[2] * t + r[6] * n + r[10] * i),
          this.normalize()
        );
      },
      divide: function (e) {
        return (this.x /= e.x), (this.y /= e.y), (this.z /= e.z), this;
      },
      divideScalar: function (e) {
        return this.multiplyScalar(1 / e);
      },
      min: function (e) {
        return (
          (this.x = Math.min(this.x, e.x)),
          (this.y = Math.min(this.y, e.y)),
          (this.z = Math.min(this.z, e.z)),
          this
        );
      },
      max: function (e) {
        return (
          (this.x = Math.max(this.x, e.x)),
          (this.y = Math.max(this.y, e.y)),
          (this.z = Math.max(this.z, e.z)),
          this
        );
      },
      clamp: function (e, t) {
        return (
          (this.x = Math.max(e.x, Math.min(t.x, this.x))),
          (this.y = Math.max(e.y, Math.min(t.y, this.y))),
          (this.z = Math.max(e.z, Math.min(t.z, this.z))),
          this
        );
      },
      clampScalar: function (e, t) {
        return (
          (this.x = Math.max(e, Math.min(t, this.x))),
          (this.y = Math.max(e, Math.min(t, this.y))),
          (this.z = Math.max(e, Math.min(t, this.z))),
          this
        );
      },
      clampLength: function (e, t) {
        var n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(
          Math.max(e, Math.min(t, n))
        );
      },
      floor: function () {
        return (
          (this.x = Math.floor(this.x)),
          (this.y = Math.floor(this.y)),
          (this.z = Math.floor(this.z)),
          this
        );
      },
      ceil: function () {
        return (
          (this.x = Math.ceil(this.x)),
          (this.y = Math.ceil(this.y)),
          (this.z = Math.ceil(this.z)),
          this
        );
      },
      round: function () {
        return (
          (this.x = Math.round(this.x)),
          (this.y = Math.round(this.y)),
          (this.z = Math.round(this.z)),
          this
        );
      },
      roundToZero: function () {
        return (
          (this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
          (this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
          (this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z)),
          this
        );
      },
      negate: function () {
        return (this.x = -this.x), (this.y = -this.y), (this.z = -this.z), this;
      },
      dot: function (e) {
        return this.x * e.x + this.y * e.y + this.z * e.z;
      },
      lengthSq: function () {
        return this.x * this.x + this.y * this.y + this.z * this.z;
      },
      length: function () {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
      },
      manhattanLength: function () {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
      },
      normalize: function () {
        return this.divideScalar(this.length() || 1);
      },
      setLength: function (e) {
        return this.normalize().multiplyScalar(e);
      },
      lerp: function (e, t) {
        return (
          (this.x += (e.x - this.x) * t),
          (this.y += (e.y - this.y) * t),
          (this.z += (e.z - this.z) * t),
          this
        );
      },
      lerpVectors: function (e, t, n) {
        return this.subVectors(t, e).multiplyScalar(n).add(e);
      },
      cross: function (e, t) {
        return void 0 !== t
          ? (void 0, this.crossVectors(e, t))
          : this.crossVectors(this, e);
      },
      crossVectors: function (e, t) {
        var n = e.x,
          i = e.y,
          r = e.z,
          a = t.x,
          o = t.y,
          s = t.z;
        return (
          (this.x = i * s - r * o),
          (this.y = r * a - n * s),
          (this.z = n * o - i * a),
          this
        );
      },
      projectOnVector: function (e) {
        var t = e.lengthSq();
        if (0 === t) return this.set(0, 0, 0);
        var n = e.dot(this) / t;
        return this.copy(e).multiplyScalar(n);
      },
      projectOnPlane: function (e) {
        return q.copy(this).projectOnVector(e), this.sub(q);
      },
      reflect: function (e) {
        return this.sub(q.copy(e).multiplyScalar(2 * this.dot(e)));
      },
      angleTo: function (e) {
        var t = Math.sqrt(this.lengthSq() * e.lengthSq());
        if (0 === t) return Math.PI / 2;
        var n = this.dot(e) / t;
        return Math.acos(W['a'].clamp(n, -1, 1));
      },
      distanceTo: function (e) {
        return Math.sqrt(this.distanceToSquared(e));
      },
      distanceToSquared: function (e) {
        var t = this.x - e.x,
          n = this.y - e.y,
          i = this.z - e.z;
        return t * t + n * n + i * i;
      },
      manhattanDistanceTo: function (e) {
        return (
          Math.abs(this.x - e.x) +
          Math.abs(this.y - e.y) +
          Math.abs(this.z - e.z)
        );
      },
      setFromSpherical: function (e) {
        return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
      },
      setFromSphericalCoords: function (e, t, n) {
        var i = Math.sin(t) * e;
        return (
          (this.x = i * Math.sin(n)),
          (this.y = Math.cos(t) * e),
          (this.z = i * Math.cos(n)),
          this
        );
      },
      setFromCylindrical: function (e) {
        return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
      },
      setFromCylindricalCoords: function (e, t, n) {
        return (
          (this.x = e * Math.sin(t)),
          (this.y = n),
          (this.z = e * Math.cos(t)),
          this
        );
      },
      setFromMatrixPosition: function (e) {
        var t = e.elements;
        return (this.x = t[12]), (this.y = t[13]), (this.z = t[14]), this;
      },
      setFromMatrixScale: function (e) {
        var t = this.setFromMatrixColumn(e, 0).length(),
          n = this.setFromMatrixColumn(e, 1).length(),
          i = this.setFromMatrixColumn(e, 2).length();
        return (this.x = t), (this.y = n), (this.z = i), this;
      },
      setFromMatrixColumn: function (e, t) {
        return this.fromArray(e.elements, 4 * t);
      },
      setFromMatrix3Column: function (e, t) {
        return this.fromArray(e.elements, 3 * t);
      },
      equals: function (e) {
        return e.x === this.x && e.y === this.y && e.z === this.z;
      },
      fromArray: function (e, t) {
        return (
          void 0 === t && (t = 0),
          (this.x = e[t]),
          (this.y = e[t + 1]),
          (this.z = e[t + 2]),
          this
        );
      },
      toArray: function (e, t) {
        return (
          void 0 === e && (e = []),
          void 0 === t && (t = 0),
          (e[t] = this.x),
          (e[t + 1] = this.y),
          (e[t + 2] = this.z),
          e
        );
      },
      fromBufferAttribute: function (e, t, n) {
        return (
          void 0 !== n && void 0,
          (this.x = e.getX(t)),
          (this.y = e.getY(t)),
          (this.z = e.getZ(t)),
          this
        );
      },
      random: function () {
        return (
          (this.x = Math.random()),
          (this.y = Math.random()),
          (this.z = Math.random()),
          this
        );
      },
    }),
      Object.defineProperties(U.prototype, {
        width: {
          get: function () {
            return this.x;
          },
          set: function (e) {
            this.x = e;
          },
        },
        height: {
          get: function () {
            return this.y;
          },
          set: function (e) {
            this.y = e;
          },
        },
      }),
      Object.assign(U.prototype, {
        isVector2: !0,
        set: function (e, t) {
          return (this.x = e), (this.y = t), this;
        },
        setScalar: function (e) {
          return (this.x = e), (this.y = e), this;
        },
        setX: function (e) {
          return (this.x = e), this;
        },
        setY: function (e) {
          return (this.y = e), this;
        },
        setComponent: function (e, t) {
          switch (e) {
            case 0:
              this.x = t;
              break;
            case 1:
              this.y = t;
              break;
            default:
              throw new Error('index is out of range: ' + e);
          }
          return this;
        },
        getComponent: function (e) {
          switch (e) {
            case 0:
              return this.x;
            case 1:
              return this.y;
            default:
              throw new Error('index is out of range: ' + e);
          }
        },
        clone: function () {
          return new this.constructor(this.x, this.y);
        },
        copy: function (e) {
          return (this.x = e.x), (this.y = e.y), this;
        },
        add: function (e, t) {
          return void 0 !== t
            ? (void 0, this.addVectors(e, t))
            : ((this.x += e.x), (this.y += e.y), this);
        },
        addScalar: function (e) {
          return (this.x += e), (this.y += e), this;
        },
        addVectors: function (e, t) {
          return (this.x = e.x + t.x), (this.y = e.y + t.y), this;
        },
        addScaledVector: function (e, t) {
          return (this.x += e.x * t), (this.y += e.y * t), this;
        },
        sub: function (e, t) {
          return void 0 !== t
            ? (void 0, this.subVectors(e, t))
            : ((this.x -= e.x), (this.y -= e.y), this);
        },
        subScalar: function (e) {
          return (this.x -= e), (this.y -= e), this;
        },
        subVectors: function (e, t) {
          return (this.x = e.x - t.x), (this.y = e.y - t.y), this;
        },
        multiply: function (e) {
          return (this.x *= e.x), (this.y *= e.y), this;
        },
        multiplyScalar: function (e) {
          return (this.x *= e), (this.y *= e), this;
        },
        divide: function (e) {
          return (this.x /= e.x), (this.y /= e.y), this;
        },
        divideScalar: function (e) {
          return this.multiplyScalar(1 / e);
        },
        applyMatrix3: function (e) {
          var t = this.x,
            n = this.y,
            i = e.elements;
          return (
            (this.x = i[0] * t + i[3] * n + i[6]),
            (this.y = i[1] * t + i[4] * n + i[7]),
            this
          );
        },
        min: function (e) {
          return (
            (this.x = Math.min(this.x, e.x)),
            (this.y = Math.min(this.y, e.y)),
            this
          );
        },
        max: function (e) {
          return (
            (this.x = Math.max(this.x, e.x)),
            (this.y = Math.max(this.y, e.y)),
            this
          );
        },
        clamp: function (e, t) {
          return (
            (this.x = Math.max(e.x, Math.min(t.x, this.x))),
            (this.y = Math.max(e.y, Math.min(t.y, this.y))),
            this
          );
        },
        clampScalar: function (e, t) {
          return (
            (this.x = Math.max(e, Math.min(t, this.x))),
            (this.y = Math.max(e, Math.min(t, this.y))),
            this
          );
        },
        clampLength: function (e, t) {
          var n = this.length();
          return this.divideScalar(n || 1).multiplyScalar(
            Math.max(e, Math.min(t, n))
          );
        },
        floor: function () {
          return (
            (this.x = Math.floor(this.x)), (this.y = Math.floor(this.y)), this
          );
        },
        ceil: function () {
          return (
            (this.x = Math.ceil(this.x)), (this.y = Math.ceil(this.y)), this
          );
        },
        round: function () {
          return (
            (this.x = Math.round(this.x)), (this.y = Math.round(this.y)), this
          );
        },
        roundToZero: function () {
          return (
            (this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
            (this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
            this
          );
        },
        negate: function () {
          return (this.x = -this.x), (this.y = -this.y), this;
        },
        dot: function (e) {
          return this.x * e.x + this.y * e.y;
        },
        cross: function (e) {
          return this.x * e.y - this.y * e.x;
        },
        lengthSq: function () {
          return this.x * this.x + this.y * this.y;
        },
        length: function () {
          return Math.sqrt(this.x * this.x + this.y * this.y);
        },
        manhattanLength: function () {
          return Math.abs(this.x) + Math.abs(this.y);
        },
        normalize: function () {
          return this.divideScalar(this.length() || 1);
        },
        angle: function () {
          var e = Math.atan2(-this.y, -this.x) + Math.PI;
          return e;
        },
        distanceTo: function (e) {
          return Math.sqrt(this.distanceToSquared(e));
        },
        distanceToSquared: function (e) {
          var t = this.x - e.x,
            n = this.y - e.y;
          return t * t + n * n;
        },
        manhattanDistanceTo: function (e) {
          return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
        },
        setLength: function (e) {
          return this.normalize().multiplyScalar(e);
        },
        lerp: function (e, t) {
          return (
            (this.x += (e.x - this.x) * t), (this.y += (e.y - this.y) * t), this
          );
        },
        lerpVectors: function (e, t, n) {
          return this.subVectors(t, e).multiplyScalar(n).add(e);
        },
        equals: function (e) {
          return e.x === this.x && e.y === this.y;
        },
        fromArray: function (e, t) {
          return (
            void 0 === t && (t = 0), (this.x = e[t]), (this.y = e[t + 1]), this
          );
        },
        toArray: function (e, t) {
          return (
            void 0 === e && (e = []),
            void 0 === t && (t = 0),
            (e[t] = this.x),
            (e[t + 1] = this.y),
            e
          );
        },
        fromBufferAttribute: function (e, t, n) {
          return (
            void 0 !== n && void 0,
            (this.x = e.getX(t)),
            (this.y = e.getY(t)),
            this
          );
        },
        rotateAround: function (e, t) {
          var n = Math.cos(t),
            i = Math.sin(t),
            r = this.x - e.x,
            a = this.y - e.y;
          return (
            (this.x = r * n - a * i + e.x), (this.y = r * i + a * n + e.y), this
          );
        },
        random: function () {
          return (this.x = Math.random()), (this.y = Math.random()), this;
        },
      });
    var X = {
        aliceblue: 15792383,
        antiquewhite: 16444375,
        aqua: 65535,
        aquamarine: 8388564,
        azure: 15794175,
        beige: 16119260,
        bisque: 16770244,
        black: 0,
        blanchedalmond: 16772045,
        blue: 255,
        blueviolet: 9055202,
        brown: 10824234,
        burlywood: 14596231,
        cadetblue: 6266528,
        chartreuse: 8388352,
        chocolate: 13789470,
        coral: 16744272,
        cornflowerblue: 6591981,
        cornsilk: 16775388,
        crimson: 14423100,
        cyan: 65535,
        darkblue: 139,
        darkcyan: 35723,
        darkgoldenrod: 12092939,
        darkgray: 11119017,
        darkgreen: 25600,
        darkgrey: 11119017,
        darkkhaki: 12433259,
        darkmagenta: 9109643,
        darkolivegreen: 5597999,
        darkorange: 16747520,
        darkorchid: 10040012,
        darkred: 9109504,
        darksalmon: 15308410,
        darkseagreen: 9419919,
        darkslateblue: 4734347,
        darkslategray: 3100495,
        darkslategrey: 3100495,
        darkturquoise: 52945,
        darkviolet: 9699539,
        deeppink: 16716947,
        deepskyblue: 49151,
        dimgray: 6908265,
        dimgrey: 6908265,
        dodgerblue: 2003199,
        firebrick: 11674146,
        floralwhite: 16775920,
        forestgreen: 2263842,
        fuchsia: 16711935,
        gainsboro: 14474460,
        ghostwhite: 16316671,
        gold: 16766720,
        goldenrod: 14329120,
        gray: 8421504,
        green: 32768,
        greenyellow: 11403055,
        grey: 8421504,
        honeydew: 15794160,
        hotpink: 16738740,
        indianred: 13458524,
        indigo: 4915330,
        ivory: 16777200,
        khaki: 15787660,
        lavender: 15132410,
        lavenderblush: 16773365,
        lawngreen: 8190976,
        lemonchiffon: 16775885,
        lightblue: 11393254,
        lightcoral: 15761536,
        lightcyan: 14745599,
        lightgoldenrodyellow: 16448210,
        lightgray: 13882323,
        lightgreen: 9498256,
        lightgrey: 13882323,
        lightpink: 16758465,
        lightsalmon: 16752762,
        lightseagreen: 2142890,
        lightskyblue: 8900346,
        lightslategray: 7833753,
        lightslategrey: 7833753,
        lightsteelblue: 11584734,
        lightyellow: 16777184,
        lime: 65280,
        limegreen: 3329330,
        linen: 16445670,
        magenta: 16711935,
        maroon: 8388608,
        mediumaquamarine: 6737322,
        mediumblue: 205,
        mediumorchid: 12211667,
        mediumpurple: 9662683,
        mediumseagreen: 3978097,
        mediumslateblue: 8087790,
        mediumspringgreen: 64154,
        mediumturquoise: 4772300,
        mediumvioletred: 13047173,
        midnightblue: 1644912,
        mintcream: 16121850,
        mistyrose: 16770273,
        moccasin: 16770229,
        navajowhite: 16768685,
        navy: 128,
        oldlace: 16643558,
        olive: 8421376,
        olivedrab: 7048739,
        orange: 16753920,
        orangered: 16729344,
        orchid: 14315734,
        palegoldenrod: 15657130,
        palegreen: 10025880,
        paleturquoise: 11529966,
        palevioletred: 14381203,
        papayawhip: 16773077,
        peachpuff: 16767673,
        peru: 13468991,
        pink: 16761035,
        plum: 14524637,
        powderblue: 11591910,
        purple: 8388736,
        rebeccapurple: 6697881,
        red: 16711680,
        rosybrown: 12357519,
        royalblue: 4286945,
        saddlebrown: 9127187,
        salmon: 16416882,
        sandybrown: 16032864,
        seagreen: 3050327,
        seashell: 16774638,
        sienna: 10506797,
        silver: 12632256,
        skyblue: 8900331,
        slateblue: 6970061,
        slategray: 7372944,
        slategrey: 7372944,
        snow: 16775930,
        springgreen: 65407,
        steelblue: 4620980,
        tan: 13808780,
        teal: 32896,
        thistle: 14204888,
        tomato: 16737095,
        turquoise: 4251856,
        violet: 15631086,
        wheat: 16113331,
        white: 16777215,
        whitesmoke: 16119285,
        yellow: 16776960,
        yellowgreen: 10145074,
      },
      V = { h: 0, s: 0, l: 0 },
      G = { h: 0, s: 0, l: 0 };
    function J(e, t, n) {
      return void 0 === t && void 0 === n ? this.set(e) : this.setRGB(e, t, n);
    }
    function Z(e, t, n) {
      return (
        n < 0 && (n += 1),
        n > 1 && (n -= 1),
        n < 1 / 6
          ? e + 6 * (t - e) * n
          : n < 1 / 2
          ? t
          : n < 2 / 3
          ? e + 6 * (t - e) * (2 / 3 - n)
          : e
      );
    }
    function K(e) {
      return e < 0.04045
        ? 0.0773993808 * e
        : Math.pow(0.9478672986 * e + 0.0521327014, 2.4);
    }
    function Q(e) {
      return e < 0.0031308 ? 12.92 * e : 1.055 * Math.pow(e, 0.41666) - 0.055;
    }
    Object.assign(J.prototype, {
      isColor: !0,
      r: 1,
      g: 1,
      b: 1,
      set: function (e) {
        return (
          e && e.isColor
            ? this.copy(e)
            : 'number' === typeof e
            ? this.setHex(e)
            : 'string' === typeof e && this.setStyle(e),
          this
        );
      },
      setScalar: function (e) {
        return (this.r = e), (this.g = e), (this.b = e), this;
      },
      setHex: function (e) {
        return (
          (e = Math.floor(e)),
          (this.r = ((e >> 16) & 255) / 255),
          (this.g = ((e >> 8) & 255) / 255),
          (this.b = (255 & e) / 255),
          this
        );
      },
      setRGB: function (e, t, n) {
        return (this.r = e), (this.g = t), (this.b = n), this;
      },
      setHSL: function (e, t, n) {
        if (
          ((e = W['a'].euclideanModulo(e, 1)),
          (t = W['a'].clamp(t, 0, 1)),
          (n = W['a'].clamp(n, 0, 1)),
          0 === t)
        )
          this.r = this.g = this.b = n;
        else {
          var i = n <= 0.5 ? n * (1 + t) : n + t - n * t,
            r = 2 * n - i;
          (this.r = Z(r, i, e + 1 / 3)),
            (this.g = Z(r, i, e)),
            (this.b = Z(r, i, e - 1 / 3));
        }
        return this;
      },
      setStyle: function (e) {
        function t(e) {
          void 0 !== e && parseFloat(e) < 1 && void 0;
        }
        var n;
        if ((n = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e))) {
          var i,
            r = n[1],
            a = n[2];
          switch (r) {
            case 'rgb':
            case 'rgba':
              if (
                (i = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(
                  a
                ))
              )
                return (
                  (this.r = Math.min(255, parseInt(i[1], 10)) / 255),
                  (this.g = Math.min(255, parseInt(i[2], 10)) / 255),
                  (this.b = Math.min(255, parseInt(i[3], 10)) / 255),
                  t(i[5]),
                  this
                );
              if (
                (i = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(
                  a
                ))
              )
                return (
                  (this.r = Math.min(100, parseInt(i[1], 10)) / 100),
                  (this.g = Math.min(100, parseInt(i[2], 10)) / 100),
                  (this.b = Math.min(100, parseInt(i[3], 10)) / 100),
                  t(i[5]),
                  this
                );
              break;
            case 'hsl':
            case 'hsla':
              if (
                (i = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(
                  a
                ))
              ) {
                var o = parseFloat(i[1]) / 360,
                  s = parseInt(i[2], 10) / 100,
                  c = parseInt(i[3], 10) / 100;
                return t(i[5]), this.setHSL(o, s, c);
              }
              break;
          }
        } else if ((n = /^\#([A-Fa-f0-9]+)$/.exec(e))) {
          var u = n[1],
            l = u.length;
          if (3 === l)
            return (
              (this.r = parseInt(u.charAt(0) + u.charAt(0), 16) / 255),
              (this.g = parseInt(u.charAt(1) + u.charAt(1), 16) / 255),
              (this.b = parseInt(u.charAt(2) + u.charAt(2), 16) / 255),
              this
            );
          if (6 === l)
            return (
              (this.r = parseInt(u.charAt(0) + u.charAt(1), 16) / 255),
              (this.g = parseInt(u.charAt(2) + u.charAt(3), 16) / 255),
              (this.b = parseInt(u.charAt(4) + u.charAt(5), 16) / 255),
              this
            );
        }
        return e && e.length > 0 ? this.setColorName(e) : this;
      },
      setColorName: function (e) {
        var t = X[e];
        return void 0 !== t ? this.setHex(t) : void 0, this;
      },
      clone: function () {
        return new this.constructor(this.r, this.g, this.b);
      },
      copy: function (e) {
        return (this.r = e.r), (this.g = e.g), (this.b = e.b), this;
      },
      copyGammaToLinear: function (e, t) {
        return (
          void 0 === t && (t = 2),
          (this.r = Math.pow(e.r, t)),
          (this.g = Math.pow(e.g, t)),
          (this.b = Math.pow(e.b, t)),
          this
        );
      },
      copyLinearToGamma: function (e, t) {
        void 0 === t && (t = 2);
        var n = t > 0 ? 1 / t : 1;
        return (
          (this.r = Math.pow(e.r, n)),
          (this.g = Math.pow(e.g, n)),
          (this.b = Math.pow(e.b, n)),
          this
        );
      },
      convertGammaToLinear: function (e) {
        return this.copyGammaToLinear(this, e), this;
      },
      convertLinearToGamma: function (e) {
        return this.copyLinearToGamma(this, e), this;
      },
      copySRGBToLinear: function (e) {
        return (this.r = K(e.r)), (this.g = K(e.g)), (this.b = K(e.b)), this;
      },
      copyLinearToSRGB: function (e) {
        return (this.r = Q(e.r)), (this.g = Q(e.g)), (this.b = Q(e.b)), this;
      },
      convertSRGBToLinear: function () {
        return this.copySRGBToLinear(this), this;
      },
      convertLinearToSRGB: function () {
        return this.copyLinearToSRGB(this), this;
      },
      getHex: function () {
        return (
          ((255 * this.r) << 16) ^ ((255 * this.g) << 8) ^ ((255 * this.b) << 0)
        );
      },
      getHexString: function () {
        return ('000000' + this.getHex().toString(16)).slice(-6);
      },
      getHSL: function (e) {
        void 0, void 0 === e && (e = { h: 0, s: 0, l: 0 });
        var t,
          n,
          i = this.r,
          r = this.g,
          a = this.b,
          o = Math.max(i, r, a),
          s = Math.min(i, r, a),
          c = (s + o) / 2;
        if (s === o) (t = 0), (n = 0);
        else {
          var u = o - s;
          switch (((n = c <= 0.5 ? u / (o + s) : u / (2 - o - s)), o)) {
            case i:
              t = (r - a) / u + (r < a ? 6 : 0);
              break;
            case r:
              t = (a - i) / u + 2;
              break;
            case a:
              t = (i - r) / u + 4;
              break;
          }
          t /= 6;
        }
        return (e.h = t), (e.s = n), (e.l = c), e;
      },
      getStyle: function () {
        return (
          'rgb(' +
          ((255 * this.r) | 0) +
          ',' +
          ((255 * this.g) | 0) +
          ',' +
          ((255 * this.b) | 0) +
          ')'
        );
      },
      offsetHSL: function (e, t, n) {
        return (
          this.getHSL(V),
          (V.h += e),
          (V.s += t),
          (V.l += n),
          this.setHSL(V.h, V.s, V.l),
          this
        );
      },
      add: function (e) {
        return (this.r += e.r), (this.g += e.g), (this.b += e.b), this;
      },
      addColors: function (e, t) {
        return (
          (this.r = e.r + t.r), (this.g = e.g + t.g), (this.b = e.b + t.b), this
        );
      },
      addScalar: function (e) {
        return (this.r += e), (this.g += e), (this.b += e), this;
      },
      sub: function (e) {
        return (
          (this.r = Math.max(0, this.r - e.r)),
          (this.g = Math.max(0, this.g - e.g)),
          (this.b = Math.max(0, this.b - e.b)),
          this
        );
      },
      multiply: function (e) {
        return (this.r *= e.r), (this.g *= e.g), (this.b *= e.b), this;
      },
      multiplyScalar: function (e) {
        return (this.r *= e), (this.g *= e), (this.b *= e), this;
      },
      lerp: function (e, t) {
        return (
          (this.r += (e.r - this.r) * t),
          (this.g += (e.g - this.g) * t),
          (this.b += (e.b - this.b) * t),
          this
        );
      },
      lerpHSL: function (e, t) {
        this.getHSL(V), e.getHSL(G);
        var n = W['a'].lerp(V.h, G.h, t),
          i = W['a'].lerp(V.s, G.s, t),
          r = W['a'].lerp(V.l, G.l, t);
        return this.setHSL(n, i, r), this;
      },
      equals: function (e) {
        return e.r === this.r && e.g === this.g && e.b === this.b;
      },
      fromArray: function (e, t) {
        return (
          void 0 === t && (t = 0),
          (this.r = e[t]),
          (this.g = e[t + 1]),
          (this.b = e[t + 2]),
          this
        );
      },
      toArray: function (e, t) {
        return (
          void 0 === e && (e = []),
          void 0 === t && (t = 0),
          (e[t] = this.r),
          (e[t + 1] = this.g),
          (e[t + 2] = this.b),
          e
        );
      },
      toJSON: function () {
        return this.getHex();
      },
    }),
      (J.NAMES = X);
    var $ = new F();
    function ee(e, t, n) {
      if (Array.isArray(e))
        throw new TypeError(
          'THREE.BufferAttribute: array should be a Typed Array.'
        );
      (this.name = ''),
        (this.array = e),
        (this.itemSize = t),
        (this.count = void 0 !== e ? e.length / t : 0),
        (this.normalized = !0 === n),
        (this.usage = R),
        (this.updateRange = { offset: 0, count: -1 }),
        (this.version = 0);
    }
    function te(e, t, n) {
      ee.call(this, new Int8Array(e), t, n);
    }
    function ne(e, t, n) {
      ee.call(this, new Uint8Array(e), t, n);
    }
    function ie(e, t, n) {
      ee.call(this, new Uint8ClampedArray(e), t, n);
    }
    function re(e, t, n) {
      ee.call(this, new Int16Array(e), t, n);
    }
    function ae(e, t, n) {
      ee.call(this, new Uint16Array(e), t, n);
    }
    function oe(e, t, n) {
      ee.call(this, new Int32Array(e), t, n);
    }
    function se(e, t, n) {
      ee.call(this, new Uint32Array(e), t, n);
    }
    function ce(e, t, n) {
      ee.call(this, new Float32Array(e), t, n);
    }
    function ue(e, t, n) {
      ee.call(this, new Float64Array(e), t, n);
    }
    Object.defineProperty(ee.prototype, 'needsUpdate', {
      set: function (e) {
        !0 === e && this.version++;
      },
    }),
      Object.assign(ee.prototype, {
        isBufferAttribute: !0,
        onUploadCallback: function () {},
        setUsage: function (e) {
          return (this.usage = e), this;
        },
        copy: function (e) {
          return (
            (this.name = e.name),
            (this.array = new e.array.constructor(e.array)),
            (this.itemSize = e.itemSize),
            (this.count = e.count),
            (this.normalized = e.normalized),
            (this.usage = e.usage),
            this
          );
        },
        copyAt: function (e, t, n) {
          (e *= this.itemSize), (n *= t.itemSize);
          for (var i = 0, r = this.itemSize; i < r; i++)
            this.array[e + i] = t.array[n + i];
          return this;
        },
        copyArray: function (e) {
          return this.array.set(e), this;
        },
        copyColorsArray: function (e) {
          for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
            var a = e[i];
            void 0,
              void 0 === a && (a = new J()),
              (t[n++] = a.r),
              (t[n++] = a.g),
              (t[n++] = a.b);
          }
          return this;
        },
        copyVector2sArray: function (e) {
          for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
            var a = e[i];
            void 0,
              void 0 === a && (a = new U()),
              (t[n++] = a.x),
              (t[n++] = a.y);
          }
          return this;
        },
        copyVector3sArray: function (e) {
          for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
            var a = e[i];
            void 0,
              void 0 === a && (a = new F()),
              (t[n++] = a.x),
              (t[n++] = a.y),
              (t[n++] = a.z);
          }
          return this;
        },
        copyVector4sArray: function (e) {
          for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
            var a = e[i];
            void 0,
              void 0 === a && (a = new B()),
              (t[n++] = a.x),
              (t[n++] = a.y),
              (t[n++] = a.z),
              (t[n++] = a.w);
          }
          return this;
        },
        applyMatrix3: function (e) {
          for (var t = 0, n = this.count; t < n; t++)
            ($.x = this.getX(t)),
              ($.y = this.getY(t)),
              ($.z = this.getZ(t)),
              $.applyMatrix3(e),
              this.setXYZ(t, $.x, $.y, $.z);
          return this;
        },
        applyMatrix4: function (e) {
          for (var t = 0, n = this.count; t < n; t++)
            ($.x = this.getX(t)),
              ($.y = this.getY(t)),
              ($.z = this.getZ(t)),
              $.applyMatrix4(e),
              this.setXYZ(t, $.x, $.y, $.z);
          return this;
        },
        applyNormalMatrix: function (e) {
          for (var t = 0, n = this.count; t < n; t++)
            ($.x = this.getX(t)),
              ($.y = this.getY(t)),
              ($.z = this.getZ(t)),
              $.applyNormalMatrix(e),
              this.setXYZ(t, $.x, $.y, $.z);
          return this;
        },
        transformDirection: function (e) {
          for (var t = 0, n = this.count; t < n; t++)
            ($.x = this.getX(t)),
              ($.y = this.getY(t)),
              ($.z = this.getZ(t)),
              $.transformDirection(e),
              this.setXYZ(t, $.x, $.y, $.z);
          return this;
        },
        set: function (e, t) {
          return void 0 === t && (t = 0), this.array.set(e, t), this;
        },
        getX: function (e) {
          return this.array[e * this.itemSize];
        },
        setX: function (e, t) {
          return (this.array[e * this.itemSize] = t), this;
        },
        getY: function (e) {
          return this.array[e * this.itemSize + 1];
        },
        setY: function (e, t) {
          return (this.array[e * this.itemSize + 1] = t), this;
        },
        getZ: function (e) {
          return this.array[e * this.itemSize + 2];
        },
        setZ: function (e, t) {
          return (this.array[e * this.itemSize + 2] = t), this;
        },
        getW: function (e) {
          return this.array[e * this.itemSize + 3];
        },
        setW: function (e, t) {
          return (this.array[e * this.itemSize + 3] = t), this;
        },
        setXY: function (e, t, n) {
          return (
            (e *= this.itemSize),
            (this.array[e + 0] = t),
            (this.array[e + 1] = n),
            this
          );
        },
        setXYZ: function (e, t, n, i) {
          return (
            (e *= this.itemSize),
            (this.array[e + 0] = t),
            (this.array[e + 1] = n),
            (this.array[e + 2] = i),
            this
          );
        },
        setXYZW: function (e, t, n, i, r) {
          return (
            (e *= this.itemSize),
            (this.array[e + 0] = t),
            (this.array[e + 1] = n),
            (this.array[e + 2] = i),
            (this.array[e + 3] = r),
            this
          );
        },
        onUpload: function (e) {
          return (this.onUploadCallback = e), this;
        },
        clone: function () {
          return new this.constructor(this.array, this.itemSize).copy(this);
        },
        toJSON: function () {
          return {
            itemSize: this.itemSize,
            type: this.array.constructor.name,
            array: Array.prototype.slice.call(this.array),
            normalized: this.normalized,
          };
        },
      }),
      (te.prototype = Object.create(ee.prototype)),
      (te.prototype.constructor = te),
      (ne.prototype = Object.create(ee.prototype)),
      (ne.prototype.constructor = ne),
      (ie.prototype = Object.create(ee.prototype)),
      (ie.prototype.constructor = ie),
      (re.prototype = Object.create(ee.prototype)),
      (re.prototype.constructor = re),
      (ae.prototype = Object.create(ee.prototype)),
      (ae.prototype.constructor = ae),
      (oe.prototype = Object.create(ee.prototype)),
      (oe.prototype.constructor = oe),
      (se.prototype = Object.create(ee.prototype)),
      (se.prototype.constructor = se),
      (ce.prototype = Object.create(ee.prototype)),
      (ce.prototype.constructor = ce),
      (ue.prototype = Object.create(ee.prototype)),
      (ue.prototype.constructor = ue);
    var le = [
        new F(),
        new F(),
        new F(),
        new F(),
        new F(),
        new F(),
        new F(),
        new F(),
      ],
      de = new F(),
      he = new Ae(),
      pe = new F(),
      me = new F(),
      fe = new F(),
      _e = new F(),
      Me = new F(),
      ve = new F(),
      ge = new F(),
      ye = new F(),
      be = new F(),
      we = new F();
    function Ae(e, t) {
      (this.min = void 0 !== e ? e : new F(+1 / 0, +1 / 0, +1 / 0)),
        (this.max = void 0 !== t ? t : new F(-1 / 0, -1 / 0, -1 / 0));
    }
    function xe(e, t, n, i, r) {
      var a, o;
      for (a = 0, o = e.length - 3; a <= o; a += 3) {
        we.fromArray(e, a);
        var s =
            r.x * Math.abs(we.x) + r.y * Math.abs(we.y) + r.z * Math.abs(we.z),
          c = t.dot(we),
          u = n.dot(we),
          l = i.dot(we);
        if (Math.max(-Math.max(c, u, l), Math.min(c, u, l)) > s) return !1;
      }
      return !0;
    }
    function Le() {}
    Object.assign(Ae.prototype, {
      isBox3: !0,
      set: function (e, t) {
        return this.min.copy(e), this.max.copy(t), this;
      },
      setFromArray: function (e) {
        for (
          var t = +1 / 0,
            n = +1 / 0,
            i = +1 / 0,
            r = -1 / 0,
            a = -1 / 0,
            o = -1 / 0,
            s = 0,
            c = e.length;
          s < c;
          s += 3
        ) {
          var u = e[s],
            l = e[s + 1],
            d = e[s + 2];
          u < t && (t = u),
            l < n && (n = l),
            d < i && (i = d),
            u > r && (r = u),
            l > a && (a = l),
            d > o && (o = d);
        }
        return this.min.set(t, n, i), this.max.set(r, a, o), this;
      },
      setFromBufferAttribute: function (e) {
        for (
          var t = +1 / 0,
            n = +1 / 0,
            i = +1 / 0,
            r = -1 / 0,
            a = -1 / 0,
            o = -1 / 0,
            s = 0,
            c = e.count;
          s < c;
          s++
        ) {
          var u = e.getX(s),
            l = e.getY(s),
            d = e.getZ(s);
          u < t && (t = u),
            l < n && (n = l),
            d < i && (i = d),
            u > r && (r = u),
            l > a && (a = l),
            d > o && (o = d);
        }
        return this.min.set(t, n, i), this.max.set(r, a, o), this;
      },
      setFromPoints: function (e) {
        this.makeEmpty();
        for (var t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
        return this;
      },
      setFromCenterAndSize: function (e, t) {
        var n = de.copy(t).multiplyScalar(0.5);
        return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
      },
      setFromObject: function (e) {
        return this.makeEmpty(), this.expandByObject(e);
      },
      clone: function () {
        return new this.constructor().copy(this);
      },
      copy: function (e) {
        return this.min.copy(e.min), this.max.copy(e.max), this;
      },
      makeEmpty: function () {
        return (
          (this.min.x = this.min.y = this.min.z = +1 / 0),
          (this.max.x = this.max.y = this.max.z = -1 / 0),
          this
        );
      },
      isEmpty: function () {
        return (
          this.max.x < this.min.x ||
          this.max.y < this.min.y ||
          this.max.z < this.min.z
        );
      },
      getCenter: function (e) {
        return (
          void 0,
          void 0 === e && (e = new F()),
          this.isEmpty()
            ? e.set(0, 0, 0)
            : e.addVectors(this.min, this.max).multiplyScalar(0.5)
        );
      },
      getSize: function (e) {
        return (
          void 0,
          void 0 === e && (e = new F()),
          this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min)
        );
      },
      expandByPoint: function (e) {
        return this.min.min(e), this.max.max(e), this;
      },
      expandByVector: function (e) {
        return this.min.sub(e), this.max.add(e), this;
      },
      expandByScalar: function (e) {
        return this.min.addScalar(-e), this.max.addScalar(e), this;
      },
      expandByObject: function (e) {
        e.updateWorldMatrix(!1, !1);
        var t = e.geometry;
        void 0 !== t &&
          (null === t.boundingBox && t.computeBoundingBox(),
          he.copy(t.boundingBox),
          he.applyMatrix4(e.matrixWorld),
          this.union(he));
        for (var n = e.children, i = 0, r = n.length; i < r; i++)
          this.expandByObject(n[i]);
        return this;
      },
      containsPoint: function (e) {
        return !(
          e.x < this.min.x ||
          e.x > this.max.x ||
          e.y < this.min.y ||
          e.y > this.max.y ||
          e.z < this.min.z ||
          e.z > this.max.z
        );
      },
      containsBox: function (e) {
        return (
          this.min.x <= e.min.x &&
          e.max.x <= this.max.x &&
          this.min.y <= e.min.y &&
          e.max.y <= this.max.y &&
          this.min.z <= e.min.z &&
          e.max.z <= this.max.z
        );
      },
      getParameter: function (e, t) {
        return (
          void 0,
          void 0 === t && (t = new F()),
          t.set(
            (e.x - this.min.x) / (this.max.x - this.min.x),
            (e.y - this.min.y) / (this.max.y - this.min.y),
            (e.z - this.min.z) / (this.max.z - this.min.z)
          )
        );
      },
      intersectsBox: function (e) {
        return !(
          e.max.x < this.min.x ||
          e.min.x > this.max.x ||
          e.max.y < this.min.y ||
          e.min.y > this.max.y ||
          e.max.z < this.min.z ||
          e.min.z > this.max.z
        );
      },
      intersectsSphere: function (e) {
        return (
          this.clampPoint(e.center, de),
          de.distanceToSquared(e.center) <= e.radius * e.radius
        );
      },
      intersectsPlane: function (e) {
        var t, n;
        return (
          e.normal.x > 0
            ? ((t = e.normal.x * this.min.x), (n = e.normal.x * this.max.x))
            : ((t = e.normal.x * this.max.x), (n = e.normal.x * this.min.x)),
          e.normal.y > 0
            ? ((t += e.normal.y * this.min.y), (n += e.normal.y * this.max.y))
            : ((t += e.normal.y * this.max.y), (n += e.normal.y * this.min.y)),
          e.normal.z > 0
            ? ((t += e.normal.z * this.min.z), (n += e.normal.z * this.max.z))
            : ((t += e.normal.z * this.max.z), (n += e.normal.z * this.min.z)),
          t <= -e.constant && n >= -e.constant
        );
      },
      intersectsTriangle: function (e) {
        if (this.isEmpty()) return !1;
        this.getCenter(ge),
          ye.subVectors(this.max, ge),
          pe.subVectors(e.a, ge),
          me.subVectors(e.b, ge),
          fe.subVectors(e.c, ge),
          _e.subVectors(me, pe),
          Me.subVectors(fe, me),
          ve.subVectors(pe, fe);
        var t = [
          0,
          -_e.z,
          _e.y,
          0,
          -Me.z,
          Me.y,
          0,
          -ve.z,
          ve.y,
          _e.z,
          0,
          -_e.x,
          Me.z,
          0,
          -Me.x,
          ve.z,
          0,
          -ve.x,
          -_e.y,
          _e.x,
          0,
          -Me.y,
          Me.x,
          0,
          -ve.y,
          ve.x,
          0,
        ];
        return (
          !!xe(t, pe, me, fe, ye) &&
          ((t = [1, 0, 0, 0, 1, 0, 0, 0, 1]),
          !!xe(t, pe, me, fe, ye) &&
            (be.crossVectors(_e, Me),
            (t = [be.x, be.y, be.z]),
            xe(t, pe, me, fe, ye)))
        );
      },
      clampPoint: function (e, t) {
        return (
          void 0,
          void 0 === t && (t = new F()),
          t.copy(e).clamp(this.min, this.max)
        );
      },
      distanceToPoint: function (e) {
        var t = de.copy(e).clamp(this.min, this.max);
        return t.sub(e).length();
      },
      getBoundingSphere: function (e) {
        return (
          void 0 === e && void 0,
          this.getCenter(e.center),
          (e.radius = 0.5 * this.getSize(de).length()),
          e
        );
      },
      intersect: function (e) {
        return (
          this.min.max(e.min),
          this.max.min(e.max),
          this.isEmpty() && this.makeEmpty(),
          this
        );
      },
      union: function (e) {
        return this.min.min(e.min), this.max.max(e.max), this;
      },
      applyMatrix4: function (e) {
        return (
          this.isEmpty() ||
            (le[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e),
            le[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e),
            le[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e),
            le[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e),
            le[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e),
            le[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e),
            le[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e),
            le[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e),
            this.setFromPoints(le)),
          this
        );
      },
      translate: function (e) {
        return this.min.add(e), this.max.add(e), this;
      },
      equals: function (e) {
        return e.min.equals(this.min) && e.max.equals(this.max);
      },
    }),
      Object.assign(Le.prototype, {
        addEventListener: function (e, t) {
          void 0 === this._listeners && (this._listeners = {});
          var n = this._listeners;
          void 0 === n[e] && (n[e] = []),
            -1 === n[e].indexOf(t) && n[e].push(t);
        },
        hasEventListener: function (e, t) {
          if (void 0 === this._listeners) return !1;
          var n = this._listeners;
          return void 0 !== n[e] && -1 !== n[e].indexOf(t);
        },
        removeEventListener: function (e, t) {
          if (void 0 !== this._listeners) {
            var n = this._listeners,
              i = n[e];
            if (void 0 !== i) {
              var r = i.indexOf(t);
              -1 !== r && i.splice(r, 1);
            }
          }
        },
        dispatchEvent: function (e) {
          if (void 0 !== this._listeners) {
            var t = this._listeners,
              n = t[e.type];
            if (void 0 !== n) {
              e.target = this;
              for (var i = n.slice(0), r = 0, a = i.length; r < a; r++)
                i[r].call(this, e);
            }
          }
        },
      });
    var Te = new Ae();
    function ze(e, t) {
      (this.center = void 0 !== e ? e : new F()),
        (this.radius = void 0 !== t ? t : -1);
    }
    function Se() {
      (this.vertices = []),
        (this.normals = []),
        (this.colors = []),
        (this.uvs = []),
        (this.uvs2 = []),
        (this.groups = []),
        (this.morphTargets = {}),
        (this.skinWeights = []),
        (this.skinIndices = []),
        (this.boundingBox = null),
        (this.boundingSphere = null),
        (this.verticesNeedUpdate = !1),
        (this.normalsNeedUpdate = !1),
        (this.colorsNeedUpdate = !1),
        (this.uvsNeedUpdate = !1),
        (this.groupsNeedUpdate = !1);
    }
    Object.assign(ze.prototype, {
      set: function (e, t) {
        return this.center.copy(e), (this.radius = t), this;
      },
      setFromPoints: function (e, t) {
        var n = this.center;
        void 0 !== t ? n.copy(t) : Te.setFromPoints(e).getCenter(n);
        for (var i = 0, r = 0, a = e.length; r < a; r++)
          i = Math.max(i, n.distanceToSquared(e[r]));
        return (this.radius = Math.sqrt(i)), this;
      },
      clone: function () {
        return new this.constructor().copy(this);
      },
      copy: function (e) {
        return this.center.copy(e.center), (this.radius = e.radius), this;
      },
      isEmpty: function () {
        return this.radius < 0;
      },
      makeEmpty: function () {
        return this.center.set(0, 0, 0), (this.radius = -1), this;
      },
      containsPoint: function (e) {
        return e.distanceToSquared(this.center) <= this.radius * this.radius;
      },
      distanceToPoint: function (e) {
        return e.distanceTo(this.center) - this.radius;
      },
      intersectsSphere: function (e) {
        var t = this.radius + e.radius;
        return e.center.distanceToSquared(this.center) <= t * t;
      },
      intersectsBox: function (e) {
        return e.intersectsSphere(this);
      },
      intersectsPlane: function (e) {
        return Math.abs(e.distanceToPoint(this.center)) <= this.radius;
      },
      clampPoint: function (e, t) {
        var n = this.center.distanceToSquared(e);
        return (
          void 0,
          void 0 === t && (t = new F()),
          t.copy(e),
          n > this.radius * this.radius &&
            (t.sub(this.center).normalize(),
            t.multiplyScalar(this.radius).add(this.center)),
          t
        );
      },
      getBoundingBox: function (e) {
        return (
          void 0,
          void 0 === e && (e = new Ae()),
          this.isEmpty()
            ? (e.makeEmpty(), e)
            : (e.set(this.center, this.center),
              e.expandByScalar(this.radius),
              e)
        );
      },
      applyMatrix4: function (e) {
        return (
          this.center.applyMatrix4(e),
          (this.radius = this.radius * e.getMaxScaleOnAxis()),
          this
        );
      },
      translate: function (e) {
        return this.center.add(e), this;
      },
      equals: function (e) {
        return e.center.equals(this.center) && e.radius === this.radius;
      },
    }),
      Object.assign(Se.prototype, {
        computeGroups: function (e) {
          for (
            var t, n = [], i = void 0, r = e.faces, a = 0;
            a < r.length;
            a++
          ) {
            var o = r[a];
            o.materialIndex !== i &&
              ((i = o.materialIndex),
              void 0 !== t && ((t.count = 3 * a - t.start), n.push(t)),
              (t = { start: 3 * a, materialIndex: i }));
          }
          void 0 !== t && ((t.count = 3 * a - t.start), n.push(t)),
            (this.groups = n);
        },
        fromGeometry: function (e) {
          var t,
            n = e.faces,
            i = e.vertices,
            r = e.faceVertexUvs,
            a = r[0] && r[0].length > 0,
            o = r[1] && r[1].length > 0,
            s = e.morphTargets,
            c = s.length;
          if (c > 0) {
            t = [];
            for (var u = 0; u < c; u++) t[u] = { name: s[u].name, data: [] };
            this.morphTargets.position = t;
          }
          var l,
            d = e.morphNormals,
            h = d.length;
          if (h > 0) {
            l = [];
            for (u = 0; u < h; u++) l[u] = { name: d[u].name, data: [] };
            this.morphTargets.normal = l;
          }
          var p = e.skinIndices,
            m = e.skinWeights,
            f = p.length === i.length,
            _ = m.length === i.length;
          i.length > 0 && 0 === n.length && void 0;
          for (u = 0; u < n.length; u++) {
            var M = n[u];
            this.vertices.push(i[M.a], i[M.b], i[M.c]);
            var v = M.vertexNormals;
            if (3 === v.length) this.normals.push(v[0], v[1], v[2]);
            else {
              var g = M.normal;
              this.normals.push(g, g, g);
            }
            var y = M.vertexColors;
            if (3 === y.length) this.colors.push(y[0], y[1], y[2]);
            else {
              var b = M.color;
              this.colors.push(b, b, b);
            }
            if (!0 === a) {
              var w = r[0][u];
              void 0 !== w
                ? this.uvs.push(w[0], w[1], w[2])
                : (void 0, this.uvs.push(new U(), new U(), new U()));
            }
            if (!0 === o) {
              w = r[1][u];
              void 0 !== w
                ? this.uvs2.push(w[0], w[1], w[2])
                : (void 0, this.uvs2.push(new U(), new U(), new U()));
            }
            for (var A = 0; A < c; A++) {
              var x = s[A].vertices;
              t[A].data.push(x[M.a], x[M.b], x[M.c]);
            }
            for (A = 0; A < h; A++) {
              var L = d[A].vertexNormals[u];
              l[A].data.push(L.a, L.b, L.c);
            }
            f && this.skinIndices.push(p[M.a], p[M.b], p[M.c]),
              _ && this.skinWeights.push(m[M.a], m[M.b], m[M.c]);
          }
          return (
            this.computeGroups(e),
            (this.verticesNeedUpdate = e.verticesNeedUpdate),
            (this.normalsNeedUpdate = e.normalsNeedUpdate),
            (this.colorsNeedUpdate = e.colorsNeedUpdate),
            (this.uvsNeedUpdate = e.uvsNeedUpdate),
            (this.groupsNeedUpdate = e.groupsNeedUpdate),
            null !== e.boundingSphere &&
              (this.boundingSphere = e.boundingSphere.clone()),
            null !== e.boundingBox &&
              (this.boundingBox = e.boundingBox.clone()),
            this
          );
        },
      });
    var Oe = new F(),
      Ee = new je(),
      ke = new F(0, 0, 0),
      Ce = new F(1, 1, 1),
      De = new F(),
      Ne = new F(),
      Pe = new F();
    function je() {
      (this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
        arguments.length;
    }
    Object.assign(je.prototype, {
      isMatrix4: !0,
      set: function (e, t, n, i, r, a, o, s, c, u, l, d, h, p, m, f) {
        var _ = this.elements;
        return (
          (_[0] = e),
          (_[4] = t),
          (_[8] = n),
          (_[12] = i),
          (_[1] = r),
          (_[5] = a),
          (_[9] = o),
          (_[13] = s),
          (_[2] = c),
          (_[6] = u),
          (_[10] = l),
          (_[14] = d),
          (_[3] = h),
          (_[7] = p),
          (_[11] = m),
          (_[15] = f),
          this
        );
      },
      identity: function () {
        return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
      },
      clone: function () {
        return new je().fromArray(this.elements);
      },
      copy: function (e) {
        var t = this.elements,
          n = e.elements;
        return (
          (t[0] = n[0]),
          (t[1] = n[1]),
          (t[2] = n[2]),
          (t[3] = n[3]),
          (t[4] = n[4]),
          (t[5] = n[5]),
          (t[6] = n[6]),
          (t[7] = n[7]),
          (t[8] = n[8]),
          (t[9] = n[9]),
          (t[10] = n[10]),
          (t[11] = n[11]),
          (t[12] = n[12]),
          (t[13] = n[13]),
          (t[14] = n[14]),
          (t[15] = n[15]),
          this
        );
      },
      copyPosition: function (e) {
        var t = this.elements,
          n = e.elements;
        return (t[12] = n[12]), (t[13] = n[13]), (t[14] = n[14]), this;
      },
      extractBasis: function (e, t, n) {
        return (
          e.setFromMatrixColumn(this, 0),
          t.setFromMatrixColumn(this, 1),
          n.setFromMatrixColumn(this, 2),
          this
        );
      },
      makeBasis: function (e, t, n) {
        return (
          this.set(
            e.x,
            t.x,
            n.x,
            0,
            e.y,
            t.y,
            n.y,
            0,
            e.z,
            t.z,
            n.z,
            0,
            0,
            0,
            0,
            1
          ),
          this
        );
      },
      extractRotation: function (e) {
        var t = this.elements,
          n = e.elements,
          i = 1 / Oe.setFromMatrixColumn(e, 0).length(),
          r = 1 / Oe.setFromMatrixColumn(e, 1).length(),
          a = 1 / Oe.setFromMatrixColumn(e, 2).length();
        return (
          (t[0] = n[0] * i),
          (t[1] = n[1] * i),
          (t[2] = n[2] * i),
          (t[3] = 0),
          (t[4] = n[4] * r),
          (t[5] = n[5] * r),
          (t[6] = n[6] * r),
          (t[7] = 0),
          (t[8] = n[8] * a),
          (t[9] = n[9] * a),
          (t[10] = n[10] * a),
          (t[11] = 0),
          (t[12] = 0),
          (t[13] = 0),
          (t[14] = 0),
          (t[15] = 1),
          this
        );
      },
      makeRotationFromEuler: function (e) {
        (e && e.isEuler) || void 0;
        var t = this.elements,
          n = e.x,
          i = e.y,
          r = e.z,
          a = Math.cos(n),
          o = Math.sin(n),
          s = Math.cos(i),
          c = Math.sin(i),
          u = Math.cos(r),
          l = Math.sin(r);
        if ('XYZ' === e.order) {
          var d = a * u,
            h = a * l,
            p = o * u,
            m = o * l;
          (t[0] = s * u),
            (t[4] = -s * l),
            (t[8] = c),
            (t[1] = h + p * c),
            (t[5] = d - m * c),
            (t[9] = -o * s),
            (t[2] = m - d * c),
            (t[6] = p + h * c),
            (t[10] = a * s);
        } else if ('YXZ' === e.order) {
          var f = s * u,
            _ = s * l,
            M = c * u,
            v = c * l;
          (t[0] = f + v * o),
            (t[4] = M * o - _),
            (t[8] = a * c),
            (t[1] = a * l),
            (t[5] = a * u),
            (t[9] = -o),
            (t[2] = _ * o - M),
            (t[6] = v + f * o),
            (t[10] = a * s);
        } else if ('ZXY' === e.order) {
          (f = s * u), (_ = s * l), (M = c * u), (v = c * l);
          (t[0] = f - v * o),
            (t[4] = -a * l),
            (t[8] = M + _ * o),
            (t[1] = _ + M * o),
            (t[5] = a * u),
            (t[9] = v - f * o),
            (t[2] = -a * c),
            (t[6] = o),
            (t[10] = a * s);
        } else if ('ZYX' === e.order) {
          (d = a * u), (h = a * l), (p = o * u), (m = o * l);
          (t[0] = s * u),
            (t[4] = p * c - h),
            (t[8] = d * c + m),
            (t[1] = s * l),
            (t[5] = m * c + d),
            (t[9] = h * c - p),
            (t[2] = -c),
            (t[6] = o * s),
            (t[10] = a * s);
        } else if ('YZX' === e.order) {
          var g = a * s,
            y = a * c,
            b = o * s,
            w = o * c;
          (t[0] = s * u),
            (t[4] = w - g * l),
            (t[8] = b * l + y),
            (t[1] = l),
            (t[5] = a * u),
            (t[9] = -o * u),
            (t[2] = -c * u),
            (t[6] = y * l + b),
            (t[10] = g - w * l);
        } else if ('XZY' === e.order) {
          (g = a * s), (y = a * c), (b = o * s), (w = o * c);
          (t[0] = s * u),
            (t[4] = -l),
            (t[8] = c * u),
            (t[1] = g * l + w),
            (t[5] = a * u),
            (t[9] = y * l - b),
            (t[2] = b * l - y),
            (t[6] = o * u),
            (t[10] = w * l + g);
        }
        return (
          (t[3] = 0),
          (t[7] = 0),
          (t[11] = 0),
          (t[12] = 0),
          (t[13] = 0),
          (t[14] = 0),
          (t[15] = 1),
          this
        );
      },
      makeRotationFromQuaternion: function (e) {
        return this.compose(ke, e, Ce);
      },
      lookAt: function (e, t, n) {
        var i = this.elements;
        return (
          Pe.subVectors(e, t),
          0 === Pe.lengthSq() && (Pe.z = 1),
          Pe.normalize(),
          De.crossVectors(n, Pe),
          0 === De.lengthSq() &&
            (1 === Math.abs(n.z) ? (Pe.x += 1e-4) : (Pe.z += 1e-4),
            Pe.normalize(),
            De.crossVectors(n, Pe)),
          De.normalize(),
          Ne.crossVectors(Pe, De),
          (i[0] = De.x),
          (i[4] = Ne.x),
          (i[8] = Pe.x),
          (i[1] = De.y),
          (i[5] = Ne.y),
          (i[9] = Pe.y),
          (i[2] = De.z),
          (i[6] = Ne.z),
          (i[10] = Pe.z),
          this
        );
      },
      multiply: function (e, t) {
        return void 0 !== t
          ? (void 0, this.multiplyMatrices(e, t))
          : this.multiplyMatrices(this, e);
      },
      premultiply: function (e) {
        return this.multiplyMatrices(e, this);
      },
      multiplyMatrices: function (e, t) {
        var n = e.elements,
          i = t.elements,
          r = this.elements,
          a = n[0],
          o = n[4],
          s = n[8],
          c = n[12],
          u = n[1],
          l = n[5],
          d = n[9],
          h = n[13],
          p = n[2],
          m = n[6],
          f = n[10],
          _ = n[14],
          M = n[3],
          v = n[7],
          g = n[11],
          y = n[15],
          b = i[0],
          w = i[4],
          A = i[8],
          x = i[12],
          L = i[1],
          T = i[5],
          z = i[9],
          S = i[13],
          O = i[2],
          E = i[6],
          k = i[10],
          C = i[14],
          D = i[3],
          N = i[7],
          P = i[11],
          j = i[15];
        return (
          (r[0] = a * b + o * L + s * O + c * D),
          (r[4] = a * w + o * T + s * E + c * N),
          (r[8] = a * A + o * z + s * k + c * P),
          (r[12] = a * x + o * S + s * C + c * j),
          (r[1] = u * b + l * L + d * O + h * D),
          (r[5] = u * w + l * T + d * E + h * N),
          (r[9] = u * A + l * z + d * k + h * P),
          (r[13] = u * x + l * S + d * C + h * j),
          (r[2] = p * b + m * L + f * O + _ * D),
          (r[6] = p * w + m * T + f * E + _ * N),
          (r[10] = p * A + m * z + f * k + _ * P),
          (r[14] = p * x + m * S + f * C + _ * j),
          (r[3] = M * b + v * L + g * O + y * D),
          (r[7] = M * w + v * T + g * E + y * N),
          (r[11] = M * A + v * z + g * k + y * P),
          (r[15] = M * x + v * S + g * C + y * j),
          this
        );
      },
      multiplyScalar: function (e) {
        var t = this.elements;
        return (
          (t[0] *= e),
          (t[4] *= e),
          (t[8] *= e),
          (t[12] *= e),
          (t[1] *= e),
          (t[5] *= e),
          (t[9] *= e),
          (t[13] *= e),
          (t[2] *= e),
          (t[6] *= e),
          (t[10] *= e),
          (t[14] *= e),
          (t[3] *= e),
          (t[7] *= e),
          (t[11] *= e),
          (t[15] *= e),
          this
        );
      },
      determinant: function () {
        var e = this.elements,
          t = e[0],
          n = e[4],
          i = e[8],
          r = e[12],
          a = e[1],
          o = e[5],
          s = e[9],
          c = e[13],
          u = e[2],
          l = e[6],
          d = e[10],
          h = e[14],
          p = e[3],
          m = e[7],
          f = e[11],
          _ = e[15];
        return (
          p *
            (+r * s * l -
              i * c * l -
              r * o * d +
              n * c * d +
              i * o * h -
              n * s * h) +
          m *
            (+t * s * h -
              t * c * d +
              r * a * d -
              i * a * h +
              i * c * u -
              r * s * u) +
          f *
            (+t * c * l -
              t * o * h -
              r * a * l +
              n * a * h +
              r * o * u -
              n * c * u) +
          _ *
            (-i * o * u -
              t * s * l +
              t * o * d +
              i * a * l -
              n * a * d +
              n * s * u)
        );
      },
      transpose: function () {
        var e,
          t = this.elements;
        return (
          (e = t[1]),
          (t[1] = t[4]),
          (t[4] = e),
          (e = t[2]),
          (t[2] = t[8]),
          (t[8] = e),
          (e = t[6]),
          (t[6] = t[9]),
          (t[9] = e),
          (e = t[3]),
          (t[3] = t[12]),
          (t[12] = e),
          (e = t[7]),
          (t[7] = t[13]),
          (t[13] = e),
          (e = t[11]),
          (t[11] = t[14]),
          (t[14] = e),
          this
        );
      },
      setPosition: function (e, t, n) {
        var i = this.elements;
        return (
          e.isVector3
            ? ((i[12] = e.x), (i[13] = e.y), (i[14] = e.z))
            : ((i[12] = e), (i[13] = t), (i[14] = n)),
          this
        );
      },
      getInverse: function (e, t) {
        void 0 !== t && void 0;
        var n = this.elements,
          i = e.elements,
          r = i[0],
          a = i[1],
          o = i[2],
          s = i[3],
          c = i[4],
          u = i[5],
          l = i[6],
          d = i[7],
          h = i[8],
          p = i[9],
          m = i[10],
          f = i[11],
          _ = i[12],
          M = i[13],
          v = i[14],
          g = i[15],
          y =
            p * v * d -
            M * m * d +
            M * l * f -
            u * v * f -
            p * l * g +
            u * m * g,
          b =
            _ * m * d -
            h * v * d -
            _ * l * f +
            c * v * f +
            h * l * g -
            c * m * g,
          w =
            h * M * d -
            _ * p * d +
            _ * u * f -
            c * M * f -
            h * u * g +
            c * p * g,
          A =
            _ * p * l -
            h * M * l -
            _ * u * m +
            c * M * m +
            h * u * v -
            c * p * v,
          x = r * y + a * b + o * w + s * A;
        if (0 === x)
          return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        var L = 1 / x;
        return (
          (n[0] = y * L),
          (n[1] =
            (M * m * s -
              p * v * s -
              M * o * f +
              a * v * f +
              p * o * g -
              a * m * g) *
            L),
          (n[2] =
            (u * v * s -
              M * l * s +
              M * o * d -
              a * v * d -
              u * o * g +
              a * l * g) *
            L),
          (n[3] =
            (p * l * s -
              u * m * s -
              p * o * d +
              a * m * d +
              u * o * f -
              a * l * f) *
            L),
          (n[4] = b * L),
          (n[5] =
            (h * v * s -
              _ * m * s +
              _ * o * f -
              r * v * f -
              h * o * g +
              r * m * g) *
            L),
          (n[6] =
            (_ * l * s -
              c * v * s -
              _ * o * d +
              r * v * d +
              c * o * g -
              r * l * g) *
            L),
          (n[7] =
            (c * m * s -
              h * l * s +
              h * o * d -
              r * m * d -
              c * o * f +
              r * l * f) *
            L),
          (n[8] = w * L),
          (n[9] =
            (_ * p * s -
              h * M * s -
              _ * a * f +
              r * M * f +
              h * a * g -
              r * p * g) *
            L),
          (n[10] =
            (c * M * s -
              _ * u * s +
              _ * a * d -
              r * M * d -
              c * a * g +
              r * u * g) *
            L),
          (n[11] =
            (h * u * s -
              c * p * s -
              h * a * d +
              r * p * d +
              c * a * f -
              r * u * f) *
            L),
          (n[12] = A * L),
          (n[13] =
            (h * M * o -
              _ * p * o +
              _ * a * m -
              r * M * m -
              h * a * v +
              r * p * v) *
            L),
          (n[14] =
            (_ * u * o -
              c * M * o -
              _ * a * l +
              r * M * l +
              c * a * v -
              r * u * v) *
            L),
          (n[15] =
            (c * p * o -
              h * u * o +
              h * a * l -
              r * p * l -
              c * a * m +
              r * u * m) *
            L),
          this
        );
      },
      scale: function (e) {
        var t = this.elements,
          n = e.x,
          i = e.y,
          r = e.z;
        return (
          (t[0] *= n),
          (t[4] *= i),
          (t[8] *= r),
          (t[1] *= n),
          (t[5] *= i),
          (t[9] *= r),
          (t[2] *= n),
          (t[6] *= i),
          (t[10] *= r),
          (t[3] *= n),
          (t[7] *= i),
          (t[11] *= r),
          this
        );
      },
      getMaxScaleOnAxis: function () {
        var e = this.elements,
          t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],
          n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6],
          i = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
        return Math.sqrt(Math.max(t, n, i));
      },
      makeTranslation: function (e, t, n) {
        return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1), this;
      },
      makeRotationX: function (e) {
        var t = Math.cos(e),
          n = Math.sin(e);
        return this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1), this;
      },
      makeRotationY: function (e) {
        var t = Math.cos(e),
          n = Math.sin(e);
        return this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1), this;
      },
      makeRotationZ: function (e) {
        var t = Math.cos(e),
          n = Math.sin(e);
        return this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
      },
      makeRotationAxis: function (e, t) {
        var n = Math.cos(t),
          i = Math.sin(t),
          r = 1 - n,
          a = e.x,
          o = e.y,
          s = e.z,
          c = r * a,
          u = r * o;
        return (
          this.set(
            c * a + n,
            c * o - i * s,
            c * s + i * o,
            0,
            c * o + i * s,
            u * o + n,
            u * s - i * a,
            0,
            c * s - i * o,
            u * s + i * a,
            r * s * s + n,
            0,
            0,
            0,
            0,
            1
          ),
          this
        );
      },
      makeScale: function (e, t, n) {
        return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1), this;
      },
      makeShear: function (e, t, n) {
        return this.set(1, t, n, 0, e, 1, n, 0, e, t, 1, 0, 0, 0, 0, 1), this;
      },
      compose: function (e, t, n) {
        var i = this.elements,
          r = t._x,
          a = t._y,
          o = t._z,
          s = t._w,
          c = r + r,
          u = a + a,
          l = o + o,
          d = r * c,
          h = r * u,
          p = r * l,
          m = a * u,
          f = a * l,
          _ = o * l,
          M = s * c,
          v = s * u,
          g = s * l,
          y = n.x,
          b = n.y,
          w = n.z;
        return (
          (i[0] = (1 - (m + _)) * y),
          (i[1] = (h + g) * y),
          (i[2] = (p - v) * y),
          (i[3] = 0),
          (i[4] = (h - g) * b),
          (i[5] = (1 - (d + _)) * b),
          (i[6] = (f + M) * b),
          (i[7] = 0),
          (i[8] = (p + v) * w),
          (i[9] = (f - M) * w),
          (i[10] = (1 - (d + m)) * w),
          (i[11] = 0),
          (i[12] = e.x),
          (i[13] = e.y),
          (i[14] = e.z),
          (i[15] = 1),
          this
        );
      },
      decompose: function (e, t, n) {
        var i = this.elements,
          r = Oe.set(i[0], i[1], i[2]).length(),
          a = Oe.set(i[4], i[5], i[6]).length(),
          o = Oe.set(i[8], i[9], i[10]).length(),
          s = this.determinant();
        s < 0 && (r = -r),
          (e.x = i[12]),
          (e.y = i[13]),
          (e.z = i[14]),
          Ee.copy(this);
        var c = 1 / r,
          u = 1 / a,
          l = 1 / o;
        return (
          (Ee.elements[0] *= c),
          (Ee.elements[1] *= c),
          (Ee.elements[2] *= c),
          (Ee.elements[4] *= u),
          (Ee.elements[5] *= u),
          (Ee.elements[6] *= u),
          (Ee.elements[8] *= l),
          (Ee.elements[9] *= l),
          (Ee.elements[10] *= l),
          t.setFromRotationMatrix(Ee),
          (n.x = r),
          (n.y = a),
          (n.z = o),
          this
        );
      },
      makePerspective: function (e, t, n, i, r, a) {
        void 0 === a && void 0;
        var o = this.elements,
          s = (2 * r) / (t - e),
          c = (2 * r) / (n - i),
          u = (t + e) / (t - e),
          l = (n + i) / (n - i),
          d = -(a + r) / (a - r),
          h = (-2 * a * r) / (a - r);
        return (
          (o[0] = s),
          (o[4] = 0),
          (o[8] = u),
          (o[12] = 0),
          (o[1] = 0),
          (o[5] = c),
          (o[9] = l),
          (o[13] = 0),
          (o[2] = 0),
          (o[6] = 0),
          (o[10] = d),
          (o[14] = h),
          (o[3] = 0),
          (o[7] = 0),
          (o[11] = -1),
          (o[15] = 0),
          this
        );
      },
      makeOrthographic: function (e, t, n, i, r, a) {
        var o = this.elements,
          s = 1 / (t - e),
          c = 1 / (n - i),
          u = 1 / (a - r),
          l = (t + e) * s,
          d = (n + i) * c,
          h = (a + r) * u;
        return (
          (o[0] = 2 * s),
          (o[4] = 0),
          (o[8] = 0),
          (o[12] = -l),
          (o[1] = 0),
          (o[5] = 2 * c),
          (o[9] = 0),
          (o[13] = -d),
          (o[2] = 0),
          (o[6] = 0),
          (o[10] = -2 * u),
          (o[14] = -h),
          (o[3] = 0),
          (o[7] = 0),
          (o[11] = 0),
          (o[15] = 1),
          this
        );
      },
      equals: function (e) {
        for (var t = this.elements, n = e.elements, i = 0; i < 16; i++)
          if (t[i] !== n[i]) return !1;
        return !0;
      },
      fromArray: function (e, t) {
        void 0 === t && (t = 0);
        for (var n = 0; n < 16; n++) this.elements[n] = e[n + t];
        return this;
      },
      toArray: function (e, t) {
        void 0 === e && (e = []), void 0 === t && (t = 0);
        var n = this.elements;
        return (
          (e[t] = n[0]),
          (e[t + 1] = n[1]),
          (e[t + 2] = n[2]),
          (e[t + 3] = n[3]),
          (e[t + 4] = n[4]),
          (e[t + 5] = n[5]),
          (e[t + 6] = n[6]),
          (e[t + 7] = n[7]),
          (e[t + 8] = n[8]),
          (e[t + 9] = n[9]),
          (e[t + 10] = n[10]),
          (e[t + 11] = n[11]),
          (e[t + 12] = n[12]),
          (e[t + 13] = n[13]),
          (e[t + 14] = n[14]),
          (e[t + 15] = n[15]),
          e
        );
      },
    });
    var Ye = new je(),
      Re = new I();
    function Be(e, t, n, i) {
      (this._x = e || 0),
        (this._y = t || 0),
        (this._z = n || 0),
        (this._order = i || Be.DefaultOrder);
    }
    function We() {
      this.mask = 1 | 0;
    }
    function Ie() {
      (this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1]), arguments.length;
    }
    (Be.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX']),
      (Be.DefaultOrder = 'XYZ'),
      Object.defineProperties(Be.prototype, {
        x: {
          get: function () {
            return this._x;
          },
          set: function (e) {
            (this._x = e), this._onChangeCallback();
          },
        },
        y: {
          get: function () {
            return this._y;
          },
          set: function (e) {
            (this._y = e), this._onChangeCallback();
          },
        },
        z: {
          get: function () {
            return this._z;
          },
          set: function (e) {
            (this._z = e), this._onChangeCallback();
          },
        },
        order: {
          get: function () {
            return this._order;
          },
          set: function (e) {
            (this._order = e), this._onChangeCallback();
          },
        },
      }),
      Object.assign(Be.prototype, {
        isEuler: !0,
        set: function (e, t, n, i) {
          return (
            (this._x = e),
            (this._y = t),
            (this._z = n),
            (this._order = i || this._order),
            this._onChangeCallback(),
            this
          );
        },
        clone: function () {
          return new this.constructor(this._x, this._y, this._z, this._order);
        },
        copy: function (e) {
          return (
            (this._x = e._x),
            (this._y = e._y),
            (this._z = e._z),
            (this._order = e._order),
            this._onChangeCallback(),
            this
          );
        },
        setFromRotationMatrix: function (e, t, n) {
          var i = W['a'].clamp,
            r = e.elements,
            a = r[0],
            o = r[4],
            s = r[8],
            c = r[1],
            u = r[5],
            l = r[9],
            d = r[2],
            h = r[6],
            p = r[10];
          switch (((t = t || this._order), t)) {
            case 'XYZ':
              (this._y = Math.asin(i(s, -1, 1))),
                Math.abs(s) < 0.9999999
                  ? ((this._x = Math.atan2(-l, p)),
                    (this._z = Math.atan2(-o, a)))
                  : ((this._x = Math.atan2(h, u)), (this._z = 0));
              break;
            case 'YXZ':
              (this._x = Math.asin(-i(l, -1, 1))),
                Math.abs(l) < 0.9999999
                  ? ((this._y = Math.atan2(s, p)), (this._z = Math.atan2(c, u)))
                  : ((this._y = Math.atan2(-d, a)), (this._z = 0));
              break;
            case 'ZXY':
              (this._x = Math.asin(i(h, -1, 1))),
                Math.abs(h) < 0.9999999
                  ? ((this._y = Math.atan2(-d, p)),
                    (this._z = Math.atan2(-o, u)))
                  : ((this._y = 0), (this._z = Math.atan2(c, a)));
              break;
            case 'ZYX':
              (this._y = Math.asin(-i(d, -1, 1))),
                Math.abs(d) < 0.9999999
                  ? ((this._x = Math.atan2(h, p)), (this._z = Math.atan2(c, a)))
                  : ((this._x = 0), (this._z = Math.atan2(-o, u)));
              break;
            case 'YZX':
              (this._z = Math.asin(i(c, -1, 1))),
                Math.abs(c) < 0.9999999
                  ? ((this._x = Math.atan2(-l, u)),
                    (this._y = Math.atan2(-d, a)))
                  : ((this._x = 0), (this._y = Math.atan2(s, p)));
              break;
            case 'XZY':
              (this._z = Math.asin(-i(o, -1, 1))),
                Math.abs(o) < 0.9999999
                  ? ((this._x = Math.atan2(h, u)), (this._y = Math.atan2(s, a)))
                  : ((this._x = Math.atan2(-l, p)), (this._y = 0));
              break;
            default:
              void 0;
          }
          return (this._order = t), !1 !== n && this._onChangeCallback(), this;
        },
        setFromQuaternion: function (e, t, n) {
          return (
            Ye.makeRotationFromQuaternion(e),
            this.setFromRotationMatrix(Ye, t, n)
          );
        },
        setFromVector3: function (e, t) {
          return this.set(e.x, e.y, e.z, t || this._order);
        },
        reorder: function (e) {
          return Re.setFromEuler(this), this.setFromQuaternion(Re, e);
        },
        equals: function (e) {
          return (
            e._x === this._x &&
            e._y === this._y &&
            e._z === this._z &&
            e._order === this._order
          );
        },
        fromArray: function (e) {
          return (
            (this._x = e[0]),
            (this._y = e[1]),
            (this._z = e[2]),
            void 0 !== e[3] && (this._order = e[3]),
            this._onChangeCallback(),
            this
          );
        },
        toArray: function (e, t) {
          return (
            void 0 === e && (e = []),
            void 0 === t && (t = 0),
            (e[t] = this._x),
            (e[t + 1] = this._y),
            (e[t + 2] = this._z),
            (e[t + 3] = this._order),
            e
          );
        },
        toVector3: function (e) {
          return e
            ? e.set(this._x, this._y, this._z)
            : new F(this._x, this._y, this._z);
        },
        _onChange: function (e) {
          return (this._onChangeCallback = e), this;
        },
        _onChangeCallback: function () {},
      }),
      Object.assign(We.prototype, {
        set: function (e) {
          this.mask = (1 << e) | 0;
        },
        enable: function (e) {
          this.mask |= (1 << e) | 0;
        },
        enableAll: function () {
          this.mask = 4294967295 | 0;
        },
        toggle: function (e) {
          this.mask ^= (1 << e) | 0;
        },
        disable: function (e) {
          this.mask &= ~((1 << e) | 0);
        },
        disableAll: function () {
          this.mask = 0;
        },
        test: function (e) {
          return 0 !== (this.mask & e.mask);
        },
      }),
      Object.assign(Ie.prototype, {
        isMatrix3: !0,
        set: function (e, t, n, i, r, a, o, s, c) {
          var u = this.elements;
          return (
            (u[0] = e),
            (u[1] = i),
            (u[2] = o),
            (u[3] = t),
            (u[4] = r),
            (u[5] = s),
            (u[6] = n),
            (u[7] = a),
            (u[8] = c),
            this
          );
        },
        identity: function () {
          return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
        },
        clone: function () {
          return new this.constructor().fromArray(this.elements);
        },
        copy: function (e) {
          var t = this.elements,
            n = e.elements;
          return (
            (t[0] = n[0]),
            (t[1] = n[1]),
            (t[2] = n[2]),
            (t[3] = n[3]),
            (t[4] = n[4]),
            (t[5] = n[5]),
            (t[6] = n[6]),
            (t[7] = n[7]),
            (t[8] = n[8]),
            this
          );
        },
        extractBasis: function (e, t, n) {
          return (
            e.setFromMatrix3Column(this, 0),
            t.setFromMatrix3Column(this, 1),
            n.setFromMatrix3Column(this, 2),
            this
          );
        },
        setFromMatrix4: function (e) {
          var t = e.elements;
          return (
            this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]),
            this
          );
        },
        multiply: function (e) {
          return this.multiplyMatrices(this, e);
        },
        premultiply: function (e) {
          return this.multiplyMatrices(e, this);
        },
        multiplyMatrices: function (e, t) {
          var n = e.elements,
            i = t.elements,
            r = this.elements,
            a = n[0],
            o = n[3],
            s = n[6],
            c = n[1],
            u = n[4],
            l = n[7],
            d = n[2],
            h = n[5],
            p = n[8],
            m = i[0],
            f = i[3],
            _ = i[6],
            M = i[1],
            v = i[4],
            g = i[7],
            y = i[2],
            b = i[5],
            w = i[8];
          return (
            (r[0] = a * m + o * M + s * y),
            (r[3] = a * f + o * v + s * b),
            (r[6] = a * _ + o * g + s * w),
            (r[1] = c * m + u * M + l * y),
            (r[4] = c * f + u * v + l * b),
            (r[7] = c * _ + u * g + l * w),
            (r[2] = d * m + h * M + p * y),
            (r[5] = d * f + h * v + p * b),
            (r[8] = d * _ + h * g + p * w),
            this
          );
        },
        multiplyScalar: function (e) {
          var t = this.elements;
          return (
            (t[0] *= e),
            (t[3] *= e),
            (t[6] *= e),
            (t[1] *= e),
            (t[4] *= e),
            (t[7] *= e),
            (t[2] *= e),
            (t[5] *= e),
            (t[8] *= e),
            this
          );
        },
        determinant: function () {
          var e = this.elements,
            t = e[0],
            n = e[1],
            i = e[2],
            r = e[3],
            a = e[4],
            o = e[5],
            s = e[6],
            c = e[7],
            u = e[8];
          return (
            t * a * u -
            t * o * c -
            n * r * u +
            n * o * s +
            i * r * c -
            i * a * s
          );
        },
        getInverse: function (e, t) {
          void 0 !== t && void 0;
          var n = e.elements,
            i = this.elements,
            r = n[0],
            a = n[1],
            o = n[2],
            s = n[3],
            c = n[4],
            u = n[5],
            l = n[6],
            d = n[7],
            h = n[8],
            p = h * c - u * d,
            m = u * l - h * s,
            f = d * s - c * l,
            _ = r * p + a * m + o * f;
          if (0 === _) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
          var M = 1 / _;
          return (
            (i[0] = p * M),
            (i[1] = (o * d - h * a) * M),
            (i[2] = (u * a - o * c) * M),
            (i[3] = m * M),
            (i[4] = (h * r - o * l) * M),
            (i[5] = (o * s - u * r) * M),
            (i[6] = f * M),
            (i[7] = (a * l - d * r) * M),
            (i[8] = (c * r - a * s) * M),
            this
          );
        },
        transpose: function () {
          var e,
            t = this.elements;
          return (
            (e = t[1]),
            (t[1] = t[3]),
            (t[3] = e),
            (e = t[2]),
            (t[2] = t[6]),
            (t[6] = e),
            (e = t[5]),
            (t[5] = t[7]),
            (t[7] = e),
            this
          );
        },
        getNormalMatrix: function (e) {
          return this.setFromMatrix4(e).getInverse(this).transpose();
        },
        transposeIntoArray: function (e) {
          var t = this.elements;
          return (
            (e[0] = t[0]),
            (e[1] = t[3]),
            (e[2] = t[6]),
            (e[3] = t[1]),
            (e[4] = t[4]),
            (e[5] = t[7]),
            (e[6] = t[2]),
            (e[7] = t[5]),
            (e[8] = t[8]),
            this
          );
        },
        setUvTransform: function (e, t, n, i, r, a, o) {
          var s = Math.cos(r),
            c = Math.sin(r);
          this.set(
            n * s,
            n * c,
            -n * (s * a + c * o) + a + e,
            -i * c,
            i * s,
            -i * (-c * a + s * o) + o + t,
            0,
            0,
            1
          );
        },
        scale: function (e, t) {
          var n = this.elements;
          return (
            (n[0] *= e),
            (n[3] *= e),
            (n[6] *= e),
            (n[1] *= t),
            (n[4] *= t),
            (n[7] *= t),
            this
          );
        },
        rotate: function (e) {
          var t = Math.cos(e),
            n = Math.sin(e),
            i = this.elements,
            r = i[0],
            a = i[3],
            o = i[6],
            s = i[1],
            c = i[4],
            u = i[7];
          return (
            (i[0] = t * r + n * s),
            (i[3] = t * a + n * c),
            (i[6] = t * o + n * u),
            (i[1] = -n * r + t * s),
            (i[4] = -n * a + t * c),
            (i[7] = -n * o + t * u),
            this
          );
        },
        translate: function (e, t) {
          var n = this.elements;
          return (
            (n[0] += e * n[2]),
            (n[3] += e * n[5]),
            (n[6] += e * n[8]),
            (n[1] += t * n[2]),
            (n[4] += t * n[5]),
            (n[7] += t * n[8]),
            this
          );
        },
        equals: function (e) {
          for (var t = this.elements, n = e.elements, i = 0; i < 9; i++)
            if (t[i] !== n[i]) return !1;
          return !0;
        },
        fromArray: function (e, t) {
          void 0 === t && (t = 0);
          for (var n = 0; n < 9; n++) this.elements[n] = e[n + t];
          return this;
        },
        toArray: function (e, t) {
          void 0 === e && (e = []), void 0 === t && (t = 0);
          var n = this.elements;
          return (
            (e[t] = n[0]),
            (e[t + 1] = n[1]),
            (e[t + 2] = n[2]),
            (e[t + 3] = n[3]),
            (e[t + 4] = n[4]),
            (e[t + 5] = n[5]),
            (e[t + 6] = n[6]),
            (e[t + 7] = n[7]),
            (e[t + 8] = n[8]),
            e
          );
        },
      });
    var qe = 0,
      He = new F(),
      Fe = new I(),
      Ue = new je(),
      Xe = new F(),
      Ve = new F(),
      Ge = new F(),
      Je = new I(),
      Ze = new F(1, 0, 0),
      Ke = new F(0, 1, 0),
      Qe = new F(0, 0, 1),
      $e = { type: 'added' },
      et = { type: 'removed' };
    function tt() {
      Object.defineProperty(this, 'id', { value: qe++ }),
        (this.uuid = W['a'].generateUUID()),
        (this.name = ''),
        (this.type = 'Object3D'),
        (this.parent = null),
        (this.children = []),
        (this.up = tt.DefaultUp.clone());
      var e = new F(),
        t = new Be(),
        n = new I(),
        i = new F(1, 1, 1);
      function r() {
        n.setFromEuler(t, !1);
      }
      function a() {
        t.setFromQuaternion(n, void 0, !1);
      }
      t._onChange(r),
        n._onChange(a),
        Object.defineProperties(this, {
          position: { configurable: !0, enumerable: !0, value: e },
          rotation: { configurable: !0, enumerable: !0, value: t },
          quaternion: { configurable: !0, enumerable: !0, value: n },
          scale: { configurable: !0, enumerable: !0, value: i },
          modelViewMatrix: { value: new je() },
          normalMatrix: { value: new Ie() },
        }),
        (this.matrix = new je()),
        (this.matrixWorld = new je()),
        (this.matrixAutoUpdate = tt.DefaultMatrixAutoUpdate),
        (this.matrixWorldNeedsUpdate = !1),
        (this.layers = new We()),
        (this.visible = !0),
        (this.castShadow = !1),
        (this.receiveShadow = !1),
        (this.frustumCulled = !0),
        (this.renderOrder = 0),
        (this.userData = {});
    }
    function nt(e) {
      if (0 === e.length) return -1 / 0;
      for (var t = e[0], n = 1, i = e.length; n < i; ++n)
        e[n] > t && (t = e[n]);
      return t;
    }
    (tt.DefaultUp = new F(0, 1, 0)),
      (tt.DefaultMatrixAutoUpdate = !0),
      (tt.prototype = Object.assign(Object.create(Le.prototype), {
        constructor: tt,
        isObject3D: !0,
        onBeforeRender: function () {},
        onAfterRender: function () {},
        applyMatrix4: function (e) {
          this.matrixAutoUpdate && this.updateMatrix(),
            this.matrix.premultiply(e),
            this.matrix.decompose(this.position, this.quaternion, this.scale);
        },
        applyQuaternion: function (e) {
          return this.quaternion.premultiply(e), this;
        },
        setRotationFromAxisAngle: function (e, t) {
          this.quaternion.setFromAxisAngle(e, t);
        },
        setRotationFromEuler: function (e) {
          this.quaternion.setFromEuler(e, !0);
        },
        setRotationFromMatrix: function (e) {
          this.quaternion.setFromRotationMatrix(e);
        },
        setRotationFromQuaternion: function (e) {
          this.quaternion.copy(e);
        },
        rotateOnAxis: function (e, t) {
          return Fe.setFromAxisAngle(e, t), this.quaternion.multiply(Fe), this;
        },
        rotateOnWorldAxis: function (e, t) {
          return (
            Fe.setFromAxisAngle(e, t), this.quaternion.premultiply(Fe), this
          );
        },
        rotateX: function (e) {
          return this.rotateOnAxis(Ze, e);
        },
        rotateY: function (e) {
          return this.rotateOnAxis(Ke, e);
        },
        rotateZ: function (e) {
          return this.rotateOnAxis(Qe, e);
        },
        translateOnAxis: function (e, t) {
          return (
            He.copy(e).applyQuaternion(this.quaternion),
            this.position.add(He.multiplyScalar(t)),
            this
          );
        },
        translateX: function (e) {
          return this.translateOnAxis(Ze, e);
        },
        translateY: function (e) {
          return this.translateOnAxis(Ke, e);
        },
        translateZ: function (e) {
          return this.translateOnAxis(Qe, e);
        },
        localToWorld: function (e) {
          return e.applyMatrix4(this.matrixWorld);
        },
        worldToLocal: function (e) {
          return e.applyMatrix4(Ue.getInverse(this.matrixWorld));
        },
        lookAt: function (e, t, n) {
          e.isVector3 ? Xe.copy(e) : Xe.set(e, t, n);
          var i = this.parent;
          this.updateWorldMatrix(!0, !1),
            Ve.setFromMatrixPosition(this.matrixWorld),
            this.isCamera || this.isLight
              ? Ue.lookAt(Ve, Xe, this.up)
              : Ue.lookAt(Xe, Ve, this.up),
            this.quaternion.setFromRotationMatrix(Ue),
            i &&
              (Ue.extractRotation(i.matrixWorld),
              Fe.setFromRotationMatrix(Ue),
              this.quaternion.premultiply(Fe.inverse()));
        },
        add: function (e) {
          if (arguments.length > 1) {
            for (var t = 0; t < arguments.length; t++) this.add(arguments[t]);
            return this;
          }
          return e === this
            ? (void 0, this)
            : (e && e.isObject3D
                ? (null !== e.parent && e.parent.remove(e),
                  (e.parent = this),
                  this.children.push(e),
                  e.dispatchEvent($e))
                : void 0,
              this);
        },
        remove: function (e) {
          if (arguments.length > 1) {
            for (var t = 0; t < arguments.length; t++)
              this.remove(arguments[t]);
            return this;
          }
          var n = this.children.indexOf(e);
          return (
            -1 !== n &&
              ((e.parent = null),
              this.children.splice(n, 1),
              e.dispatchEvent(et)),
            this
          );
        },
        attach: function (e) {
          return (
            this.updateWorldMatrix(!0, !1),
            Ue.getInverse(this.matrixWorld),
            null !== e.parent &&
              (e.parent.updateWorldMatrix(!0, !1),
              Ue.multiply(e.parent.matrixWorld)),
            e.applyMatrix4(Ue),
            e.updateWorldMatrix(!1, !1),
            this.add(e),
            this
          );
        },
        getObjectById: function (e) {
          return this.getObjectByProperty('id', e);
        },
        getObjectByName: function (e) {
          return this.getObjectByProperty('name', e);
        },
        getObjectByProperty: function (e, t) {
          if (this[e] === t) return this;
          for (var n = 0, i = this.children.length; n < i; n++) {
            var r = this.children[n],
              a = r.getObjectByProperty(e, t);
            if (void 0 !== a) return a;
          }
        },
        getWorldPosition: function (e) {
          return (
            void 0,
            void 0 === e && (e = new F()),
            this.updateMatrixWorld(!0),
            e.setFromMatrixPosition(this.matrixWorld)
          );
        },
        getWorldQuaternion: function (e) {
          return (
            void 0,
            void 0 === e && (e = new I()),
            this.updateMatrixWorld(!0),
            this.matrixWorld.decompose(Ve, e, Ge),
            e
          );
        },
        getWorldScale: function (e) {
          return (
            void 0,
            void 0 === e && (e = new F()),
            this.updateMatrixWorld(!0),
            this.matrixWorld.decompose(Ve, Je, e),
            e
          );
        },
        getWorldDirection: function (e) {
          void 0, void 0 === e && (e = new F()), this.updateMatrixWorld(!0);
          var t = this.matrixWorld.elements;
          return e.set(t[8], t[9], t[10]).normalize();
        },
        raycast: function () {},
        traverse: function (e) {
          e(this);
          for (var t = this.children, n = 0, i = t.length; n < i; n++)
            t[n].traverse(e);
        },
        traverseVisible: function (e) {
          if (!1 !== this.visible) {
            e(this);
            for (var t = this.children, n = 0, i = t.length; n < i; n++)
              t[n].traverseVisible(e);
          }
        },
        traverseAncestors: function (e) {
          var t = this.parent;
          null !== t && (e(t), t.traverseAncestors(e));
        },
        updateMatrix: function () {
          this.matrix.compose(this.position, this.quaternion, this.scale),
            (this.matrixWorldNeedsUpdate = !0);
        },
        updateMatrixWorld: function (e) {
          this.matrixAutoUpdate && this.updateMatrix(),
            (this.matrixWorldNeedsUpdate || e) &&
              (null === this.parent
                ? this.matrixWorld.copy(this.matrix)
                : this.matrixWorld.multiplyMatrices(
                    this.parent.matrixWorld,
                    this.matrix
                  ),
              (this.matrixWorldNeedsUpdate = !1),
              (e = !0));
          for (var t = this.children, n = 0, i = t.length; n < i; n++)
            t[n].updateMatrixWorld(e);
        },
        updateWorldMatrix: function (e, t) {
          var n = this.parent;
          if (
            (!0 === e && null !== n && n.updateWorldMatrix(!0, !1),
            this.matrixAutoUpdate && this.updateMatrix(),
            null === this.parent
              ? this.matrixWorld.copy(this.matrix)
              : this.matrixWorld.multiplyMatrices(
                  this.parent.matrixWorld,
                  this.matrix
                ),
            !0 === t)
          )
            for (var i = this.children, r = 0, a = i.length; r < a; r++)
              i[r].updateWorldMatrix(!1, !0);
        },
        toJSON: function (e) {
          var t = void 0 === e || 'string' === typeof e,
            n = {};
          t &&
            ((e = {
              geometries: {},
              materials: {},
              textures: {},
              images: {},
              shapes: {},
            }),
            (n.metadata = {
              version: 4.5,
              type: 'Object',
              generator: 'Object3D.toJSON',
            }));
          var i = {};
          function r(t, n) {
            return void 0 === t[n.uuid] && (t[n.uuid] = n.toJSON(e)), n.uuid;
          }
          if (
            ((i.uuid = this.uuid),
            (i.type = this.type),
            '' !== this.name && (i.name = this.name),
            !0 === this.castShadow && (i.castShadow = !0),
            !0 === this.receiveShadow && (i.receiveShadow = !0),
            !1 === this.visible && (i.visible = !1),
            !1 === this.frustumCulled && (i.frustumCulled = !1),
            0 !== this.renderOrder && (i.renderOrder = this.renderOrder),
            '{}' !== JSON.stringify(this.userData) &&
              (i.userData = this.userData),
            (i.layers = this.layers.mask),
            (i.matrix = this.matrix.toArray()),
            !1 === this.matrixAutoUpdate && (i.matrixAutoUpdate = !1),
            this.isInstancedMesh &&
              ((i.type = 'InstancedMesh'),
              (i.count = this.count),
              (i.instanceMatrix = this.instanceMatrix.toJSON())),
            this.isMesh || this.isLine || this.isPoints)
          ) {
            i.geometry = r(e.geometries, this.geometry);
            var a = this.geometry.parameters;
            if (void 0 !== a && void 0 !== a.shapes) {
              var o = a.shapes;
              if (Array.isArray(o))
                for (var s = 0, c = o.length; s < c; s++) {
                  var u = o[s];
                  r(e.shapes, u);
                }
              else r(e.shapes, o);
            }
          }
          if (void 0 !== this.material)
            if (Array.isArray(this.material)) {
              var l = [];
              for (s = 0, c = this.material.length; s < c; s++)
                l.push(r(e.materials, this.material[s]));
              i.material = l;
            } else i.material = r(e.materials, this.material);
          if (this.children.length > 0) {
            i.children = [];
            for (s = 0; s < this.children.length; s++)
              i.children.push(this.children[s].toJSON(e).object);
          }
          if (t) {
            var d = f(e.geometries),
              h = f(e.materials),
              p = f(e.textures),
              m = f(e.images);
            o = f(e.shapes);
            d.length > 0 && (n.geometries = d),
              h.length > 0 && (n.materials = h),
              p.length > 0 && (n.textures = p),
              m.length > 0 && (n.images = m),
              o.length > 0 && (n.shapes = o);
          }
          return (n.object = i), n;
          function f(e) {
            var t = [];
            for (var n in e) {
              var i = e[n];
              delete i.metadata, t.push(i);
            }
            return t;
          }
        },
        clone: function (e) {
          return new this.constructor().copy(this, e);
        },
        copy: function (e, t) {
          if (
            (void 0 === t && (t = !0),
            (this.name = e.name),
            this.up.copy(e.up),
            this.position.copy(e.position),
            this.quaternion.copy(e.quaternion),
            this.scale.copy(e.scale),
            this.matrix.copy(e.matrix),
            this.matrixWorld.copy(e.matrixWorld),
            (this.matrixAutoUpdate = e.matrixAutoUpdate),
            (this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate),
            (this.layers.mask = e.layers.mask),
            (this.visible = e.visible),
            (this.castShadow = e.castShadow),
            (this.receiveShadow = e.receiveShadow),
            (this.frustumCulled = e.frustumCulled),
            (this.renderOrder = e.renderOrder),
            (this.userData = JSON.parse(JSON.stringify(e.userData))),
            !0 === t)
          )
            for (var n = 0; n < e.children.length; n++) {
              var i = e.children[n];
              this.add(i.clone());
            }
          return this;
        },
      }));
    var it = 1,
      rt = new je(),
      at = new tt(),
      ot = new F(),
      st = new Ae(),
      ct = new Ae(),
      ut = new F();
    function lt() {
      Object.defineProperty(this, 'id', { value: (it += 2) }),
        (this.uuid = W['a'].generateUUID()),
        (this.name = ''),
        (this.type = 'BufferGeometry'),
        (this.index = null),
        (this.attributes = {}),
        (this.morphAttributes = {}),
        (this.morphTargetsRelative = !1),
        (this.groups = []),
        (this.boundingBox = null),
        (this.boundingSphere = null),
        (this.drawRange = { start: 0, count: 1 / 0 }),
        (this.userData = {});
    }
    lt.prototype = Object.assign(Object.create(Le.prototype), {
      constructor: lt,
      isBufferGeometry: !0,
      getIndex: function () {
        return this.index;
      },
      setIndex: function (e) {
        Array.isArray(e)
          ? (this.index = new (nt(e) > 65535 ? se : ae)(e, 1))
          : (this.index = e);
      },
      getAttribute: function (e) {
        return this.attributes[e];
      },
      setAttribute: function (e, t) {
        return (this.attributes[e] = t), this;
      },
      deleteAttribute: function (e) {
        return delete this.attributes[e], this;
      },
      addGroup: function (e, t, n) {
        this.groups.push({
          start: e,
          count: t,
          materialIndex: void 0 !== n ? n : 0,
        });
      },
      clearGroups: function () {
        this.groups = [];
      },
      setDrawRange: function (e, t) {
        (this.drawRange.start = e), (this.drawRange.count = t);
      },
      applyMatrix4: function (e) {
        var t = this.attributes.position;
        void 0 !== t && (t.applyMatrix4(e), (t.needsUpdate = !0));
        var n = this.attributes.normal;
        if (void 0 !== n) {
          var i = new Ie().getNormalMatrix(e);
          n.applyNormalMatrix(i), (n.needsUpdate = !0);
        }
        var r = this.attributes.tangent;
        return (
          void 0 !== r && (r.transformDirection(e), (r.needsUpdate = !0)),
          null !== this.boundingBox && this.computeBoundingBox(),
          null !== this.boundingSphere && this.computeBoundingSphere(),
          this
        );
      },
      rotateX: function (e) {
        return rt.makeRotationX(e), this.applyMatrix4(rt), this;
      },
      rotateY: function (e) {
        return rt.makeRotationY(e), this.applyMatrix4(rt), this;
      },
      rotateZ: function (e) {
        return rt.makeRotationZ(e), this.applyMatrix4(rt), this;
      },
      translate: function (e, t, n) {
        return rt.makeTranslation(e, t, n), this.applyMatrix4(rt), this;
      },
      scale: function (e, t, n) {
        return rt.makeScale(e, t, n), this.applyMatrix4(rt), this;
      },
      lookAt: function (e) {
        return (
          at.lookAt(e), at.updateMatrix(), this.applyMatrix4(at.matrix), this
        );
      },
      center: function () {
        return (
          this.computeBoundingBox(),
          this.boundingBox.getCenter(ot).negate(),
          this.translate(ot.x, ot.y, ot.z),
          this
        );
      },
      setFromObject: function (e) {
        var t = e.geometry;
        if (e.isPoints || e.isLine) {
          var n = new ce(3 * t.vertices.length, 3),
            i = new ce(3 * t.colors.length, 3);
          if (
            (this.setAttribute('position', n.copyVector3sArray(t.vertices)),
            this.setAttribute('color', i.copyColorsArray(t.colors)),
            t.lineDistances && t.lineDistances.length === t.vertices.length)
          ) {
            var r = new ce(t.lineDistances.length, 1);
            this.setAttribute('lineDistance', r.copyArray(t.lineDistances));
          }
          null !== t.boundingSphere &&
            (this.boundingSphere = t.boundingSphere.clone()),
            null !== t.boundingBox &&
              (this.boundingBox = t.boundingBox.clone());
        } else e.isMesh && t && t.isGeometry && this.fromGeometry(t);
        return this;
      },
      setFromPoints: function (e) {
        for (var t = [], n = 0, i = e.length; n < i; n++) {
          var r = e[n];
          t.push(r.x, r.y, r.z || 0);
        }
        return this.setAttribute('position', new ce(t, 3)), this;
      },
      updateFromObject: function (e) {
        var t,
          n = e.geometry;
        if (e.isMesh) {
          var i = n.__directGeometry;
          if (
            (!0 === n.elementsNeedUpdate &&
              ((i = void 0), (n.elementsNeedUpdate = !1)),
            void 0 === i)
          )
            return this.fromGeometry(n);
          (i.verticesNeedUpdate = n.verticesNeedUpdate),
            (i.normalsNeedUpdate = n.normalsNeedUpdate),
            (i.colorsNeedUpdate = n.colorsNeedUpdate),
            (i.uvsNeedUpdate = n.uvsNeedUpdate),
            (i.groupsNeedUpdate = n.groupsNeedUpdate),
            (n.verticesNeedUpdate = !1),
            (n.normalsNeedUpdate = !1),
            (n.colorsNeedUpdate = !1),
            (n.uvsNeedUpdate = !1),
            (n.groupsNeedUpdate = !1),
            (n = i);
        }
        return (
          !0 === n.verticesNeedUpdate &&
            ((t = this.attributes.position),
            void 0 !== t &&
              (t.copyVector3sArray(n.vertices), (t.needsUpdate = !0)),
            (n.verticesNeedUpdate = !1)),
          !0 === n.normalsNeedUpdate &&
            ((t = this.attributes.normal),
            void 0 !== t &&
              (t.copyVector3sArray(n.normals), (t.needsUpdate = !0)),
            (n.normalsNeedUpdate = !1)),
          !0 === n.colorsNeedUpdate &&
            ((t = this.attributes.color),
            void 0 !== t && (t.copyColorsArray(n.colors), (t.needsUpdate = !0)),
            (n.colorsNeedUpdate = !1)),
          n.uvsNeedUpdate &&
            ((t = this.attributes.uv),
            void 0 !== t && (t.copyVector2sArray(n.uvs), (t.needsUpdate = !0)),
            (n.uvsNeedUpdate = !1)),
          n.lineDistancesNeedUpdate &&
            ((t = this.attributes.lineDistance),
            void 0 !== t &&
              (t.copyArray(n.lineDistances), (t.needsUpdate = !0)),
            (n.lineDistancesNeedUpdate = !1)),
          n.groupsNeedUpdate &&
            (n.computeGroups(e.geometry),
            (this.groups = n.groups),
            (n.groupsNeedUpdate = !1)),
          this
        );
      },
      fromGeometry: function (e) {
        return (
          (e.__directGeometry = new Se().fromGeometry(e)),
          this.fromDirectGeometry(e.__directGeometry)
        );
      },
      fromDirectGeometry: function (e) {
        var t = new Float32Array(3 * e.vertices.length);
        if (
          (this.setAttribute(
            'position',
            new ee(t, 3).copyVector3sArray(e.vertices)
          ),
          e.normals.length > 0)
        ) {
          var n = new Float32Array(3 * e.normals.length);
          this.setAttribute(
            'normal',
            new ee(n, 3).copyVector3sArray(e.normals)
          );
        }
        if (e.colors.length > 0) {
          var i = new Float32Array(3 * e.colors.length);
          this.setAttribute('color', new ee(i, 3).copyColorsArray(e.colors));
        }
        if (e.uvs.length > 0) {
          var r = new Float32Array(2 * e.uvs.length);
          this.setAttribute('uv', new ee(r, 2).copyVector2sArray(e.uvs));
        }
        if (e.uvs2.length > 0) {
          var a = new Float32Array(2 * e.uvs2.length);
          this.setAttribute('uv2', new ee(a, 2).copyVector2sArray(e.uvs2));
        }
        for (var o in ((this.groups = e.groups), e.morphTargets)) {
          for (
            var s = [], c = e.morphTargets[o], u = 0, l = c.length;
            u < l;
            u++
          ) {
            var d = c[u],
              h = new ce(3 * d.data.length, 3);
            (h.name = d.name), s.push(h.copyVector3sArray(d.data));
          }
          this.morphAttributes[o] = s;
        }
        if (e.skinIndices.length > 0) {
          var p = new ce(4 * e.skinIndices.length, 4);
          this.setAttribute('skinIndex', p.copyVector4sArray(e.skinIndices));
        }
        if (e.skinWeights.length > 0) {
          var m = new ce(4 * e.skinWeights.length, 4);
          this.setAttribute('skinWeight', m.copyVector4sArray(e.skinWeights));
        }
        return (
          null !== e.boundingSphere &&
            (this.boundingSphere = e.boundingSphere.clone()),
          null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()),
          this
        );
      },
      computeBoundingBox: function () {
        null === this.boundingBox && (this.boundingBox = new Ae());
        var e = this.attributes.position,
          t = this.morphAttributes.position;
        if (void 0 !== e) {
          if ((this.boundingBox.setFromBufferAttribute(e), t))
            for (var n = 0, i = t.length; n < i; n++) {
              var r = t[n];
              st.setFromBufferAttribute(r),
                this.morphTargetsRelative
                  ? (ut.addVectors(this.boundingBox.min, st.min),
                    this.boundingBox.expandByPoint(ut),
                    ut.addVectors(this.boundingBox.max, st.max),
                    this.boundingBox.expandByPoint(ut))
                  : (this.boundingBox.expandByPoint(st.min),
                    this.boundingBox.expandByPoint(st.max));
            }
        } else this.boundingBox.makeEmpty();
        (isNaN(this.boundingBox.min.x) ||
          isNaN(this.boundingBox.min.y) ||
          isNaN(this.boundingBox.min.z)) &&
          void 0;
      },
      computeBoundingSphere: function () {
        null === this.boundingSphere && (this.boundingSphere = new ze());
        var e = this.attributes.position,
          t = this.morphAttributes.position;
        if (e) {
          var n = this.boundingSphere.center;
          if ((st.setFromBufferAttribute(e), t))
            for (var i = 0, r = t.length; i < r; i++) {
              var a = t[i];
              ct.setFromBufferAttribute(a),
                this.morphTargetsRelative
                  ? (ut.addVectors(st.min, ct.min),
                    st.expandByPoint(ut),
                    ut.addVectors(st.max, ct.max),
                    st.expandByPoint(ut))
                  : (st.expandByPoint(ct.min), st.expandByPoint(ct.max));
            }
          st.getCenter(n);
          var o = 0;
          for (i = 0, r = e.count; i < r; i++)
            ut.fromBufferAttribute(e, i),
              (o = Math.max(o, n.distanceToSquared(ut)));
          if (t)
            for (i = 0, r = t.length; i < r; i++) {
              a = t[i];
              for (
                var s = this.morphTargetsRelative, c = 0, u = a.count;
                c < u;
                c++
              )
                ut.fromBufferAttribute(a, c),
                  s && (ot.fromBufferAttribute(e, c), ut.add(ot)),
                  (o = Math.max(o, n.distanceToSquared(ut)));
            }
          (this.boundingSphere.radius = Math.sqrt(o)),
            isNaN(this.boundingSphere.radius);
        }
      },
      computeFaceNormals: function () {},
      computeVertexNormals: function () {
        var e = this.index,
          t = this.attributes;
        if (t.position) {
          var n = t.position.array;
          if (void 0 === t.normal)
            this.setAttribute('normal', new ee(new Float32Array(n.length), 3));
          else
            for (var i = t.normal.array, r = 0, a = i.length; r < a; r++)
              i[r] = 0;
          var o,
            s,
            c,
            u = t.normal.array,
            l = new F(),
            d = new F(),
            h = new F(),
            p = new F(),
            m = new F();
          if (e) {
            var f = e.array;
            for (r = 0, a = e.count; r < a; r += 3)
              (o = 3 * f[r + 0]),
                (s = 3 * f[r + 1]),
                (c = 3 * f[r + 2]),
                l.fromArray(n, o),
                d.fromArray(n, s),
                h.fromArray(n, c),
                p.subVectors(h, d),
                m.subVectors(l, d),
                p.cross(m),
                (u[o] += p.x),
                (u[o + 1] += p.y),
                (u[o + 2] += p.z),
                (u[s] += p.x),
                (u[s + 1] += p.y),
                (u[s + 2] += p.z),
                (u[c] += p.x),
                (u[c + 1] += p.y),
                (u[c + 2] += p.z);
          } else
            for (r = 0, a = n.length; r < a; r += 9)
              l.fromArray(n, r),
                d.fromArray(n, r + 3),
                h.fromArray(n, r + 6),
                p.subVectors(h, d),
                m.subVectors(l, d),
                p.cross(m),
                (u[r] = p.x),
                (u[r + 1] = p.y),
                (u[r + 2] = p.z),
                (u[r + 3] = p.x),
                (u[r + 4] = p.y),
                (u[r + 5] = p.z),
                (u[r + 6] = p.x),
                (u[r + 7] = p.y),
                (u[r + 8] = p.z);
          this.normalizeNormals(), (t.normal.needsUpdate = !0);
        }
      },
      merge: function (e, t) {
        if (!e || !e.isBufferGeometry) return void 0, void 0;
        void 0 === t && (t = 0);
        var n = this.attributes;
        for (var i in n)
          if (void 0 !== e.attributes[i])
            for (
              var r = n[i],
                a = r.array,
                o = e.attributes[i],
                s = o.array,
                c = o.itemSize * t,
                u = Math.min(s.length, a.length - c),
                l = 0,
                d = c;
              l < u;
              l++, d++
            )
              a[d] = s[l];
        return this;
      },
      normalizeNormals: function () {
        for (var e = this.attributes.normal, t = 0, n = e.count; t < n; t++)
          (ut.x = e.getX(t)),
            (ut.y = e.getY(t)),
            (ut.z = e.getZ(t)),
            ut.normalize(),
            e.setXYZ(t, ut.x, ut.y, ut.z);
      },
      toNonIndexed: function () {
        function e(e, t) {
          for (
            var n = e.array,
              i = e.itemSize,
              r = new n.constructor(t.length * i),
              a = 0,
              o = 0,
              s = 0,
              c = t.length;
            s < c;
            s++
          ) {
            a = t[s] * i;
            for (var u = 0; u < i; u++) r[o++] = n[a++];
          }
          return new ee(r, i);
        }
        if (null === this.index) return void 0, this;
        var t = new lt(),
          n = this.index.array,
          i = this.attributes;
        for (var r in i) {
          var a = i[r],
            o = e(a, n);
          t.setAttribute(r, o);
        }
        var s = this.morphAttributes;
        for (r in s) {
          for (var c = [], u = s[r], l = 0, d = u.length; l < d; l++) {
            (a = u[l]), (o = e(a, n));
            c.push(o);
          }
          t.morphAttributes[r] = c;
        }
        t.morphTargetsRelative = this.morphTargetsRelative;
        for (var h = this.groups, p = ((l = 0), h.length); l < p; l++) {
          var m = h[l];
          t.addGroup(m.start, m.count, m.materialIndex);
        }
        return t;
      },
      toJSON: function () {
        var e = {
          metadata: {
            version: 4.5,
            type: 'BufferGeometry',
            generator: 'BufferGeometry.toJSON',
          },
        };
        if (
          ((e.uuid = this.uuid),
          (e.type = this.type),
          '' !== this.name && (e.name = this.name),
          Object.keys(this.userData).length > 0 && (e.userData = this.userData),
          void 0 !== this.parameters)
        ) {
          var t = this.parameters;
          for (var n in t) void 0 !== t[n] && (e[n] = t[n]);
          return e;
        }
        e.data = { attributes: {} };
        var i = this.index;
        null !== i &&
          (e.data.index = {
            type: i.array.constructor.name,
            array: Array.prototype.slice.call(i.array),
          });
        var r = this.attributes;
        for (var n in r) {
          var a = r[n],
            o = a.toJSON();
          '' !== a.name && (o.name = a.name), (e.data.attributes[n] = o);
        }
        var s = {},
          c = !1;
        for (var n in this.morphAttributes) {
          for (
            var u = this.morphAttributes[n], l = [], d = 0, h = u.length;
            d < h;
            d++
          ) {
            (a = u[d]), (o = a.toJSON());
            '' !== a.name && (o.name = a.name), l.push(o);
          }
          l.length > 0 && ((s[n] = l), (c = !0));
        }
        c &&
          ((e.data.morphAttributes = s),
          (e.data.morphTargetsRelative = this.morphTargetsRelative));
        var p = this.groups;
        p.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(p)));
        var m = this.boundingSphere;
        return (
          null !== m &&
            (e.data.boundingSphere = {
              center: m.center.toArray(),
              radius: m.radius,
            }),
          e
        );
      },
      clone: function () {
        return new lt().copy(this);
      },
      copy: function (e) {
        var t, n, i;
        (this.index = null),
          (this.attributes = {}),
          (this.morphAttributes = {}),
          (this.groups = []),
          (this.boundingBox = null),
          (this.boundingSphere = null),
          (this.name = e.name);
        var r = e.index;
        null !== r && this.setIndex(r.clone());
        var a = e.attributes;
        for (t in a) {
          var o = a[t];
          this.setAttribute(t, o.clone());
        }
        var s = e.morphAttributes;
        for (t in s) {
          var c = [],
            u = s[t];
          for (n = 0, i = u.length; n < i; n++) c.push(u[n].clone());
          this.morphAttributes[t] = c;
        }
        this.morphTargetsRelative = e.morphTargetsRelative;
        var l = e.groups;
        for (n = 0, i = l.length; n < i; n++) {
          var d = l[n];
          this.addGroup(d.start, d.count, d.materialIndex);
        }
        var h = e.boundingBox;
        null !== h && (this.boundingBox = h.clone());
        var p = e.boundingSphere;
        return (
          null !== p && (this.boundingSphere = p.clone()),
          (this.drawRange.start = e.drawRange.start),
          (this.drawRange.count = e.drawRange.count),
          (this.userData = e.userData),
          this
        );
      },
      dispose: function () {
        this.dispatchEvent({ type: 'dispose' });
      },
    });
    var dt = new F(),
      ht = new F(),
      pt = new F(),
      mt = new F(),
      ft = new F(),
      _t = new F(),
      Mt = new F();
    function vt(e, t) {
      (this.origin = void 0 !== e ? e : new F()),
        (this.direction = void 0 !== t ? t : new F(0, 0, -1));
    }
    Object.assign(vt.prototype, {
      set: function (e, t) {
        return this.origin.copy(e), this.direction.copy(t), this;
      },
      clone: function () {
        return new this.constructor().copy(this);
      },
      copy: function (e) {
        return (
          this.origin.copy(e.origin), this.direction.copy(e.direction), this
        );
      },
      at: function (e, t) {
        return (
          void 0,
          void 0 === t && (t = new F()),
          t.copy(this.direction).multiplyScalar(e).add(this.origin)
        );
      },
      lookAt: function (e) {
        return this.direction.copy(e).sub(this.origin).normalize(), this;
      },
      recast: function (e) {
        return this.origin.copy(this.at(e, dt)), this;
      },
      closestPointToPoint: function (e, t) {
        void 0, void 0 === t && (t = new F()), t.subVectors(e, this.origin);
        var n = t.dot(this.direction);
        return n < 0
          ? t.copy(this.origin)
          : t.copy(this.direction).multiplyScalar(n).add(this.origin);
      },
      distanceToPoint: function (e) {
        return Math.sqrt(this.distanceSqToPoint(e));
      },
      distanceSqToPoint: function (e) {
        var t = dt.subVectors(e, this.origin).dot(this.direction);
        return t < 0
          ? this.origin.distanceToSquared(e)
          : (dt.copy(this.direction).multiplyScalar(t).add(this.origin),
            dt.distanceToSquared(e));
      },
      distanceSqToSegment: function (e, t, n, i) {
        ht.copy(e).add(t).multiplyScalar(0.5),
          pt.copy(t).sub(e).normalize(),
          mt.copy(this.origin).sub(ht);
        var r,
          a,
          o,
          s,
          c = 0.5 * e.distanceTo(t),
          u = -this.direction.dot(pt),
          l = mt.dot(this.direction),
          d = -mt.dot(pt),
          h = mt.lengthSq(),
          p = Math.abs(1 - u * u);
        if (p > 0)
          if (((r = u * d - l), (a = u * l - d), (s = c * p), r >= 0))
            if (a >= -s)
              if (a <= s) {
                var m = 1 / p;
                (r *= m),
                  (a *= m),
                  (o = r * (r + u * a + 2 * l) + a * (u * r + a + 2 * d) + h);
              } else
                (a = c),
                  (r = Math.max(0, -(u * a + l))),
                  (o = -r * r + a * (a + 2 * d) + h);
            else
              (a = -c),
                (r = Math.max(0, -(u * a + l))),
                (o = -r * r + a * (a + 2 * d) + h);
          else
            a <= -s
              ? ((r = Math.max(0, -(-u * c + l))),
                (a = r > 0 ? -c : Math.min(Math.max(-c, -d), c)),
                (o = -r * r + a * (a + 2 * d) + h))
              : a <= s
              ? ((r = 0),
                (a = Math.min(Math.max(-c, -d), c)),
                (o = a * (a + 2 * d) + h))
              : ((r = Math.max(0, -(u * c + l))),
                (a = r > 0 ? c : Math.min(Math.max(-c, -d), c)),
                (o = -r * r + a * (a + 2 * d) + h));
        else
          (a = u > 0 ? -c : c),
            (r = Math.max(0, -(u * a + l))),
            (o = -r * r + a * (a + 2 * d) + h);
        return (
          n && n.copy(this.direction).multiplyScalar(r).add(this.origin),
          i && i.copy(pt).multiplyScalar(a).add(ht),
          o
        );
      },
      intersectSphere: function (e, t) {
        dt.subVectors(e.center, this.origin);
        var n = dt.dot(this.direction),
          i = dt.dot(dt) - n * n,
          r = e.radius * e.radius;
        if (i > r) return null;
        var a = Math.sqrt(r - i),
          o = n - a,
          s = n + a;
        return o < 0 && s < 0 ? null : o < 0 ? this.at(s, t) : this.at(o, t);
      },
      intersectsSphere: function (e) {
        return this.distanceSqToPoint(e.center) <= e.radius * e.radius;
      },
      distanceToPlane: function (e) {
        var t = e.normal.dot(this.direction);
        if (0 === t) return 0 === e.distanceToPoint(this.origin) ? 0 : null;
        var n = -(this.origin.dot(e.normal) + e.constant) / t;
        return n >= 0 ? n : null;
      },
      intersectPlane: function (e, t) {
        var n = this.distanceToPlane(e);
        return null === n ? null : this.at(n, t);
      },
      intersectsPlane: function (e) {
        var t = e.distanceToPoint(this.origin);
        if (0 === t) return !0;
        var n = e.normal.dot(this.direction);
        return n * t < 0;
      },
      intersectBox: function (e, t) {
        var n,
          i,
          r,
          a,
          o,
          s,
          c = 1 / this.direction.x,
          u = 1 / this.direction.y,
          l = 1 / this.direction.z,
          d = this.origin;
        return (
          c >= 0
            ? ((n = (e.min.x - d.x) * c), (i = (e.max.x - d.x) * c))
            : ((n = (e.max.x - d.x) * c), (i = (e.min.x - d.x) * c)),
          u >= 0
            ? ((r = (e.min.y - d.y) * u), (a = (e.max.y - d.y) * u))
            : ((r = (e.max.y - d.y) * u), (a = (e.min.y - d.y) * u)),
          n > a || r > i
            ? null
            : ((r > n || n !== n) && (n = r),
              (a < i || i !== i) && (i = a),
              l >= 0
                ? ((o = (e.min.z - d.z) * l), (s = (e.max.z - d.z) * l))
                : ((o = (e.max.z - d.z) * l), (s = (e.min.z - d.z) * l)),
              n > s || o > i
                ? null
                : ((o > n || n !== n) && (n = o),
                  (s < i || i !== i) && (i = s),
                  i < 0 ? null : this.at(n >= 0 ? n : i, t)))
        );
      },
      intersectsBox: function (e) {
        return null !== this.intersectBox(e, dt);
      },
      intersectTriangle: function (e, t, n, i, r) {
        ft.subVectors(t, e), _t.subVectors(n, e), Mt.crossVectors(ft, _t);
        var a,
          o = this.direction.dot(Mt);
        if (o > 0) {
          if (i) return null;
          a = 1;
        } else {
          if (!(o < 0)) return null;
          (a = -1), (o = -o);
        }
        mt.subVectors(this.origin, e);
        var s = a * this.direction.dot(_t.crossVectors(mt, _t));
        if (s < 0) return null;
        var c = a * this.direction.dot(ft.cross(mt));
        if (c < 0) return null;
        if (s + c > o) return null;
        var u = -a * mt.dot(Mt);
        return u < 0 ? null : this.at(u / o, r);
      },
      applyMatrix4: function (e) {
        return (
          this.origin.applyMatrix4(e),
          this.direction.transformDirection(e),
          this
        );
      },
      equals: function (e) {
        return (
          e.origin.equals(this.origin) && e.direction.equals(this.direction)
        );
      },
    });
    var gt = new F(),
      yt = new F(),
      bt = new Ie();
    function wt(e, t) {
      (this.normal = void 0 !== e ? e : new F(1, 0, 0)),
        (this.constant = void 0 !== t ? t : 0);
    }
    Object.assign(wt.prototype, {
      isPlane: !0,
      set: function (e, t) {
        return this.normal.copy(e), (this.constant = t), this;
      },
      setComponents: function (e, t, n, i) {
        return this.normal.set(e, t, n), (this.constant = i), this;
      },
      setFromNormalAndCoplanarPoint: function (e, t) {
        return this.normal.copy(e), (this.constant = -t.dot(this.normal)), this;
      },
      setFromCoplanarPoints: function (e, t, n) {
        var i = gt.subVectors(n, t).cross(yt.subVectors(e, t)).normalize();
        return this.setFromNormalAndCoplanarPoint(i, e), this;
      },
      clone: function () {
        return new this.constructor().copy(this);
      },
      copy: function (e) {
        return this.normal.copy(e.normal), (this.constant = e.constant), this;
      },
      normalize: function () {
        var e = 1 / this.normal.length();
        return this.normal.multiplyScalar(e), (this.constant *= e), this;
      },
      negate: function () {
        return (this.constant *= -1), this.normal.negate(), this;
      },
      distanceToPoint: function (e) {
        return this.normal.dot(e) + this.constant;
      },
      distanceToSphere: function (e) {
        return this.distanceToPoint(e.center) - e.radius;
      },
      projectPoint: function (e, t) {
        return (
          void 0,
          void 0 === t && (t = new F()),
          t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)
        );
      },
      intersectLine: function (e, t) {
        void 0, void 0 === t && (t = new F());
        var n = e.delta(gt),
          i = this.normal.dot(n);
        if (0 === i)
          return 0 === this.distanceToPoint(e.start) ? t.copy(e.start) : void 0;
        var r = -(e.start.dot(this.normal) + this.constant) / i;
        return r < 0 || r > 1
          ? void 0
          : t.copy(n).multiplyScalar(r).add(e.start);
      },
      intersectsLine: function (e) {
        var t = this.distanceToPoint(e.start),
          n = this.distanceToPoint(e.end);
        return (t < 0 && n > 0) || (n < 0 && t > 0);
      },
      intersectsBox: function (e) {
        return e.intersectsPlane(this);
      },
      intersectsSphere: function (e) {
        return e.intersectsPlane(this);
      },
      coplanarPoint: function (e) {
        return (
          void 0,
          void 0 === e && (e = new F()),
          e.copy(this.normal).multiplyScalar(-this.constant)
        );
      },
      applyMatrix4: function (e, t) {
        var n = t || bt.getNormalMatrix(e),
          i = this.coplanarPoint(gt).applyMatrix4(e),
          r = this.normal.applyMatrix3(n).normalize();
        return (this.constant = -i.dot(r)), this;
      },
      translate: function (e) {
        return (this.constant -= e.dot(this.normal)), this;
      },
      equals: function (e) {
        return e.normal.equals(this.normal) && e.constant === this.constant;
      },
    });
    var At = new F(),
      xt = new F(),
      Lt = new F(),
      Tt = new F(),
      zt = new F(),
      St = new F(),
      Ot = new F(),
      Et = new F(),
      kt = new F(),
      Ct = new F();
    function Dt(e, t, n) {
      (this.a = void 0 !== e ? e : new F()),
        (this.b = void 0 !== t ? t : new F()),
        (this.c = void 0 !== n ? n : new F());
    }
    function Nt(e, t, n, i, r, a) {
      (this.a = e),
        (this.b = t),
        (this.c = n),
        (this.normal = i && i.isVector3 ? i : new F()),
        (this.vertexNormals = Array.isArray(i) ? i : []),
        (this.color = r && r.isColor ? r : new J()),
        (this.vertexColors = Array.isArray(r) ? r : []),
        (this.materialIndex = void 0 !== a ? a : 0);
    }
    Object.assign(Dt, {
      getNormal: function (e, t, n, i) {
        void 0,
          void 0 === i && (i = new F()),
          i.subVectors(n, t),
          At.subVectors(e, t),
          i.cross(At);
        var r = i.lengthSq();
        return r > 0 ? i.multiplyScalar(1 / Math.sqrt(r)) : i.set(0, 0, 0);
      },
      getBarycoord: function (e, t, n, i, r) {
        At.subVectors(i, t), xt.subVectors(n, t), Lt.subVectors(e, t);
        var a = At.dot(At),
          o = At.dot(xt),
          s = At.dot(Lt),
          c = xt.dot(xt),
          u = xt.dot(Lt),
          l = a * c - o * o;
        if ((void 0, void 0 === r && (r = new F()), 0 === l))
          return r.set(-2, -1, -1);
        var d = 1 / l,
          h = (c * s - o * u) * d,
          p = (a * u - o * s) * d;
        return r.set(1 - h - p, p, h);
      },
      containsPoint: function (e, t, n, i) {
        return (
          Dt.getBarycoord(e, t, n, i, Tt),
          Tt.x >= 0 && Tt.y >= 0 && Tt.x + Tt.y <= 1
        );
      },
      getUV: function (e, t, n, i, r, a, o, s) {
        return (
          this.getBarycoord(e, t, n, i, Tt),
          s.set(0, 0),
          s.addScaledVector(r, Tt.x),
          s.addScaledVector(a, Tt.y),
          s.addScaledVector(o, Tt.z),
          s
        );
      },
      isFrontFacing: function (e, t, n, i) {
        return (
          At.subVectors(n, t), xt.subVectors(e, t), At.cross(xt).dot(i) < 0
        );
      },
    }),
      Object.assign(Dt.prototype, {
        set: function (e, t, n) {
          return this.a.copy(e), this.b.copy(t), this.c.copy(n), this;
        },
        setFromPointsAndIndices: function (e, t, n, i) {
          return this.a.copy(e[t]), this.b.copy(e[n]), this.c.copy(e[i]), this;
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this;
        },
        getArea: function () {
          return (
            At.subVectors(this.c, this.b),
            xt.subVectors(this.a, this.b),
            0.5 * At.cross(xt).length()
          );
        },
        getMidpoint: function (e) {
          return (
            void 0,
            void 0 === e && (e = new F()),
            e
              .addVectors(this.a, this.b)
              .add(this.c)
              .multiplyScalar(1 / 3)
          );
        },
        getNormal: function (e) {
          return Dt.getNormal(this.a, this.b, this.c, e);
        },
        getPlane: function (e) {
          return (
            void 0,
            void 0 === e && (e = new wt()),
            e.setFromCoplanarPoints(this.a, this.b, this.c)
          );
        },
        getBarycoord: function (e, t) {
          return Dt.getBarycoord(e, this.a, this.b, this.c, t);
        },
        getUV: function (e, t, n, i, r) {
          return Dt.getUV(e, this.a, this.b, this.c, t, n, i, r);
        },
        containsPoint: function (e) {
          return Dt.containsPoint(e, this.a, this.b, this.c);
        },
        isFrontFacing: function (e) {
          return Dt.isFrontFacing(this.a, this.b, this.c, e);
        },
        intersectsBox: function (e) {
          return e.intersectsTriangle(this);
        },
        closestPointToPoint: function (e, t) {
          void 0, void 0 === t && (t = new F());
          var n,
            i,
            r = this.a,
            a = this.b,
            o = this.c;
          zt.subVectors(a, r), St.subVectors(o, r), Et.subVectors(e, r);
          var s = zt.dot(Et),
            c = St.dot(Et);
          if (s <= 0 && c <= 0) return t.copy(r);
          kt.subVectors(e, a);
          var u = zt.dot(kt),
            l = St.dot(kt);
          if (u >= 0 && l <= u) return t.copy(a);
          var d = s * l - u * c;
          if (d <= 0 && s >= 0 && u <= 0)
            return (n = s / (s - u)), t.copy(r).addScaledVector(zt, n);
          Ct.subVectors(e, o);
          var h = zt.dot(Ct),
            p = St.dot(Ct);
          if (p >= 0 && h <= p) return t.copy(o);
          var m = h * c - s * p;
          if (m <= 0 && c >= 0 && p <= 0)
            return (i = c / (c - p)), t.copy(r).addScaledVector(St, i);
          var f = u * p - h * l;
          if (f <= 0 && l - u >= 0 && h - p >= 0)
            return (
              Ot.subVectors(o, a),
              (i = (l - u) / (l - u + (h - p))),
              t.copy(a).addScaledVector(Ot, i)
            );
          var _ = 1 / (f + m + d);
          return (
            (n = m * _),
            (i = d * _),
            t.copy(r).addScaledVector(zt, n).addScaledVector(St, i)
          );
        },
        equals: function (e) {
          return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c);
        },
      }),
      Object.assign(Nt.prototype, {
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          (this.a = e.a),
            (this.b = e.b),
            (this.c = e.c),
            this.normal.copy(e.normal),
            this.color.copy(e.color),
            (this.materialIndex = e.materialIndex);
          for (var t = 0, n = e.vertexNormals.length; t < n; t++)
            this.vertexNormals[t] = e.vertexNormals[t].clone();
          for (t = 0, n = e.vertexColors.length; t < n; t++)
            this.vertexColors[t] = e.vertexColors[t].clone();
          return this;
        },
      });
    var Pt = 0;
    function jt() {
      Object.defineProperty(this, 'id', { value: Pt++ }),
        (this.uuid = W['a'].generateUUID()),
        (this.name = ''),
        (this.type = 'Material'),
        (this.fog = !0),
        (this.blending = d),
        (this.side = o),
        (this.flatShading = !1),
        (this.vertexColors = !1),
        (this.opacity = 1),
        (this.transparent = !1),
        (this.blendSrc = p),
        (this.blendDst = m),
        (this.blendEquation = h),
        (this.blendSrcAlpha = null),
        (this.blendDstAlpha = null),
        (this.blendEquationAlpha = null),
        (this.depthFunc = f),
        (this.depthTest = !0),
        (this.depthWrite = !0),
        (this.stencilWriteMask = 255),
        (this.stencilFunc = Y),
        (this.stencilRef = 0),
        (this.stencilFuncMask = 255),
        (this.stencilFail = j),
        (this.stencilZFail = j),
        (this.stencilZPass = j),
        (this.stencilWrite = !1),
        (this.clippingPlanes = null),
        (this.clipIntersection = !1),
        (this.clipShadows = !1),
        (this.shadowSide = null),
        (this.colorWrite = !0),
        (this.precision = null),
        (this.polygonOffset = !1),
        (this.polygonOffsetFactor = 0),
        (this.polygonOffsetUnits = 0),
        (this.dithering = !1),
        (this.alphaTest = 0),
        (this.premultipliedAlpha = !1),
        (this.visible = !0),
        (this.toneMapped = !0),
        (this.userData = {}),
        (this.version = 0);
    }
    function Yt(e) {
      jt.call(this),
        (this.type = 'MeshBasicMaterial'),
        (this.color = new J(16777215)),
        (this.map = null),
        (this.lightMap = null),
        (this.lightMapIntensity = 1),
        (this.aoMap = null),
        (this.aoMapIntensity = 1),
        (this.specularMap = null),
        (this.alphaMap = null),
        (this.envMap = null),
        (this.combine = _),
        (this.reflectivity = 1),
        (this.refractionRatio = 0.98),
        (this.wireframe = !1),
        (this.wireframeLinewidth = 1),
        (this.wireframeLinecap = 'round'),
        (this.wireframeLinejoin = 'round'),
        (this.skinning = !1),
        (this.morphTargets = !1),
        this.setValues(e);
    }
    (jt.prototype = Object.assign(Object.create(Le.prototype), {
      constructor: jt,
      isMaterial: !0,
      onBeforeCompile: function () {},
      setValues: function (e) {
        if (void 0 !== e)
          for (var t in e) {
            var n = e[t];
            if (void 0 !== n)
              if ('shading' !== t) {
                var i = this[t];
                void 0 !== i
                  ? i && i.isColor
                    ? i.set(n)
                    : i && i.isVector3 && n && n.isVector3
                    ? i.copy(n)
                    : (this[t] = n)
                  : void 0;
              } else void 0, (this.flatShading = n === u);
            else void 0;
          }
      },
      toJSON: function (e) {
        var t = void 0 === e || 'string' === typeof e;
        t && (e = { textures: {}, images: {} });
        var n = {
          metadata: {
            version: 4.5,
            type: 'Material',
            generator: 'Material.toJSON',
          },
        };
        function i(e) {
          var t = [];
          for (var n in e) {
            var i = e[n];
            delete i.metadata, t.push(i);
          }
          return t;
        }
        if (
          ((n.uuid = this.uuid),
          (n.type = this.type),
          '' !== this.name && (n.name = this.name),
          this.color && this.color.isColor && (n.color = this.color.getHex()),
          void 0 !== this.roughness && (n.roughness = this.roughness),
          void 0 !== this.metalness && (n.metalness = this.metalness),
          this.sheen && this.sheen.isColor && (n.sheen = this.sheen.getHex()),
          this.emissive &&
            this.emissive.isColor &&
            (n.emissive = this.emissive.getHex()),
          this.emissiveIntensity &&
            1 !== this.emissiveIntensity &&
            (n.emissiveIntensity = this.emissiveIntensity),
          this.specular &&
            this.specular.isColor &&
            (n.specular = this.specular.getHex()),
          void 0 !== this.shininess && (n.shininess = this.shininess),
          void 0 !== this.clearcoat && (n.clearcoat = this.clearcoat),
          void 0 !== this.clearcoatRoughness &&
            (n.clearcoatRoughness = this.clearcoatRoughness),
          this.clearcoatMap &&
            this.clearcoatMap.isTexture &&
            (n.clearcoatMap = this.clearcoatMap.toJSON(e).uuid),
          this.clearcoatRoughnessMap &&
            this.clearcoatRoughnessMap.isTexture &&
            (n.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(
              e
            ).uuid),
          this.clearcoatNormalMap &&
            this.clearcoatNormalMap.isTexture &&
            ((n.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid),
            (n.clearcoatNormalScale = this.clearcoatNormalScale.toArray())),
          this.map && this.map.isTexture && (n.map = this.map.toJSON(e).uuid),
          this.matcap &&
            this.matcap.isTexture &&
            (n.matcap = this.matcap.toJSON(e).uuid),
          this.alphaMap &&
            this.alphaMap.isTexture &&
            (n.alphaMap = this.alphaMap.toJSON(e).uuid),
          this.lightMap &&
            this.lightMap.isTexture &&
            (n.lightMap = this.lightMap.toJSON(e).uuid),
          this.aoMap &&
            this.aoMap.isTexture &&
            ((n.aoMap = this.aoMap.toJSON(e).uuid),
            (n.aoMapIntensity = this.aoMapIntensity)),
          this.bumpMap &&
            this.bumpMap.isTexture &&
            ((n.bumpMap = this.bumpMap.toJSON(e).uuid),
            (n.bumpScale = this.bumpScale)),
          this.normalMap &&
            this.normalMap.isTexture &&
            ((n.normalMap = this.normalMap.toJSON(e).uuid),
            (n.normalMapType = this.normalMapType),
            (n.normalScale = this.normalScale.toArray())),
          this.displacementMap &&
            this.displacementMap.isTexture &&
            ((n.displacementMap = this.displacementMap.toJSON(e).uuid),
            (n.displacementScale = this.displacementScale),
            (n.displacementBias = this.displacementBias)),
          this.roughnessMap &&
            this.roughnessMap.isTexture &&
            (n.roughnessMap = this.roughnessMap.toJSON(e).uuid),
          this.metalnessMap &&
            this.metalnessMap.isTexture &&
            (n.metalnessMap = this.metalnessMap.toJSON(e).uuid),
          this.emissiveMap &&
            this.emissiveMap.isTexture &&
            (n.emissiveMap = this.emissiveMap.toJSON(e).uuid),
          this.specularMap &&
            this.specularMap.isTexture &&
            (n.specularMap = this.specularMap.toJSON(e).uuid),
          this.envMap &&
            this.envMap.isTexture &&
            ((n.envMap = this.envMap.toJSON(e).uuid),
            (n.reflectivity = this.reflectivity),
            (n.refractionRatio = this.refractionRatio),
            void 0 !== this.combine && (n.combine = this.combine),
            void 0 !== this.envMapIntensity &&
              (n.envMapIntensity = this.envMapIntensity)),
          this.gradientMap &&
            this.gradientMap.isTexture &&
            (n.gradientMap = this.gradientMap.toJSON(e).uuid),
          void 0 !== this.size && (n.size = this.size),
          void 0 !== this.sizeAttenuation &&
            (n.sizeAttenuation = this.sizeAttenuation),
          this.blending !== d && (n.blending = this.blending),
          !0 === this.flatShading && (n.flatShading = this.flatShading),
          this.side !== o && (n.side = this.side),
          this.vertexColors && (n.vertexColors = !0),
          this.opacity < 1 && (n.opacity = this.opacity),
          !0 === this.transparent && (n.transparent = this.transparent),
          (n.depthFunc = this.depthFunc),
          (n.depthTest = this.depthTest),
          (n.depthWrite = this.depthWrite),
          (n.stencilWrite = this.stencilWrite),
          (n.stencilWriteMask = this.stencilWriteMask),
          (n.stencilFunc = this.stencilFunc),
          (n.stencilRef = this.stencilRef),
          (n.stencilFuncMask = this.stencilFuncMask),
          (n.stencilFail = this.stencilFail),
          (n.stencilZFail = this.stencilZFail),
          (n.stencilZPass = this.stencilZPass),
          this.rotation && 0 !== this.rotation && (n.rotation = this.rotation),
          !0 === this.polygonOffset && (n.polygonOffset = !0),
          0 !== this.polygonOffsetFactor &&
            (n.polygonOffsetFactor = this.polygonOffsetFactor),
          0 !== this.polygonOffsetUnits &&
            (n.polygonOffsetUnits = this.polygonOffsetUnits),
          this.linewidth &&
            1 !== this.linewidth &&
            (n.linewidth = this.linewidth),
          void 0 !== this.dashSize && (n.dashSize = this.dashSize),
          void 0 !== this.gapSize && (n.gapSize = this.gapSize),
          void 0 !== this.scale && (n.scale = this.scale),
          !0 === this.dithering && (n.dithering = !0),
          this.alphaTest > 0 && (n.alphaTest = this.alphaTest),
          !0 === this.premultipliedAlpha &&
            (n.premultipliedAlpha = this.premultipliedAlpha),
          !0 === this.wireframe && (n.wireframe = this.wireframe),
          this.wireframeLinewidth > 1 &&
            (n.wireframeLinewidth = this.wireframeLinewidth),
          'round' !== this.wireframeLinecap &&
            (n.wireframeLinecap = this.wireframeLinecap),
          'round' !== this.wireframeLinejoin &&
            (n.wireframeLinejoin = this.wireframeLinejoin),
          !0 === this.morphTargets && (n.morphTargets = !0),
          !0 === this.morphNormals && (n.morphNormals = !0),
          !0 === this.skinning && (n.skinning = !0),
          !1 === this.visible && (n.visible = !1),
          !1 === this.toneMapped && (n.toneMapped = !1),
          '{}' !== JSON.stringify(this.userData) &&
            (n.userData = this.userData),
          t)
        ) {
          var r = i(e.textures),
            a = i(e.images);
          r.length > 0 && (n.textures = r), a.length > 0 && (n.images = a);
        }
        return n;
      },
      clone: function () {
        return new this.constructor().copy(this);
      },
      copy: function (e) {
        (this.name = e.name),
          (this.fog = e.fog),
          (this.blending = e.blending),
          (this.side = e.side),
          (this.flatShading = e.flatShading),
          (this.vertexColors = e.vertexColors),
          (this.opacity = e.opacity),
          (this.transparent = e.transparent),
          (this.blendSrc = e.blendSrc),
          (this.blendDst = e.blendDst),
          (this.blendEquation = e.blendEquation),
          (this.blendSrcAlpha = e.blendSrcAlpha),
          (this.blendDstAlpha = e.blendDstAlpha),
          (this.blendEquationAlpha = e.blendEquationAlpha),
          (this.depthFunc = e.depthFunc),
          (this.depthTest = e.depthTest),
          (this.depthWrite = e.depthWrite),
          (this.stencilWriteMask = e.stencilWriteMask),
          (this.stencilFunc = e.stencilFunc),
          (this.stencilRef = e.stencilRef),
          (this.stencilFuncMask = e.stencilFuncMask),
          (this.stencilFail = e.stencilFail),
          (this.stencilZFail = e.stencilZFail),
          (this.stencilZPass = e.stencilZPass),
          (this.stencilWrite = e.stencilWrite);
        var t = e.clippingPlanes,
          n = null;
        if (null !== t) {
          var i = t.length;
          n = new Array(i);
          for (var r = 0; r !== i; ++r) n[r] = t[r].clone();
        }
        return (
          (this.clippingPlanes = n),
          (this.clipIntersection = e.clipIntersection),
          (this.clipShadows = e.clipShadows),
          (this.shadowSide = e.shadowSide),
          (this.colorWrite = e.colorWrite),
          (this.precision = e.precision),
          (this.polygonOffset = e.polygonOffset),
          (this.polygonOffsetFactor = e.polygonOffsetFactor),
          (this.polygonOffsetUnits = e.polygonOffsetUnits),
          (this.dithering = e.dithering),
          (this.alphaTest = e.alphaTest),
          (this.premultipliedAlpha = e.premultipliedAlpha),
          (this.visible = e.visible),
          (this.toneMapped = e.toneMapped),
          (this.userData = JSON.parse(JSON.stringify(e.userData))),
          this
        );
      },
      dispose: function () {
        this.dispatchEvent({ type: 'dispose' });
      },
    })),
      Object.defineProperty(jt.prototype, 'needsUpdate', {
        set: function (e) {
          !0 === e && this.version++;
        },
      }),
      (Yt.prototype = Object.create(jt.prototype)),
      (Yt.prototype.constructor = Yt),
      (Yt.prototype.isMeshBasicMaterial = !0),
      (Yt.prototype.copy = function (e) {
        return (
          jt.prototype.copy.call(this, e),
          this.color.copy(e.color),
          (this.map = e.map),
          (this.lightMap = e.lightMap),
          (this.lightMapIntensity = e.lightMapIntensity),
          (this.aoMap = e.aoMap),
          (this.aoMapIntensity = e.aoMapIntensity),
          (this.specularMap = e.specularMap),
          (this.alphaMap = e.alphaMap),
          (this.envMap = e.envMap),
          (this.combine = e.combine),
          (this.reflectivity = e.reflectivity),
          (this.refractionRatio = e.refractionRatio),
          (this.wireframe = e.wireframe),
          (this.wireframeLinewidth = e.wireframeLinewidth),
          (this.wireframeLinecap = e.wireframeLinecap),
          (this.wireframeLinejoin = e.wireframeLinejoin),
          (this.skinning = e.skinning),
          (this.morphTargets = e.morphTargets),
          this
        );
      });
    var Rt = new je(),
      Bt = new vt(),
      Wt = new ze(),
      It = new F(),
      qt = new F(),
      Ht = new F(),
      Ft = new F(),
      Ut = new F(),
      Xt = new F(),
      Vt = new F(),
      Gt = new F(),
      Jt = new F(),
      Zt = new U(),
      Kt = new U(),
      Qt = new U(),
      $t = new F(),
      en = new F();
    function tn(e, t) {
      tt.call(this),
        (this.type = 'Mesh'),
        (this.geometry = void 0 !== e ? e : new lt()),
        (this.material = void 0 !== t ? t : new Yt()),
        this.updateMorphTargets();
    }
    function nn(e, t, n, i, r, a, o, u) {
      var l;
      if (
        ((l =
          t.side === s
            ? i.intersectTriangle(o, a, r, !0, u)
            : i.intersectTriangle(r, a, o, t.side !== c, u)),
        null === l)
      )
        return null;
      en.copy(u), en.applyMatrix4(e.matrixWorld);
      var d = n.ray.origin.distanceTo(en);
      return d < n.near || d > n.far
        ? null
        : { distance: d, point: en.clone(), object: e };
    }
    function rn(e, t, n, i, r, a, o, s, c, u, l, d) {
      It.fromBufferAttribute(r, u),
        qt.fromBufferAttribute(r, l),
        Ht.fromBufferAttribute(r, d);
      var h = e.morphTargetInfluences;
      if (t.morphTargets && a && h) {
        Vt.set(0, 0, 0), Gt.set(0, 0, 0), Jt.set(0, 0, 0);
        for (var p = 0, m = a.length; p < m; p++) {
          var f = h[p],
            _ = a[p];
          0 !== f &&
            (Ft.fromBufferAttribute(_, u),
            Ut.fromBufferAttribute(_, l),
            Xt.fromBufferAttribute(_, d),
            o
              ? (Vt.addScaledVector(Ft, f),
                Gt.addScaledVector(Ut, f),
                Jt.addScaledVector(Xt, f))
              : (Vt.addScaledVector(Ft.sub(It), f),
                Gt.addScaledVector(Ut.sub(qt), f),
                Jt.addScaledVector(Xt.sub(Ht), f)));
        }
        It.add(Vt), qt.add(Gt), Ht.add(Jt);
      }
      e.isSkinnedMesh &&
        (e.boneTransform(u, It),
        e.boneTransform(l, qt),
        e.boneTransform(d, Ht));
      var M = nn(e, t, n, i, It, qt, Ht, $t);
      if (M) {
        s &&
          (Zt.fromBufferAttribute(s, u),
          Kt.fromBufferAttribute(s, l),
          Qt.fromBufferAttribute(s, d),
          (M.uv = Dt.getUV($t, It, qt, Ht, Zt, Kt, Qt, new U()))),
          c &&
            (Zt.fromBufferAttribute(c, u),
            Kt.fromBufferAttribute(c, l),
            Qt.fromBufferAttribute(c, d),
            (M.uv2 = Dt.getUV($t, It, qt, Ht, Zt, Kt, Qt, new U())));
        var v = new Nt(u, l, d);
        Dt.getNormal(It, qt, Ht, v.normal), (M.face = v);
      }
      return M;
    }
    function an() {
      tt.call(this),
        (this.type = 'Camera'),
        (this.matrixWorldInverse = new je()),
        (this.projectionMatrix = new je()),
        (this.projectionMatrixInverse = new je());
    }
    function on(e, t, n, i, r, a) {
      an.call(this),
        (this.type = 'OrthographicCamera'),
        (this.zoom = 1),
        (this.view = null),
        (this.left = void 0 !== e ? e : -1),
        (this.right = void 0 !== t ? t : 1),
        (this.top = void 0 !== n ? n : 1),
        (this.bottom = void 0 !== i ? i : -1),
        (this.near = void 0 !== r ? r : 0.1),
        (this.far = void 0 !== a ? a : 2e3),
        this.updateProjectionMatrix();
    }
    function sn(e, t, n, i) {
      an.call(this),
        (this.type = 'PerspectiveCamera'),
        (this.fov = void 0 !== e ? e : 50),
        (this.zoom = 1),
        (this.near = void 0 !== n ? n : 0.1),
        (this.far = void 0 !== i ? i : 2e3),
        (this.focus = 10),
        (this.aspect = void 0 !== t ? t : 1),
        (this.view = null),
        (this.filmGauge = 35),
        (this.filmOffset = 0),
        this.updateProjectionMatrix();
    }
    function cn(e) {
      var t = {};
      for (var n in e)
        for (var i in ((t[n] = {}), e[n])) {
          var r = e[n][i];
          r &&
          (r.isColor ||
            r.isMatrix3 ||
            r.isMatrix4 ||
            r.isVector2 ||
            r.isVector3 ||
            r.isVector4)
            ? (t[n][i] = r.clone())
            : Array.isArray(r)
            ? (t[n][i] = r.slice())
            : (t[n][i] = r);
        }
      return t;
    }
    (tn.prototype = Object.assign(Object.create(tt.prototype), {
      constructor: tn,
      isMesh: !0,
      copy: function (e) {
        return (
          tt.prototype.copy.call(this, e),
          void 0 !== e.morphTargetInfluences &&
            (this.morphTargetInfluences = e.morphTargetInfluences.slice()),
          void 0 !== e.morphTargetDictionary &&
            (this.morphTargetDictionary = Object.assign(
              {},
              e.morphTargetDictionary
            )),
          this
        );
      },
      updateMorphTargets: function () {
        var e,
          t,
          n,
          i = this.geometry;
        if (i.isBufferGeometry) {
          var r = i.morphAttributes,
            a = Object.keys(r);
          if (a.length > 0) {
            var o = r[a[0]];
            if (void 0 !== o)
              for (
                this.morphTargetInfluences = [],
                  this.morphTargetDictionary = {},
                  e = 0,
                  t = o.length;
                e < t;
                e++
              )
                (n = o[e].name || String(e)),
                  this.morphTargetInfluences.push(0),
                  (this.morphTargetDictionary[n] = e);
          }
        } else {
          var s = i.morphTargets;
          void 0 !== s && s.length > 0 && void 0;
        }
      },
      raycast: function (e, t) {
        var n,
          i = this.geometry,
          r = this.material,
          a = this.matrixWorld;
        if (
          void 0 !== r &&
          (null === i.boundingSphere && i.computeBoundingSphere(),
          Wt.copy(i.boundingSphere),
          Wt.applyMatrix4(a),
          !1 !== e.ray.intersectsSphere(Wt) &&
            (Rt.getInverse(a),
            Bt.copy(e.ray).applyMatrix4(Rt),
            null === i.boundingBox || !1 !== Bt.intersectsBox(i.boundingBox)))
        )
          if (i.isBufferGeometry) {
            var o,
              s,
              c,
              u,
              l,
              d,
              h,
              p,
              m,
              f,
              _,
              M = i.index,
              v = i.attributes.position,
              g = i.morphAttributes.position,
              y = i.morphTargetsRelative,
              b = i.attributes.uv,
              w = i.attributes.uv2,
              A = i.groups,
              x = i.drawRange;
            if (null !== M)
              if (Array.isArray(r))
                for (u = 0, d = A.length; u < d; u++)
                  for (
                    p = A[u],
                      m = r[p.materialIndex],
                      f = Math.max(p.start, x.start),
                      _ = Math.min(p.start + p.count, x.start + x.count),
                      l = f,
                      h = _;
                    l < h;
                    l += 3
                  )
                    (o = M.getX(l)),
                      (s = M.getX(l + 1)),
                      (c = M.getX(l + 2)),
                      (n = rn(this, m, e, Bt, v, g, y, b, w, o, s, c)),
                      n &&
                        ((n.faceIndex = Math.floor(l / 3)),
                        (n.face.materialIndex = p.materialIndex),
                        t.push(n));
              else
                for (
                  f = Math.max(0, x.start),
                    _ = Math.min(M.count, x.start + x.count),
                    u = f,
                    d = _;
                  u < d;
                  u += 3
                )
                  (o = M.getX(u)),
                    (s = M.getX(u + 1)),
                    (c = M.getX(u + 2)),
                    (n = rn(this, r, e, Bt, v, g, y, b, w, o, s, c)),
                    n && ((n.faceIndex = Math.floor(u / 3)), t.push(n));
            else if (void 0 !== v)
              if (Array.isArray(r))
                for (u = 0, d = A.length; u < d; u++)
                  for (
                    p = A[u],
                      m = r[p.materialIndex],
                      f = Math.max(p.start, x.start),
                      _ = Math.min(p.start + p.count, x.start + x.count),
                      l = f,
                      h = _;
                    l < h;
                    l += 3
                  )
                    (o = l),
                      (s = l + 1),
                      (c = l + 2),
                      (n = rn(this, m, e, Bt, v, g, y, b, w, o, s, c)),
                      n &&
                        ((n.faceIndex = Math.floor(l / 3)),
                        (n.face.materialIndex = p.materialIndex),
                        t.push(n));
              else
                for (
                  f = Math.max(0, x.start),
                    _ = Math.min(v.count, x.start + x.count),
                    u = f,
                    d = _;
                  u < d;
                  u += 3
                )
                  (o = u),
                    (s = u + 1),
                    (c = u + 2),
                    (n = rn(this, r, e, Bt, v, g, y, b, w, o, s, c)),
                    n && ((n.faceIndex = Math.floor(u / 3)), t.push(n));
          } else if (i.isGeometry) {
            var L,
              T,
              z,
              S,
              O = Array.isArray(r),
              E = i.vertices,
              k = i.faces,
              C = i.faceVertexUvs[0];
            C.length > 0 && (S = C);
            for (var D = 0, N = k.length; D < N; D++) {
              var P = k[D],
                j = O ? r[P.materialIndex] : r;
              if (
                void 0 !== j &&
                ((L = E[P.a]),
                (T = E[P.b]),
                (z = E[P.c]),
                (n = nn(this, j, e, Bt, L, T, z, $t)),
                n)
              ) {
                if (S && S[D]) {
                  var Y = S[D];
                  Zt.copy(Y[0]),
                    Kt.copy(Y[1]),
                    Qt.copy(Y[2]),
                    (n.uv = Dt.getUV($t, L, T, z, Zt, Kt, Qt, new U()));
                }
                (n.face = P), (n.faceIndex = D), t.push(n);
              }
            }
          }
      },
      clone: function () {
        return new this.constructor(this.geometry, this.material).copy(this);
      },
    })),
      (an.prototype = Object.assign(Object.create(tt.prototype), {
        constructor: an,
        isCamera: !0,
        copy: function (e, t) {
          return (
            tt.prototype.copy.call(this, e, t),
            this.matrixWorldInverse.copy(e.matrixWorldInverse),
            this.projectionMatrix.copy(e.projectionMatrix),
            this.projectionMatrixInverse.copy(e.projectionMatrixInverse),
            this
          );
        },
        getWorldDirection: function (e) {
          void 0, void 0 === e && (e = new F()), this.updateMatrixWorld(!0);
          var t = this.matrixWorld.elements;
          return e.set(-t[8], -t[9], -t[10]).normalize();
        },
        updateMatrixWorld: function (e) {
          tt.prototype.updateMatrixWorld.call(this, e),
            this.matrixWorldInverse.getInverse(this.matrixWorld);
        },
        updateWorldMatrix: function (e, t) {
          tt.prototype.updateWorldMatrix.call(this, e, t),
            this.matrixWorldInverse.getInverse(this.matrixWorld);
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
      })),
      (on.prototype = Object.assign(Object.create(an.prototype), {
        constructor: on,
        isOrthographicCamera: !0,
        copy: function (e, t) {
          return (
            an.prototype.copy.call(this, e, t),
            (this.left = e.left),
            (this.right = e.right),
            (this.top = e.top),
            (this.bottom = e.bottom),
            (this.near = e.near),
            (this.far = e.far),
            (this.zoom = e.zoom),
            (this.view = null === e.view ? null : Object.assign({}, e.view)),
            this
          );
        },
        setViewOffset: function (e, t, n, i, r, a) {
          null === this.view &&
            (this.view = {
              enabled: !0,
              fullWidth: 1,
              fullHeight: 1,
              offsetX: 0,
              offsetY: 0,
              width: 1,
              height: 1,
            }),
            (this.view.enabled = !0),
            (this.view.fullWidth = e),
            (this.view.fullHeight = t),
            (this.view.offsetX = n),
            (this.view.offsetY = i),
            (this.view.width = r),
            (this.view.height = a),
            this.updateProjectionMatrix();
        },
        clearViewOffset: function () {
          null !== this.view && (this.view.enabled = !1),
            this.updateProjectionMatrix();
        },
        updateProjectionMatrix: function () {
          var e = (this.right - this.left) / (2 * this.zoom),
            t = (this.top - this.bottom) / (2 * this.zoom),
            n = (this.right + this.left) / 2,
            i = (this.top + this.bottom) / 2,
            r = n - e,
            a = n + e,
            o = i + t,
            s = i - t;
          if (null !== this.view && this.view.enabled) {
            var c = (this.right - this.left) / this.view.fullWidth / this.zoom,
              u = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
            (r += c * this.view.offsetX),
              (a = r + c * this.view.width),
              (o -= u * this.view.offsetY),
              (s = o - u * this.view.height);
          }
          this.projectionMatrix.makeOrthographic(
            r,
            a,
            o,
            s,
            this.near,
            this.far
          ),
            this.projectionMatrixInverse.getInverse(this.projectionMatrix);
        },
        toJSON: function (e) {
          var t = tt.prototype.toJSON.call(this, e);
          return (
            (t.object.zoom = this.zoom),
            (t.object.left = this.left),
            (t.object.right = this.right),
            (t.object.top = this.top),
            (t.object.bottom = this.bottom),
            (t.object.near = this.near),
            (t.object.far = this.far),
            null !== this.view &&
              (t.object.view = Object.assign({}, this.view)),
            t
          );
        },
      })),
      (sn.prototype = Object.assign(Object.create(an.prototype), {
        constructor: sn,
        isPerspectiveCamera: !0,
        copy: function (e, t) {
          return (
            an.prototype.copy.call(this, e, t),
            (this.fov = e.fov),
            (this.zoom = e.zoom),
            (this.near = e.near),
            (this.far = e.far),
            (this.focus = e.focus),
            (this.aspect = e.aspect),
            (this.view = null === e.view ? null : Object.assign({}, e.view)),
            (this.filmGauge = e.filmGauge),
            (this.filmOffset = e.filmOffset),
            this
          );
        },
        setFocalLength: function (e) {
          var t = (0.5 * this.getFilmHeight()) / e;
          (this.fov = 2 * W['a'].RAD2DEG * Math.atan(t)),
            this.updateProjectionMatrix();
        },
        getFocalLength: function () {
          var e = Math.tan(0.5 * W['a'].DEG2RAD * this.fov);
          return (0.5 * this.getFilmHeight()) / e;
        },
        getEffectiveFOV: function () {
          return (
            2 *
            W['a'].RAD2DEG *
            Math.atan(Math.tan(0.5 * W['a'].DEG2RAD * this.fov) / this.zoom)
          );
        },
        getFilmWidth: function () {
          return this.filmGauge * Math.min(this.aspect, 1);
        },
        getFilmHeight: function () {
          return this.filmGauge / Math.max(this.aspect, 1);
        },
        setViewOffset: function (e, t, n, i, r, a) {
          (this.aspect = e / t),
            null === this.view &&
              (this.view = {
                enabled: !0,
                fullWidth: 1,
                fullHeight: 1,
                offsetX: 0,
                offsetY: 0,
                width: 1,
                height: 1,
              }),
            (this.view.enabled = !0),
            (this.view.fullWidth = e),
            (this.view.fullHeight = t),
            (this.view.offsetX = n),
            (this.view.offsetY = i),
            (this.view.width = r),
            (this.view.height = a),
            this.updateProjectionMatrix();
        },
        clearViewOffset: function () {
          null !== this.view && (this.view.enabled = !1),
            this.updateProjectionMatrix();
        },
        updateProjectionMatrix: function () {
          var e = this.near,
            t = (e * Math.tan(0.5 * W['a'].DEG2RAD * this.fov)) / this.zoom,
            n = 2 * t,
            i = this.aspect * n,
            r = -0.5 * i,
            a = this.view;
          if (null !== this.view && this.view.enabled) {
            var o = a.fullWidth,
              s = a.fullHeight;
            (r += (a.offsetX * i) / o),
              (t -= (a.offsetY * n) / s),
              (i *= a.width / o),
              (n *= a.height / s);
          }
          var c = this.filmOffset;
          0 !== c && (r += (e * c) / this.getFilmWidth()),
            this.projectionMatrix.makePerspective(
              r,
              r + i,
              t,
              t - n,
              e,
              this.far
            ),
            this.projectionMatrixInverse.getInverse(this.projectionMatrix);
        },
        toJSON: function (e) {
          var t = tt.prototype.toJSON.call(this, e);
          return (
            (t.object.fov = this.fov),
            (t.object.zoom = this.zoom),
            (t.object.near = this.near),
            (t.object.far = this.far),
            (t.object.focus = this.focus),
            (t.object.aspect = this.aspect),
            null !== this.view &&
              (t.object.view = Object.assign({}, this.view)),
            (t.object.filmGauge = this.filmGauge),
            (t.object.filmOffset = this.filmOffset),
            t
          );
        },
      }));
    var un,
      ln = `\nvoid main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n`,
      dn = `\nvoid main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}\n`;
    function hn(e) {
      jt.call(this),
        (this.type = 'ShaderMaterial'),
        (this.defines = {}),
        (this.uniforms = {}),
        (this.vertexShader = ln),
        (this.fragmentShader = dn),
        (this.linewidth = 1),
        (this.wireframe = !1),
        (this.wireframeLinewidth = 1),
        (this.fog = !1),
        (this.lights = !1),
        (this.clipping = !1),
        (this.skinning = !1),
        (this.morphTargets = !1),
        (this.morphNormals = !1),
        (this.extensions = {
          derivatives: !1,
          fragDepth: !1,
          drawBuffers: !1,
          shaderTextureLOD: !1,
        }),
        (this.defaultAttributeValues = {
          color: [1, 1, 1],
          uv: [0, 0],
          uv2: [0, 0],
        }),
        (this.index0AttributeName = void 0),
        (this.uniformsNeedUpdate = !1),
        void 0 !== e && (void 0 !== e.attributes && void 0, this.setValues(e));
    }
    function pn(e) {
      hn.call(this, e), (this.type = 'RawShaderMaterial');
    }
    function mn() {
      tt.call(this),
        (this.type = 'Scene'),
        (this.background = null),
        (this.environment = null),
        (this.fog = null),
        (this.overrideMaterial = null),
        (this.autoUpdate = !0),
        'undefined' !== typeof __THREE_DEVTOOLS__ &&
          __THREE_DEVTOOLS__.dispatchEvent(
            new CustomEvent('observe', { detail: this })
          );
    }
    (hn.prototype = Object.create(jt.prototype)),
      (hn.prototype.constructor = hn),
      (hn.prototype.isShaderMaterial = !0),
      (hn.prototype.copy = function (e) {
        return (
          jt.prototype.copy.call(this, e),
          (this.fragmentShader = e.fragmentShader),
          (this.vertexShader = e.vertexShader),
          (this.uniforms = cn(e.uniforms)),
          (this.defines = Object.assign({}, e.defines)),
          (this.wireframe = e.wireframe),
          (this.wireframeLinewidth = e.wireframeLinewidth),
          (this.lights = e.lights),
          (this.clipping = e.clipping),
          (this.skinning = e.skinning),
          (this.morphTargets = e.morphTargets),
          (this.morphNormals = e.morphNormals),
          (this.extensions = e.extensions),
          this
        );
      }),
      (hn.prototype.toJSON = function (e) {
        var t = jt.prototype.toJSON.call(this, e);
        for (var n in ((t.uniforms = {}), this.uniforms)) {
          var i = this.uniforms[n],
            r = i.value;
          r && r.isTexture
            ? (t.uniforms[n] = { type: 't', value: r.toJSON(e).uuid })
            : r && r.isColor
            ? (t.uniforms[n] = { type: 'c', value: r.getHex() })
            : r && r.isVector2
            ? (t.uniforms[n] = { type: 'v2', value: r.toArray() })
            : r && r.isVector3
            ? (t.uniforms[n] = { type: 'v3', value: r.toArray() })
            : r && r.isVector4
            ? (t.uniforms[n] = { type: 'v4', value: r.toArray() })
            : r && r.isMatrix3
            ? (t.uniforms[n] = { type: 'm3', value: r.toArray() })
            : r && r.isMatrix4
            ? (t.uniforms[n] = { type: 'm4', value: r.toArray() })
            : (t.uniforms[n] = { value: r });
        }
        Object.keys(this.defines).length > 0 && (t.defines = this.defines),
          (t.vertexShader = this.vertexShader),
          (t.fragmentShader = this.fragmentShader);
        var a = {};
        for (var o in this.extensions) !0 === this.extensions[o] && (a[o] = !0);
        return Object.keys(a).length > 0 && (t.extensions = a), t;
      }),
      (pn.prototype = Object.create(hn.prototype)),
      (pn.prototype.constructor = pn),
      (pn.prototype.isRawShaderMaterial = !0),
      (mn.prototype = Object.assign(Object.create(tt.prototype), {
        constructor: mn,
        isScene: !0,
        copy: function (e, t) {
          return (
            tt.prototype.copy.call(this, e, t),
            null !== e.background && (this.background = e.background.clone()),
            null !== e.environment &&
              (this.environment = e.environment.clone()),
            null !== e.fog && (this.fog = e.fog.clone()),
            null !== e.overrideMaterial &&
              (this.overrideMaterial = e.overrideMaterial.clone()),
            (this.autoUpdate = e.autoUpdate),
            (this.matrixAutoUpdate = e.matrixAutoUpdate),
            this
          );
        },
        toJSON: function (e) {
          var t = tt.prototype.toJSON.call(this, e);
          return (
            null !== this.background &&
              (t.object.background = this.background.toJSON(e)),
            null !== this.environment &&
              (t.object.environment = this.environment.toJSON(e)),
            null !== this.fog && (t.object.fog = this.fog.toJSON()),
            t
          );
        },
        dispose: function () {
          this.dispatchEvent({ type: 'dispose' });
        },
      }));
    var fn = {
        getDataURL: function (e) {
          var t;
          if ('undefined' == typeof HTMLCanvasElement) return e.src;
          if (e instanceof HTMLCanvasElement) t = e;
          else {
            void 0 === un &&
              (un = document.createElementNS(
                'http://www.w3.org/1999/xhtml',
                'canvas'
              )),
              (un.width = e.width),
              (un.height = e.height);
            var n = un.getContext('2d');
            e instanceof ImageData
              ? n.putImageData(e, 0, 0)
              : n.drawImage(e, 0, 0, e.width, e.height),
              (t = un);
          }
          return t.width > 2048 || t.height > 2048
            ? t.toDataURL('image/jpeg', 0.6)
            : t.toDataURL('image/png');
        },
      },
      _n = 0;
    function Mn(e, t, n, i, r, a, o, s, c, u) {
      Object.defineProperty(this, 'id', { value: _n++ }),
        (this.uuid = W['a'].generateUUID()),
        (this.name = ''),
        (this.image = void 0 !== e ? e : Mn.DEFAULT_IMAGE),
        (this.mipmaps = []),
        (this.mapping = void 0 !== t ? t : Mn.DEFAULT_MAPPING),
        (this.wrapS = void 0 !== n ? n : b),
        (this.wrapT = void 0 !== i ? i : b),
        (this.magFilter = void 0 !== r ? r : x),
        (this.minFilter = void 0 !== a ? a : L),
        (this.anisotropy = void 0 !== c ? c : 1),
        (this.format = void 0 !== o ? o : z),
        (this.internalFormat = null),
        (this.type = void 0 !== s ? s : T),
        (this.offset = new U(0, 0)),
        (this.repeat = new U(1, 1)),
        (this.center = new U(0, 0)),
        (this.rotation = 0),
        (this.matrixAutoUpdate = !0),
        (this.matrix = new Ie()),
        (this.generateMipmaps = !0),
        (this.premultiplyAlpha = !1),
        (this.flipY = !0),
        (this.unpackAlignment = 4),
        (this.encoding = void 0 !== u ? u : O),
        (this.version = 0),
        (this.onUpdate = null);
    }
    function vn(e, t, n) {
      (this.width = e),
        (this.height = t),
        (this.scissor = new B(0, 0, e, t)),
        (this.scissorTest = !1),
        (this.viewport = new B(0, 0, e, t)),
        (n = n || {}),
        (this.texture = new Mn(
          void 0,
          n.mapping,
          n.wrapS,
          n.wrapT,
          n.magFilter,
          n.minFilter,
          n.format,
          n.type,
          n.anisotropy,
          n.encoding
        )),
        (this.texture.image = {}),
        (this.texture.image.width = e),
        (this.texture.image.height = t),
        (this.texture.generateMipmaps =
          void 0 !== n.generateMipmaps && n.generateMipmaps),
        (this.texture.minFilter = void 0 !== n.minFilter ? n.minFilter : x),
        (this.depthBuffer = void 0 === n.depthBuffer || n.depthBuffer),
        (this.stencilBuffer = void 0 === n.stencilBuffer || n.stencilBuffer),
        (this.depthTexture = void 0 !== n.depthTexture ? n.depthTexture : null);
    }
    (Mn.DEFAULT_IMAGE = void 0),
      (Mn.DEFAULT_MAPPING = v),
      (Mn.prototype = Object.assign(Object.create(Le.prototype), {
        constructor: Mn,
        isTexture: !0,
        updateMatrix: function () {
          this.matrix.setUvTransform(
            this.offset.x,
            this.offset.y,
            this.repeat.x,
            this.repeat.y,
            this.rotation,
            this.center.x,
            this.center.y
          );
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          return (
            (this.name = e.name),
            (this.image = e.image),
            (this.mipmaps = e.mipmaps.slice(0)),
            (this.mapping = e.mapping),
            (this.wrapS = e.wrapS),
            (this.wrapT = e.wrapT),
            (this.magFilter = e.magFilter),
            (this.minFilter = e.minFilter),
            (this.anisotropy = e.anisotropy),
            (this.format = e.format),
            (this.internalFormat = e.internalFormat),
            (this.type = e.type),
            this.offset.copy(e.offset),
            this.repeat.copy(e.repeat),
            this.center.copy(e.center),
            (this.rotation = e.rotation),
            (this.matrixAutoUpdate = e.matrixAutoUpdate),
            this.matrix.copy(e.matrix),
            (this.generateMipmaps = e.generateMipmaps),
            (this.premultiplyAlpha = e.premultiplyAlpha),
            (this.flipY = e.flipY),
            (this.unpackAlignment = e.unpackAlignment),
            (this.encoding = e.encoding),
            this
          );
        },
        toJSON: function (e) {
          var t = void 0 === e || 'string' === typeof e;
          if (!t && void 0 !== e.textures[this.uuid])
            return e.textures[this.uuid];
          var n = {
            metadata: {
              version: 4.5,
              type: 'Texture',
              generator: 'Texture.toJSON',
            },
            uuid: this.uuid,
            name: this.name,
            mapping: this.mapping,
            repeat: [this.repeat.x, this.repeat.y],
            offset: [this.offset.x, this.offset.y],
            center: [this.center.x, this.center.y],
            rotation: this.rotation,
            wrap: [this.wrapS, this.wrapT],
            format: this.format,
            type: this.type,
            encoding: this.encoding,
            minFilter: this.minFilter,
            magFilter: this.magFilter,
            anisotropy: this.anisotropy,
            flipY: this.flipY,
            premultiplyAlpha: this.premultiplyAlpha,
            unpackAlignment: this.unpackAlignment,
          };
          if (void 0 !== this.image) {
            var i = this.image;
            if (
              (void 0 === i.uuid && (i.uuid = W['a'].generateUUID()),
              !t && void 0 === e.images[i.uuid])
            ) {
              var r;
              if (Array.isArray(i)) {
                r = [];
                for (var a = 0, o = i.length; a < o; a++)
                  r.push(fn.getDataURL(i[a]));
              } else r = fn.getDataURL(i);
              e.images[i.uuid] = { uuid: i.uuid, url: r };
            }
            n.image = i.uuid;
          }
          return t || (e.textures[this.uuid] = n), n;
        },
        dispose: function () {
          this.dispatchEvent({ type: 'dispose' });
        },
        transformUv: function (e) {
          if (this.mapping !== v) return e;
          if ((e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1))
            switch (this.wrapS) {
              case y:
                e.x = e.x - Math.floor(e.x);
                break;
              case b:
                e.x = e.x < 0 ? 0 : 1;
                break;
              case w:
                1 === Math.abs(Math.floor(e.x) % 2)
                  ? (e.x = Math.ceil(e.x) - e.x)
                  : (e.x = e.x - Math.floor(e.x));
                break;
            }
          if (e.y < 0 || e.y > 1)
            switch (this.wrapT) {
              case y:
                e.y = e.y - Math.floor(e.y);
                break;
              case b:
                e.y = e.y < 0 ? 0 : 1;
                break;
              case w:
                1 === Math.abs(Math.floor(e.y) % 2)
                  ? (e.y = Math.ceil(e.y) - e.y)
                  : (e.y = e.y - Math.floor(e.y));
                break;
            }
          return this.flipY && (e.y = 1 - e.y), e;
        },
      })),
      Object.defineProperty(Mn.prototype, 'needsUpdate', {
        set: function (e) {
          !0 === e && this.version++;
        },
      }),
      (vn.prototype = Object.assign(Object.create(Le.prototype), {
        constructor: vn,
        isWebGLRenderTarget: !0,
        setSize: function (e, t) {
          (this.width === e && this.height === t) ||
            ((this.width = e),
            (this.height = t),
            (this.texture.image.width = e),
            (this.texture.image.height = t),
            this.dispose()),
            this.viewport.set(0, 0, e, t),
            this.scissor.set(0, 0, e, t);
        },
        clone: function () {
          return new this.constructor().copy(this);
        },
        copy: function (e) {
          return (
            (this.width = e.width),
            (this.height = e.height),
            this.viewport.copy(e.viewport),
            (this.texture = e.texture.clone()),
            (this.depthBuffer = e.depthBuffer),
            (this.stencilBuffer = e.stencilBuffer),
            (this.depthTexture = e.depthTexture),
            this
          );
        },
        dispose: function () {
          this.dispatchEvent({ type: 'dispose' });
        },
      }));
    var gn = 4,
      yn = 8,
      bn = Math.pow(2, yn),
      wn = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582],
      An = yn - gn + 1 + wn.length,
      xn = 20,
      Ln = { [O]: 0, [E]: 1, [C]: 2, [D]: 3, [N]: 4, [P]: 5, [k]: 6 },
      Tn = new on(),
      { _lodPlanes: zn, _sizeLods: Sn, _sigmas: On } = jn(),
      En = null,
      kn = (1 + Math.sqrt(5)) / 2,
      Cn = 1 / kn,
      Dn = [
        new F(1, 1, 1),
        new F(-1, 1, 1),
        new F(1, 1, -1),
        new F(-1, 1, -1),
        new F(0, kn, Cn),
        new F(0, kn, -Cn),
        new F(Cn, 0, kn),
        new F(-Cn, 0, kn),
        new F(kn, Cn, 0),
        new F(-kn, Cn, 0),
      ];
    function Nn(e) {
      (this._renderer = e),
        (this._pingPongRenderTarget = null),
        (this._blurMaterial = Bn(xn)),
        (this._equirectShader = null),
        (this._cubemapShader = null),
        this._compileMaterial(this._blurMaterial);
    }
    function Pn(e) {
      return (
        void 0 !== e &&
        e.type === T &&
        (e.encoding === O || e.encoding === E || e.encoding === k)
      );
    }
    function jn() {
      for (var e = [], t = [], n = [], i = yn, r = 0; r < An; r++) {
        var a = Math.pow(2, i);
        t.push(a);
        var o = 1 / a;
        r > yn - gn ? (o = wn[r - yn + gn - 1]) : 0 == r && (o = 0), n.push(o);
        for (
          var s = 1 / (a - 1),
            c = -s / 2,
            u = 1 + s / 2,
            l = [c, c, u, c, u, u, c, c, u, u, c, u],
            d = 6,
            h = 6,
            p = 3,
            m = 2,
            f = 1,
            _ = new Float32Array(p * h * d),
            M = new Float32Array(m * h * d),
            v = new Float32Array(f * h * d),
            g = 0;
          g < d;
          g++
        ) {
          var y = ((g % 3) * 2) / 3 - 1,
            b = g > 2 ? 0 : -1,
            w = [
              y,
              b,
              0,
              y + 2 / 3,
              b,
              0,
              y + 2 / 3,
              b + 1,
              0,
              y,
              b,
              0,
              y + 2 / 3,
              b + 1,
              0,
              y,
              b + 1,
              0,
            ];
          _.set(w, p * h * g), M.set(l, m * h * g);
          var A = [g, g, g, g, g, g];
          v.set(A, f * h * g);
        }
        var x = new lt();
        x.setAttribute('position', new ee(_, p)),
          x.setAttribute('uv', new ee(M, m)),
          x.setAttribute('faceIndex', new ee(v, f)),
          e.push(x),
          i > gn && i--;
      }
      return { _lodPlanes: e, _sizeLods: t, _sigmas: n };
    }
    function Yn(e) {
      var t = new vn(3 * bn, 3 * bn, e);
      return (
        (t.texture.mapping = g),
        (t.texture.name = 'PMREM.cubeUv'),
        (t.scissorTest = !0),
        t
      );
    }
    function Rn(e, t, n, i, r) {
      e.viewport.set(t, n, i, r), e.scissor.set(t, n, i, r);
    }
    function Bn(e) {
      var t = new Float32Array(e),
        n = new F(0, 1, 0),
        i = new pn({
          defines: { n: e },
          uniforms: {
            envMap: { value: null },
            samples: { value: 1 },
            weights: { value: t },
            latitudinal: { value: !1 },
            dTheta: { value: 0 },
            mipInt: { value: 0 },
            poleAxis: { value: n },
            inputEncoding: { value: Ln[O] },
            outputEncoding: { value: Ln[O] },
          },
          vertexShader: qn(),
          fragmentShader: `\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform int samples;\nuniform float weights[n];\nuniform bool latitudinal;\nuniform float dTheta;\nuniform float mipInt;\nuniform vec3 poleAxis;\n\n${Hn()}\n\n#define ENVMAP_TYPE_CUBE_UV\n#include <cube_uv_reflection_fragment>\n\nvec3 getSample(float theta, vec3 axis) {\n\tfloat cosTheta = cos(theta);\n\t// Rodrigues' axis-angle rotation\n\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t+ cross(axis, vOutputDirection) * sin(theta)\n\t\t+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);\n\treturn bilinearCubeUV(envMap, sampleDirection, mipInt);\n}\n\nvoid main() {\n\tvec3 axis = latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);\n\tif (all(equal(axis, vec3(0.0))))\n\t\taxis = vec3(vOutputDirection.z, 0.0, - vOutputDirection.x);\n\taxis = normalize(axis);\n\tgl_FragColor = vec4(0.0);\n\tgl_FragColor.rgb += weights[0] * getSample(0.0, axis);\n\tfor (int i = 1; i < n; i++) {\n\t\tif (i >= samples)\n\t\t\tbreak;\n\t\tfloat theta = dTheta * float(i);\n\t\tgl_FragColor.rgb += weights[i] * getSample(-1.0 * theta, axis);\n\t\tgl_FragColor.rgb += weights[i] * getSample(theta, axis);\n\t}\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,
          blending: l,
          depthTest: !1,
          depthWrite: !1,
        });
      return (i.type = 'SphericalGaussianBlur'), i;
    }
    function Wn() {
      var e = new U(1, 1),
        t = new pn({
          uniforms: {
            envMap: { value: null },
            texelSize: { value: e },
            inputEncoding: { value: Ln[O] },
            outputEncoding: { value: Ln[O] },
          },
          vertexShader: qn(),
          fragmentShader: `\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform vec2 texelSize;\n\n${Hn()}\n\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tvec3 outputDirection = normalize(vOutputDirection);\n\tvec2 uv;\n\tuv.y = asin(clamp(outputDirection.y, -1.0, 1.0)) * RECIPROCAL_PI + 0.5;\n\tuv.x = atan(outputDirection.z, outputDirection.x) * RECIPROCAL_PI2 + 0.5;\n\tvec2 f = fract(uv / texelSize - 0.5);\n\tuv -= f * texelSize;\n\tvec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x += texelSize.x;\n\tvec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.y += texelSize.y;\n\tvec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x -= texelSize.x;\n\tvec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tvec3 tm = mix(tl, tr, f.x);\n\tvec3 bm = mix(bl, br, f.x);\n\tgl_FragColor.rgb = mix(tm, bm, f.y);\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,
          blending: l,
          depthTest: !1,
          depthWrite: !1,
        });
      return (t.type = 'EquirectangularToCubeUV'), t;
    }
    function In() {
      var e = new pn({
        uniforms: {
          envMap: { value: null },
          inputEncoding: { value: Ln[O] },
          outputEncoding: { value: Ln[O] },
        },
        vertexShader: qn(),
        fragmentShader: `\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform samplerCube envMap;\n\n${Hn()}\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tgl_FragColor.rgb = envMapTexelToLinear(textureCube(envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ))).rgb;\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,
        blending: l,
        depthTest: !1,
        depthWrite: !1,
      });
      return (e.type = 'CubemapToCubeUV'), e;
    }
    function qn() {
      return `\nprecision mediump float;\nprecision mediump int;\nattribute vec3 position;\nattribute vec2 uv;\nattribute float faceIndex;\nvarying vec3 vOutputDirection;\nvec3 getDirection(vec2 uv, float face) {\n\tuv = 2.0 * uv - 1.0;\n\tvec3 direction = vec3(uv, 1.0);\n\tif (face == 0.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 1.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 3.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.x *= -1.0;\n\t} else if (face == 4.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.y *= -1.0;\n\t} else if (face == 5.0) {\n\t\tdirection.xz *= -1.0;\n\t}\n\treturn direction;\n}\nvoid main() {\n\tvOutputDirection = getDirection(uv, faceIndex);\n\tgl_Position = vec4( position, 1.0 );\n}\n\t`;
    }
    function Hn() {
      return `\nuniform int inputEncoding;\nuniform int outputEncoding;\n\n#include <encodings_pars_fragment>\n\nvec4 inputTexelToLinear(vec4 value){\n\tif(inputEncoding == 0){\n\t\treturn value;\n\t}else if(inputEncoding == 1){\n\t\treturn sRGBToLinear(value);\n\t}else if(inputEncoding == 2){\n\t\treturn RGBEToLinear(value);\n\t}else if(inputEncoding == 3){\n\t\treturn RGBMToLinear(value, 7.0);\n\t}else if(inputEncoding == 4){\n\t\treturn RGBMToLinear(value, 16.0);\n\t}else if(inputEncoding == 5){\n\t\treturn RGBDToLinear(value, 256.0);\n\t}else{\n\t\treturn GammaToLinear(value, 2.2);\n\t}\n}\n\nvec4 linearToOutputTexel(vec4 value){\n\tif(outputEncoding == 0){\n\t\treturn value;\n\t}else if(outputEncoding == 1){\n\t\treturn LinearTosRGB(value);\n\t}else if(outputEncoding == 2){\n\t\treturn LinearToRGBE(value);\n\t}else if(outputEncoding == 3){\n\t\treturn LinearToRGBM(value, 7.0);\n\t}else if(outputEncoding == 4){\n\t\treturn LinearToRGBM(value, 16.0);\n\t}else if(outputEncoding == 5){\n\t\treturn LinearToRGBD(value, 256.0);\n\t}else{\n\t\treturn LinearToGamma(value, 2.2);\n\t}\n}\n\nvec4 envMapTexelToLinear(vec4 color) {\n\treturn inputTexelToLinear(color);\n}\n\t`;
    }
    Nn.prototype = {
      constructor: Nn,
      fromScene: function (e, t = 0, n = 0.1, i = 100) {
        En = this._renderer.getRenderTarget();
        var r = this._allocateTargets();
        return (
          this._sceneToCubeUV(e, n, i, r),
          t > 0 && this._blur(r, 0, 0, t),
          this._applyPMREM(r),
          this._cleanup(r),
          r
        );
      },
      fromEquirectangular: function (e) {
        return (
          (e.magFilter = A),
          (e.minFilter = A),
          (e.generateMipmaps = !1),
          this.fromCubemap(e)
        );
      },
      fromCubemap: function (e) {
        En = this._renderer.getRenderTarget();
        var t = this._allocateTargets(e);
        return (
          this._textureToCubeUV(e, t), this._applyPMREM(t), this._cleanup(t), t
        );
      },
      compileCubemapShader: function () {
        null === this._cubemapShader &&
          ((this._cubemapShader = In()),
          this._compileMaterial(this._cubemapShader));
      },
      compileEquirectangularShader: function () {
        null === this._equirectShader &&
          ((this._equirectShader = Wn()),
          this._compileMaterial(this._equirectShader));
      },
      dispose: function () {
        this._blurMaterial.dispose(),
          null !== this._cubemapShader && this._cubemapShader.dispose(),
          null !== this._equirectShader && this._equirectShader.dispose();
        for (var e = 0; e < zn.length; e++) zn[e].dispose();
      },
      _cleanup: function (e) {
        this._pingPongRenderTarget.dispose(),
          this._renderer.setRenderTarget(En),
          (e.scissorTest = !1),
          e.setSize(e.width, e.height);
      },
      _allocateTargets: function (e) {
        var t = {
            magFilter: A,
            minFilter: A,
            generateMipmaps: !1,
            type: T,
            format: S,
            encoding: Pn(e) ? e.encoding : C,
            depthBuffer: !1,
            stencilBuffer: !1,
          },
          n = Yn(t);
        return (n.depthBuffer = !e), (this._pingPongRenderTarget = Yn(t)), n;
      },
      _compileMaterial: function (e) {
        var t = new mn();
        t.add(new tn(zn[0], e)), this._renderer.compile(t, Tn);
      },
      _sceneToCubeUV: function (e, t, n, i) {
        var r = 90,
          a = 1,
          o = new sn(r, a, t, n),
          s = [1, 1, 1, 1, -1, 1],
          c = [1, 1, -1, -1, -1, 1],
          u = this._renderer,
          l = u.outputEncoding,
          d = u.toneMapping,
          h = u.toneMappingExposure,
          p = u.getClearColor(),
          m = u.getClearAlpha();
        (u.toneMapping = M),
          (u.toneMappingExposure = 1),
          (u.outputEncoding = O),
          (e.scale.z *= -1);
        var f = e.background;
        if (f && f.isColor) {
          f.convertSRGBToLinear();
          var _ = Math.max(f.r, f.g, f.b),
            v = Math.min(Math.max(Math.ceil(Math.log2(_)), -128), 127);
          f = f.multiplyScalar(Math.pow(2, -v));
          var g = (v + 128) / 255;
          u.setClearColor(f, g), (e.background = null);
        }
        for (var y = 0; y < 6; y++) {
          var b = y % 3;
          0 == b
            ? (o.up.set(0, s[y], 0), o.lookAt(c[y], 0, 0))
            : 1 == b
            ? (o.up.set(0, 0, s[y]), o.lookAt(0, c[y], 0))
            : (o.up.set(0, s[y], 0), o.lookAt(0, 0, c[y])),
            Rn(i, b * bn, y > 2 ? bn : 0, bn, bn),
            u.setRenderTarget(i),
            u.render(e, o);
        }
        (u.toneMapping = d),
          (u.toneMappingExposure = h),
          (u.outputEncoding = l),
          u.setClearColor(p, m),
          (e.scale.z *= -1);
      },
      _textureToCubeUV: function (e, t) {
        var n = new mn(),
          i = this._renderer;
        e.isCubeTexture
          ? null == this._cubemapShader && (this._cubemapShader = In())
          : null == this._equirectShader && (this._equirectShader = Wn());
        var r = e.isCubeTexture ? this._cubemapShader : this._equirectShader;
        n.add(new tn(zn[0], r));
        var a = r.uniforms;
        (a['envMap'].value = e),
          e.isCubeTexture ||
            a['texelSize'].value.set(1 / e.image.width, 1 / e.image.height),
          (a['inputEncoding'].value = Ln[e.encoding]),
          (a['outputEncoding'].value = Ln[t.texture.encoding]),
          Rn(t, 0, 0, 3 * bn, 2 * bn),
          i.setRenderTarget(t),
          i.render(n, Tn);
      },
      _applyPMREM: function (e) {
        var t = this._renderer,
          n = t.autoClear;
        t.autoClear = !1;
        for (var i = 1; i < An; i++) {
          var r = Math.sqrt(On[i] * On[i] - On[i - 1] * On[i - 1]),
            a = Dn[(i - 1) % Dn.length];
          this._blur(e, i - 1, i, r, a);
        }
        t.autoClear = n;
      },
      _blur: function (e, t, n, i, r) {
        var a = this._pingPongRenderTarget;
        this._halfBlur(e, a, t, n, i, 'latitudinal', r),
          this._halfBlur(a, e, n, n, i, 'longitudinal', r);
      },
      _halfBlur: function (e, t, n, i, r, a, o) {
        var s = this._renderer,
          c = this._blurMaterial;
        'latitudinal' !== a && 'longitudinal' !== a && void 0;
        var u = 3,
          l = new mn();
        l.add(new tn(zn[i], c));
        var d = c.uniforms,
          h = Sn[n] - 1,
          p = isFinite(r) ? Math.PI / (2 * h) : (2 * Math.PI) / (2 * xn - 1),
          m = r / p,
          f = isFinite(r) ? 1 + Math.floor(u * m) : xn;
        f > xn && void 0;
        for (var _ = [], M = 0, v = 0; v < xn; ++v) {
          var g = v / m,
            y = Math.exp((-g * g) / 2);
          _.push(y), 0 == v ? (M += y) : v < f && (M += 2 * y);
        }
        for (v = 0; v < _.length; v++) _[v] = _[v] / M;
        (d['envMap'].value = e.texture),
          (d['samples'].value = f),
          (d['weights'].value = _),
          (d['latitudinal'].value = 'latitudinal' === a),
          o && (d['poleAxis'].value = o),
          (d['dTheta'].value = p),
          (d['mipInt'].value = yn - n),
          (d['inputEncoding'].value = Ln[e.texture.encoding]),
          (d['outputEncoding'].value = Ln[e.texture.encoding]);
        var b = Sn[i],
          w =
            ((g = 3 * Math.max(0, bn - 2 * b)),
            (0 === i ? 0 : 2 * bn) + 2 * b * (i > yn - gn ? i - yn + gn : 0));
        Rn(t, g, w, 3 * b, 2 * b), s.setRenderTarget(t), s.render(l, Tn);
      },
    };
    class Fn {
      constructor(e, t) {
        (this.scene = new r['Bb']()),
          (this.camera = new r['mb'](90, 1, 0.1, 10)),
          (this.boxMesh = new r['Z'](new r['f'](1, 1, 1), this.getShader())),
          (t = t || {}),
          (this.boxMesh.material.side = r['c']),
          this.boxMesh.rotation.set(0, 9.5, 0),
          this.scene.add(this.boxMesh),
          (this.sourceTexture = e),
          (this.resolution = t.resolution || 512),
          (this.views = [
            { t: [1, 0, 0], u: [0, -1, 0] },
            { t: [-1, 0, 0], u: [0, -1, 0] },
            { t: [0, 1, 0], u: [0, 0, 1] },
            { t: [0, -1, 0], u: [0, 0, -1] },
            { t: [0, 0, 1], u: [0, -1, 0] },
            { t: [0, 0, -1], u: [0, -1, 0] },
          ]);
        const n = {
          format: t.format || this.sourceTexture.format,
          magFilter: this.sourceTexture.magFilter,
          minFilter: this.sourceTexture.minFilter,
          type: t.type || this.sourceTexture.type,
          generateMipmaps: this.sourceTexture.generateMipmaps,
          anisotropy: this.sourceTexture.anisotropy,
          encoding: this.sourceTexture.encoding,
        };
        this.renderTarget = new r['Wb'](this.resolution, n);
      }
      update(e) {
        const t = e.getRenderTarget();
        this.boxMesh.material.uniforms.equirectangularMap.value = this.sourceTexture;
        for (let t = 0; t < 6; t++) {
          const n = this.views[t];
          this.camera.position.set(0, 0, 0),
            this.camera.up.set(n.u[0], n.u[1], n.u[2]),
            this.camera.lookAt(n.t[0], n.t[1], n.t[2]),
            e.setRenderTarget(this.renderTarget, t),
            e.clear(),
            e.render(this.scene, this.camera);
        }
        return e.setRenderTarget(t), this.renderTarget.texture;
      }
      dispose() {
        this.renderTarget.dispose();
      }
      getShader() {
        const e = new r['Db']({
          uniforms: { equirectangularMap: { value: null } },
          vertexShader:
            'varying vec3 localPosition;\n                \n                void main() {\n                    localPosition = position;\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n                }',
          fragmentShader:
            '#include <common>\n                varying vec3 localPosition;\n                uniform sampler2D equirectangularMap;\n                \n                vec2 EquirectangularSampleUV(vec3 v) {\n                    vec2 uv = vec2(atan(v.z, v.x), asin(v.y));\n                    uv *= vec2(0.1591, 0.3183); // inverse atan\n                    uv += 0.5;\n                    return uv;\n                }\n                \n                void main() {\n                    vec2 uv = EquirectangularSampleUV(normalize(localPosition));\n                    gl_FragColor = texture2D(equirectangularMap, uv);\n                }',
          blending: r['hb'],
        });
        return (e.type = 'EquirectangularToCubeGenerator'), e;
      }
    }
    var Un =
      (void 0 && (void 0).__awaiter) ||
      function (e, t, n, i) {
        function r(e) {
          return e instanceof n
            ? e
            : new n(function (t) {
                t(e);
              });
        }
        return new (n || (n = Promise))(function (n, a) {
          function o(e) {
            try {
              c(i.next(e));
            } catch (e) {
              a(e);
            }
          }
          function s(e) {
            try {
              c(i['throw'](e));
            } catch (e) {
              a(e);
            }
          }
          function c(e) {
            e.done ? n(e.value) : r(e.value).then(o, s);
          }
          c((i = i.apply(e, t || [])).next());
        });
      };
    function Xn(e, t) {
      return Un(this, void 0, void 0, function* () {
        return new Promise((n, o) =>
          Un(this, void 0, void 0, function* () {
            const s = i;
            try {
              const i = yield fetch(e),
                o = yield i.arrayBuffer(),
                c = yield s.loadAsync(o),
                u = Object.getOwnPropertyNames(c.files)[0];
              let l = yield c.file(u).async('binarystring');
              l = encodeURIComponent(l);
              const d = `data:application/octet-stream,${l}`;
              new a().load(d, function (e) {
                (e.minFilter = r['eb']), (e.magFilter = r['eb']);
                const i = new Fn(e, { resolution: 1024 });
                i.update(t);
                const a = new Nn(t),
                  o = a.fromScene(i.scene),
                  s = o.texture;
                n(s);
              });
            } catch (e) {
              void 0, o();
            }
          })
        );
      });
    }
    function Vn(e, t, n) {
      return Un(this, void 0, void 0, function* () {
        return new Promise((i, o) =>
          Un(this, void 0, void 0, function* () {
            try {
              new a().setDataType(r['Rb']).load(e, function (e) {
                const a = {
                    resolution: 1024,
                    generateMipmaps: !0,
                    minFilter: r['O'],
                    magFilter: r['N'],
                  },
                  o = new Fn(e, a);
                o.update(t), (n.background = o.renderTarget), i(!0);
              });
            } catch (e) {
              void 0, i(!1);
            }
          })
        );
      });
    }
  },
  './src/_common_/utils/signal.ts': function (e, t, n) {
    'use strict';
    n.d(t, 'a', function () {
      return i;
    });
    class i {
      constructor() {
        (this._slots = []), (this._emit = !0);
      }
      connNo() {
        return this._slots.length;
      }
      onConnect(e) {
        this._onConnect = e;
      }
      onDisconnect(e) {
        this._onDisconnect = e;
      }
      connect(e, t) {
        'function' === typeof e &&
          (t
            ? this._slots.push({ callback: e, object: t })
            : this._slots.push({ callback: e }),
          this._onConnect && this._onConnect(this._slots.length));
      }
      disconnect(e, t) {
        'function' === typeof e &&
          ((this._slots = this._slots.filter((n) =>
            void 0 === t ? n.callback !== e : n.callback !== e || n.object !== t
          )),
          this._onDisconnect && this._onDisconnect(this._slots.length));
      }
      disconnectAll() {
        (this._slots = []),
          this._onDisconnect && this._onDisconnect(this._slots.length);
      }
      freeze() {
        this._emit = !1;
      }
      unfreeze() {
        this._emit = !0;
      }
      emit(e) {
        return this._emit
          ? this._slots.map((t) => {
              const n = t.object;
              return n ? t.callback.call(n, e) : t.callback(e);
            })
          : [];
      }
    }
  },
  './src/core/scripts/core.ts': function (e, t, n) {
    'use strict';
    n.r(t),
      n.d(t, 'Core', function () {
        return p;
      });
    var i = n('../../../node_modules/three/build/three.module.js'),
      r = n('../../../node_modules/three/src/math/MathUtils.js'),
      a = n('./src/_common_/utils/hdr/hdrLoader.ts'),
      o = n('./src/_common_/utils/signal.ts');
    function s() {
      const e = new Uint8Array(4);
      return self.crypto.getRandomValues(e), `${e[0]}-${e[1]}-${e[2]}-${e[3]}`;
    }
    function c(e) {
      const t = new i['g'](e);
      t.geometry.computeBoundingBox();
      const n = new i['Tb']();
      return t.geometry.boundingBox.getCenter(n), n;
    }
    function u(e, t, n) {
      const r = e.clone();
      return (
        r.project(t),
        new i['Sb'](
          Math.round((0.5 + r.x / 2) * (n.width / window.devicePixelRatio)),
          Math.round((0.5 - r.y / 2) * (n.height / window.devicePixelRatio))
        )
      );
    }
    class l {
      constructor(e) {
        (this.annotations = []),
          (this.enabled = !1),
          (this.annotationBeforeClickCb = () => this.closeAll()),
          (this.canvasElem = e);
      }
      getAnnotations() {
        return this.annotations;
      }
      isEnabled() {
        return this.enabled;
      }
      enable(e = !0) {
        (this.enabled = e), this.annotations.forEach((t) => t.setVisible(e));
      }
      hasAnnotation(e) {
        const t = this.annotations.find((t) => e === t.getObject3D());
        return !!t;
      }
      updateAll(e) {
        this.annotations.forEach((t) => {
          t.update(e);
        });
      }
      closeAll() {
        this.annotations.forEach((e) => {
          e.isExpanded() && e.setExpanded(!1);
        });
      }
      expand(e, t, n) {
        this.annotations.forEach((i) => {
          e.indexOf(i.id) > -1 ? i.setExpanded(t) : n && i.setExpanded(!t);
        });
      }
      setPointerEventsForAll(e = !0) {
        this.annotations.forEach((t) => {
          t.setPointerEvents(e);
        });
      }
      add(e, t) {
        const n = new d(
          e,
          t,
          this.isEnabled(),
          this.canvasElem,
          this.annotationBeforeClickCb
        );
        return (
          this.annotations.push(n),
          this.canvasElem.parentElement.appendChild(n.getAnnotationElement()),
          n
        );
      }
      remove(e) {
        let t = !1;
        for (let n = 0; n < this.annotations.length; n++)
          if (this.annotations[n].id === e) {
            this.annotations[n].dispose(),
              this.canvasElem.parentElement.removeChild(
                this.annotations[n].getAnnotationElement()
              ),
              this.annotations.splice(n, 1),
              (t = !0);
            break;
          }
        return t;
      }
    }
    class d {
      constructor(e, t, n, i, r) {
        (this.visible = !1),
          (this.expanded = !0),
          (this.id = s()),
          (this.label = e.label ? e.label : ''),
          (this.name = e.name),
          (this.text = e.text ? e.text : ''),
          (this.objectName = e.objectName),
          (this.object3d = t),
          (this.position = c(this.object3d)),
          (this.canvasElem = i),
          (this.annotationElem = this.createNotificationElement()),
          (this.annotationBodyElem = this.annotationElem.getElementsByClassName(
            'body'
          )[0]),
          (this.annotationLabelElem = this.annotationElem.getElementsByClassName(
            'pointer'
          )[0]),
          this.setExpanded(!1),
          this.setVisible(n),
          (this.updateCb = () => {
            this.position = c(this.object3d);
          }),
          this.object3d.addEventListener('transition', this.updateCb),
          (this.annotationBeforeClickCb = r);
      }
      update(e) {
        const t = this.getScreenPosition(e);
        (this.annotationElem.style.left = `${t.x}px`),
          (this.annotationElem.style.top = `${t.y}px`);
      }
      getPosition() {
        return this.position;
      }
      getObject3D() {
        return this.object3d;
      }
      getScreenPosition(e) {
        return u(this.position, e, this.canvasElem);
      }
      isVisible() {
        return this.visible;
      }
      setVisible(e = !0) {
        (this.visible = e),
          (this.annotationElem.style.display = e ? '' : 'none');
      }
      getAnnotationElement() {
        return this.annotationElem;
      }
      dispose() {
        this.object3d.removeEventListener('transition', this.updateCb),
          (this.object3d = null);
      }
      isExpanded() {
        return this.expanded;
      }
      setExpanded(e = !0) {
        if (
          ((this.expanded = e),
          (this.annotationBodyElem.style.display = e ? '' : 'none'),
          this.isExpanded())
        ) {
          const { posH: e, posV: t } = this.calculateBodyPosition();
          this.annotationBodyElem.classList.add(e),
            this.annotationBodyElem.classList.add(t);
        } else
          this.annotationBodyElem.classList.remove(
            'left',
            'right',
            'up',
            'down'
          );
      }
      setPointerEvents(e = !0) {
        this.annotationLabelElem.style.pointerEvents = e ? 'auto' : 'none';
      }
      createNotificationElement() {
        const e = document.createElement('div');
        e.classList.add('annotation');
        const t = `<p class="text">${this.text}</p>`;
        return (
          (e.innerHTML = `            <span class="pointer ${
            this.label.length > 0 ? 'label' : ''
          }">${
            this.label
          }</span>\n            <div class="body">\n                <p class="name">${
            this.name
          }</p>\n                ${
            this.text.length ? t : ''
          }\n            </div>`),
          e.addEventListener('click', (e) => {
            const t = this.expanded;
            this.annotationBeforeClickCb(), this.setExpanded(!t);
          }),
          e.addEventListener('mouseenter', (t) => {
            e.classList.add('active');
          }),
          e.addEventListener('mouseleave', (t) => {
            e.classList.remove('active');
          }),
          e
        );
      }
      calculateBodyPosition() {
        const e = this.canvasElem.getBoundingClientRect(),
          t = this.annotationBodyElem.getBoundingClientRect(),
          n = t.right > e.right ? 'left' : 'right',
          i = t.bottom > e.bottom ? 'up' : 'down';
        return { posH: n, posV: i };
      }
    }
    var h =
      (void 0 && (void 0).__awaiter) ||
      function (e, t, n, i) {
        function r(e) {
          return e instanceof n
            ? e
            : new n(function (t) {
                t(e);
              });
        }
        return new (n || (n = Promise))(function (n, a) {
          function o(e) {
            try {
              c(i.next(e));
            } catch (e) {
              a(e);
            }
          }
          function s(e) {
            try {
              c(i['throw'](e));
            } catch (e) {
              a(e);
            }
          }
          function c(e) {
            e.done ? n(e.value) : r(e.value).then(o, s);
          }
          c((i = i.apply(e, t || [])).next());
        });
      };
    class p {
      constructor(e, t, n, i) {
        (this.sigNeedsUpdate = new o['a']()),
          (this.sigAutoUpdateVideoTexture = new o['a']()),
          (this.sigSetVectaryMaterialProps = new o['a']()),
          (this.sigSwitchView = new o['a']()),
          (this.sigSwitchViewAsync = new o['a']()),
          (this.sigFocusOnPoint = new o['a']()),
          (this.sigMoveView = new o['a']()),
          (this.sigRotateView = new o['a']()),
          (this.sigZoomView = new o['a']()),
          (this.sigGetViewState = new o['a']()),
          (this.sigApplyViewState = new o['a']()),
          (this.sigPlay = new o['a']()),
          (this.allObjects = []),
          (this.allMeshes = []),
          (this.allCameras = []),
          (this.allLights = []),
          (this.allGroups = []),
          (this.allGroupsAndMeshes = []),
          (this.customMaterials = []),
          (this.materialsWithVideoTexture = []),
          (this.background = ''),
          (this.lastPointerPosition = { x: 0, y: 0 }),
          (this.highlightedMeshes = new Map()),
          (this.renderer = e),
          (this.scene = t),
          (this.canvasElem = n),
          (this.documentRoot = i),
          (this.annotationsManager = new l(this.canvasElem));
      }
      initSceneStructure(e) {
        e.children.forEach((e) => e.traverse((e) => this.allObjects.push(e))),
          this.allObjects.forEach((e) => {
            if (e instanceof i['H']) this.allLights.push(e);
            else if (e instanceof i['mb'] || e instanceof i['lb']) {
              const t = e.scale.clone();
              if ((e.scale.set(1, 1, 1), e.parent !== this.scene.children[0])) {
                e.position.set(
                  e.position.x / t.x,
                  e.position.y / t.y,
                  e.position.z / t.z
                );
                const n = new i['rb']().setFromAxisAngle(
                  new i['Tb'](-1, 0, 0),
                  Math.PI / 2
                );
                e.position.applyQuaternion(n), e.quaternion.premultiply(n);
              }
              this.allCameras.push(e);
            } else
              e instanceof i['Z']
                ? this.allMeshes.push(e)
                : this.allGroups.push(e);
          }),
          (this.allGroupsAndMeshes = this.allGroups.concat(this.allMeshes)),
          (this.camera = this.allCameras[this.allCameras.length - 1]);
      }
      createMaterialConfig(e, t) {
        const n = {};
        if ((t.name && (n.name = t.name), t.color)) {
          const e = new i['n'](t.color);
          e.convertGammaToLinear(2.2), (n.color = e);
        }
        if (
          (void 0 !== t.roughness && (n.roughness = t.roughness),
          void 0 !== t.metalness && (n.metalness = t.metalness),
          void 0 !== t.emissive && (n.emissive = new i['n'](t.emissive)),
          void 0 !== t.emissiveIntensity &&
            (n.emissiveIntensity = t.emissiveIntensity),
          void 0 !== t.opacity &&
            ((n.opacity = t.opacity), (n.transparent = !0)),
          void 0 !== t.aoMapIntensity && (n.aoMapIntensity = t.aoMapIntensity),
          t.map)
        ) {
          const e = new i['Lb']().load(t.map);
          (e.flipY = !1), (e.encoding = i['Yb']), (n.map = e);
        }
        if (t.alphaMap) {
          const e = new i['Lb']().load(t.alphaMap);
          (e.flipY = !1), (n.alphaMap = e), (n.transparent = !0);
        }
        if (t.aoMap) {
          const e = new i['Lb']().load(t.aoMap);
          (e.flipY = !1), (n.aoMap = e);
        }
        if (t.emissiveMap) {
          const e = new i['Lb']().load(t.emissiveMap);
          (e.flipY = !1), (e.encoding = i['Yb']), (n.emissiveMap = e);
        }
        if (t.metalnessMap) {
          const e = new i['Lb']().load(t.metalnessMap);
          (e.flipY = !1), (n.metalnessMap = e);
        }
        if (t.roughnessMap) {
          const e = new i['Lb']().load(t.roughnessMap);
          (e.flipY = !1), (n.roughnessMap = e);
        }
        if (t.normalMap) {
          const e = new i['Lb']().load(t.normalMap);
          (e.flipY = !1), (n.normalMap = e);
        }
        if (t.videoMap) {
          const { videoTexture: i, videoElem: r } = this.createVideoTexture(
            t.videoMap
          );
          (n.map = i),
            this.materialsWithVideoTexture.push({ material: e, videoElem: r });
        }
        if (t.alphaVideoMap) {
          const { videoTexture: i, videoElem: r } = this.createVideoTexture(
            t.videoMap
          );
          (n.alphaMap = i),
            this.materialsWithVideoTexture.push({ material: e, videoElem: r });
        }
        if (t.aoVideoMap) {
          const { videoTexture: i, videoElem: r } = this.createVideoTexture(
            t.videoMap
          );
          (n.aoMap = i),
            this.materialsWithVideoTexture.push({ material: e, videoElem: r });
        }
        if (t.emissiveVideoMap) {
          const { videoTexture: i, videoElem: r } = this.createVideoTexture(
            t.videoMap
          );
          (n.emissiveMap = i),
            this.materialsWithVideoTexture.push({ material: e, videoElem: r });
        }
        if (t.metalnessVideoMap) {
          const { videoTexture: i, videoElem: r } = this.createVideoTexture(
            t.videoMap
          );
          (n.metalnessMap = i),
            this.materialsWithVideoTexture.push({ material: e, videoElem: r });
        }
        if (t.roughnessVideoMap) {
          const { videoTexture: i, videoElem: r } = this.createVideoTexture(
            t.videoMap
          );
          (n.roughnessMap = i),
            this.materialsWithVideoTexture.push({ material: e, videoElem: r });
        }
        if (t.normalVideoMap) {
          const { videoTexture: i, videoElem: r } = this.createVideoTexture(
            t.videoMap
          );
          (n.normalMap = i),
            this.materialsWithVideoTexture.push({ material: e, videoElem: r });
        }
        return n;
      }
      createVideoTexture(e) {
        const t = document.querySelector(`#${e}`);
        if (null === t || 'VIDEO' !== t.nodeName) return void 0, null;
        if (null !== t.error) return void 0, null;
        (t.oncanplay = t.play), t.play();
        const n = new i['Vb'](t);
        return (n.flipY = !1), { videoTexture: n, videoElem: t };
      }
      _updateMaterial(e, t, n = !1) {
        return h(this, void 0, void 0, function* () {
          return new Promise((i, r) =>
            h(this, void 0, void 0, function* () {
              try {
                n && (e = yield this.prefetchTextures(e));
                const r = this.createMaterialConfig(t, e);
                t.setValues(r), (t.needsUpdate = !0);
                const a = Date.now(),
                  o = setInterval(() => {
                    this.sigNeedsUpdate.emit();
                    const e = Date.now();
                    e >= a + 5e3 && clearInterval(o);
                  }, 50);
                i();
              } catch (e) {
                r(e);
              }
            })
          );
        });
      }
      prefetchTextures(e) {
        return h(this, void 0, void 0, function* () {
          return new Promise((t, n) =>
            h(this, void 0, void 0, function* () {
              const i = [
                'map',
                'alphaMap',
                'aoMap',
                'emissiveMap',
                'metalnessMap',
                'roughnessMap',
                'normalMap',
              ];
              try {
                const n = Object.getOwnPropertyNames(e)
                  .filter((e) => i.indexOf(e) > -1)
                  .filter((t) => -1 === e[t].indexOf('blob:'));
                for (const t of n) {
                  const n = yield fetch(e[t]),
                    i = yield n.blob(),
                    r = URL.createObjectURL(i);
                  e[t] = r;
                }
                t(e);
              } catch (e) {
                n(e);
              }
            })
          );
        });
      }
      getAllMaterials() {
        return (
          this.initMaterials ||
            (this.initMaterials = this.allMeshes
              .filter((e) => e.material instanceof i['cb'])
              .map((e) => e.material)),
          this.initMaterials.concat(this.customMaterials)
        );
      }
      highlightMesh(e, t, n) {
        if (this.highlightedMeshes.has(e.id)) return !1;
        {
          this.highlightedMeshes.set(e.id, { material: e.material });
          const a = e.material.clone();
          return (
            (a.color = new i['n'](t)),
            (a.emissive = new i['n'](t)),
            (a.emissiveIntensity = r['a'].clamp(n, 0.1, 1)),
            this.sigSetVectaryMaterialProps.emit(a),
            (e.material = a),
            !0
          );
        }
      }
      unhighlightMesh(e) {
        if (this.highlightedMeshes.has(e.id)) {
          const t = this.highlightedMeshes.get(e.id);
          return (
            (e.material = t.material), this.highlightedMeshes.delete(e.id), !0
          );
        }
        return !1;
      }
      getParentName(e) {
        return e.parent instanceof i['Bb'] ? null : e.parent.name;
      }
      constructSceneObject(e) {
        return e instanceof i['W']
          ? this.constructMaterial(e)
          : e instanceof i['j']
          ? this.constructCamera(e)
          : e instanceof i['H']
          ? this.constructLight(e)
          : e instanceof i['Z']
          ? this.constructMesh(e)
          : this.constructGroup(e);
      }
      constructMesh(e) {
        let t = null;
        return (
          e instanceof i['Z'] && (t = e.material.name),
          {
            name: e.name,
            type: 'mesh',
            visible: e.visible,
            material: t,
            parentName: this.getParentName(e),
            parentIndex: this.allObjects.indexOf(e.parent),
          }
        );
      }
      constructMaterial(e) {
        return { name: e.name, type: 'material', visible: e.visible };
      }
      constructCamera(e) {
        return {
          name: e.name,
          type: 'camera',
          visible: e.visible,
          parentName: this.getParentName(e),
          parentIndex: this.allObjects.indexOf(e.parent),
        };
      }
      constructLight(e) {
        return {
          name: e.name,
          type: 'light',
          visible: e.visible,
          parentName: this.getParentName(e),
          parentIndex: this.allObjects.indexOf(e.parent),
        };
      }
      constructGroup(e) {
        return {
          name: e.name,
          type: 'group',
          visible: e.visible,
          parentName: this.getParentName(e),
          parentIndex: this.allObjects.indexOf(e.parent),
          childrenNames: e.children.map((e) => e.name),
          childrenIndices: e.children.map((t, n) =>
            this.allObjects.indexOf(e.children[n])
          ),
        };
      }
      constructAnnotation(e) {
        return {
          id: e.id,
          label: e.label,
          name: e.name,
          text: e.text,
          objectName: e.objectName,
          position: {
            x: e.getPosition().x,
            y: e.getPosition().y,
            z: e.getPosition().z,
          },
          visible: e.isVisible(),
        };
      }
      getAllMeshesFromNames(e) {
        const t = this.allMeshes.filter((t) => e.indexOf(t.name) > -1),
          n = this.allGroups.filter((t) => e.indexOf(t.name) > -1);
        return (
          n.forEach((e) =>
            e.traverse((e) => (e instanceof i['Z'] ? t.push(e) : null))
          ),
          t
        );
      }
      getObjects() {
        return 0 === this.allObjects.length
          ? []
          : this.allObjects.map((e) => this.constructSceneObject(e));
      }
      getMeshes() {
        return this.allMeshes.map((e) => this.constructMesh(e));
      }
      getMeshesByName(e) {
        return this.getMeshes().filter((t) => t.name === e);
      }
      getMeshByName(e) {
        return this.getMeshes().find((t) => t.name === e);
      }
      getObjectsByName(e) {
        return this.allObjects
          .filter((t) => t.name === e)
          .map((e) => this.constructSceneObject(e));
      }
      getObjectByName(e) {
        const t = this.allObjects.find((t) => t.name === e);
        return t ? this.constructSceneObject(t) : null;
      }
      getMaterials() {
        return this.getAllMaterials().map((e) => this.constructMaterial(e));
      }
      createMaterial(e, t) {
        return new Promise((n, r) =>
          h(this, void 0, void 0, function* () {
            let r,
              a = this.createMaterialConfig(r, e),
              o = t ? this.getAllMaterials().find((e) => e.name === t) : void 0;
            (r = o ? o.clone() : new i['cb'](a)),
              t && (yield this._updateMaterial(e, r, !0)),
              r &&
                (this.customMaterials.push(r),
                this.materialsWithVideoTexture !== [] &&
                  this.materialsWithVideoTexture.forEach(
                    (e) => (e.material = r)
                  ),
                n(this.constructMaterial(r))),
              n(null);
          })
        );
      }
      updateMaterial(e, t, n) {
        return new Promise((r, a) =>
          h(this, void 0, void 0, function* () {
            const a = this.getAllMaterials().filter((t) => t.name === e);
            a.forEach((e) =>
              h(this, void 0, void 0, function* () {
                e instanceof i['cb']
                  ? (yield this._updateMaterial(t, e, n),
                    this.sigNeedsUpdate.emit(),
                    r(!0))
                  : r(!1);
              })
            );
          })
        );
      }
      getMaterialsByName(e) {
        return this.getMaterials()
          .filter((t) => t.name === e)
          .map((e) => this.constructMaterial(e));
      }
      getMaterialByName(e) {
        const t = this.getMaterials().find((t) => t.name === e);
        return t ? this.constructMaterial(t) : null;
      }
      getMaterialProperties(e) {
        const t = this.getAllMaterials().find((t) => t.name === e);
        if (t instanceof i['cb']) {
          const e = {
            name: t.name,
            color: '#' + t.color.getHexString(),
            opacity: t.opacity,
            roughness: t.roughness,
            metalness: t.metalness,
            map: '',
            alphaMap: '',
            aoMap: '',
            aoMapIntensity: t.aoMapIntensity,
            emissive: '#' + t.emissive.getHexString(),
            emissiveMap: '',
            emissiveIntensity: t.envMapIntensity,
            metalnessMap: '',
            roughnessMap: '',
            normalMap: '',
          };
          return (
            t.map && (e.map = t.map.image.src),
            t.alphaMap && (e.alphaMap = t.alphaMap.image.src),
            t.aoMap && (e.aoMap = t.aoMap.image.src),
            t.emissiveMap && (e.emissiveMap = t.emissiveMap.image.src),
            t.metalnessMap && (e.metalnessMap = t.metalnessMap.image.src),
            t.roughnessMap && (e.roughnessMap = t.roughnessMap.image.src),
            t.normalMap && (e.normalMap = t.normalMap.image.src),
            e
          );
        }
        return { name: null };
      }
      setMaterial(e, t) {
        const n = this.allMeshes.filter((t) => t.name === e);
        for (let e = 0; e < n.length; e++) {
          const r = n[e],
            a = this.getAllMaterials().find((e) => e.name === t);
          if (a instanceof i['W']) {
            this.materialsWithVideoTexture.find(
              (e) => e.material.uuid === r.material.uuid
            ) && this.sigAutoUpdateVideoTexture.emit(null),
              (r.material = a),
              (r.material.transparent = !0),
              (r.material.needsUpdate = !0),
              this.sigNeedsUpdate.emit();
            const e = this.materialsWithVideoTexture.find(
              (e) => e.material.uuid === a.uuid
            );
            return e && this.sigAutoUpdateVideoTexture.emit(e), !0;
          }
          return !1;
        }
        return !1;
      }
      getHitObjects(e) {
        const t = this.canvasElem.getBoundingClientRect(),
          n = new i['Sb'](
            (this.lastPointerPosition.x / t.width) * 2 - 1,
            (-this.lastPointerPosition.y / t.height) * 2 + 1
          ),
          r = new i['xb']();
        r.setFromCamera(n, this.camera);
        const a = r.intersectObjects(this.allGroupsAndMeshes);
        var o = [];
        return (
          a.forEach((e) => {
            e.object instanceof i['Z'] && o.push(this.constructMesh(e.object));
          }),
          o.length > 1 && e && (o = o.slice(0, 1)),
          o
        );
      }
      get2DCoordinates(e) {
        const t = (e, t) => {
            var n = 0.5 * this.renderer.context.canvas.width,
              r = 0.5 * this.renderer.context.canvas.height,
              a = new i['Tb']();
            return (
              a.setFromMatrixPosition(e.matrixWorld),
              a.project(t),
              (a.x = (a.x * n + n) / window.devicePixelRatio),
              (a.y = (-a.y * r + r) / window.devicePixelRatio),
              [a.x, a.y]
            );
          },
          n = this.allGroupsAndMeshes.find((t) => t.name === e);
        return t(n, this.camera);
      }
      getCameras() {
        if (0 === this.allCameras.length) return [];
        {
          let e = [];
          return (
            this.allCameras.forEach((t) => {
              e.push(this.constructCamera(t));
            }),
            e
          );
        }
      }
      getCamerasByName(e) {
        const t = [],
          n = this.allCameras.find((t) => t.name === e);
        return t.push(this.constructCamera(n)), t;
      }
      getCameraByName(e) {
        const t = this.allCameras.find((t) => t.name === e);
        return this.constructCamera(t);
      }
      getVisibility(e) {
        const t = this.allObjects.find((t) => t.name === e);
        return !!t && t.visible;
      }
      setVisibility(e, t, n = !1) {
        const r = this.getAllMeshesFromNames(e);
        return (
          r.forEach((e) => (e.visible = t)),
          n &&
            this.allGroupsAndMeshes
              .filter((e) => e instanceof i['Z'] && -1 === r.indexOf(e))
              .forEach((e) => (e.visible = !t)),
          this.sigNeedsUpdate.emit(),
          !0
        );
      }
      getBackground() {
        return this.background;
      }
      setBackground(e) {
        return new Promise((t, n) =>
          h(this, void 0, void 0, function* () {
            if (e)
              if (((this.background = e), 'string' === typeof e))
                yield Object(a['b'])(e, this.renderer, this.scene),
                  this.sigNeedsUpdate.emit(),
                  t(!0);
              else {
                const n = new i['n'](`rgb(${e[0]}, ${e[1]}, ${e[2]})`);
                (this.scene.background = n), this.sigNeedsUpdate.emit(), t(!0);
              }
            else t(!1);
          })
        );
      }
      enableAnnotations(e = !0) {
        return this.annotationsManager.enable(e), !0;
      }
      getAnnotations() {
        return this.annotationsManager
          .getAnnotations()
          .map((e) => this.constructAnnotation(e));
      }
      getAnnotationById(e) {
        return this.getAnnotations().find((t) => t.id === e);
      }
      addAnnotation(e) {
        const t = this.allGroupsAndMeshes.find((t) => t.name === e.objectName);
        if (t && !this.annotationsManager.hasAnnotation(t)) {
          const n = this.annotationsManager.add(e, t);
          return this.constructAnnotation(n);
        }
        return null;
      }
      removeAnnotationById(e) {
        return this.annotationsManager.remove(e);
      }
      expandAnnotationsById(e, t, n) {
        return this.annotationsManager.expand(e, t, n), !0;
      }
      getPosition(e) {
        const t = this.allObjects.find((t) => t.name === e);
        return [t.position.x, t.position.y, t.position.z];
      }
      setPositionRelative(e, t) {
        const n = this.allObjects.find((t) => t.name === e);
        if (n) {
          const e = n.position.clone(),
            r = new i['Tb'](t[0], t[1], t[2]),
            a = e.add(r);
          return n.position.set(a.x, a.y, a.z), this.sigNeedsUpdate.emit(), !0;
        }
        return !1;
      }
      setPositionAbsolute(e, t) {
        const n = this.allObjects.find((t) => t.name === e);
        if (n) {
          const e = new i['Tb'](t[0], t[1], t[2]);
          return n.position.set(e.x, e.y, e.z), this.sigNeedsUpdate.emit(), !0;
        }
        return !1;
      }
      getRotation(e) {
        const t = this.allObjects.find((t) => t.name === e);
        if (t) {
          const e = t.rotation,
            n = (e) => e * (180 / Math.PI);
          return [n(e.x), n(e.y), n(e.z), e.order];
        }
        return null;
      }
      setRotationRelative(e, t, n = 'XYZ') {
        const r = this.allObjects.find((t) => t.name === e),
          a = (e) => (e * Math.PI) / 180;
        if (r) {
          const e = r.rotation.clone(),
            o = new i['Tb'](a(t[0]), a(t[1]), a(t[2])),
            s = e.toVector3().add(o),
            c = new i['s'](s.x, s.y, s.z, n);
          return (
            r.rotation.set(c.x, c.y, c.z, n), this.sigNeedsUpdate.emit(), !0
          );
        }
        return !1;
      }
      setRotationAbsolute(e, t, n = 'XYZ') {
        const r = this.allObjects.find((t) => t.name === e),
          a = (e) => (e * Math.PI) / 180;
        if (r) {
          const e = new i['Tb'](a(t[0]), a(t[1]), a(t[2])),
            o = new i['s'](e.x, e.y, e.z, n);
          return (
            r.rotation.set(o.x, o.y, o.z, n), this.sigNeedsUpdate.emit(), !0
          );
        }
        return !1;
      }
      getScale(e) {
        const t = this.allGroupsAndMeshes.find((t) => t.name === e);
        return t ? [t.scale.x, t.scale.y, t.scale.z] : null;
      }
      setScaleRelative(e, t) {
        const n = this.allGroupsAndMeshes.find((t) => t.name === e);
        if (n) {
          const e = n.scale.clone(),
            r = new i['Tb'](t[0], t[1], t[2]),
            a = e.add(r);
          return n.scale.set(a.x, a.y, a.z), this.sigNeedsUpdate.emit(), !0;
        }
        return !1;
      }
      setScaleAbsolute(e, t) {
        const n = this.allGroupsAndMeshes.find((t) => t.name === e);
        if (n) {
          const e = new i['Tb'](t[0], t[1], t[2]);
          return n.scale.set(e.x, e.y, e.z), this.sigNeedsUpdate.emit(), !0;
        }
        return !1;
      }
      highlightMeshesByName(e, t, n, i) {
        const r = this.getAllMeshesFromNames(e);
        let a = !0;
        i &&
          this.highlightedMeshes.forEach((e, t) => {
            const n = this.allMeshes.find((e) => e.id === t);
            this.unhighlightMesh(n);
          });
        for (let e = 0; e < r.length; e++) {
          const i = this.highlightMesh(r[e], t, n);
          i || (a = !1);
        }
        return this.sigNeedsUpdate.emit(), a;
      }
      unhighlightMeshesByName(e) {
        const t = this.getAllMeshesFromNames(e);
        let n = !0;
        for (let e = 0; e < t.length; e++) {
          const i = this.unhighlightMesh(t[e]);
          i || (n = !1);
        }
        return this.sigNeedsUpdate.emit(), n;
      }
      takeScreenshot(e = 1, t) {
        if (t) {
          const e = new i['Sb']();
          this.renderer.getSize(e),
            this.renderer.setScissorTest(!0),
            this.renderer.setScissor(t[0], e.y - t[1] - t[3], t[2], t[3]);
        }
        const n = this.canvasElem.clientWidth,
          r = this.canvasElem.clientHeight;
        this.renderer.setSize(n * e, r * e),
          this.renderer.render(this.scene, this.camera);
        const a = this.renderer.domElement.toDataURL('image/png');
        return (
          this.renderer.setScissorTest(!1),
          this.renderer.setSize(n, r),
          this.renderer.render(this.scene, this.camera),
          a
        );
      }
      getExposure() {
        return this.renderer.toneMappingExposure;
      }
      setExposure(e) {
        return (
          (this.renderer.toneMappingExposure = e),
          this.sigNeedsUpdate.emit(),
          !0
        );
      }
      getFOV() {
        return this.camera instanceof i['mb'] ? this.camera.fov : 0;
      }
      setFOV(e) {
        return (
          this.camera instanceof i['mb'] &&
          ((this.camera.fov = e),
          this.camera.updateProjectionMatrix(),
          this.sigNeedsUpdate.emit(),
          !0)
        );
      }
      sendEvent(e, t, n, i, r) {
        switch (e) {
          case 'mousemove':
            const e = new MouseEvent('mousemove', { clientX: t, clientY: n });
            this.documentRoot.dispatchEvent(e);
            break;
        }
        return !0;
      }
      switchView(e) {
        let t;
        return this.sigSwitchView.emit([e, (e) => (t = e)]), t;
      }
      switchViewsAsync(e) {
        let t;
        return this.sigSwitchViewAsync.emit([e, (e) => (t = e)]), t;
      }
      focusOnPoint(e) {
        this.sigFocusOnPoint.emit(e);
      }
      moveView(e) {
        return this.sigMoveView.emit(e), !0;
      }
      rotateView(e) {
        return this.sigRotateView.emit(e), !0;
      }
      zoomView(e) {
        return this.sigZoomView.emit(e), !0;
      }
      getViewState() {
        let e;
        return this.sigGetViewState.emit((t) => (e = t)), e;
      }
      applyViewState(e) {
        return this.sigApplyViewState.emit(e), !0;
      }
      play(e, t) {
        let n;
        return this.sigPlay.emit([e, t, (e) => (n = e)]), n;
      }
    }
  },
  './src/viewer/scripts/index.ts': function (e, t, n) {
    'use strict';
    n.r(t);
    var i = (function (e, t, n, i, r) {
      (e[i] = e[i] || []),
        e[i].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' });
      var a = t.getElementsByTagName(n)[0],
        o = t.createElement(n),
        s = 'dataLayer' != i ? '&l=' + i : '';
      (o.async = !0),
        (o.src = 'https://www.googletagmanager.com/gtm.js?id=' + r + s),
        a.parentNode.insertBefore(o, a);
    })(window, document, 'script', 'dataLayer', 'GTM-MBD6HG7');
    const r = `\n<div class="vctr-viewer-content">\n  \x3c!-- CANVAS --\x3e\n  <canvas id="mainCanvas"></canvas>\n\n  \x3c!-- AR BADGE --\x3e\n  <a class="ar" href="" rel="ar">\n    <img src=""/>\n    <svg class="arBadge" width="34" height="33" viewBox="0 0 34 33" xmlns="http://www.w3.org/2000/svg" fill="#4f4f4f">\n      <path fill-rule="evenodd" clip-rule="evenodd" d="M13.4154 14.3477L10.5795 14.1017C10.4191 14.0835 10.2344 14.165 10.1397 14.2958L9.87511 14.6411L9.8719 14.6453L9.64492 14.9415C9.41082 15.2425 9.25477 15.6008 9.19803 15.9807C9.15547 16.2602 9.16255 16.5755 9.30443 16.855C10.1344 18.5321 16.7528 30.2569 17.0366 30.6869C17.0445 30.7005 17.7494 31.906 18.3843 32.0485C19.0227 32.1919 20.1861 31.7833 21.0089 31.1885C22.002 30.4718 22.6333 29.9773 23.2789 29.3251L23.6157 28.9891C24.1998 28.4104 24.7471 27.8681 25.1941 27.1034C25.5698 26.4581 25.9563 25.4492 26.1633 24.7148L29.5983 27.1387L29.7331 27.1745H29.8253C29.9034 27.1745 29.9743 27.153 30.0381 27.1028L32.1454 25.4548C32.6424 25.025 33.3518 24.3083 33.5646 23.5917C33.7774 22.875 33.8483 21.8 33.3518 20.4383C33.1106 19.7717 26.6625 3.53171 26.0241 1.92635L25.8751 1.71135C25.5701 1.38884 24.9459 0.82983 24.6267 0.578977C24.3642 0.371144 23.9811 0.156142 23.6477 0.0988042L23.3498 0.077301C22.8533 0.077301 22.2858 0.363977 21.9311 0.65065C21.6828 0.851316 20.9522 1.57517 20.5975 2.00519C20.4982 2.13418 20.4414 2.29186 20.4414 2.44953L20.2286 5.81814C20.2286 5.81814 19.8739 14.7767 19.8739 15.78L19.7681 18.5725L13.8802 14.4727C13.7787 14.4102 13.6381 14.3672 13.4154 14.3477ZM30.0696 25.2695L31.425 24.0937C32.627 22.9903 32.4094 22.4476 30.6723 18.1163L30.6431 18.0435L25.4469 4.95204L26.2582 17.4998C26.2582 17.4998 26.525 20.4462 26.4328 22.5391L26.3831 23.1701L29.4848 25.3252C29.651 25.4356 29.9272 25.4093 30.0696 25.2695ZM19.7319 20.25C19.7319 20.25 13.2988 15.8038 13.2397 15.772C13.2227 15.763 13.1903 15.7423 13.1509 15.7172C13.0529 15.6547 12.9124 15.5651 12.8647 15.5611L11.2708 15.4297C11.0914 15.4071 10.8799 15.5171 10.7954 15.677C10.6986 15.8297 10.7082 16.0679 10.8168 16.2124L10.8459 16.2543C12.6264 18.8272 17.6039 26.1002 17.6039 26.1002C17.6039 26.1002 18.5402 25.2689 18.7459 24.968C18.7459 24.968 19.3772 24.3802 19.5191 23.3769C19.5191 23.3769 19.661 22.5885 19.7319 21.0118V20.25Z"/>\n      <path d="M5.7533 7.31949H2.67126L2.08533 9.0773H0.216187L3.39197 0.546051H5.02087L8.21423 9.0773H6.34509L5.7533 7.31949ZM3.14587 5.89566H5.27869L4.20642 2.7023L3.14587 5.89566Z"/>\n      <path d="M12.1693 5.95425H10.7689V9.0773H9.01111V0.546051H12.181C13.1888 0.546051 13.9662 0.77066 14.5131 1.21988C15.0599 1.6691 15.3334 2.30386 15.3334 3.12418C15.3334 3.70621 15.2064 4.19254 14.9525 4.58316C14.7025 4.96988 14.3217 5.27847 13.8099 5.50894L15.6556 8.99527V9.0773H13.7689L12.1693 5.95425ZM10.7689 4.53043H12.1869C12.6283 4.53043 12.9701 4.4191 13.2123 4.19644C13.4545 3.96988 13.5756 3.65933 13.5756 3.2648C13.5756 2.86246 13.4603 2.54605 13.2299 2.31558C13.0033 2.08511 12.6537 1.96988 12.181 1.96988H10.7689V4.53043Z"/>\n    </svg>\n  </a>\n\n  \x3c!-- WATERMARK --\x3e\n  <a class="watermark" href="https://www.vectary.com/?utm_source=Viewer_Embed&utm_medium=Viewer_Watermark&utm_campaign=Viewer" target="_blank">\n    <svg width="118" height="33" viewBox="0 0 118 33" xmlns="http://www.w3.org/2000/svg" fill="#4f4f4f">\n      <path d="M2.7522 4.70352H3.65454C4.08423 4.70352 4.40259 4.5961 4.60962 4.38126C4.81665 4.16641 4.92017 3.88126 4.92017 3.52579C4.92017 3.18204 4.81665 2.91446 4.60962 2.72305C4.40649 2.53165 4.12524 2.43594 3.76587 2.43594C3.44165 2.43594 3.17017 2.52579 2.95142 2.70547C2.73267 2.88126 2.62329 3.11172 2.62329 3.39688H0.929932C0.929932 2.95157 1.04907 2.55313 1.28735 2.20157C1.52954 1.8461 1.86548 1.56876 2.29517 1.36954C2.72876 1.17032 3.20532 1.07071 3.72485 1.07071C4.6272 1.07071 5.33423 1.28751 5.84595 1.7211C6.35767 2.15079 6.61353 2.74454 6.61353 3.50235C6.61353 3.89297 6.49438 4.25235 6.2561 4.58047C6.01782 4.9086 5.70532 5.16055 5.3186 5.33633C5.79907 5.50821 6.15649 5.76602 6.39087 6.10977C6.62915 6.45352 6.74829 6.85977 6.74829 7.32852C6.74829 8.08633 6.47095 8.69376 5.91626 9.15079C5.36548 9.60782 4.63501 9.83633 3.72485 9.83633C2.87329 9.83633 2.17603 9.61172 1.63306 9.16251C1.09399 8.71329 0.824463 8.11954 0.824463 7.38126H2.51782C2.51782 7.70157 2.63696 7.96329 2.87524 8.16641C3.11743 8.36954 3.41431 8.4711 3.76587 8.4711C4.16821 8.4711 4.48267 8.36563 4.70923 8.15469C4.9397 7.93985 5.05493 7.65665 5.05493 7.30508C5.05493 6.45352 4.58618 6.02774 3.64868 6.02774H2.7522V4.70352Z"/>\n      <path d="M8.10181 9.71915V1.1879H10.7268C11.4768 1.1879 12.1467 1.35782 12.7366 1.69766C13.3303 2.0336 13.7932 2.51407 14.1252 3.13907C14.4573 3.76016 14.6233 4.46719 14.6233 5.26016V5.65274C14.6233 6.44571 14.4592 7.15079 14.1311 7.76797C13.8069 8.38516 13.3479 8.86368 12.7542 9.20352C12.1604 9.54337 11.4905 9.71524 10.7444 9.71915H8.10181ZM9.85962 2.61172V8.30704H10.7092C11.3967 8.30704 11.9221 8.08243 12.2854 7.63321C12.6487 7.18399 12.8342 6.54141 12.842 5.70547V5.2543C12.842 4.38712 12.6624 3.73087 12.303 3.28555C11.9436 2.83633 11.4182 2.61172 10.7268 2.61172H9.85962Z"/>\n      <path d="M19.9612 3.3793L19.9905 4.08243C20.4553 3.53555 21.0823 3.26212 21.8713 3.26212C22.7581 3.26212 23.3616 3.60196 23.6819 4.28165C23.8928 3.97696 24.1663 3.73087 24.5022 3.54337C24.842 3.35587 25.2424 3.26212 25.7034 3.26212C27.094 3.26212 27.801 3.99844 27.8245 5.4711V9.71915H26.7405V5.53555C26.7405 5.08243 26.637 4.74454 26.4299 4.52188C26.2229 4.29532 25.8752 4.18204 25.387 4.18204C24.9846 4.18204 24.6506 4.30313 24.385 4.54532C24.1194 4.7836 23.9651 5.10587 23.9221 5.51212V9.71915H22.8323V5.56485C22.8323 4.64297 22.3811 4.18204 21.4788 4.18204C20.7678 4.18204 20.2815 4.48477 20.0198 5.09024V9.71915H18.9358V3.3793H19.9612Z"/>\n      <path d="M33.3792 9.71915C33.3167 9.59415 33.2659 9.37149 33.2268 9.05118C32.7229 9.57462 32.1213 9.83633 31.4221 9.83633C30.7971 9.83633 30.2834 9.66055 29.8811 9.30899C29.4827 8.95352 29.2834 8.5043 29.2834 7.96133C29.2834 7.30118 29.5334 6.78946 30.0334 6.42618C30.5374 6.05899 31.2444 5.8754 32.1545 5.8754H33.2092V5.37735C33.2092 4.99844 33.0959 4.69766 32.8694 4.47501C32.6428 4.24844 32.3088 4.13516 31.8674 4.13516C31.4807 4.13516 31.1565 4.23282 30.8948 4.42813C30.6331 4.62344 30.5022 4.85977 30.5022 5.13712H29.4124C29.4124 4.82071 29.5237 4.51602 29.7463 4.22305C29.9729 3.92618 30.2776 3.6918 30.6604 3.51993C31.0471 3.34805 31.4709 3.26212 31.9319 3.26212C32.6624 3.26212 33.2346 3.44571 33.6487 3.8129C34.0627 4.17618 34.2776 4.67813 34.2932 5.31876V8.23672C34.2932 8.81876 34.3674 9.28165 34.5159 9.6254V9.71915H33.3792ZM31.5803 8.89297C31.9202 8.89297 32.2424 8.80508 32.5471 8.6293C32.8518 8.45352 33.0725 8.22501 33.2092 7.94376V6.64297H32.3596C31.0315 6.64297 30.3674 7.03165 30.3674 7.80899C30.3674 8.14883 30.4807 8.41446 30.7073 8.60587C30.9338 8.79727 31.2249 8.89297 31.5803 8.89297Z"/>\n      <path d="M35.7288 6.49649C35.7288 5.52383 35.9592 4.74258 36.4202 4.15274C36.8811 3.55899 37.4846 3.26212 38.2307 3.26212C38.9729 3.26212 39.5608 3.51602 39.9944 4.02383V0.719147H41.0784V9.71915H40.0823L40.0295 9.03946C39.5959 9.57071 38.9924 9.83633 38.219 9.83633C37.4846 9.83633 36.885 9.53555 36.4202 8.93399C35.9592 8.33243 35.7288 7.54727 35.7288 6.57852V6.49649ZM36.8127 6.61954C36.8127 7.33829 36.9612 7.90079 37.2581 8.30704C37.5549 8.71329 37.9651 8.91641 38.4885 8.91641C39.176 8.91641 39.678 8.60782 39.9944 7.99063V5.07852C39.6702 4.48087 39.1721 4.18204 38.5002 4.18204C37.969 4.18204 37.5549 4.38712 37.2581 4.79727C36.9612 5.20743 36.8127 5.81485 36.8127 6.61954Z"/>\n      <path d="M45.3967 9.83633C44.5374 9.83633 43.8381 9.55508 43.2991 8.99258C42.76 8.42618 42.4905 7.67032 42.4905 6.72501V6.52579C42.4905 5.89688 42.6096 5.33633 42.8479 4.84415C43.0901 4.34805 43.426 3.96133 43.8557 3.68399C44.2893 3.40274 44.7581 3.26212 45.262 3.26212C46.0862 3.26212 46.7268 3.5336 47.1838 4.07657C47.6409 4.61954 47.8694 5.39688 47.8694 6.4086V6.85977H43.5745C43.5901 7.48477 43.7717 7.99063 44.1194 8.37735C44.4709 8.76016 44.9163 8.95157 45.4553 8.95157C45.8381 8.95157 46.1624 8.87344 46.428 8.71719C46.6936 8.56094 46.926 8.35391 47.1252 8.0961L47.7874 8.61172C47.2561 9.42813 46.4592 9.83633 45.3967 9.83633ZM45.262 4.15274C44.8245 4.15274 44.4573 4.3129 44.1604 4.63321C43.8635 4.94962 43.6799 5.39493 43.6096 5.96915H46.7854V5.88712C46.7542 5.33633 46.6057 4.91055 46.3401 4.60977C46.0745 4.30508 45.7151 4.15274 45.262 4.15274Z"/>\n      <path d="M57.719 8.22501L58.9377 3.3793H60.0217L58.176 9.71915H57.2971L55.7561 4.91446L54.2561 9.71915H53.3772L51.5374 3.3793H52.6155L53.8635 8.1254L55.3401 3.3793H56.2131L57.719 8.22501Z"/>\n      <path d="M62.3069 9.71915H61.2229V3.3793H62.3069V9.71915ZM61.135 1.69766C61.135 1.52188 61.1877 1.37344 61.2932 1.25235C61.4026 1.13126 61.5627 1.07071 61.7737 1.07071C61.9846 1.07071 62.1448 1.13126 62.2542 1.25235C62.3635 1.37344 62.4182 1.52188 62.4182 1.69766C62.4182 1.87344 62.3635 2.01993 62.2542 2.13712C62.1448 2.2543 61.9846 2.3129 61.7737 2.3129C61.5627 2.3129 61.4026 2.2543 61.2932 2.13712C61.1877 2.01993 61.135 1.87344 61.135 1.69766Z"/>\n      <path d="M65.5178 1.84415V3.3793H66.7014V4.21719H65.5178V8.14883C65.5178 8.40274 65.5706 8.59415 65.676 8.72305C65.7815 8.84805 65.9612 8.91055 66.2151 8.91055C66.3401 8.91055 66.512 8.88712 66.7307 8.84024V9.71915C66.4456 9.79727 66.1682 9.83633 65.8987 9.83633C65.4143 9.83633 65.0491 9.68985 64.803 9.39688C64.5569 9.10391 64.4338 8.6879 64.4338 8.14883V4.21719H63.2795V3.3793H64.4338V1.84415H65.5178Z"/>\n      <path d="M69.0569 4.14688C69.5374 3.55704 70.1624 3.26212 70.9319 3.26212C72.2717 3.26212 72.9475 4.01797 72.9592 5.52969V9.71915H71.8752V5.52383C71.8713 5.0668 71.7659 4.72891 71.5588 4.51016C71.3557 4.29141 71.0374 4.18204 70.6038 4.18204C70.2522 4.18204 69.9436 4.27579 69.678 4.46329C69.4124 4.65079 69.2053 4.89688 69.0569 5.20157V9.71915H67.9729V0.719147H69.0569V4.14688Z"/>\n      <path d="M109.241 32.719C109.976 32.719 110.711 32.719 111.446 32.719C111.446 30.6451 111.446 28.5712 111.446 26.4973C111.446 26.2731 111.472 26.0787 111.524 25.8936C111.576 25.7086 111.656 25.5313 111.773 25.3435C112.507 24.1727 113.24 23.0019 113.973 21.8311C115.017 20.1616 116.063 18.4926 117.109 16.8229C117.222 16.6414 117.336 16.4598 117.45 16.2783C116.513 16.2783 115.577 16.2783 114.641 16.2783C114.601 16.3422 114.562 16.4061 114.522 16.4699C113.129 18.6938 111.737 20.9185 110.344 23.1448C108.95 20.9185 107.558 18.6937 106.164 16.4683C106.124 16.4049 106.084 16.3416 106.044 16.2783C105.108 16.2783 104.173 16.2783 103.237 16.2783C103.351 16.4599 103.465 16.6414 103.578 16.823C104.245 17.8876 104.912 18.9524 105.579 20.0174C106.245 21.0823 106.912 22.1474 107.578 23.2129C107.807 23.5797 108.036 23.9466 108.266 24.313C108.496 24.6794 108.726 25.0454 108.952 25.4147C108.972 25.4477 108.992 25.4807 109.01 25.5148C109.029 25.549 109.045 25.5843 109.061 25.6198C109.09 25.6862 109.118 25.7534 109.141 25.8223C109.164 25.8912 109.182 25.9618 109.197 26.0332C109.212 26.1094 109.224 26.1865 109.231 26.264C109.238 26.3414 109.241 26.4194 109.241 26.4973C109.241 28.5712 109.241 30.6451 109.241 32.719Z"/>\n      <path fill-rule="evenodd" clip-rule="evenodd" d="M101.111 32.7122H98.5498L98.4608 32.4973C97.833 30.9809 97.2088 29.4631 96.5844 27.9447C96.4445 27.6045 96.3046 27.2643 96.1647 26.9241C95.8392 26.133 95.094 25.6257 94.2578 25.6257H88.8872V32.7122H86.6825V16.2729H95.2676C95.6614 16.2729 96.0559 16.281 96.4472 16.3261C96.65 16.3495 96.852 16.3829 97.0512 16.4288C97.2587 16.4767 97.4632 16.5383 97.6625 16.6144C97.8739 16.6952 98.0796 16.7925 98.2768 16.9052C98.4071 16.9796 98.5336 17.0607 98.6556 17.1486C98.8259 17.2714 98.9872 17.4073 99.1378 17.5548C99.4402 17.8511 99.6991 18.1942 99.9073 18.5666C100.124 18.9544 100.286 19.3739 100.396 19.8068C100.503 20.2265 100.562 20.6588 100.573 21.0925C100.584 21.5252 100.548 21.9593 100.464 22.3834C100.422 22.593 100.368 22.8001 100.303 23.003C100.257 23.1437 100.206 23.2824 100.149 23.4185C100.064 23.6223 99.9652 23.8205 99.8512 24.0088C99.7413 24.1902 99.6171 24.3626 99.4799 24.5232C99.4121 24.6026 99.3411 24.6792 99.2667 24.7521C99.1962 24.8212 99.1227 24.887 99.0466 24.9494C98.9037 25.0666 98.7515 25.1718 98.5934 25.2661C98.4471 25.3534 98.2958 25.4313 98.1418 25.5031C98.652 26.7421 99.1624 27.9814 99.6715 29.2194L101.111 32.7122ZM88.8895 23.1987H95.298C95.6331 23.1987 95.9686 23.1987 96.3027 23.1712C97.584 23.1712 98.0965 22.3384 98.1864 21.2514C98.292 19.9754 97.8762 18.8499 96.4328 18.7383C96.121 18.7057 95.8073 18.699 95.4939 18.699L88.8895 18.6999V23.1987Z"/>\n      <path d="M82.0422 32.7122C82.8199 32.7122 83.5976 32.7122 84.3753 32.7122C82.1302 27.2324 79.885 21.7526 77.6399 16.2729C77.1732 16.2729 76.7066 16.2729 76.2399 16.2729C75.9952 16.2729 75.7505 16.2752 75.5063 16.2908C75.2727 16.3057 75.0395 16.3327 74.8108 16.3834C74.5795 16.4346 74.3528 16.5101 74.1379 16.6119C73.9069 16.7215 73.6895 16.8617 73.4906 17.0252C73.2902 17.1899 73.1086 17.3782 72.9469 17.5828C72.7923 17.7784 72.6557 17.9889 72.5327 18.2071C72.415 18.4158 72.3096 18.6315 72.2114 18.8506C72.1193 19.0562 72.0335 19.2648 71.9477 19.4734C70.1352 23.8863 68.3228 28.2992 66.5103 32.7122C67.3641 32.7122 68.2179 32.7122 69.0716 32.7122C69.1012 32.6403 69.1307 32.5683 69.1603 32.4964C69.9839 30.4916 70.8076 28.4859 71.6322 26.4791C72.4598 24.4569 73.2891 22.436 74.1198 20.4174C74.1377 20.3747 74.1556 20.3319 74.1736 20.2891C74.2236 20.169 74.2736 20.0488 74.3262 19.9299C74.3511 19.8735 74.3767 19.8173 74.4026 19.7614C74.4277 19.7073 74.4532 19.6533 74.4798 19.5999C74.5091 19.5412 74.5397 19.4831 74.5716 19.4259C74.5979 19.3789 74.625 19.3324 74.6537 19.2869C74.6989 19.2152 74.7479 19.1458 74.8024 19.0813L74.8047 19.0786L74.807 19.0759C74.8538 19.0182 74.9097 18.9626 74.9694 18.9164C74.9735 18.913 74.9777 18.9097 74.9818 18.9063C74.9858 18.9027 74.9898 18.8991 74.9938 18.8955C74.9938 18.8955 75.0137 18.8808 75.04 18.8639C75.0729 18.8448 75.0985 18.8322 75.0985 18.8322C75.1024 18.8307 75.1063 18.8292 75.1102 18.8277C75.1139 18.826 75.1177 18.8242 75.1215 18.8225C75.1526 18.8079 75.1766 18.7983 75.212 18.7859C75.245 18.7742 75.2777 18.7657 75.3095 18.7605C75.3164 18.7593 75.3233 18.7582 75.3302 18.757C75.337 18.7551 75.3437 18.7531 75.3504 18.7511C75.3709 18.745 75.4111 18.7376 75.4729 18.73C75.4753 18.7297 75.4777 18.7294 75.4801 18.7291C75.4825 18.7287 75.4848 18.7283 75.4872 18.7279C75.5373 18.7196 75.6027 18.7133 75.666 18.7097C75.7508 18.7063 75.8384 18.7028 75.9211 18.701C75.9718 18.701 76.0225 18.701 76.0732 18.701C77.0865 21.1711 78.0977 23.6418 79.1094 26.1119C79.9818 28.2411 80.8529 30.3687 81.7258 32.4963C81.7553 32.5682 81.7848 32.6402 81.8144 32.7122C81.8903 32.7122 81.9662 32.7122 82.0422 32.7122Z"/>\n      <path d="M59.2107 32.7122H61.4153V18.701H66.9618V16.2729H53.6642V18.701H59.2107V32.7122Z"/>\n      <path d="M45.2598 16.2729C44.7 16.2729 44.1398 16.3103 43.5868 16.4003C43.0861 16.4817 42.5915 16.6062 42.1158 16.7861C41.6729 16.9536 41.2466 17.1693 40.8525 17.4362C40.4704 17.6952 40.1187 18.0024 39.8097 18.3495C39.4951 18.7028 39.2248 19.0976 38.9996 19.5171C38.7598 19.9637 38.5711 20.4385 38.4247 20.9259C38.264 21.461 38.1543 22.0114 38.082 22.5664C38.0013 23.186 37.9673 23.8114 37.966 24.4365C37.9661 24.4529 37.9659 24.4897 37.9659 24.5267C37.9655 25.1189 37.9978 25.7616 38.0765 26.3908C38.147 26.9545 38.2549 27.5073 38.4135 28.0471C38.5576 28.5374 38.7437 29.0171 38.9816 29.4683C39.2037 29.8896 39.4708 30.2861 39.7838 30.6404C40.0901 30.9872 40.4403 31.2936 40.8208 31.5514C41.2147 31.8182 41.6413 32.0329 42.0846 32.1998C42.5619 32.3794 43.0586 32.5037 43.5582 32.5849C43.834 32.6297 44.1106 32.6614 44.3969 32.6824C44.54 32.6929 44.6856 32.7007 44.8141 32.7049C44.9426 32.7092 45.0541 32.7098 45.1606 32.7104C45.7931 32.7136 46.2521 32.7126 46.7363 32.7122C47.2205 32.7118 47.7298 32.712 48.2349 32.7121C49.245 32.7123 50.2377 32.7121 51.2415 32.7122C51.2416 32.5954 51.2414 32.4841 51.2414 32.3023C51.2414 31.8885 51.2423 31.109 51.2445 30.6957C51.2455 30.513 51.2467 30.4019 51.2472 30.284C50.2519 30.2842 49.2295 30.2837 48.2409 30.284C47.2523 30.2843 46.2976 30.2852 45.1438 30.2822C45.0661 30.282 44.9874 30.2817 44.8862 30.2785C44.785 30.2753 44.6613 30.269 44.5411 30.2603C44.3258 30.2447 44.1218 30.2213 43.9177 30.188C43.57 30.1311 43.2221 30.0454 42.8894 29.9198C42.749 29.8667 42.6113 29.8066 42.4768 29.739C42.3452 29.6695 42.2334 29.6023 42.1204 29.5255L42.1185 29.5241L42.1165 29.5229C42.0127 29.4549 41.9116 29.3759 41.8104 29.2854C41.7063 29.1952 41.6183 29.1083 41.5306 29.0103C41.4465 28.9115 41.3563 28.8001 41.2831 28.6889L41.2813 28.6862L41.2794 28.6835C41.1956 28.5627 41.1175 28.4299 41.053 28.3129C40.9037 28.0278 40.7807 27.7139 40.6717 27.3509C40.6165 27.1627 40.5692 26.9659 40.5252 26.7582C40.4795 26.5365 40.442 26.3128 40.4129 26.088C40.3825 25.8444 40.365 25.5883 40.3469 25.3357C40.3325 25.0645 40.3262 24.7669 40.3254 24.5193C40.3253 24.4837 40.3253 24.4492 40.3254 24.4136C40.3262 24.1648 40.3324 23.8653 40.3504 23.6167C40.3625 23.3993 40.3832 23.1658 40.4169 22.8711C40.4764 22.4474 40.5563 22.0259 40.6782 21.6165C40.7763 21.2868 40.9015 20.9649 41.0629 20.6627C41.1317 20.5339 41.207 20.4087 41.2905 20.2896C41.3679 20.1791 41.4523 20.0738 41.5421 19.9736L41.5444 19.9711L41.546 19.9692C41.6305 19.8714 41.7173 19.7838 41.8156 19.7028C41.8156 19.7028 41.8172 19.7014 41.8192 19.6997C41.8209 19.6983 41.8225 19.6968 41.8241 19.6954C41.8961 19.6314 41.9719 19.5719 42.0497 19.5156C42.0918 19.4851 42.1346 19.4555 42.178 19.4268C42.2204 19.3988 42.2634 19.3717 42.307 19.3457C42.3516 19.3191 42.3968 19.2935 42.4426 19.2691C42.4906 19.2435 42.5392 19.2192 42.5883 19.1962C42.6921 19.1473 42.7982 19.104 42.9059 19.0649L42.9105 19.0632L42.9151 19.0614C43.0698 19 43.2288 18.9518 43.3898 18.9106C43.5708 18.8643 43.7544 18.8267 43.9373 18.7972C44.1429 18.7641 44.3476 18.7411 44.5637 18.7253C44.684 18.7165 44.8078 18.71 44.9103 18.7066C45.0127 18.7031 45.0938 18.7029 45.174 18.7026C46.3183 18.6992 47.2738 18.7003 48.2615 18.7006C49.2492 18.7009 50.2691 18.7004 51.2632 18.7006C51.2632 17.8913 51.2632 17.0821 51.2632 16.2729C49.2621 16.2729 47.261 16.2729 45.2598 16.2729Z"/>\n      <path d="M22.6213 32.7122H35.5075V30.2845H24.9811V25.6261H33.6506V23.3571H24.9811V18.701H35.5075V16.2729H22.6213V32.7122Z"/>\n      <path d="M9.41686 32.7122C9.80755 32.7122 10.1982 32.7122 10.5889 32.7122C10.8911 32.7122 11.1934 32.7089 11.4946 32.6809C11.6398 32.6673 11.7848 32.6481 11.928 32.6203C12.0708 32.5926 12.2118 32.5565 12.3498 32.5102C12.6412 32.4125 12.9191 32.2696 13.1708 32.089C13.3031 31.9941 13.4282 31.8887 13.5458 31.7751C13.6633 31.6615 13.7734 31.5397 13.8755 31.4113C13.9719 31.2902 14.0612 31.1633 14.1446 31.0325C14.228 30.9017 14.3053 30.7669 14.3783 30.6296C14.4469 30.5004 14.5115 30.369 14.5726 30.2359C14.6337 30.1029 14.6912 29.9681 14.7481 29.8331C14.9274 29.4076 15.1001 28.9793 15.2745 28.5517C15.4489 28.1241 15.6248 27.6973 15.8004 27.2702C16.1517 26.4161 16.5015 25.5614 16.8521 24.707C17.1237 24.0449 17.3959 23.383 17.6679 22.7211C17.9399 22.0591 18.2117 21.3971 18.4837 20.7351C18.7558 20.0732 19.028 19.4113 19.3002 18.7494C19.5724 18.0876 19.8446 17.4257 20.1168 16.7639C20.1842 16.6002 20.2515 16.4365 20.3188 16.2729C19.4638 16.2729 18.6087 16.2729 17.7536 16.2729C17.7241 16.3448 17.6945 16.4167 17.665 16.4886C16.8428 18.49 16.0209 20.4915 15.2002 22.4936C14.3477 24.5699 13.4952 26.6462 12.6415 28.722C12.5897 28.8478 12.538 28.9736 12.4827 29.0978C12.4371 29.2005 12.389 29.3021 12.3379 29.4022C12.2937 29.4889 12.2472 29.5744 12.1966 29.6573C12.158 29.7205 12.1171 29.7821 12.0727 29.8413C12.0108 29.9237 11.9423 30.0012 11.864 30.0671C11.8235 30.095 11.8001 30.1126 11.8001 30.1126C11.7983 30.1136 11.7965 30.1146 11.7947 30.1156C11.793 30.1165 11.7912 30.1175 11.7894 30.1185C11.7754 30.1266 11.7582 30.1364 11.7405 30.1466C11.7175 30.157 11.6945 30.1675 11.6714 30.1779C11.6444 30.1883 11.6295 30.1945 11.6295 30.1945L11.6249 30.1959L11.6203 30.1973C11.5831 30.2096 11.5486 30.2194 11.5093 30.2287C11.4518 30.2404 11.404 30.2492 11.3508 30.2574C11.285 30.2642 11.2224 30.2699 11.1584 30.273L11.1535 30.2733L11.1485 30.2737C11.029 30.2832 10.8943 30.2846 10.7552 30.2846C8.84046 25.6141 6.92571 20.9435 5.01097 16.2729C4.15728 16.2729 3.30359 16.2729 2.4499 16.2729C2.51691 16.4364 2.58392 16.5999 2.65093 16.7634C4.80001 22.0075 6.9478 27.2503 9.10048 32.4963C9.13001 32.5682 9.15954 32.6402 9.18907 32.7122C9.265 32.7122 9.34093 32.7122 9.41686 32.7122Z"/>\n    </svg>\n  </a>\n\n  \x3c!-- EDIT LINK --\x3e\n  <a class="edit" href="" target="_blank">\n    <svg class="edit-icon" width="18" height="17" viewBox="0 0 18 17" fill="none" xmlns="http://www.w3.org/2000/svg">\n      <path d="M0 2C0 0.89543 0.895431 0 2 0H3C4.10457 0 5 0.895431 5 2V15L2.5 19L0 15V2Z" transform="translate(14) rotate(45)" fill="white" />\n    </svg>\n    <svg class="edit-text" width="98" height="11" viewBox="0 0 98 11" fill="none" xmlns="http://www.w3.org/2000/svg">\n      <path d="M6.47461 14H1.2251V4.71973H6.47461V6.00195H2.74219V8.52832H6.23975V9.79785H2.74219V12.7114H6.47461V14ZM10.6958 14.127C9.81982 14.127 9.13639 13.8096 8.64551 13.1748C8.15462 12.54 7.90918 11.6493 7.90918 10.5024C7.90918 9.3514 8.15674 8.45638 8.65186 7.81738C9.1512 7.17415 9.84098 6.85254 10.7212 6.85254C11.6437 6.85254 12.3462 7.1932 12.8286 7.87451H12.9048C12.8328 7.37093 12.7969 6.97314 12.7969 6.68115V4.12305H14.2949V14H13.127L12.8667 13.0796H12.7969C12.3187 13.7778 11.6183 14.127 10.6958 14.127ZM11.0957 12.9209C11.7093 12.9209 12.1558 12.7495 12.4351 12.4067C12.7144 12.0597 12.8582 11.499 12.8667 10.7246V10.5151C12.8667 9.6307 12.7228 9.00228 12.4351 8.62988C12.1473 8.25749 11.6966 8.07129 11.083 8.07129C10.5583 8.07129 10.1541 8.28499 9.87061 8.7124C9.58708 9.13558 9.44531 9.74072 9.44531 10.5278C9.44531 11.3065 9.58285 11.901 9.85791 12.3115C10.133 12.7178 10.5456 12.9209 11.0957 12.9209ZM17.9194 14H16.4277V6.97949H17.9194V14ZM16.3389 5.11963C16.3389 4.85303 16.4108 4.64779 16.5547 4.50391C16.7028 4.36003 16.9123 4.28809 17.1831 4.28809C17.4455 4.28809 17.6486 4.36003 17.7925 4.50391C17.9406 4.64779 18.0146 4.85303 18.0146 5.11963C18.0146 5.37354 17.9406 5.57454 17.7925 5.72266C17.6486 5.86654 17.4455 5.93848 17.1831 5.93848C16.9123 5.93848 16.7028 5.86654 16.5547 5.72266C16.4108 5.57454 16.3389 5.37354 16.3389 5.11963ZM22.6738 12.9209C23.0378 12.9209 23.4017 12.8638 23.7656 12.7495V13.873C23.6006 13.945 23.3869 14.0042 23.1245 14.0508C22.8664 14.1016 22.5977 14.127 22.3184 14.127C20.9049 14.127 20.1982 13.3822 20.1982 11.8926V8.10938H19.2397V7.44922L20.2681 6.90332L20.7759 5.41797H21.6963V6.97949H23.6958V8.10938H21.6963V11.8672C21.6963 12.2269 21.7852 12.4935 21.9629 12.667C22.1449 12.8363 22.3818 12.9209 22.6738 12.9209ZM30.0435 14H28.5518V6.97949H30.0435V14ZM28.4629 5.11963C28.4629 4.85303 28.5348 4.64779 28.6787 4.50391C28.8268 4.36003 29.0363 4.28809 29.3071 4.28809C29.5695 4.28809 29.7726 4.36003 29.9165 4.50391C30.0646 4.64779 30.1387 4.85303 30.1387 5.11963C30.1387 5.37354 30.0646 5.57454 29.9165 5.72266C29.7726 5.86654 29.5695 5.93848 29.3071 5.93848C29.0363 5.93848 28.8268 5.86654 28.6787 5.72266C28.5348 5.57454 28.4629 5.37354 28.4629 5.11963ZM38.3589 14H36.8608V9.68359C36.8608 9.14193 36.7508 8.73779 36.5308 8.47119C36.3149 8.20459 35.9701 8.07129 35.4961 8.07129C34.8656 8.07129 34.4043 8.25749 34.1123 8.62988C33.8203 9.00228 33.6743 9.62646 33.6743 10.5024V14H32.1826V6.97949H33.3506L33.5601 7.8999H33.6362C33.8478 7.56559 34.1483 7.30745 34.5376 7.12549C34.9269 6.94352 35.3586 6.85254 35.8325 6.85254C37.5168 6.85254 38.3589 7.70947 38.3589 9.42334V14ZM49.2578 4.71973H50.832L47.582 14H45.9824L42.7451 4.71973H44.3066L46.2427 10.4897C46.3442 10.7648 46.4521 11.1203 46.5664 11.5562C46.6807 11.9878 46.7547 12.3094 46.7886 12.521C46.8436 12.1994 46.9282 11.827 47.0425 11.4038C47.1567 10.9806 47.2498 10.6675 47.3218 10.4644L49.2578 4.71973ZM57.3066 14H52.0571V4.71973H57.3066V6.00195H53.5742V8.52832H57.0718V9.79785H53.5742V12.7114H57.3066V14ZM63.2671 5.8877C62.3953 5.8877 61.7098 6.19661 61.2104 6.81445C60.7111 7.43229 60.4614 8.28499 60.4614 9.37256C60.4614 10.5109 60.7005 11.3721 61.1787 11.9561C61.6611 12.54 62.3573 12.832 63.2671 12.832C63.6606 12.832 64.0415 12.7939 64.4097 12.7178C64.7778 12.6374 65.1608 12.5358 65.5586 12.4131V13.7144C64.8307 13.9894 64.0055 14.127 63.083 14.127C61.7246 14.127 60.6815 13.7165 59.9536 12.8955C59.2257 12.0703 58.8618 10.8918 58.8618 9.35986C58.8618 8.39502 59.0374 7.55078 59.3887 6.82715C59.7441 6.10352 60.2562 5.54915 60.9248 5.16406C61.5934 4.77897 62.3784 4.58643 63.2798 4.58643C64.2277 4.58643 65.1037 4.78532 65.9077 5.18311L65.3618 6.44629C65.0487 6.29818 64.7165 6.16911 64.3652 6.05908C64.0182 5.94482 63.6522 5.8877 63.2671 5.8877ZM70.7637 14H69.2466V6.021H66.5171V4.71973H73.4932V6.021H70.7637V14ZM80.6787 14L79.752 11.4229H76.2036L75.2959 14H73.6963L77.1685 4.68164H78.8188L82.291 14H80.6787ZM79.3521 10.1152L78.4824 7.58887C78.4189 7.4196 78.3301 7.15299 78.2158 6.78906C78.1058 6.42513 78.0296 6.15853 77.9873 5.98926C77.873 6.50977 77.7059 7.07894 77.4858 7.69678L76.6479 10.1152H79.3521ZM85.0332 9.03613H86.0869C86.7936 9.03613 87.3057 8.90495 87.623 8.64258C87.9404 8.38021 88.0991 7.99089 88.0991 7.47461C88.0991 6.94987 87.9277 6.57324 87.585 6.34473C87.2422 6.11621 86.7259 6.00195 86.0361 6.00195H85.0332V9.03613ZM85.0332 10.293V14H83.5161V4.71973H86.1377C87.3353 4.71973 88.2218 4.94401 88.7974 5.39258C89.3729 5.84115 89.6606 6.51823 89.6606 7.42383C89.6606 8.5791 89.0597 9.40218 87.8579 9.89307L90.4795 14H88.7529L86.5312 10.293H85.0332ZM94.4531 8.95361L96.6494 4.71973H98.2998L95.2085 10.4009V14H93.6851V10.4517L90.6064 4.71973H92.2568L94.4531 8.95361Z" transform="translate(-1 -4)" fill="white" />\n    </svg>\n    <div class="bottom-right tooltip" data-title="Only you as a project owner can see this">\n      <svg width="15" height="17" viewBox="0 0 15 17" fill="none" xmlns="http://www.w3.org/2000/svg">\n        <path d="M6.6582 10.3984V10.0234C6.6582 9.59375 6.73633 9.23633 6.89258 8.95117C7.04883 8.66602 7.32227 8.37109 7.71289 8.06641C8.17773 7.69922 8.47656 7.41406 8.60938 7.21094C8.74609 7.00781 8.81445 6.76562 8.81445 6.48438C8.81445 6.15625 8.70508 5.9043 8.48633 5.72852C8.26758 5.55273 7.95312 5.46484 7.54297 5.46484C7.17188 5.46484 6.82812 5.51758 6.51172 5.62305C6.19531 5.72852 5.88672 5.85547 5.58594 6.00391L5.09375 4.97266C5.88672 4.53125 6.73633 4.31055 7.64258 4.31055C8.4082 4.31055 9.01562 4.49805 9.46484 4.87305C9.91406 5.24805 10.1387 5.76562 10.1387 6.42578C10.1387 6.71875 10.0957 6.98047 10.0098 7.21094C9.92383 7.4375 9.79297 7.6543 9.61719 7.86133C9.44531 8.06836 9.14648 8.33789 8.7207 8.66992C8.35742 8.95508 8.11328 9.19141 7.98828 9.37891C7.86719 9.56641 7.80664 9.81836 7.80664 10.1348V10.3984H6.6582ZM6.41797 12.2676C6.41797 11.6777 6.70508 11.3828 7.2793 11.3828C7.56055 11.3828 7.77539 11.4609 7.92383 11.6172C8.07227 11.7695 8.14648 11.9863 8.14648 12.2676C8.14648 12.5449 8.07031 12.7656 7.91797 12.9297C7.76953 13.0898 7.55664 13.1699 7.2793 13.1699C7.00195 13.1699 6.78906 13.0918 6.64062 12.9355C6.49219 12.7754 6.41797 12.5527 6.41797 12.2676Z" fill="#CCCCCC"/>\n        <circle cx="7.5" cy="8.5" r="7" stroke="#CCCCCC"/>\n      </svg>\n    </div>\n  </a>\n\n  \x3c!-- FORK LINK --\x3e\n  <a class="fork" href="" target="_blank">\n    <svg class="edit-icon" width="18" height="17" viewBox="0 0 18 17" fill="none" xmlns="http://www.w3.org/2000/svg">\n      <path d="M0 2C0 0.89543 0.895431 0 2 0H3C4.10457 0 5 0.895431 5 2V15L2.5 19L0 15V2Z" transform="translate(14) rotate(45)" fill="white" />\n    </svg>\n    <svg class="fork-text" width="98" height="11" viewBox="0 0 98 11" fill="none" xmlns="http://www.w3.org/2000/svg">\n      <path d="M6.47461 14H1.2251V4.71973H6.47461V6.00195H2.74219V8.52832H6.23975V9.79785H2.74219V12.7114H6.47461V14ZM10.6958 14.127C9.81982 14.127 9.13639 13.8096 8.64551 13.1748C8.15462 12.54 7.90918 11.6493 7.90918 10.5024C7.90918 9.3514 8.15674 8.45638 8.65186 7.81738C9.1512 7.17415 9.84098 6.85254 10.7212 6.85254C11.6437 6.85254 12.3462 7.1932 12.8286 7.87451H12.9048C12.8328 7.37093 12.7969 6.97314 12.7969 6.68115V4.12305H14.2949V14H13.127L12.8667 13.0796H12.7969C12.3187 13.7778 11.6183 14.127 10.6958 14.127ZM11.0957 12.9209C11.7093 12.9209 12.1558 12.7495 12.4351 12.4067C12.7144 12.0597 12.8582 11.499 12.8667 10.7246V10.5151C12.8667 9.6307 12.7228 9.00228 12.4351 8.62988C12.1473 8.25749 11.6966 8.07129 11.083 8.07129C10.5583 8.07129 10.1541 8.28499 9.87061 8.7124C9.58708 9.13558 9.44531 9.74072 9.44531 10.5278C9.44531 11.3065 9.58285 11.901 9.85791 12.3115C10.133 12.7178 10.5456 12.9209 11.0957 12.9209ZM17.9194 14H16.4277V6.97949H17.9194V14ZM16.3389 5.11963C16.3389 4.85303 16.4108 4.64779 16.5547 4.50391C16.7028 4.36003 16.9123 4.28809 17.1831 4.28809C17.4455 4.28809 17.6486 4.36003 17.7925 4.50391C17.9406 4.64779 18.0146 4.85303 18.0146 5.11963C18.0146 5.37354 17.9406 5.57454 17.7925 5.72266C17.6486 5.86654 17.4455 5.93848 17.1831 5.93848C16.9123 5.93848 16.7028 5.86654 16.5547 5.72266C16.4108 5.57454 16.3389 5.37354 16.3389 5.11963ZM22.6738 12.9209C23.0378 12.9209 23.4017 12.8638 23.7656 12.7495V13.873C23.6006 13.945 23.3869 14.0042 23.1245 14.0508C22.8664 14.1016 22.5977 14.127 22.3184 14.127C20.9049 14.127 20.1982 13.3822 20.1982 11.8926V8.10938H19.2397V7.44922L20.2681 6.90332L20.7759 5.41797H21.6963V6.97949H23.6958V8.10938H21.6963V11.8672C21.6963 12.2269 21.7852 12.4935 21.9629 12.667C22.1449 12.8363 22.3818 12.9209 22.6738 12.9209ZM30.0435 14H28.5518V6.97949H30.0435V14ZM28.4629 5.11963C28.4629 4.85303 28.5348 4.64779 28.6787 4.50391C28.8268 4.36003 29.0363 4.28809 29.3071 4.28809C29.5695 4.28809 29.7726 4.36003 29.9165 4.50391C30.0646 4.64779 30.1387 4.85303 30.1387 5.11963C30.1387 5.37354 30.0646 5.57454 29.9165 5.72266C29.7726 5.86654 29.5695 5.93848 29.3071 5.93848C29.0363 5.93848 28.8268 5.86654 28.6787 5.72266C28.5348 5.57454 28.4629 5.37354 28.4629 5.11963ZM38.3589 14H36.8608V9.68359C36.8608 9.14193 36.7508 8.73779 36.5308 8.47119C36.3149 8.20459 35.9701 8.07129 35.4961 8.07129C34.8656 8.07129 34.4043 8.25749 34.1123 8.62988C33.8203 9.00228 33.6743 9.62646 33.6743 10.5024V14H32.1826V6.97949H33.3506L33.5601 7.8999H33.6362C33.8478 7.56559 34.1483 7.30745 34.5376 7.12549C34.9269 6.94352 35.3586 6.85254 35.8325 6.85254C37.5168 6.85254 38.3589 7.70947 38.3589 9.42334V14ZM49.2578 4.71973H50.832L47.582 14H45.9824L42.7451 4.71973H44.3066L46.2427 10.4897C46.3442 10.7648 46.4521 11.1203 46.5664 11.5562C46.6807 11.9878 46.7547 12.3094 46.7886 12.521C46.8436 12.1994 46.9282 11.827 47.0425 11.4038C47.1567 10.9806 47.2498 10.6675 47.3218 10.4644L49.2578 4.71973ZM57.3066 14H52.0571V4.71973H57.3066V6.00195H53.5742V8.52832H57.0718V9.79785H53.5742V12.7114H57.3066V14ZM63.2671 5.8877C62.3953 5.8877 61.7098 6.19661 61.2104 6.81445C60.7111 7.43229 60.4614 8.28499 60.4614 9.37256C60.4614 10.5109 60.7005 11.3721 61.1787 11.9561C61.6611 12.54 62.3573 12.832 63.2671 12.832C63.6606 12.832 64.0415 12.7939 64.4097 12.7178C64.7778 12.6374 65.1608 12.5358 65.5586 12.4131V13.7144C64.8307 13.9894 64.0055 14.127 63.083 14.127C61.7246 14.127 60.6815 13.7165 59.9536 12.8955C59.2257 12.0703 58.8618 10.8918 58.8618 9.35986C58.8618 8.39502 59.0374 7.55078 59.3887 6.82715C59.7441 6.10352 60.2562 5.54915 60.9248 5.16406C61.5934 4.77897 62.3784 4.58643 63.2798 4.58643C64.2277 4.58643 65.1037 4.78532 65.9077 5.18311L65.3618 6.44629C65.0487 6.29818 64.7165 6.16911 64.3652 6.05908C64.0182 5.94482 63.6522 5.8877 63.2671 5.8877ZM70.7637 14H69.2466V6.021H66.5171V4.71973H73.4932V6.021H70.7637V14ZM80.6787 14L79.752 11.4229H76.2036L75.2959 14H73.6963L77.1685 4.68164H78.8188L82.291 14H80.6787ZM79.3521 10.1152L78.4824 7.58887C78.4189 7.4196 78.3301 7.15299 78.2158 6.78906C78.1058 6.42513 78.0296 6.15853 77.9873 5.98926C77.873 6.50977 77.7059 7.07894 77.4858 7.69678L76.6479 10.1152H79.3521ZM85.0332 9.03613H86.0869C86.7936 9.03613 87.3057 8.90495 87.623 8.64258C87.9404 8.38021 88.0991 7.99089 88.0991 7.47461C88.0991 6.94987 87.9277 6.57324 87.585 6.34473C87.2422 6.11621 86.7259 6.00195 86.0361 6.00195H85.0332V9.03613ZM85.0332 10.293V14H83.5161V4.71973H86.1377C87.3353 4.71973 88.2218 4.94401 88.7974 5.39258C89.3729 5.84115 89.6606 6.51823 89.6606 7.42383C89.6606 8.5791 89.0597 9.40218 87.8579 9.89307L90.4795 14H88.7529L86.5312 10.293H85.0332ZM94.4531 8.95361L96.6494 4.71973H98.2998L95.2085 10.4009V14H93.6851V10.4517L90.6064 4.71973H92.2568L94.4531 8.95361Z" transform="translate(-1 -4)" fill="white" />\n    </svg>\n    <div class="bottom-right tooltip" data-title="Fork as a new project">\n      <svg width="15" height="17" viewBox="0 0 15 17" fill="none" xmlns="http://www.w3.org/2000/svg">\n        <path d="M6.6582 10.3984V10.0234C6.6582 9.59375 6.73633 9.23633 6.89258 8.95117C7.04883 8.66602 7.32227 8.37109 7.71289 8.06641C8.17773 7.69922 8.47656 7.41406 8.60938 7.21094C8.74609 7.00781 8.81445 6.76562 8.81445 6.48438C8.81445 6.15625 8.70508 5.9043 8.48633 5.72852C8.26758 5.55273 7.95312 5.46484 7.54297 5.46484C7.17188 5.46484 6.82812 5.51758 6.51172 5.62305C6.19531 5.72852 5.88672 5.85547 5.58594 6.00391L5.09375 4.97266C5.88672 4.53125 6.73633 4.31055 7.64258 4.31055C8.4082 4.31055 9.01562 4.49805 9.46484 4.87305C9.91406 5.24805 10.1387 5.76562 10.1387 6.42578C10.1387 6.71875 10.0957 6.98047 10.0098 7.21094C9.92383 7.4375 9.79297 7.6543 9.61719 7.86133C9.44531 8.06836 9.14648 8.33789 8.7207 8.66992C8.35742 8.95508 8.11328 9.19141 7.98828 9.37891C7.86719 9.56641 7.80664 9.81836 7.80664 10.1348V10.3984H6.6582ZM6.41797 12.2676C6.41797 11.6777 6.70508 11.3828 7.2793 11.3828C7.56055 11.3828 7.77539 11.4609 7.92383 11.6172C8.07227 11.7695 8.14648 11.9863 8.14648 12.2676C8.14648 12.5449 8.07031 12.7656 7.91797 12.9297C7.76953 13.0898 7.55664 13.1699 7.2793 13.1699C7.00195 13.1699 6.78906 13.0918 6.64062 12.9355C6.49219 12.7754 6.41797 12.5527 6.41797 12.2676Z" fill="#CCCCCC"/>\n        <circle cx="7.5" cy="8.5" r="7" stroke="#CCCCCC"/>\n      </svg>\n    </div>\n  </a>\n\n  <div class="thumb">\n    <img src="">\n  </div>\n\n  <a class="play">\n    <svg width="90" height="90" viewBox="0 0 90 90" fill="none" xmlns="http://www.w3.org/2000/svg">\n      <circle cx="45" cy="45" r="45" fill="#A6A6A6"/>\n      <circle cx="45" cy="45" r="42" fill="white"/>\n      <path d="M63 41.0359C65.6667 42.5755 65.6667 46.4245 63 47.9641L38.25 62.2535C35.5833 63.7931 32.25 61.8686 32.25 58.7894L32.25 30.2106C32.25 27.1313 35.5833 25.2069 38.25 26.7465L63 41.0359Z" fill="#A6A6A6"/>\n    </svg>\n  </a>\n\n  <div class="preloader">\n    <svg class="spinner" width="50px" height="50px" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">\n      <circle class="path" fill="none" stroke-width="6" stroke-linecap="round" cx="33" cy="33" r="30"></circle>\n    </svg>\n  </div>\n\n  <div class="gesturesPrompt"></div>\n\n  <div class="interactiveIndicator">\n    <svg width="23" height="32" viewBox="0 0 23 32" fill="none" xmlns="http://www.w3.org/2000/svg">\n      <circle cx="9.5" cy="9.5" r="8.5" fill="#F3F3F3" fill-opacity="0.5" stroke="#606060" stroke-width="2"/>\n      <circle cx="9.5" cy="9.5" r="9" stroke="#F2F2F2"/>\n      <path d="M11.2744 17.4888C11.2975 16.5392 12.0824 15.778 13.046 15.778H13.0876C14.067 15.778 14.8605 16.5642 14.8605 17.5344V18.0991C14.8605 17.1294 15.6547 16.3434 16.6333 16.3434H16.6378C17.6171 16.3434 18.4108 17.1294 18.4108 18.0991V18.99C18.4108 18.0199 19.2043 17.2337 20.1837 17.2337H20.2228C21.2002 17.2337 21.9937 18.0169 21.9957 18.9847C22.0038 22.1518 22.0052 21.7703 22 26.5C21.9975 29.1561 19.8231 31.3073 17.1413 31.3073H11.3838C9.62182 31.3073 7.99768 30.3622 7.13969 28.8383L2 21L2.82426 20.2621C3.93485 19.3189 5 19.5 6.2833 20.2621L7.7196 21.8785L7.72797 10.7547C7.7292 9.78551 8.52268 9 9.50081 9C10.4804 9 11.2744 9.7862 11.2744 10.7559V17.4888Z" fill="white"/>\n      <path d="M20.4304 17.0334H20.3913C19.8648 17.0294 19.3548 17.2157 18.9549 17.5579C18.6159 16.6774 17.7962 16.0469 16.8382 16.0469C16.2565 16.053 15.7005 16.2876 15.2902 16.7C14.9098 15.9429 14.1372 15.4625 13.2899 15.4566H13.2482C12.7772 15.4566 12.3204 15.5748 12.005 15.8286V10.496C12.005 9.16971 10.9702 8.09082 9.71296 8.09082C8.4579 8.09082 7.42976 9.16897 7.42779 10.4942L7.41744 21.1275L6.87196 20.4652C6.33338 19.7948 5.54053 19.3784 4.68288 19.3156C3.84298 19.2579 3.01662 19.5502 2.39969 20.123L1.87219 20.5606C1.68913 20.7123 1.6369 20.971 1.74654 21.1819L6.88354 29.0538C7.8289 30.8699 9.62796 32 11.5785 32H17.3404C20.2969 32 22.7045 29.4374 22.7072 26.2902C22.7087 24.928 22.7099 25.903 22.7109 25.0695C22.7141 22.7772 22.7151 21.9341 22.7092 19.4178C22.7067 18.095 21.6845 17.0334 20.4304 17.0334ZM21.7018 25.0673C21.7008 25.9006 21.6995 24.9267 21.6981 26.2892C21.6958 28.8806 19.7408 30.9909 17.3404 30.9909H11.5785C10.0057 30.9909 8.54956 30.0687 7.77888 28.5877L2.82962 21.0784L3.05284 20.8927C3.05925 20.8873 3.06565 20.8813 3.07181 20.8754C3.48597 20.4854 4.04353 20.2853 4.61119 20.3228C5.19166 20.3674 5.72728 20.651 6.0902 21.106L7.52782 22.8556C7.66308 23.0202 7.88704 23.0822 8.08759 23.0103C8.28815 22.9386 8.42193 22.7486 8.42218 22.5355L8.43031 10.4952C8.43129 9.72579 9.01349 9.09999 9.7132 9.09999C10.4132 9.09999 10.9959 9.72628 10.9959 10.496V17.7787C10.9959 17.7964 10.9946 17.8144 10.9946 17.8326C10.9946 17.841 10.9959 17.8492 10.9959 17.8578V20.969C10.9959 21.2479 11.2218 21.4736 11.5004 21.4736C11.7791 21.4736 12.005 21.2479 12.005 20.969V17.7937C12.005 17.0452 12.5663 16.4657 13.2482 16.4657H13.2899C13.9899 16.4657 14.5279 17.0632 14.5279 17.8331V20.6734C14.5279 20.952 14.7539 21.178 15.0325 21.178C15.3112 21.178 15.5371 20.952 15.5371 20.6734V18.4444C15.5371 17.675 16.1277 17.0487 16.8323 17.0487C17.5325 17.0487 18.1231 17.6747 18.1231 18.4444V20.5472C18.1231 20.8259 18.349 21.0518 18.6277 21.0518C18.9063 21.0518 19.1323 20.8259 19.1323 20.5472V19.4087C19.1323 18.6388 19.6911 18.0426 20.3913 18.0426H20.4304C21.1289 18.0426 21.6986 18.6519 21.7 19.4193C21.7059 21.9341 21.705 22.7762 21.7018 25.0673Z" fill="#606060"/>\n    </svg>\n  </div>\n\n  <div class="errorMessage"></div>\n\n</div>`,
      a = `\n:host {\n  height: 100%;\n  width: 100%;\n  display: inline-block;\n  overflow:hidden;\n}\n\nhtml, body {\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  background-color: transparent;\n  overflow:hidden;\n}\n\nbody {\n  font-family:arial, sans-serif;\n  font-size:12px;\n  color:#fdfdfd;\n}\n\n#mainCanvas {\n  opacity:0;\n  transition: opacity 0.3s linear;\n  height: 100%;\n  width: 100%;\n  cursor: pointer;\n  cursor: -webkit-grab;\n  cursor: -moz-grab;\n  cursor: -o-grab;\n  cursor: -ms-grab;\n  cursor: grab;\n  z-index: 1;\n  outline: none;\n  position: relative;\n}\n\n#mainCanvas:active {\n  cursor: pointer;\n  cursor: -webkit-grabbing;\n  cursor: -moz-grabbing;\n  cursor: -o-grabbing;\n  cursor: -ms-grabbing;\n  cursor: grabbing;\n}\n\n.vctr-viewer-content {\n  height: 100%;\n  width: 100%;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 0;\n}\n\n.tooltip:before,\n.tooltip:after {\n  display: block;\n  opacity: 0;\n  pointer-events: none;\n  position: absolute;\n}\n\n.tooltip:before {\n  display: block;\n  white-space: nowrap;\n  background: #888888;\n  border-radius: 20px;\n  font-family:arial, sans-serif;\n  font-size:12px;\n  color:#fdfdfd;\n  line-height:30px;\n  padding:0 10px;\n  content: attr(data-title);\n}\n\n.tooltip:after {\n  content: "";\n  display: block;\n  position: absolute;\n  border-color: #888888 transparent transparent transparent;\n  border-style: solid;\n  border-width: 8px;\n}\n\n.bottom-left.tooltip:before {\n  top: -45px;\n  left: -5px;\n}\n\n.bottom-left.tooltip:after {\n  top: -16px;\n  left: 10px;\n}\n\n.bottom-right.tooltip:before {\n  top: -45px;\n  right: -20px;\n}\n\n.bottom-right.tooltip:after {\n  top: -16px;\n  right: 0px;\n}\n\n.tooltip:after,\n.tooltip:before {\n  transform: translate3d(0,-5px,0);\n  transition: all .15s ease;\n}\n\n.tooltip:hover:after,\n.tooltip:hover:before {\n  opacity: 1;\n  transform: translate3d(0,0,0);\n}\n\n.watermark {\n  position: absolute;\n  bottom: 20px;\n  left: 20px;\n  z-index: 0;\n  opacity: 0;\n}\n\n.edit,\n.fork {\n  width: 40px;\n  height: 40px;\n  position: absolute;\n  right: 20px;\n  bottom: 20px;\n  z-index: 0;\n  background-color: #444;\n  align-items: center;\n  border-radius: 20px;\n  transition: all 0.2s ease;\n  opacity: 0;\n  overflow:hidden;\n}\n\n.edit:hover,\n.fork:hover {\n  width: 170px;\n  overflow:visible;\n}\n\n.edit:hover .edit-text, .edit:hover .tooltip,\n.fork:hover .fork-text, .fork:hover .tooltip {\n  visibility:visible;\n}\n\n.edit-icon,\n.fork-icon {\n  margin: 1px 0px;\n  background: #444444;\n  padding: 11px 11px;\n  position: absolute;\n  left:0;\n  z-index: 0;\n  border-radius: 100%;\n}\n\n.edit-text,\n.fork-text {\n  display: block;\n  white-space: nowrap;\n  position: absolute;\n  padding: 15px 0;\n  right: 32px;\n  visibility:hidden;\n}\n\n.edit .tooltip,\n.fork .tooltip {\n  padding: 11px 0;\n  position: absolute;\n  right:11px;\n  visibility:hidden;\n}\n\n.ar {\n  position: absolute;\n  z-index: 0;\n  top: 20px;\n  right: 20px;\n  width: 200px;\n  height: 50px;\n  overflow: hidden;\n  opacity: 0;\n  text-align: right;\n}\n\n.ar img {\n  opacity: 0;\n  max-width: 200px;\n  max-height: 50px;\n}\n\n.ar img.active {\n  opacity: 1;\n}\n\n.ar .arBadge {\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 34px;\n  height: 33px;\n}\n\n.whiteElement {\n  fill: #ffffff;\n}\n\n.errorMessage {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-color: #2A2A2A;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 3rem;\n  font-size: 14px;\n  line-height: 1.5;\n  color: rgba(255,255,255,0.6);\n  opacity: 0;\n  transition: all 0.3s ease;\n  text-align: center;\n  font-family: monospace;\n}\n\n.errorMessage a {\n  color: rgba(255,255,255,0.6);\n  transition: all 0.3s ease;\n}\n\n.errorMessage.active {\n    opacity: 0.7;\n    z-index: 8;\n}\n\n#mainCanvas.active {\n  opacity: 1;\n  z-index:1;\n}\n\n.edit.active,\n.fork.active,\n.watermark.active,\n.ar.active,\n.preloader.active,\n.gesturesPrompt.active {\n  opacity: 1;\n  z-index:9;\n}\n\n.play.active {\n  opacity:0.8;\n  visibility:visible;\n  z-index:10;\n}\n\n.thumb.active {\n  opacity: 1;\n  z-index:3;\n}\n\n.preloader {\n  position: absolute;\n  z-index: 4;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 3rem;\n  font-size: 14px;\n  line-height: 1.5;\n  color: rgba(0,0,0,1.0);\n  opacity: 0;\n  transition: all 0.3s ease;\n  text-align: center;\n  font-family: monospace;\n}\n\n.spinner {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-top: -25px;\n  margin-left: -25px;\n  pointer-events: none;\n  animation: rotator 2s linear infinite;\n}\n\n@keyframes rotator {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(270deg);\n  }\n}\n.spinner .path {\n  stroke-dasharray: 290;\n  stroke-dashoffset: 0;\n  transform-origin: center;\n  stroke: #444;\n  animation: dash 2s ease-in-out infinite;\n}\n\n@keyframes dash {\n  0% {\n    stroke-dashoffset: 290;\n  }\n  50% {\n    stroke-dashoffset: 145;\n    transform:rotate(135deg);\n  }\n  100% {\n    stroke-dashoffset: 290;\n    transform:rotate(450deg);\n  }\n}\n\n.thumb {\n  opacity:0;\n  transition: opacity 0.3s linear;\n  height:100%;\n  width: 100%;\n  filter:blur(10px);\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n}\n\n\n.thumb img {\n  height: 100%;\n  width: 100%;\n}\n\n.portrait .thumb img, .square .thumb img {\n  object-fit: cover;\n}\n\n.landscape .thumb img {\n  object-fit: contain;\n}\n\n\n.play {\n  position:absolute;\n  z-index:0;\n  left:50%;\n  top:50%;\n  margin-left: -45px;\n  margin-top: -45px;\n  opacity:0.8;\n  visibility:hidden;\n  cursor:pointer;\n}\n\n.play:hover {\n  opacity:0.9;\n}\n\n.gesturesPrompt {\n  position:absolute;\n  top:50%;\n  left:50%;\n  transform: translate(-50%, -50%);\n  font-family: Arial;\n  font-size:14px;\n  white-space: nowrap;\n  color:#FFFFFF;\n  padding:10px 25px;\n  border-radius:100px;\n  background-color: rgba(0,0,0,.5);\n  opacity:0;\n  pointer-events: none;\n  z-index:2;\n}\n\n.fadeOut {\n  animation: fadeOut 1s linear;\n  animation-iteration-count: 1;\n}\n\n@keyframes fadeOut {\n  from {\n      opacity: 1;\n  }\n  to {\n      opacity: 0;\n  }\n}\n\n.annotation {\n  position: absolute;\n  top: 0;\n  left: 0;\n  color: #fff;\n  cursor: pointer;\n  font-family:arial, sans-serif;\n  font-size:12px;\n  color:#fdfdfd;\n  user-select: none;\n}\n\n.annotation .pointer {\n  position: absolute;\n  top: -5px;\n  left: -5px;\n  width: 15px;\n  height: 15px;\n  line-height:10px;\n  border-radius: 50%;\n  text-align: center;\n  pointer-events: auto;\n  z-index: 1;\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  background: rgba(0, 0, 0, 0.8);\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.annotation .pointer.label {\n  top: -10px;\n  left: -10px;\n  width: 20px;\n  height: 20px;\n  font-size: 10px;\n  line-height: 20px;\n  border: 2px solid rgba(255, 255, 255, 0.5);\n  background: rgba(0, 0, 0, 0.8);\n  color: rgba(255, 255, 255, 0.9);\n}\n\n.annotation .pointer::after {\n  content: "⬤";\n  font-size:5px;\n}\n\n.annotation .pointer.label::after {\n  content: "";\n}\n\n.annotation .body {\n  position: absolute;\n  margin-left: 0px;\n  margin-top: 0px;\n  padding: 10px;\n  max-width: 150px;\n  width: max-content;\n  background: rgba(0, 0, 0, 0.8);\n  border-radius: .5em;\n  font-size: 12px;\n  line-height: 1.2;\n  transition: opacity .5s;\n  z-index: 2;\n}\n\n.annotation .body.up.right {\n  bottom: 12px;\n  left: 12px;\n}\n.annotation .body.up.left {\n  bottom: 12px;\n  right: 12px;\n}\n.annotation .body.down.right {\n  top: 12px;\n  left: 12px;\n}\n.annotation .body.down.left {\n  top: 12px;\n  right: 12px;\n}\n\n.annotation .body .name {\n  padding: 0;\n  margin: 0;\n  font-weight:bold;\n}\n\n.annotation .body .text {\n  padding: 0;\n  margin: 10px 0 0;\n}\n\n.interactiveIndicator {\n  position:absolute;\n  top:0%;\n  left:0%;\n  opacity: 0;\n  z-index:2;\n}\n\n.interactiveIndicator.active {\n  top:50%;\n  left:50%;\n  transform: translate(-50%, -50%);\n  font-family: Arial;\n  font-size:14px;\n  white-space: nowrap;\n  pointer-events: none;\n  opacity: 1;\n  z-index:9;\n}\n\n.interactiveIndicator.wiggle {\n  animation-name: wiggle, fade;\n  animation-duration: 10s;\n  animation-iteration-count: infinite;\n  animation-timing-function: ease-in-out;\n  animation-play-state: paused;\n}\n.interactiveIndicator.wiggle.visible {\n  animation-play-state: running;\n}\n\n@keyframes wiggle {\n  0% {\n    transform: translateX(0%);\n  }\n  10% {\n    transform: translateX(-200%);\n  }\n  20%, 21% {\n    transform: translateX(200%);\n  }\n  37%, 100% {\n    transform: translateX(-200%);\n  }\n}\n\n@keyframes fade {\n  3%, 28% {\n    opacity: 1;\n  }\n  0%, 30%, 100% {\n    opacity: 0;\n  }\n}\n`;
    var o = n('./src/_common_/apis/counterApi.ts'),
      s = n('./src/_common_/utils/checkDevice.ts'),
      c = n('./src/_common_/utils/checkExists.ts'),
      u = n('./src/_common_/utils/signal.ts');
    class l {
      constructor() {
        (this.DOUBLE_TAP_MANHATTAN_DISTNACE_THRESHOLD = 40),
          (this.DOUBLE_TAP_DELAY_THRESHOLD = 350),
          (this.sigResize = new u['a']()),
          (this.sigCanvasScroll = new u['a']()),
          (this.sigCanvasWheel = new u['a']()),
          (this.sigCanvasTouchStart = new u['a']()),
          (this.sigCanvasTouchMove = new u['a']()),
          (this.sigCanvasTouchEnd = new u['a']()),
          (this.sigCanvasMouseMove = new u['a']()),
          (this.sigCanvasDragOver = new u['a']()),
          (this.sigCanvasDoubleClick = new u['a']()),
          (this.sigCanvasDoubleTap = new u['a']()),
          (this.sigRootMouseMove = new u['a']()),
          (this.sigRootUserActive = new u['a']()),
          (this.sigRootInteraction = new u['a']()),
          (this.lastTouchEndTime = new Date().getTime()),
          (this.lastTouchEndPosition = { x: 0, y: 0 });
      }
      setHTMLElements(e, t) {
        (this.canvasElem = e), (this.documentRoot = t), this.addListeners();
      }
      addListeners() {
        window.addEventListener('resize', () => this.sigResize.emit()),
          this.canvasElem.addEventListener('scroll', () =>
            this.sigCanvasScroll.emit()
          ),
          this.canvasElem.addEventListener('wheel', () =>
            this.sigCanvasWheel.emit()
          ),
          this.canvasElem.addEventListener('mousemove', (e) =>
            this.sigCanvasMouseMove.emit(e)
          ),
          this.canvasElem.addEventListener('dragover', (e) =>
            this.sigCanvasDragOver.emit(e)
          ),
          this.canvasElem.addEventListener('dblclick', (e) =>
            this.sigCanvasDoubleClick.emit(e)
          ),
          this.canvasElem.addEventListener('touchstart', (e) =>
            this.sigCanvasTouchStart.emit(e)
          ),
          this.canvasElem.addEventListener('touchmove', (e) =>
            this.sigCanvasTouchMove.emit(e)
          ),
          this.canvasElem.addEventListener('touchend', (e) =>
            this.handleTouchEnd(e)
          ),
          this.documentRoot.addEventListener('mousemove', (e) => {
            this.sigRootUserActive.emit(), this.sigRootMouseMove.emit(e);
          }),
          this.documentRoot.addEventListener('mousedown', (e) => {
            this.sigRootUserActive.emit(), this.sigRootInteraction.emit();
          }),
          this.documentRoot.addEventListener('touchstart', (e) => {
            this.sigRootUserActive.emit(), this.sigRootInteraction.emit();
          }),
          this.documentRoot.addEventListener('keydown', (e) => {
            this.sigRootUserActive.emit(), this.sigRootInteraction.emit();
          }),
          this.documentRoot.addEventListener('onwheel', (e) => {
            this.sigRootUserActive.emit(), this.sigRootInteraction.emit();
          });
      }
      handleTouchEnd(e) {
        this.sigCanvasTouchEnd.emit(e);
        const t = e.changedTouches[e.changedTouches.length - 1],
          n =
            Math.abs(this.lastTouchEndPosition.x - t.clientX) +
            Math.abs(this.lastTouchEndPosition.y - t.clientY),
          i = new Date().getTime() - this.lastTouchEndTime;
        n < this.DOUBLE_TAP_MANHATTAN_DISTNACE_THRESHOLD &&
          i < this.DOUBLE_TAP_DELAY_THRESHOLD &&
          this.sigCanvasDoubleTap.emit(e),
          (this.lastTouchEndPosition = { x: t.clientX, y: t.clientY }),
          (this.lastTouchEndTime = new Date().getTime());
      }
      static getInstance() {
        return l.instance || (l.instance = new l()), this.instance;
      }
    }
    var d = n('../../../node_modules/gsap/index.js');
    class h {
      static clamp(e, t, n) {
        return Math.max(t, Math.min(n, e));
      }
      static easeOutCubic(e) {
        return --e * e * e + 1;
      }
      static startMouseFollowEasingAnimation(e, t, n, i) {
        let r = 0,
          a = 0,
          o = 0,
          s = 0,
          c = 0,
          u = 0;
        const p = 0.001,
          m = 0.05,
          f = h.clamp(n, 0, 1),
          _ = () => {
            const t = h.clamp(Math.abs(c), p, m),
              n = (t - p) / (m - p),
              i = h.easeOutCubic(n);
            c = i > 0.02 ? c / (1 + i) : c / 1.05;
            const r = h.clamp(Math.abs(u), p, m),
              a = (r - p) / (m - p),
              o = h.easeOutCubic(a);
            (u = o > 0.02 ? u / (1 + o) : u / 1.05), e([c, u]);
          },
          M = (e) => {
            const n = t.getBoundingClientRect(),
              i = e.clientX - n.left,
              l = e.clientY - n.top;
            (r = f * (i / t.width - 0.5)),
              (a = f * (l / t.height - 0.5)),
              (c += r - o),
              (u += a - s),
              (o = r),
              (s = a);
          },
          v = () => {
            d['a'].ticker.remove(_),
              l.getInstance().sigRootMouseMove.disconnect(M),
              l.getInstance().sigRootInteraction.disconnect(v);
          };
        l.getInstance().sigRootMouseMove.connect(M),
          i && l.getInstance().sigRootInteraction.connect(v),
          d['a'].ticker.add(_);
      }
      static interactionPromptAnimation(e, t) {
        const n = t.object.position.distanceTo(t.target);
        let i = 0.06,
          r = 0.12;
        n < 0.5 && n > 0.2
          ? ((i /= 3), (r /= 3))
          : n < 0.2 && n > 0.1 && ((i /= 6), (r /= 6));
        const a = t.getAzimuthalAngle(),
          o = t.getAzimuthalAngle() + i,
          s = t.getAzimuthalAngle() - r,
          c = { rotation: a },
          u = d['a'].timeline(),
          h = 'power1.inOut',
          p = () => {
            const n = t.getAzimuthalAngle() - c.rotation;
            e([n, 0]);
          },
          m = () => {
            u.kill(), l.getInstance().sigRootUserActive.disconnect(m);
          };
        u.eventCallback('onComplete', () => {
          l.getInstance().sigRootUserActive.disconnect(m);
        }),
          l.getInstance().sigRootUserActive.connect(m),
          u.to(c, { duration: 1, rotation: o, ease: h, onUpdate: p }),
          u.to(c, { duration: 1, rotation: s, ease: h, onUpdate: p }),
          u.to(c, { duration: 1, rotation: a, ease: h, onUpdate: p });
      }
    }
    var p = n('../../../node_modules/three/build/three.module.js'),
      m = function () {
        var e = 0,
          t = document.createElement('div');
        function n(e) {
          return t.appendChild(e.dom), e;
        }
        function i(n) {
          for (var i = 0; i < t.children.length; i++)
            t.children[i].style.display = i === n ? 'block' : 'none';
          e = n;
        }
        (t.style.cssText =
          'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000'),
          t.addEventListener(
            'click',
            function (n) {
              n.preventDefault(), i(++e % t.children.length);
            },
            !1
          );
        var r = (performance || Date).now(),
          a = r,
          o = 0,
          s = n(new m.Panel('FPS', '#0ff', '#002')),
          c = n(new m.Panel('MS', '#0f0', '#020'));
        if (self.performance && self.performance.memory)
          var u = n(new m.Panel('MB', '#f08', '#201'));
        return (
          i(0),
          {
            REVISION: 16,
            dom: t,
            addPanel: n,
            showPanel: i,
            begin: function () {
              r = (performance || Date).now();
            },
            end: function () {
              o++;
              var e = (performance || Date).now();
              if (
                (c.update(e - r, 200),
                e >= a + 1e3 &&
                  (s.update((1e3 * o) / (e - a), 100), (a = e), (o = 0), u))
              ) {
                var t = performance.memory;
                u.update(
                  t.usedJSHeapSize / 1048576,
                  t.jsHeapSizeLimit / 1048576
                );
              }
              return e;
            },
            update: function () {
              r = this.end();
            },
            domElement: t,
            setMode: i,
          }
        );
      };
    m.Panel = function (e, t, n) {
      var i = 1 / 0,
        r = 0,
        a = Math.round,
        o = a(window.devicePixelRatio || 1),
        s = 80 * o,
        c = 48 * o,
        u = 3 * o,
        l = 2 * o,
        d = 3 * o,
        h = 15 * o,
        p = 74 * o,
        m = 30 * o,
        f = document.createElement('canvas');
      (f.width = s),
        (f.height = c),
        (f.style.cssText = 'width:80px;height:48px');
      var _ = f.getContext('2d');
      return (
        (_.font = 'bold ' + 9 * o + 'px Helvetica,Arial,sans-serif'),
        (_.textBaseline = 'top'),
        (_.fillStyle = n),
        _.fillRect(0, 0, s, c),
        (_.fillStyle = t),
        _.fillText(e, u, l),
        _.fillRect(d, h, p, m),
        (_.fillStyle = n),
        (_.globalAlpha = 0.9),
        _.fillRect(d, h, p, m),
        {
          dom: f,
          update: function (c, M) {
            (i = Math.min(i, c)),
              (r = Math.max(r, c)),
              (_.fillStyle = n),
              (_.globalAlpha = 1),
              _.fillRect(0, 0, s, h),
              (_.fillStyle = t),
              _.fillText(a(c) + ' ' + e + ' (' + a(i) + '-' + a(r) + ')', u, l),
              _.drawImage(f, d + o, h, p - o, m, d, h, p - o, m),
              _.fillRect(d + p - o, h, o, m),
              (_.fillStyle = n),
              (_.globalAlpha = 0.9),
              _.fillRect(d + p - o, h, o, a((1 - c / M) * m));
          },
        }
      );
    };
    var f = m,
      _ = {
        init: function () {
          var e = [
              1,
              0,
              0,
              2e-5,
              1,
              0,
              0,
              503905e-9,
              1,
              0,
              0,
              0.00201562,
              1,
              0,
              0,
              0.00453516,
              1,
              0,
              0,
              0.00806253,
              1,
              0,
              0,
              0.0125978,
              1,
              0,
              0,
              0.018141,
              1,
              0,
              0,
              0.0246924,
              1,
              0,
              0,
              0.0322525,
              1,
              0,
              0,
              0.0408213,
              1,
              0,
              0,
              0.0503999,
              1,
              0,
              0,
              0.0609894,
              1,
              0,
              0,
              0.0725906,
              1,
              0,
              0,
              0.0852058,
              1,
              0,
              0,
              0.0988363,
              1,
              0,
              0,
              0.113484,
              1,
              0,
              0,
              0.129153,
              1,
              0,
              0,
              0.145839,
              1,
              0,
              0,
              0.163548,
              1,
              0,
              0,
              0.182266,
              1,
              0,
              0,
              0.201942,
              1,
              0,
              0,
              0.222314,
              1,
              0,
              0,
              0.241906,
              1,
              0,
              0,
              0.262314,
              1,
              0,
              0,
              0.285754,
              1,
              0,
              0,
              0.310159,
              1,
              0,
              0,
              0.335426,
              1,
              0,
              0,
              0.361341,
              1,
              0,
              0,
              0.387445,
              1,
              0,
              0,
              0.412784,
              1,
              0,
              0,
              0.438197,
              1,
              0,
              0,
              0.466966,
              1,
              0,
              0,
              0.49559,
              1,
              0,
              0,
              0.523448,
              1,
              0,
              0,
              0.549938,
              1,
              0,
              0,
              0.57979,
              1,
              0,
              0,
              0.608746,
              1,
              0,
              0,
              0.636185,
              1,
              0,
              0,
              0.664748,
              1,
              0,
              0,
              0.69313,
              1,
              0,
              0,
              0.71966,
              1,
              0,
              0,
              0.747662,
              1,
              0,
              0,
              0.774023,
              1,
              0,
              0,
              0.799775,
              1,
              0,
              0,
              0.825274,
              1,
              0,
              0,
              0.849156,
              1,
              0,
              0,
              0.873248,
              1,
              0,
              0,
              0.89532,
              1,
              0,
              0,
              0.917565,
              1,
              0,
              0,
              0.937863,
              1,
              0,
              0,
              0.958139,
              1,
              0,
              0,
              0.976563,
              1,
              0,
              0,
              0.994658,
              1,
              0,
              0,
              1.0112,
              1,
              0,
              0,
              1.02712,
              1,
              0,
              0,
              1.04189,
              1,
              0,
              0,
              1.05568,
              1,
              0,
              0,
              1.06877,
              1,
              0,
              0,
              1.08058,
              1,
              0,
              0,
              1.09194,
              1,
              0,
              0,
              1.10191,
              1,
              0,
              0,
              1.11161,
              1,
              0,
              0,
              1.1199,
              1,
              0,
              0,
              1.12813,
              0.999547,
              -4.48815e-7,
              0.0224417,
              199902e-10,
              0.999495,
              -113079e-10,
              0.0224406,
              503651e-9,
              0.999496,
              -452317e-10,
              0.0224406,
              0.00201461,
              0.999496,
              -101772e-9,
              0.0224406,
              0.00453287,
              0.999495,
              -180928e-9,
              0.0224406,
              0.00805845,
              0.999497,
              -282702e-9,
              0.0224406,
              0.0125914,
              0.999496,
              -407096e-9,
              0.0224406,
              0.0181319,
              0.999498,
              -554114e-9,
              0.0224406,
              0.02468,
              0.999499,
              -723768e-9,
              0.0224406,
              0.0322363,
              0.999495,
              -916058e-9,
              0.0224405,
              0.0408009,
              0.999499,
              -0.00113101,
              0.0224408,
              0.050375,
              0.999494,
              -0.00136863,
              0.0224405,
              0.0609586,
              0.999489,
              -0.00162896,
              0.0224401,
              0.0725537,
              0.999489,
              -0.00191201,
              0.0224414,
              0.0851619,
              0.999498,
              -0.00221787,
              0.0224413,
              0.0987867,
              0.999492,
              -0.00254642,
              0.0224409,
              0.113426,
              0.999507,
              -0.00289779,
              0.0224417,
              0.129088,
              0.999494,
              -0.0032716,
              0.0224386,
              0.145767,
              0.999546,
              -0.0036673,
              0.0224424,
              0.163472,
              0.999543,
              -0.00408166,
              0.0224387,
              0.182182,
              0.999499,
              -0.00450056,
              0.0224338,
              0.201843,
              0.999503,
              -0.00483661,
              0.0224203,
              0.222198,
              0.999546,
              -0.00452928,
              0.022315,
              0.241714,
              0.999508,
              -0.00587403,
              0.0224329,
              0.262184,
              0.999509,
              -0.00638806,
              0.0224271,
              0.285609,
              0.999501,
              -0.00691028,
              0.0224166,
              0.309998,
              0.999539,
              -0.00741979,
              0.0223989,
              0.335262,
              0.999454,
              -0.00786282,
              0.0223675,
              0.361154,
              0.999529,
              -0.00811928,
              0.0222828,
              0.387224,
              0.999503,
              -0.00799941,
              0.0221063,
              0.41252,
              0.999561,
              -0.00952753,
              0.0223057,
              0.438006,
              0.999557,
              -0.0099134,
              0.0222065,
              0.466735,
              0.999541,
              -0.0100935,
              0.0220402,
              0.495332,
              0.999562,
              -0.00996821,
              0.0218067,
              0.523197,
              0.999556,
              -0.0105031,
              0.0217096,
              0.550223,
              0.999561,
              -0.0114191,
              0.0217215,
              0.579498,
              0.999588,
              -0.0111818,
              0.0213357,
              0.608416,
              0.999633,
              -0.0107725,
              0.0208689,
              0.635965,
              0.999527,
              -0.0121671,
              0.0210149,
              0.664476,
              0.999508,
              -0.0116005,
              0.020431,
              0.692786,
              0.999568,
              -0.0115604,
              0.0199791,
              0.719709,
              0.999671,
              -0.0121117,
              0.0197415,
              0.74737,
              0.999688,
              -0.0110769,
              0.0188846,
              0.773692,
              0.99962,
              -0.0122368,
              0.0188452,
              0.799534,
              0.999823,
              -0.0110325,
              0.0178001,
              0.825046,
              0.999599,
              -0.0114923,
              0.0174221,
              0.849075,
              0.999619,
              -0.0105923,
              0.0164345,
              0.872999,
              0.999613,
              -0.0105988,
              0.0158227,
              0.895371,
              0.99964,
              -0.00979861,
              0.0148131,
              0.917364,
              0.99977,
              -0.00967238,
              0.0140721,
              0.938002,
              0.999726,
              -0.00869175,
              0.0129543,
              0.957917,
              0.99973,
              -0.00866872,
              0.0122329,
              0.976557,
              0.999773,
              -0.00731956,
              0.0108958,
              0.994459,
              0.999811,
              -0.00756027,
              0.0102715,
              1.01118,
              0.999862,
              -0.00583732,
              0.00878781,
              1.02701,
              0.999835,
              -0.00631438,
              0.00827529,
              1.04186,
              0.999871,
              -0.00450785,
              0.00674583,
              1.05569,
              0.999867,
              -0.00486079,
              0.00621041,
              1.06861,
              0.999939,
              -0.00322072,
              0.00478301,
              1.08064,
              0.999918,
              -0.00318199,
              0.00406395,
              1.09181,
              1.00003,
              -0.00193348,
              0.00280682,
              1.10207,
              0.999928,
              -0.00153729,
              0.00198741,
              1.11152,
              0.999933,
              -623666e-9,
              917714e-9,
              1.12009,
              1,
              -102387e-11,
              9.07581e-7,
              1.12813,
              0.997866,
              -8.96716e-7,
              0.0448334,
              199584e-10,
              0.997987,
              -225945e-10,
              0.0448389,
              502891e-9,
              0.997987,
              -903781e-10,
              0.0448388,
              0.00201156,
              0.997985,
              -203351e-9,
              0.0448388,
              0.00452602,
              0.997986,
              -361514e-9,
              0.0448388,
              0.00804629,
              0.997987,
              -56487e-8,
              0.0448389,
              0.0125724,
              0.997988,
              -813423e-9,
              0.0448389,
              0.0181045,
              0.997984,
              -0.00110718,
              0.0448387,
              0.0246427,
              0.997985,
              -0.00144616,
              0.0448388,
              0.0321875,
              0.997987,
              -0.00183038,
              0.044839,
              0.0407392,
              0.997983,
              -0.00225987,
              0.0448387,
              0.0502986,
              0.997991,
              -0.00273467,
              0.0448389,
              0.0608667,
              0.997984,
              -0.00325481,
              0.0448384,
              0.0724444,
              0.998002,
              -0.00382043,
              0.044839,
              0.0850348,
              0.997997,
              -0.00443145,
              0.0448396,
              0.0986372,
              0.998007,
              -0.00508796,
              0.0448397,
              0.113255,
              0.998008,
              -0.00578985,
              0.04484,
              0.128891,
              0.998003,
              -0.00653683,
              0.0448384,
              0.145548,
              0.997983,
              -0.00732713,
              0.0448358,
              0.163221,
              0.997985,
              -0.00815454,
              0.0448358,
              0.181899,
              0.998005,
              -0.00898985,
              0.0448286,
              0.201533,
              0.998026,
              -0.00964404,
              0.0447934,
              0.221821,
              0.998055,
              -0.00922677,
              0.044611,
              0.241282,
              0.99804,
              -0.0117361,
              0.0448245,
              0.261791,
              0.998048,
              -0.0127628,
              0.0448159,
              0.285181,
              0.998088,
              -0.0138055,
              0.0447996,
              0.30954,
              0.998058,
              -0.0148206,
              0.0447669,
              0.334751,
              0.998099,
              -0.0156998,
              0.044697,
              0.36061,
              0.998116,
              -0.0161976,
              0.0445122,
              0.386603,
              0.998195,
              -0.015945,
              0.0441711,
              0.411844,
              0.998168,
              -0.0183947,
              0.0444255,
              0.43773,
              0.998184,
              -0.0197913,
              0.0443809,
              0.466009,
              0.998251,
              -0.0201426,
              0.0440689,
              0.494574,
              0.998305,
              -0.0198847,
              0.0435632,
              0.522405,
              0.998273,
              -0.0210577,
              0.043414,
              0.549967,
              0.998254,
              -0.0227901,
              0.0433943,
              0.578655,
              0.998349,
              -0.0223108,
              0.0426529,
              0.60758,
              0.99843,
              -0.0223088,
              0.042,
              0.635524,
              0.998373,
              -0.0241141,
              0.0418987,
              0.663621,
              0.998425,
              -0.0231446,
              0.0408118,
              0.691906,
              0.998504,
              -0.0233684,
              0.0400565,
              0.719339,
              0.998443,
              -0.0241652,
              0.0394634,
              0.74643,
              0.99848,
              -0.0228715,
              0.0380002,
              0.773086,
              0.998569,
              -0.023519,
              0.0372322,
              0.798988,
              0.998619,
              -0.0223108,
              0.0356468,
              0.824249,
              0.998594,
              -0.0223105,
              0.034523,
              0.848808,
              0.998622,
              -0.0213426,
              0.0328887,
              0.87227,
              0.998669,
              -0.0207912,
              0.0314374,
              0.895157,
              0.998705,
              -0.0198416,
              0.0296925,
              0.916769,
              0.998786,
              -0.0189168,
              0.0279634,
              0.937773,
              0.998888,
              -0.0178811,
              0.0261597,
              0.957431,
              0.99906,
              -0.0166845,
              0.0242159,
              0.976495,
              0.999038,
              -0.0155464,
              0.0222638,
              0.994169,
              0.999237,
              -0.0141349,
              0.0201967,
              1.01112,
              0.999378,
              -0.0129324,
              0.0181744,
              1.02692,
              0.999433,
              -0.0113192,
              0.0159898,
              1.04174,
              0.999439,
              -0.0101244,
              0.0140385,
              1.05559,
              0.999614,
              -0.00837456,
              0.0117826,
              1.06852,
              0.999722,
              -0.00721769,
              0.00983745,
              1.08069,
              0.999817,
              -0.00554067,
              0.00769002,
              1.09176,
              0.99983,
              -0.00426961,
              0.005782,
              1.10211,
              0.999964,
              -0.00273904,
              0.00374503,
              1.11152,
              1.00001,
              -0.00136739,
              0.00187176,
              1.12031,
              0.999946,
              393227e-10,
              -28919e-9,
              1.12804,
              0.995847,
              -13435e-10,
              0.0671785,
              19916e-9,
              0.995464,
              -338387e-10,
              0.0671527,
              501622e-9,
              0.99547,
              -135355e-9,
              0.0671531,
              0.00200649,
              0.995471,
              -30455e-8,
              0.0671532,
              0.00451461,
              0.99547,
              -541423e-9,
              0.0671531,
              0.008026,
              0.995471,
              -84598e-8,
              0.0671531,
              0.0125407,
              0.99547,
              -0.00121823,
              0.0671531,
              0.0180589,
              0.99547,
              -0.00165817,
              0.0671531,
              0.0245806,
              0.995463,
              -0.00216583,
              0.0671526,
              0.0321062,
              0.995468,
              -0.00274127,
              0.0671527,
              0.0406366,
              0.995474,
              -0.00338447,
              0.0671534,
              0.0501717,
              0.995473,
              -0.00409554,
              0.0671533,
              0.0607131,
              0.995478,
              -0.00487451,
              0.0671531,
              0.0722618,
              0.995476,
              -0.00572148,
              0.0671532,
              0.0848191,
              0.995477,
              -0.00663658,
              0.0671539,
              0.0983882,
              0.995498,
              -0.00761986,
              0.0671541,
              0.112972,
              0.995509,
              -0.00867094,
              0.0671542,
              0.128568,
              0.995509,
              -0.00978951,
              0.0671531,
              0.145183,
              0.995503,
              -0.0109725,
              0.0671491,
              0.162808,
              0.995501,
              -0.012211,
              0.0671465,
              0.181441,
              0.99553,
              -0.0134565,
              0.0671371,
              0.201015,
              0.99555,
              -0.014391,
              0.0670831,
              0.221206,
              0.99558,
              -0.014351,
              0.0668883,
              0.240813,
              0.995577,
              -0.0173997,
              0.0671055,
              0.261257,
              0.995602,
              -0.0191111,
              0.0671178,
              0.284467,
              0.995623,
              -0.0206705,
              0.0670946,
              0.308765,
              0.995658,
              -0.022184,
              0.0670472,
              0.333905,
              0.995705,
              -0.0234832,
              0.0669417,
              0.359677,
              0.995719,
              -0.0241933,
              0.0666714,
              0.385554,
              0.995786,
              -0.0243539,
              0.066266,
              0.410951,
              0.995887,
              -0.0271866,
              0.0664367,
              0.437163,
              0.995944,
              -0.0296012,
              0.0664931,
              0.464842,
              0.996004,
              -0.0301045,
              0.0660105,
              0.49332,
              0.996128,
              -0.0298311,
              0.0652694,
              0.521131,
              0.996253,
              -0.0316426,
              0.0650739,
              0.549167,
              0.996244,
              -0.0339043,
              0.0649433,
              0.57737,
              0.996309,
              -0.033329,
              0.0638926,
              0.606073,
              0.996417,
              -0.0338935,
              0.0630849,
              0.634527,
              0.996372,
              -0.0353104,
              0.0625083,
              0.66256,
              0.996542,
              -0.0348942,
              0.0611986,
              0.690516,
              0.996568,
              -0.0351614,
              0.060069,
              0.718317,
              0.996711,
              -0.0354317,
              0.0588522,
              0.74528,
              0.996671,
              -0.0349513,
              0.0571902,
              0.772061,
              0.996865,
              -0.0345622,
              0.0555321,
              0.798089,
              0.996802,
              -0.0342566,
              0.0537816,
              0.823178,
              0.996992,
              -0.0330862,
              0.0516095,
              0.847949,
              0.996944,
              -0.0324666,
              0.0495537,
              0.871431,
              0.997146,
              -0.0309544,
              0.0470302,
              0.894357,
              0.997189,
              -0.0299372,
              0.0446043,
              0.916142,
              0.997471,
              -0.0281389,
              0.0418812,
              0.937193,
              0.997515,
              -0.0268702,
              0.0391823,
              0.957,
              0.997812,
              -0.0247166,
              0.0361338,
              0.975936,
              0.998027,
              -0.0233525,
              0.0333945,
              0.99391,
              0.998233,
              -0.0209839,
              0.0301917,
              1.01075,
              0.998481,
              -0.0194309,
              0.027271,
              1.02669,
              0.998859,
              -0.0169728,
              0.0240162,
              1.04173,
              0.99894,
              -0.0152322,
              0.0210517,
              1.05551,
              0.999132,
              -0.0127497,
              0.0178632,
              1.06856,
              0.999369,
              -0.0108282,
              0.014787,
              1.08054,
              0.999549,
              -0.00845886,
              0.0116185,
              1.09185,
              0.999805,
              -0.0063937,
              0.00867209,
              1.10207,
              0.99985,
              -0.00414582,
              0.00566823,
              1.1117,
              0.999912,
              -0.00207443,
              0.00277562,
              1.12022,
              1.00001,
              870226e-10,
              -53766e-9,
              1.12832,
              0.991943,
              -178672e-11,
              0.0893382,
              198384e-10,
              0.991952,
              -450183e-10,
              0.089339,
              499849e-9,
              0.991956,
              -180074e-9,
              0.0893394,
              0.0019994,
              0.991955,
              -405167e-9,
              0.0893393,
              0.00449867,
              0.991953,
              -720298e-9,
              0.0893391,
              0.00799764,
              0.991955,
              -0.00112548,
              0.0893393,
              0.0124964,
              0.991957,
              -0.0016207,
              0.0893395,
              0.0179951,
              0.991958,
              -0.00220601,
              0.0893396,
              0.0244939,
              0.991947,
              -0.00288137,
              0.0893385,
              0.0319929,
              0.991962,
              -0.00364693,
              0.0893399,
              0.0404933,
              0.991965,
              -0.00450264,
              0.0893399,
              0.049995,
              0.99198,
              -0.00544862,
              0.0893411,
              0.0604995,
              0.99197,
              -0.00648491,
              0.0893397,
              0.0720074,
              0.991976,
              -0.00761164,
              0.089341,
              0.0845207,
              0.99198,
              -0.00882891,
              0.0893405,
              0.0980413,
              0.991982,
              -0.0101367,
              0.0893396,
              0.112571,
              0.992008,
              -0.011535,
              0.0893415,
              0.128115,
              0.992026,
              -0.0130228,
              0.0893414,
              0.144672,
              0.992064,
              -0.0145966,
              0.0893418,
              0.162241,
              0.992041,
              -0.0162421,
              0.0893359,
              0.180801,
              0.992086,
              -0.0178888,
              0.0893214,
              0.200302,
              0.992157,
              -0.0190368,
              0.0892401,
              0.220332,
              0.992181,
              -0.0195584,
              0.0890525,
              0.240144,
              0.992175,
              -0.0227257,
              0.0892153,
              0.260728,
              0.99221,
              -0.0254195,
              0.089304,
              0.283473,
              0.99222,
              -0.0274883,
              0.0892703,
              0.307673,
              0.992317,
              -0.0294905,
              0.0892027,
              0.332729,
              0.992374,
              -0.0311861,
              0.0890577,
              0.358387,
              0.992505,
              -0.0320656,
              0.0886994,
              0.384102,
              0.992568,
              -0.0329715,
              0.0883198,
              0.409767,
              0.992675,
              -0.036006,
              0.0883602,
              0.436145,
              0.992746,
              -0.0392897,
              0.0884591,
              0.463217,
              0.992873,
              -0.0399337,
              0.0878287,
              0.491557,
              0.992934,
              -0.040231,
              0.0870108,
              0.519516,
              0.993091,
              -0.0422013,
              0.0865857,
              0.547741,
              0.993259,
              -0.0443503,
              0.0861937,
              0.575792,
              0.993455,
              -0.0446368,
              0.0851187,
              0.604233,
              0.993497,
              -0.0454299,
              0.0840576,
              0.632925,
              0.993694,
              -0.0463296,
              0.0829671,
              0.660985,
              0.993718,
              -0.0470619,
              0.0817185,
              0.688714,
              0.993973,
              -0.0468838,
              0.0800294,
              0.716743,
              0.994207,
              -0.046705,
              0.0781286,
              0.74377,
              0.994168,
              -0.0469698,
              0.0763337,
              0.77042,
              0.9945,
              -0.0456816,
              0.0738184,
              0.796659,
              0.994356,
              -0.0455518,
              0.0715545,
              0.821868,
              0.994747,
              -0.0439488,
              0.0686085,
              0.846572,
              0.994937,
              -0.0430056,
              0.065869,
              0.870435,
              0.995142,
              -0.0413414,
              0.0626446,
              0.893272,
              0.995451,
              -0.0396521,
              0.05929,
              0.915376,
              0.995445,
              -0.0378453,
              0.0558503,
              0.936196,
              0.995967,
              -0.0355219,
              0.0520949,
              0.956376,
              0.996094,
              -0.0335146,
              0.048377,
              0.975327,
              0.996622,
              -0.030682,
              0.0442575,
              0.993471,
              0.996938,
              -0.0285504,
              0.0404693,
              1.01052,
              0.997383,
              -0.0253399,
              0.0360903,
              1.02637,
              0.997714,
              -0.0231651,
              0.0322176,
              1.04139,
              0.998249,
              -0.0198138,
              0.0278433,
              1.05542,
              0.998596,
              -0.0174337,
              0.0238759,
              1.06846,
              0.998946,
              -0.0141349,
              0.0195944,
              1.08056,
              0.99928,
              -0.0115603,
              0.0156279,
              1.09181,
              0.999507,
              -0.00839065,
              0.0114607,
              1.10213,
              0.999697,
              -0.005666,
              0.00763325,
              1.11169,
              0.999869,
              -0.00269902,
              0.00364946,
              1.12042,
              1.00001,
              623836e-10,
              -319288e-10,
              1.12832,
              0.987221,
              -222675e-11,
              0.111332,
              197456e-10,
              0.98739,
              -561116e-10,
              0.111351,
              497563e-9,
              0.987448,
              -224453e-9,
              0.111357,
              0.00199031,
              0.987441,
              -505019e-9,
              0.111357,
              0.0044782,
              0.987442,
              -897816e-9,
              0.111357,
              0.00796129,
              0.987442,
              -0.00140284,
              0.111357,
              0.0124396,
              0.987444,
              -0.00202012,
              0.111357,
              0.0179132,
              0.987442,
              -0.00274964,
              0.111357,
              0.0243824,
              0.987446,
              -0.00359147,
              0.111357,
              0.0318474,
              0.987435,
              -0.00454562,
              0.111356,
              0.0403086,
              0.987461,
              -0.00561225,
              0.111358,
              0.0497678,
              0.987458,
              -0.00679125,
              0.111358,
              0.0602239,
              0.987443,
              -0.0080828,
              0.111356,
              0.0716792,
              0.987476,
              -0.0094872,
              0.111358,
              0.0841364,
              0.98749,
              -0.0110044,
              0.111361,
              0.097597,
              0.987508,
              -0.0126344,
              0.111362,
              0.112062,
              0.987494,
              -0.0143767,
              0.111357,
              0.127533,
              0.987526,
              -0.0162307,
              0.111359,
              0.144015,
              0.987558,
              -0.0181912,
              0.111361,
              0.161502,
              0.987602,
              -0.0202393,
              0.111355,
              0.179979,
              0.987692,
              -0.022273,
              0.111346,
              0.199386,
              0.987702,
              -0.0235306,
              0.111215,
              0.219183,
              0.987789,
              -0.0247628,
              0.111061,
              0.239202,
              0.987776,
              -0.0280668,
              0.111171,
              0.259957,
              0.987856,
              -0.0316751,
              0.111327,
              0.282198,
              0.987912,
              -0.0342468,
              0.111282,
              0.306294,
              0.988,
              -0.0367205,
              0.111198,
              0.331219,
              0.988055,
              -0.0387766,
              0.110994,
              0.356708,
              0.988241,
              -0.0397722,
              0.110547,
              0.382234,
              0.988399,
              -0.0416076,
              0.110198,
              0.408227,
              0.988539,
              -0.0448192,
              0.110137,
              0.434662,
              0.988661,
              -0.0483793,
              0.110143,
              0.461442,
              0.988967,
              -0.0495895,
              0.109453,
              0.489318,
              0.989073,
              -0.0506797,
              0.108628,
              0.517516,
              0.989274,
              -0.0526953,
              0.108003,
              0.545844,
              0.989528,
              -0.054578,
              0.107255,
              0.573823,
              0.989709,
              -0.0561503,
              0.106294,
              0.601944,
              0.989991,
              -0.056866,
              0.104896,
              0.630855,
              0.990392,
              -0.0572914,
              0.103336,
              0.658925,
              0.990374,
              -0.0586224,
              0.10189,
              0.686661,
              0.990747,
              -0.0584764,
              0.099783,
              0.714548,
              0.991041,
              -0.0582662,
              0.0974309,
              0.74186,
              0.991236,
              -0.0584118,
              0.0951678,
              0.768422,
              0.991585,
              -0.0573055,
              0.0921581,
              0.794817,
              0.991984,
              -0.0564241,
              0.0891167,
              0.820336,
              0.9921,
              -0.0553608,
              0.085805,
              0.84493,
              0.992749,
              -0.0533816,
              0.0820354,
              0.868961,
              0.99288,
              -0.0518661,
              0.0782181,
              0.891931,
              0.993511,
              -0.0492492,
              0.0738935,
              0.914186,
              0.993617,
              -0.0471956,
              0.0696402,
              0.93532,
              0.99411,
              -0.044216,
              0.0649659,
              0.95543,
              0.994595,
              -0.0416654,
              0.0603177,
              0.974685,
              0.994976,
              -0.0384314,
              0.0553493,
              0.992807,
              0.995579,
              -0.0353491,
              0.0503942,
              1.00996,
              0.996069,
              -0.0319787,
              0.0452123,
              1.02606,
              0.996718,
              -0.028472,
              0.0400112,
              1.04114,
              0.997173,
              -0.0250789,
              0.0349456,
              1.05517,
              0.997818,
              -0.0213326,
              0.029653,
              1.0683,
              0.998318,
              -0.0178509,
              0.024549,
              1.0805,
              0.998853,
              -0.0141118,
              0.0194197,
              1.09177,
              0.999218,
              -0.0105914,
              0.0143869,
              1.1022,
              0.999594,
              -0.00693474,
              0.00943517,
              1.11175,
              0.99975,
              -0.00340478,
              0.00464051,
              1.12056,
              1.00001,
              109172e-9,
              -112821e-9,
              1.12853,
              0.983383,
              -266524e-11,
              0.133358,
              196534e-10,
              0.981942,
              -671009e-10,
              0.133162,
              494804e-9,
              0.981946,
              -268405e-9,
              0.133163,
              0.00197923,
              0.981944,
              -603912e-9,
              0.133163,
              0.00445326,
              0.981941,
              -0.00107362,
              0.133162,
              0.00791693,
              0.981946,
              -0.00167755,
              0.133163,
              0.0123703,
              0.981944,
              -0.00241569,
              0.133162,
              0.0178135,
              0.981945,
              -0.00328807,
              0.133163,
              0.0242466,
              0.981945,
              -0.00429472,
              0.133162,
              0.03167,
              0.981955,
              -0.00543573,
              0.133164,
              0.0400846,
              0.981951,
              -0.00671105,
              0.133163,
              0.0494901,
              0.981968,
              -0.00812092,
              0.133165,
              0.0598886,
              0.981979,
              -0.00966541,
              0.133166,
              0.0712811,
              0.981996,
              -0.0113446,
              0.133168,
              0.083669,
              0.982014,
              -0.0131585,
              0.133169,
              0.0970533,
              0.982011,
              -0.0151073,
              0.133167,
              0.111438,
              0.982062,
              -0.0171906,
              0.133172,
              0.126826,
              0.9821,
              -0.0194067,
              0.133175,
              0.143215,
              0.982149,
              -0.0217502,
              0.133176,
              0.160609,
              0.982163,
              -0.0241945,
              0.133173,
              0.178981,
              0.982247,
              -0.0265907,
              0.133148,
              0.198249,
              0.982291,
              -0.027916,
              0.132974,
              0.217795,
              0.982396,
              -0.0299663,
              0.132868,
              0.238042,
              0.982456,
              -0.0334544,
              0.132934,
              0.258901,
              0.982499,
              -0.0378636,
              0.133137,
              0.280639,
              0.982617,
              -0.0409274,
              0.133085,
              0.304604,
              0.98274,
              -0.0438523,
              0.132985,
              0.329376,
              0.982944,
              -0.0462288,
              0.132728,
              0.354697,
              0.98308,
              -0.0475995,
              0.132228,
              0.380102,
              0.983391,
              -0.0501901,
              0.131924,
              0.406256,
              0.983514,
              -0.0535899,
              0.131737,
              0.432735,
              0.98373,
              -0.0571858,
              0.131567,
              0.459359,
              0.984056,
              -0.0592353,
              0.130932,
              0.486637,
              0.984234,
              -0.0610488,
              0.130092,
              0.51509,
              0.984748,
              -0.0630758,
              0.12923,
              0.543461,
              0.985073,
              -0.0647398,
              0.128174,
              0.571376,
              0.985195,
              -0.0671941,
              0.127133,
              0.599414,
              0.985734,
              -0.0681345,
              0.125576,
              0.628134,
              0.986241,
              -0.0686089,
              0.123639,
              0.656399,
              0.986356,
              -0.0698511,
              0.121834,
              0.684258,
              0.986894,
              -0.0700931,
              0.119454,
              0.711818,
              0.987382,
              -0.0698321,
              0.116718,
              0.739511,
              0.988109,
              -0.0693975,
              0.113699,
              0.766267,
              0.988363,
              -0.0689584,
              0.110454,
              0.792456,
              0.989112,
              -0.0672353,
              0.106602,
              0.81813,
              0.989241,
              -0.0662034,
              0.10267,
              0.842889,
              0.990333,
              -0.0638938,
              0.0981381,
              0.867204,
              0.990591,
              -0.0618534,
              0.0935388,
              0.89038,
              0.991106,
              -0.0593117,
              0.088553,
              0.912576,
              0.991919,
              -0.0562676,
              0.0832187,
              0.934118,
              0.992111,
              -0.0534085,
              0.0778302,
              0.954254,
              0.992997,
              -0.0495459,
              0.0720453,
              0.973722,
              0.993317,
              -0.0463707,
              0.0663458,
              0.991949,
              0.994133,
              -0.0421245,
              0.0601883,
              1.00936,
              0.994705,
              -0.0384977,
              0.0542501,
              1.02559,
              0.995495,
              -0.0340956,
              0.0479862,
              1.04083,
              0.996206,
              -0.030105,
              0.041887,
              1.05497,
              0.996971,
              -0.0256095,
              0.0355355,
              1.06824,
              0.997796,
              -0.0213932,
              0.0293655,
              1.08056,
              0.998272,
              -0.0169612,
              0.0232926,
              1.09182,
              0.998857,
              -0.0126756,
              0.0172786,
              1.10219,
              0.99939,
              -0.00832486,
              0.0113156,
              1.11192,
              0.999752,
              -0.00410826,
              0.00557892,
              1.12075,
              1,
              150957e-9,
              -119101e-9,
              1.12885,
              0.975169,
              -309397e-11,
              0.154669,
              195073e-10,
              0.975439,
              -779608e-10,
              0.154712,
              491534e-9,
              0.975464,
              -311847e-9,
              0.154716,
              0.00196617,
              0.975464,
              -701656e-9,
              0.154716,
              0.00442387,
              0.975462,
              -0.0012474,
              0.154715,
              0.0078647,
              0.975461,
              -0.00194906,
              0.154715,
              0.0122886,
              0.975464,
              -0.00280667,
              0.154715,
              0.0176959,
              0.975468,
              -0.00382025,
              0.154716,
              0.0240867,
              0.975471,
              -0.00498985,
              0.154716,
              0.0314612,
              0.975472,
              -0.00631541,
              0.154717,
              0.0398199,
              0.975486,
              -0.00779719,
              0.154718,
              0.0491639,
              0.975489,
              -0.00943505,
              0.154718,
              0.0594932,
              0.975509,
              -0.0112295,
              0.154721,
              0.0708113,
              0.97554,
              -0.0131802,
              0.154724,
              0.0831176,
              0.975557,
              -0.0152876,
              0.154726,
              0.096415,
              0.975585,
              -0.0175512,
              0.154728,
              0.110705,
              0.975605,
              -0.0199713,
              0.154729,
              0.125992,
              0.975645,
              -0.0225447,
              0.154729,
              0.142272,
              0.975711,
              -0.0252649,
              0.154735,
              0.159549,
              0.975788,
              -0.0280986,
              0.154736,
              0.177805,
              0.975872,
              -0.0308232,
              0.154704,
              0.196911,
              0.975968,
              -0.0324841,
              0.154525,
              0.216324,
              0.976063,
              -0.0351281,
              0.154432,
              0.236628,
              0.976157,
              -0.0388618,
              0.15446,
              0.257539,
              0.976204,
              -0.0437704,
              0.154665,
              0.278975,
              0.976358,
              -0.047514,
              0.154652,
              0.302606,
              0.976571,
              -0.0508638,
              0.154535,
              0.327204,
              0.976725,
              -0.0534995,
              0.154221,
              0.352276,
              0.977013,
              -0.0555547,
              0.153737,
              0.377696,
              0.977294,
              -0.0586728,
              0.153403,
              0.403855,
              0.977602,
              -0.0622715,
              0.15312,
              0.430333,
              0.977932,
              -0.0658166,
              0.152755,
              0.456855,
              0.978241,
              -0.0689877,
              0.152233,
              0.483668,
              0.978602,
              -0.0712805,
              0.15132,
              0.512097,
              0.979234,
              -0.0732775,
              0.150235,
              0.540455,
              0.97977,
              -0.075163,
              0.148978,
              0.568486,
              0.979995,
              -0.0778026,
              0.147755,
              0.596524,
              0.98078,
              -0.0791854,
              0.146019,
              0.624825,
              0.981628,
              -0.0799666,
              0.143906,
              0.653403,
              0.982067,
              -0.0808532,
              0.141561,
              0.681445,
              0.98271,
              -0.0816024,
              0.139025,
              0.708918,
              0.983734,
              -0.0812511,
              0.135764,
              0.736594,
              0.98431,
              -0.0806201,
              0.132152,
              0.763576,
              0.985071,
              -0.0801605,
              0.12846,
              0.789797,
              0.98618,
              -0.0784208,
              0.124084,
              0.815804,
              0.986886,
              -0.0766643,
              0.1193,
              0.840869,
              0.987485,
              -0.0747744,
              0.114236,
              0.864952,
              0.988431,
              -0.0716701,
              0.108654,
              0.888431,
              0.988886,
              -0.0691609,
              0.102994,
              0.910963,
              0.990024,
              -0.0654048,
              0.0967278,
              0.932629,
              0.990401,
              -0.0619765,
              0.090384,
              0.95313,
              0.991093,
              -0.0579296,
              0.0837885,
              0.972587,
              0.992018,
              -0.0536576,
              0.0770171,
              0.991184,
              0.992536,
              -0.0493719,
              0.0701486,
              1.00863,
              0.993421,
              -0.0444813,
              0.062953,
              1.02494,
              0.993928,
              -0.040008,
              0.0560455,
              1.04017,
              0.994994,
              -0.0347982,
              0.04856,
              1.05463,
              0.995866,
              -0.0301017,
              0.0416152,
              1.06807,
              0.996916,
              -0.0248225,
              0.0342597,
              1.08039,
              0.997766,
              -0.0199229,
              0.0271668,
              1.09177,
              0.998479,
              -0.0147422,
              0.0201387,
              1.10235,
              0.99921,
              -0.00980173,
              0.0131944,
              1.11206,
              0.999652,
              -0.0047426,
              0.00640712,
              1.12104,
              0.999998,
              891673e-10,
              -10379e-8,
              1.12906,
              0.967868,
              -351885e-11,
              0.175947,
              193569e-10,
              0.968001,
              -886733e-10,
              0.175972,
              487782e-9,
              0.96801,
              -354697e-9,
              0.175973,
              0.00195115,
              0.968012,
              -798063e-9,
              0.175974,
              0.00439006,
              0.968011,
              -0.00141879,
              0.175973,
              0.00780461,
              0.968011,
              -0.00221686,
              0.175973,
              0.0121948,
              0.968016,
              -0.00319231,
              0.175974,
              0.0175607,
              0.968019,
              -0.00434515,
              0.175974,
              0.0239027,
              0.968018,
              -0.00567538,
              0.175974,
              0.0312208,
              0.968033,
              -0.00718308,
              0.175977,
              0.0395158,
              0.968049,
              -0.00886836,
              0.175979,
              0.0487885,
              0.968047,
              -0.0107312,
              0.175978,
              0.0590394,
              0.968072,
              -0.0127719,
              0.175981,
              0.0702705,
              0.968108,
              -0.0149905,
              0.175986,
              0.0824836,
              0.968112,
              -0.0173866,
              0.175985,
              0.0956783,
              0.968173,
              -0.0199611,
              0.175993,
              0.109862,
              0.96827,
              -0.0227128,
              0.176008,
              0.125033,
              0.968292,
              -0.025639,
              0.17601,
              0.141193,
              0.968339,
              -0.0287299,
              0.176007,
              0.158336,
              0.968389,
              -0.0319399,
              0.176001,
              0.176441,
              0.968501,
              -0.034941,
              0.175962,
              0.195359,
              0.968646,
              -0.0370812,
              0.175793,
              0.214686,
              0.968789,
              -0.0402329,
              0.175708,
              0.234973,
              0.96886,
              -0.0442601,
              0.1757,
              0.255871,
              0.969013,
              -0.049398,
              0.175876,
              0.277238,
              0.969242,
              -0.0539932,
              0.17594,
              0.300326,
              0.969419,
              -0.0577299,
              0.175781,
              0.324702,
              0.969763,
              -0.0605643,
              0.175432,
              0.349527,
              0.970093,
              -0.0634488,
              0.174992,
              0.374976,
              0.970361,
              -0.0670589,
              0.174611,
              0.401097,
              0.970825,
              -0.0708246,
              0.174226,
              0.427496,
              0.971214,
              -0.0742871,
              0.173684,
              0.453858,
              0.971622,
              -0.0782608,
              0.173186,
              0.480637,
              0.972175,
              -0.0813151,
              0.172288,
              0.508655,
              0.972944,
              -0.0832678,
              0.170979,
              0.536973,
              0.973595,
              -0.0855964,
              0.169573,
              0.565138,
              0.974345,
              -0.0882163,
              0.168152,
              0.593222,
              0.975233,
              -0.0901671,
              0.166314,
              0.621201,
              0.976239,
              -0.0912111,
              0.163931,
              0.649919,
              0.977289,
              -0.0916959,
              0.161106,
              0.678011,
              0.978076,
              -0.0927061,
              0.158272,
              0.705717,
              0.979533,
              -0.0925562,
              0.15475,
              0.733228,
              0.980335,
              -0.0918159,
              0.150638,
              0.760454,
              0.981808,
              -0.0908508,
              0.146201,
              0.786918,
              0.983061,
              -0.0896172,
              0.141386,
              0.812953,
              0.984148,
              -0.0871588,
              0.135837,
              0.838281,
              0.985047,
              -0.0850624,
              0.130135,
              0.862594,
              0.986219,
              -0.0818541,
              0.123882,
              0.88633,
              0.987043,
              -0.0784523,
              0.117126,
              0.908952,
              0.988107,
              -0.0749601,
              0.110341,
              0.930744,
              0.988955,
              -0.0703548,
              0.102885,
              0.951728,
              0.989426,
              -0.0662798,
              0.0954167,
              0.971166,
              0.990421,
              -0.0610834,
              0.0876331,
              0.989984,
              0.991032,
              -0.0562936,
              0.0797785,
              1.00765,
              0.992041,
              -0.0508154,
              0.0718166,
              1.02434,
              0.992794,
              -0.0454045,
              0.0637125,
              1.03976,
              0.993691,
              -0.0398194,
              0.0555338,
              1.05418,
              0.994778,
              -0.0341482,
              0.0473388,
              1.06772,
              0.995915,
              -0.028428,
              0.0391016,
              1.08028,
              0.997109,
              -0.022642,
              0.0309953,
              1.09185,
              0.998095,
              -0.0168738,
              0.0230288,
              1.10247,
              0.998985,
              -0.0111274,
              0.0150722,
              1.11229,
              0.999581,
              -0.00543881,
              0.00740605,
              1.12131,
              1.00003,
              162239e-9,
              -105549e-9,
              1.12946,
              0.959505,
              -393734e-11,
              0.196876,
              191893e-10,
              0.959599,
              -992157e-10,
              0.196895,
              483544e-9,
              0.959641,
              -396868e-9,
              0.196903,
              0.0019342,
              0.959599,
              -892948e-9,
              0.196895,
              0.00435193,
              0.959603,
              -0.00158747,
              0.196896,
              0.0077368,
              0.959604,
              -0.00248042,
              0.196896,
              0.0120888,
              0.959605,
              -0.00357184,
              0.196896,
              0.0174082,
              0.959605,
              -0.00486169,
              0.196896,
              0.0236949,
              0.959613,
              -0.00635008,
              0.196897,
              0.0309497,
              0.959619,
              -0.00803696,
              0.196898,
              0.0391725,
              0.959636,
              -0.00992255,
              0.196901,
              0.0483649,
              0.959634,
              -0.0120067,
              0.1969,
              0.0585266,
              0.959675,
              -0.0142898,
              0.196906,
              0.0696609,
              0.959712,
              -0.0167717,
              0.196911,
              0.0817678,
              0.959752,
              -0.0194524,
              0.196918,
              0.0948494,
              0.959807,
              -0.0223321,
              0.196925,
              0.10891,
              0.959828,
              -0.0254091,
              0.196924,
              0.123947,
              0.959906,
              -0.0286815,
              0.196934,
              0.139968,
              0.960005,
              -0.0321371,
              0.196944,
              0.156968,
              0.960071,
              -0.0357114,
              0.196936,
              0.17491,
              0.960237,
              -0.0389064,
              0.196882,
              0.193597,
              0.960367,
              -0.041623,
              0.196731,
              0.21285,
              0.960562,
              -0.0452655,
              0.196654,
              0.233075,
              0.960735,
              -0.0496207,
              0.196643,
              0.253941,
              0.960913,
              -0.0549379,
              0.196774,
              0.275278,
              0.961121,
              -0.0603414,
              0.196893,
              0.297733,
              0.96139,
              -0.0644244,
              0.196717,
              0.321877,
              0.961818,
              -0.067556,
              0.196314,
              0.346476,
              0.962175,
              -0.0712709,
              0.195917,
              0.371907,
              0.96255,
              -0.0752848,
              0.1955,
              0.397916,
              0.963164,
              -0.0792073,
              0.195026,
              0.424229,
              0.963782,
              -0.0828225,
              0.194424,
              0.450637,
              0.964306,
              -0.0873119,
              0.193831,
              0.477288,
              0.964923,
              -0.0911051,
              0.192973,
              0.504716,
              0.966048,
              -0.093251,
              0.19151,
              0.533053,
              0.967024,
              -0.0958983,
              0.190013,
              0.561366,
              0.968038,
              -0.09835,
              0.188253,
              0.589464,
              0.969152,
              -0.100754,
              0.186257,
              0.617433,
              0.970557,
              -0.102239,
              0.183775,
              0.645801,
              0.972104,
              -0.102767,
              0.180645,
              0.674278,
              0.973203,
              -0.103492,
              0.177242,
              0.702004,
              0.975123,
              -0.103793,
              0.17345,
              0.729529,
              0.97641,
              -0.102839,
              0.168886,
              0.756712,
              0.978313,
              -0.101687,
              0.163892,
              0.783801,
              0.980036,
              -0.100314,
              0.158439,
              0.809671,
              0.981339,
              -0.097836,
              0.152211,
              0.835402,
              0.982794,
              -0.0950006,
              0.145679,
              0.860081,
              0.984123,
              -0.0920994,
              0.138949,
              0.883757,
              0.984918,
              -0.0878641,
              0.131283,
              0.90685,
              0.985999,
              -0.083939,
              0.123464,
              0.928786,
              0.987151,
              -0.0791234,
              0.115324,
              0.94983,
              0.987827,
              -0.0739332,
              0.106854,
              0.96962,
              0.988806,
              -0.0688088,
              0.0982691,
              0.98861,
              0.989588,
              -0.0628962,
              0.0893456,
              1.00667,
              0.990438,
              -0.0573146,
              0.0805392,
              1.02344,
              0.991506,
              -0.0509433,
              0.0713725,
              1.03933,
              0.992492,
              -0.0448724,
              0.0623732,
              1.05378,
              0.993663,
              -0.0383497,
              0.0530838,
              1.06747,
              0.994956,
              -0.0319593,
              0.0439512,
              1.08007,
              0.99634,
              -0.025401,
              0.0347803,
              1.09182,
              0.99761,
              -0.0189687,
              0.0257954,
              1.1025,
              0.99863,
              -0.0124441,
              0.0169893,
              1.11247,
              0.99947,
              -0.00614003,
              0.00829498,
              1.12151,
              1.00008,
              216624e-9,
              -146107e-9,
              1.12993,
              0.950129,
              -434955e-11,
              0.217413,
              190081e-10,
              0.950264,
              -10957e-8,
              0.217444,
              47884e-8,
              0.9503,
              -438299e-9,
              0.217451,
              0.00191543,
              0.950246,
              -986124e-9,
              0.21744,
              0.00430951,
              0.950246,
              -0.00175311,
              0.21744,
              0.00766137,
              0.950245,
              -0.00273923,
              0.21744,
              0.011971,
              0.950253,
              -0.00394453,
              0.217441,
              0.0172385,
              0.950258,
              -0.00536897,
              0.217442,
              0.0234641,
              0.950267,
              -0.00701262,
              0.217444,
              0.030648,
              0.950277,
              -0.00887551,
              0.217446,
              0.038791,
              0.950284,
              -0.0109576,
              0.217446,
              0.0478931,
              0.950312,
              -0.0132591,
              0.217451,
              0.0579568,
              0.950334,
              -0.01578,
              0.217454,
              0.0689821,
              0.950378,
              -0.0185204,
              0.217462,
              0.0809714,
              0.950417,
              -0.0214803,
              0.217467,
              0.0939265,
              0.950488,
              -0.0246594,
              0.217479,
              0.10785,
              0.950534,
              -0.0280565,
              0.217483,
              0.122743,
              0.950633,
              -0.0316685,
              0.217498,
              0.138611,
              0.950698,
              -0.0354787,
              0.217499,
              0.155442,
              0.950844,
              -0.0394003,
              0.217507,
              0.173208,
              0.950999,
              -0.0426812,
              0.217419,
              0.191605,
              0.951221,
              -0.0461302,
              0.217317,
              0.21084,
              0.951412,
              -0.0502131,
              0.217238,
              0.230945,
              0.951623,
              -0.0549183,
              0.21722,
              0.251745,
              0.951867,
              -0.0604493,
              0.217306,
              0.273001,
              0.952069,
              -0.0665189,
              0.217466,
              0.294874,
              0.952459,
              -0.0709179,
              0.217266,
              0.318732,
              0.952996,
              -0.0746112,
              0.216891,
              0.34318,
              0.953425,
              -0.0789252,
              0.216503,
              0.36849,
              0.953885,
              -0.0833293,
              0.216042,
              0.394373,
              0.954617,
              -0.087371,
              0.215469,
              0.420505,
              0.955429,
              -0.0914054,
              0.214802,
              0.446907,
              0.956068,
              -0.0961671,
              0.214146,
              0.473522,
              0.957094,
              -0.10048,
              0.213286,
              0.50052,
              0.958372,
              -0.103248,
              0.211796,
              0.528715,
              0.959654,
              -0.106033,
              0.21016,
              0.557065,
              0.961305,
              -0.108384,
              0.208149,
              0.585286,
              0.962785,
              -0.111122,
              0.206024,
              0.613334,
              0.964848,
              -0.112981,
              0.203442,
              0.641334,
              0.966498,
              -0.113717,
              0.19996,
              0.669955,
              0.968678,
              -0.114121,
              0.196105,
              0.698094,
              0.970489,
              -0.114524,
              0.191906,
              0.725643,
              0.972903,
              -0.113792,
              0.186963,
              0.752856,
              0.974701,
              -0.112406,
              0.181343,
              0.780013,
              0.976718,
              -0.110685,
              0.175185,
              0.806268,
              0.978905,
              -0.108468,
              0.168535,
              0.832073,
              0.980267,
              -0.105061,
              0.161106,
              0.857149,
              0.981967,
              -0.101675,
              0.153387,
              0.881145,
              0.983063,
              -0.0974492,
              0.145199,
              0.904255,
              0.984432,
              -0.0925815,
              0.136527,
              0.926686,
              0.985734,
              -0.0877983,
              0.127584,
              0.947901,
              0.986228,
              -0.081884,
              0.118125,
              0.968111,
              0.98719,
              -0.0761208,
              0.108594,
              0.98719,
              0.988228,
              -0.0698196,
              0.0989996,
              1.00559,
              0.989046,
              -0.0632739,
              0.0890074,
              1.02246,
              0.990242,
              -0.056522,
              0.0790832,
              1.03841,
              0.991252,
              -0.0495272,
              0.0689182,
              1.05347,
              0.992542,
              -0.0425373,
              0.0588592,
              1.06724,
              0.994096,
              -0.0353198,
              0.0486833,
              1.08009,
              0.995593,
              -0.028235,
              0.0385977,
              1.09177,
              0.99711,
              -0.0209511,
              0.0286457,
              1.10274,
              0.998263,
              -0.0139289,
              0.0188497,
              1.11262,
              0.999254,
              -0.0067359,
              0.009208,
              1.12191,
              0.999967,
              141846e-9,
              -657764e-10,
              1.13024,
              0.935608,
              -474692e-11,
              0.236466,
              187817e-10,
              0.93996,
              -11971e-8,
              0.237568,
              473646e-9,
              0.939959,
              -478845e-9,
              0.237567,
              0.0018946,
              0.939954,
              -0.0010774,
              0.237566,
              0.00426284,
              0.939956,
              -0.00191538,
              0.237566,
              0.00757842,
              0.939954,
              -0.00299277,
              0.237566,
              0.0118413,
              0.93996,
              -0.00430961,
              0.237567,
              0.0170518,
              0.939969,
              -0.00586589,
              0.237569,
              0.02321,
              0.939982,
              -0.00766166,
              0.237572,
              0.0303164,
              0.939987,
              -0.00969686,
              0.237572,
              0.0383711,
              0.939997,
              -0.0119715,
              0.237574,
              0.0473751,
              0.940031,
              -0.0144858,
              0.237581,
              0.0573298,
              0.940073,
              -0.0172399,
              0.237589,
              0.0682366,
              0.94012,
              -0.0202335,
              0.237598,
              0.080097,
              0.940162,
              -0.0234663,
              0.237604,
              0.0929116,
              0.940237,
              -0.0269387,
              0.237615,
              0.106686,
              0.940328,
              -0.0306489,
              0.237632,
              0.121421,
              0.940419,
              -0.0345917,
              0.237645,
              0.137115,
              0.940522,
              -0.0387481,
              0.237654,
              0.153766,
              0.940702,
              -0.0429906,
              0.237661,
              0.17133,
              0.940871,
              -0.0465089,
              0.237561,
              0.189502,
              0.941103,
              -0.050531,
              0.23748,
              0.208616,
              0.941369,
              -0.0550657,
              0.237423,
              0.228595,
              0.941641,
              -0.0601337,
              0.237399,
              0.249287,
              0.941903,
              -0.0658804,
              0.237443,
              0.270467,
              0.942224,
              -0.0722674,
              0.237597,
              0.292024,
              0.942633,
              -0.0771788,
              0.237419,
              0.315272,
              0.943172,
              -0.0815623,
              0.237068,
              0.339579,
              0.943691,
              -0.0863973,
              0.236682,
              0.364717,
              0.944382,
              -0.0911536,
              0.236213,
              0.390435,
              0.945392,
              -0.0952967,
              0.235562,
              0.416425,
              0.946185,
              -0.0998948,
              0.234832,
              0.442772,
              0.947212,
              -0.104796,
              0.234114,
              0.469347,
              0.948778,
              -0.10928,
              0.233222,
              0.496162,
              0.950149,
              -0.113081,
              0.231845,
              0.523978,
              0.951989,
              -0.115893,
              0.230005,
              0.552295,
              0.953921,
              -0.11846,
              0.227862,
              0.580569,
              0.955624,
              -0.12115,
              0.225439,
              0.608698,
              0.958234,
              -0.123373,
              0.222635,
              0.636696,
              0.960593,
              -0.124519,
              0.219093,
              0.665208,
              0.963201,
              -0.124736,
              0.214749,
              0.693557,
              0.965642,
              -0.125012,
              0.210059,
              0.721334,
              0.968765,
              -0.124661,
              0.204935,
              0.748613,
              0.971753,
              -0.122996,
              0.198661,
              0.776224,
              0.973751,
              -0.120998,
              0.191823,
              0.802461,
              0.976709,
              -0.118583,
              0.184359,
              0.828399,
              0.977956,
              -0.115102,
              0.176437,
              0.853693,
              0.979672,
              -0.111077,
              0.167681,
              0.877962,
              0.981816,
              -0.10688,
              0.158872,
              0.901564,
              0.98238,
              -0.101469,
              0.149398,
              0.924057,
              0.983964,
              -0.0960013,
              0.139436,
              0.945751,
              0.984933,
              -0.0899626,
              0.12943,
              0.966272,
              0.985694,
              -0.0832973,
              0.11894,
              0.985741,
              0.986822,
              -0.0767082,
              0.108349,
              1.00407,
              0.987725,
              -0.0693614,
              0.0976026,
              1.02154,
              0.98877,
              -0.06211,
              0.086652,
              1.03757,
              0.990129,
              -0.0544143,
              0.0756182,
              1.05296,
              0.991337,
              -0.046744,
              0.0645753,
              1.06683,
              0.992978,
              -0.0387931,
              0.0534683,
              1.0798,
              0.994676,
              -0.030973,
              0.0424137,
              1.09181,
              0.99645,
              -0.0230311,
              0.0314035,
              1.10286,
              0.997967,
              -0.0152065,
              0.0206869,
              1.11291,
              0.99922,
              -0.00744837,
              0.010155,
              1.12237,
              1.00002,
              240209e-9,
              -752767e-10,
              1.13089,
              0.922948,
              -515351e-11,
              0.255626,
              186069e-10,
              0.928785,
              -129623e-9,
              0.257244,
              468009e-9,
              0.928761,
              -51849e-8,
              0.257237,
              0.00187202,
              0.928751,
              -0.0011666,
              0.257235,
              0.00421204,
              0.928751,
              -0.00207395,
              0.257234,
              0.0074881,
              0.928754,
              -0.00324055,
              0.257235,
              0.0117002,
              0.92876,
              -0.00466639,
              0.257236,
              0.0168486,
              0.928763,
              -0.00635149,
              0.257237,
              0.0229334,
              0.928774,
              -0.00829584,
              0.257239,
              0.029955,
              0.928791,
              -0.0104995,
              0.257243,
              0.0379139,
              0.928804,
              -0.0129623,
              0.257245,
              0.0468108,
              0.928847,
              -0.0156846,
              0.257255,
              0.0566473,
              0.92889,
              -0.0186661,
              0.257263,
              0.0674246,
              0.928924,
              -0.0219067,
              0.257268,
              0.0791433,
              0.928989,
              -0.0254066,
              0.257282,
              0.0918076,
              0.92909,
              -0.0291651,
              0.257301,
              0.105419,
              0.92918,
              -0.0331801,
              0.257316,
              0.119978,
              0.92929,
              -0.0374469,
              0.257332,
              0.135491,
              0.929453,
              -0.041939,
              0.257357,
              0.151948,
              0.929586,
              -0.0464612,
              0.257347,
              0.169275,
              0.929858,
              -0.0503426,
              0.257269,
              0.187257,
              0.930125,
              -0.0548409,
              0.257199,
              0.206204,
              0.930403,
              -0.0598063,
              0.257149,
              0.22601,
              0.930726,
              -0.0652437,
              0.257122,
              0.246561,
              0.931098,
              -0.0712376,
              0.257153,
              0.267618,
              0.931396,
              -0.0777506,
              0.257237,
              0.288993,
              0.931947,
              -0.0832374,
              0.257124,
              0.311527,
              0.932579,
              -0.0883955,
              0.25683,
              0.335697,
              0.933194,
              -0.0937037,
              0.256444,
              0.360634,
              0.934013,
              -0.0987292,
              0.255939,
              0.386126,
              0.935307,
              -0.103215,
              0.255282,
              0.412018,
              0.936374,
              -0.108234,
              0.254538,
              0.438292,
              0.93776,
              -0.113234,
              0.253728,
              0.464805,
              0.939599,
              -0.118013,
              0.25275,
              0.491464,
              0.941036,
              -0.122661,
              0.251404,
              0.518751,
              0.94337,
              -0.125477,
              0.249435,
              0.547133,
              0.945318,
              -0.128374,
              0.247113,
              0.575456,
              0.947995,
              -0.130996,
              0.244441,
              0.60372,
              0.950818,
              -0.133438,
              0.241352,
              0.63174,
              0.954378,
              -0.135004,
              0.237849,
              0.659971,
              0.957151,
              -0.135313,
              0.233188,
              0.688478,
              0.960743,
              -0.13521,
              0.228001,
              0.716767,
              0.964352,
              -0.135007,
              0.222249,
              0.744349,
              0.967273,
              -0.133523,
              0.21542,
              0.771786,
              0.969767,
              -0.131155,
              0.208039,
              0.798639,
              0.973195,
              -0.128492,
              0.200076,
              0.824774,
              0.975557,
              -0.125094,
              0.191451,
              0.850222,
              0.977692,
              -0.120578,
              0.18184,
              0.874761,
              0.98026,
              -0.115882,
              0.172102,
              0.898497,
              0.981394,
              -0.110372,
              0.161859,
              0.921636,
              0.982386,
              -0.10415,
              0.15108,
              0.943467,
              0.983783,
              -0.0978128,
              0.140407,
              0.964045,
              0.98422,
              -0.0906171,
              0.129058,
              0.98398,
              0.985447,
              -0.0832921,
              0.117614,
              1.00276,
              0.986682,
              -0.0754412,
              0.10585,
              1.02047,
              0.987326,
              -0.0673885,
              0.0940943,
              1.03678,
              0.988707,
              -0.0592565,
              0.0822093,
              1.05218,
              0.990185,
              -0.050717,
              0.070192,
              1.06652,
              0.991866,
              -0.0423486,
              0.0582081,
              1.07965,
              0.993897,
              -0.0336118,
              0.0460985,
              1.09188,
              0.995841,
              -0.0252178,
              0.0342737,
              1.10307,
              0.997605,
              -0.0164893,
              0.0224829,
              1.11324,
              0.999037,
              -0.00817112,
              0.0110647,
              1.12262,
              1.00003,
              291686e-9,
              -168673e-9,
              1.13139,
              0.915304,
              -552675e-11,
              0.275999,
              183285e-10,
              0.91668,
              -139285e-9,
              0.276414,
              461914e-9,
              0.916664,
              -55713e-8,
              0.276409,
              0.00184763,
              0.916653,
              -0.00125354,
              0.276406,
              0.00415715,
              0.916651,
              -0.00222851,
              0.276405,
              0.00739053,
              0.916655,
              -0.00348205,
              0.276406,
              0.0115478,
              0.916653,
              -0.00501414,
              0.276405,
              0.0166291,
              0.916667,
              -0.00682478,
              0.276409,
              0.0226346,
              0.91668,
              -0.00891398,
              0.276412,
              0.0295648,
              0.91669,
              -0.0112817,
              0.276413,
              0.0374199,
              0.916727,
              -0.013928,
              0.276422,
              0.0462016,
              0.916759,
              -0.0168528,
              0.276429,
              0.0559101,
              0.916793,
              -0.0200558,
              0.276436,
              0.0665466,
              0.916849,
              -0.0235373,
              0.276448,
              0.0781139,
              0.916964,
              -0.0272973,
              0.276474,
              0.0906156,
              0.917047,
              -0.0313344,
              0.276491,
              0.104051,
              0.917152,
              -0.0356465,
              0.276511,
              0.118424,
              0.917286,
              -0.0402271,
              0.276533,
              0.133736,
              0.917469,
              -0.0450408,
              0.276564,
              0.149978,
              0.917686,
              -0.0497872,
              0.276563,
              0.167057,
              0.917953,
              -0.0540937,
              0.276493,
              0.184846,
              0.918228,
              -0.0590709,
              0.276437,
              0.203614,
              0.918572,
              -0.0644277,
              0.276398,
              0.223212,
              0.918918,
              -0.0702326,
              0.276362,
              0.243584,
              0.919356,
              -0.076484,
              0.276383,
              0.264465,
              0.919842,
              -0.0830808,
              0.276434,
              0.285701,
              0.920451,
              -0.0892972,
              0.276407,
              0.307559,
              0.921113,
              -0.095016,
              0.276128,
              0.331501,
              0.921881,
              -0.100771,
              0.275754,
              0.356207,
              0.923027,
              -0.106029,
              0.275254,
              0.381477,
              0.924364,
              -0.111029,
              0.274595,
              0.40722,
              0.925818,
              -0.116345,
              0.273841,
              0.433385,
              0.92746,
              -0.121424,
              0.272913,
              0.459848,
              0.929167,
              -0.12657,
              0.271837,
              0.486493,
              0.931426,
              -0.131581,
              0.270575,
              0.513432,
              0.934001,
              -0.135038,
              0.268512,
              0.541502,
              0.936296,
              -0.138039,
              0.266135,
              0.569658,
              0.939985,
              -0.140687,
              0.263271,
              0.598375,
              0.943516,
              -0.143247,
              0.260058,
              0.626563,
              0.94782,
              -0.145135,
              0.256138,
              0.654711,
              0.951023,
              -0.145733,
              0.251154,
              0.683285,
              0.955338,
              -0.145554,
              0.245562,
              0.711831,
              0.959629,
              -0.145008,
              0.239265,
              0.739573,
              0.963123,
              -0.144003,
              0.232064,
              0.767027,
              0.966742,
              -0.141289,
              0.224036,
              0.794359,
              0.969991,
              -0.138247,
              0.215305,
              0.820361,
              0.973403,
              -0.134786,
              0.206051,
              0.846548,
              0.975317,
              -0.129966,
              0.195914,
              0.871541,
              0.977647,
              -0.12471,
              0.185184,
              0.895313,
              0.980137,
              -0.119086,
              0.174161,
              0.918398,
              0.981031,
              -0.112297,
              0.162792,
              0.940679,
              0.982037,
              -0.105372,
              0.150952,
              0.961991,
              0.983164,
              -0.097821,
              0.138921,
              0.981913,
              0.983757,
              -0.0897245,
              0.126611,
              1.00109,
              0.985036,
              -0.0815974,
              0.114228,
              1.01902,
              0.986289,
              -0.0727725,
              0.101389,
              1.03604,
              0.987329,
              -0.0639323,
              0.0886476,
              1.05149,
              0.989193,
              -0.0548109,
              0.0756837,
              1.06619,
              0.990716,
              -0.045687,
              0.0627581,
              1.07948,
              0.992769,
              -0.0364315,
              0.0498337,
              1.09172,
              0.99524,
              -0.0271761,
              0.0370305,
              1.1033,
              0.997154,
              -0.0179609,
              0.0243959,
              1.11353,
              0.998845,
              -0.00878063,
              0.0119567,
              1.12319,
              1.00002,
              259038e-9,
              -108146e-9,
              1.13177,
              0.903945,
              -591681e-11,
              0.295126,
              181226e-10,
              0.903668,
              -148672e-9,
              0.295037,
              455367e-9,
              0.903677,
              -594683e-9,
              0.29504,
              0.00182145,
              0.903673,
              -0.00133805,
              0.295039,
              0.00409831,
              0.903666,
              -0.00237872,
              0.295036,
              0.00728584,
              0.903668,
              -0.00371676,
              0.295037,
              0.0113842,
              0.903679,
              -0.00535212,
              0.29504,
              0.0163936,
              0.903684,
              -0.00728479,
              0.295041,
              0.0223141,
              0.903698,
              -0.00951473,
              0.295044,
              0.0291462,
              0.903718,
              -0.0120419,
              0.295049,
              0.0368904,
              0.903754,
              -0.0148664,
              0.295058,
              0.0455477,
              0.903801,
              -0.017988,
              0.29507,
              0.0551194,
              0.903851,
              -0.0214064,
              0.295082,
              0.0656058,
              0.903921,
              -0.0251219,
              0.295097,
              0.0770109,
              0.904002,
              -0.0291337,
              0.295116,
              0.0893354,
              0.904111,
              -0.033441,
              0.29514,
              0.102583,
              0.904246,
              -0.0380415,
              0.295169,
              0.116755,
              0.904408,
              -0.0429258,
              0.295202,
              0.131853,
              0.904637,
              -0.0480468,
              0.295245,
              0.147869,
              0.904821,
              -0.0529208,
              0.295214,
              0.164658,
              0.905163,
              -0.0577748,
              0.295185,
              0.182274,
              0.905469,
              -0.0631763,
              0.295143,
              0.200828,
              0.905851,
              -0.068917,
              0.295112,
              0.2202,
              0.906322,
              -0.0750861,
              0.295104,
              0.240372,
              0.906761,
              -0.0815855,
              0.295086,
              0.261082,
              0.90735,
              -0.0882138,
              0.295095,
              0.282123,
              0.908087,
              -0.095082,
              0.295139,
              0.303563,
              0.908826,
              -0.101488,
              0.29492,
              0.327028,
              0.909832,
              -0.107577,
              0.294577,
              0.351464,
              0.911393,
              -0.113033,
              0.294115,
              0.376497,
              0.912804,
              -0.118629,
              0.293446,
              0.402115,
              0.914081,
              -0.124232,
              0.292581,
              0.428111,
              0.91637,
              -0.129399,
              0.29166,
              0.454442,
              0.91814,
              -0.134892,
              0.290422,
              0.481024,
              0.921179,
              -0.140069,
              0.289194,
              0.507924,
              0.924544,
              -0.144431,
              0.287421,
              0.535557,
              0.927995,
              -0.147498,
              0.284867,
              0.563984,
              0.931556,
              -0.150197,
              0.281722,
              0.5923,
              0.935777,
              -0.152711,
              0.278207,
              0.620832,
              0.940869,
              -0.154836,
              0.274148,
              0.649069,
              0.945994,
              -0.155912,
              0.269057,
              0.677746,
              0.949634,
              -0.155641,
              0.262799,
              0.706293,
              0.955032,
              -0.154809,
              0.256097,
              0.734278,
              0.95917,
              -0.153678,
              0.248618,
              0.761751,
              0.962931,
              -0.151253,
              0.239794,
              0.789032,
              0.966045,
              -0.147625,
              0.230281,
              0.815422,
              0.96971,
              -0.143964,
              0.220382,
              0.841787,
              0.972747,
              -0.139464,
              0.209846,
              0.867446,
              0.975545,
              -0.133459,
              0.198189,
              0.892004,
              0.978381,
              -0.127424,
              0.186362,
              0.915458,
              0.979935,
              -0.120506,
              0.173964,
              0.937948,
              0.980948,
              -0.11282,
              0.161429,
              0.959732,
              0.982234,
              -0.104941,
              0.148557,
              0.980118,
              0.982767,
              -0.0962905,
              0.135508,
              0.999463,
              0.983544,
              -0.0873625,
              0.122338,
              1.01756,
              0.984965,
              -0.0783447,
              0.108669,
              1.03492,
              0.986233,
              -0.0684798,
              0.0949911,
              1.05087,
              0.987796,
              -0.0590867,
              0.0811386,
              1.0656,
              0.989885,
              -0.0489145,
              0.0673099,
              1.0794,
              0.991821,
              -0.0391,
              0.0535665,
              1.09174,
              0.99448,
              -0.029087,
              0.0397529,
              1.10341,
              0.996769,
              -0.019114,
              0.0261463,
              1.11383,
              0.998641,
              -0.00947007,
              0.0128731,
              1.1237,
              0.999978,
              446316e-9,
              -169093e-9,
              1.13253,
              0.888362,
              -627064e-11,
              0.312578,
              178215e-10,
              0.889988,
              -157791e-9,
              0.313148,
              448451e-9,
              0.889825,
              -631076e-9,
              0.313092,
              0.00179356,
              0.88984,
              -0.00141994,
              0.313097,
              0.00403554,
              0.889828,
              -0.0025243,
              0.313092,
              0.00717429,
              0.889831,
              -0.00394421,
              0.313093,
              0.0112099,
              0.889831,
              -0.00567962,
              0.313093,
              0.0161425,
              0.889844,
              -0.00773051,
              0.313096,
              0.0219724,
              0.889858,
              -0.0100968,
              0.3131,
              0.0286999,
              0.889882,
              -0.0127786,
              0.313106,
              0.0363256,
              0.889918,
              -0.0157757,
              0.313116,
              0.0448509,
              0.889967,
              -0.0190878,
              0.313129,
              0.0542758,
              0.89003,
              -0.022715,
              0.313145,
              0.0646032,
              0.890108,
              -0.0266566,
              0.313165,
              0.0758339,
              0.890218,
              -0.0309131,
              0.313193,
              0.0879729,
              0.890351,
              -0.0354819,
              0.313226,
              0.101019,
              0.89051,
              -0.0403613,
              0.313263,
              0.114979,
              0.890672,
              -0.0455385,
              0.313294,
              0.129848,
              0.890882,
              -0.0509444,
              0.313333,
              0.145616,
              0.891189,
              -0.0559657,
              0.313324,
              0.162122,
              0.891457,
              -0.0613123,
              0.313281,
              0.179524,
              0.891856,
              -0.0671488,
              0.313281,
              0.197855,
              0.892312,
              -0.0732732,
              0.313268,
              0.216991,
              0.892819,
              -0.0797865,
              0.313263,
              0.236924,
              0.893369,
              -0.0865269,
              0.313247,
              0.257433,
              0.894045,
              -0.0931592,
              0.313205,
              0.278215,
              0.894884,
              -0.100532,
              0.313276,
              0.299467,
              0.895832,
              -0.107716,
              0.313205,
              0.322276,
              0.897043,
              -0.114099,
              0.312873,
              0.34642,
              0.898515,
              -0.119941,
              0.312331,
              0.371187,
              0.900191,
              -0.126044,
              0.311731,
              0.396656,
              0.90188,
              -0.131808,
              0.310859,
              0.422488,
              0.904359,
              -0.137289,
              0.309857,
              0.448744,
              0.906923,
              -0.142991,
              0.308714,
              0.475239,
              0.910634,
              -0.148253,
              0.307465,
              0.501983,
              0.914502,
              -0.153332,
              0.305774,
              0.529254,
              0.919046,
              -0.156646,
              0.303156,
              0.557709,
              0.923194,
              -0.159612,
              0.299928,
              0.586267,
              0.928858,
              -0.162027,
              0.296245,
              0.614925,
              0.934464,
              -0.164203,
              0.291832,
              0.643187,
              0.939824,
              -0.165602,
              0.286565,
              0.671601,
              0.944582,
              -0.165383,
              0.280073,
              0.700213,
              0.949257,
              -0.164439,
              0.272891,
              0.728432,
              0.954389,
              -0.162953,
              0.264771,
              0.756082,
              0.958595,
              -0.161007,
              0.255927,
              0.78369,
              0.962138,
              -0.157243,
              0.245769,
              0.810769,
              0.966979,
              -0.152872,
              0.235127,
              0.836999,
              0.969566,
              -0.148209,
              0.22347,
              0.862684,
              0.972372,
              -0.142211,
              0.211147,
              0.887847,
              0.975916,
              -0.135458,
              0.198606,
              0.911843,
              0.978026,
              -0.128398,
              0.185498,
              0.934795,
              0.979686,
              -0.120313,
              0.17171,
              0.956787,
              0.980748,
              -0.11166,
              0.158159,
              0.978046,
              0.981622,
              -0.103035,
              0.144399,
              0.997693,
              0.982356,
              -0.0930328,
              0.13001,
              1.01642,
              0.983308,
              -0.0834627,
              0.115778,
              1.03366,
              0.985037,
              -0.0732249,
              0.101327,
              1.05014,
              0.986493,
              -0.0628145,
              0.086554,
              1.06507,
              0.988484,
              -0.0526556,
              0.0720413,
              1.07907,
              0.991051,
              -0.0415744,
              0.0571151,
              1.09189,
              0.993523,
              -0.0314275,
              0.0426643,
              1.10369,
              0.99628,
              -0.0203603,
              0.0279325,
              1.11423,
              0.998344,
              -0.0102446,
              0.0138182,
              1.12421,
              0.999997,
              42612e-8,
              -193628e-9,
              1.1333,
              0.871555,
              -660007e-11,
              0.329176,
              174749e-10,
              0.875255,
              -166579e-9,
              0.330571,
              441051e-9,
              0.875644,
              -666394e-9,
              0.330718,
              0.00176441,
              0.875159,
              -0.00149903,
              0.330536,
              0.00396899,
              0.87516,
              -0.00266493,
              0.330536,
              0.007056,
              0.875158,
              -0.00416393,
              0.330535,
              0.0110251,
              0.87516,
              -0.00599598,
              0.330535,
              0.0158764,
              0.875163,
              -0.00816108,
              0.330536,
              0.0216101,
              0.875174,
              -0.0106591,
              0.330538,
              0.0282266,
              0.875199,
              -0.0134899,
              0.330545,
              0.0357266,
              0.875257,
              -0.0166538,
              0.330563,
              0.0441117,
              0.875304,
              -0.0201501,
              0.330575,
              0.0533821,
              0.875373,
              -0.0239785,
              0.330595,
              0.0635395,
              0.875464,
              -0.0281389,
              0.330619,
              0.0745872,
              0.875565,
              -0.0326301,
              0.330645,
              0.0865255,
              0.875691,
              -0.0374516,
              0.330676,
              0.0993599,
              0.875897,
              -0.0425993,
              0.330733,
              0.113093,
              0.876091,
              -0.0480576,
              0.330776,
              0.127722,
              0.876353,
              -0.0537216,
              0.330826,
              0.143227,
              0.876649,
              -0.0589807,
              0.330809,
              0.159462,
              0.877034,
              -0.0647865,
              0.330819,
              0.176642,
              0.877443,
              -0.0709789,
              0.330817,
              0.194702,
              0.877956,
              -0.0774782,
              0.330832,
              0.213577,
              0.878499,
              -0.0843175,
              0.330822,
              0.233246,
              0.879144,
              -0.0912714,
              0.330804,
              0.253512,
              0.879982,
              -0.0980824,
              0.330766,
              0.274137,
              0.88097,
              -0.105823,
              0.330864,
              0.295209,
              0.882051,
              -0.113671,
              0.330896,
              0.317226,
              0.883397,
              -0.120303,
              0.330545,
              0.341068,
              0.884987,
              -0.12667,
              0.330068,
              0.365613,
              0.886789,
              -0.133118,
              0.329418,
              0.390807,
              0.889311,
              -0.139024,
              0.328683,
              0.416494,
              0.891995,
              -0.144971,
              0.327729,
              0.442618,
              0.895106,
              -0.150747,
              0.326521,
              0.469131,
              0.899527,
              -0.156283,
              0.325229,
              0.495921,
              0.90504,
              -0.161707,
              0.32378,
              0.523162,
              0.909875,
              -0.165661,
              0.32122,
              0.55092,
              0.91561,
              -0.168755,
              0.317942,
              0.579928,
              0.921225,
              -0.171193,
              0.313983,
              0.608539,
              0.927308,
              -0.17319,
              0.309636,
              0.636854,
              0.933077,
              -0.174819,
              0.304262,
              0.66523,
              0.938766,
              -0.175002,
              0.297563,
              0.693609,
              0.943667,
              -0.173946,
              0.289613,
              0.722157,
              0.949033,
              -0.172221,
              0.281227,
              0.750021,
              0.953765,
              -0.169869,
              0.271545,
              0.777466,
              0.95804,
              -0.166578,
              0.261034,
              0.804853,
              0.962302,
              -0.161761,
              0.249434,
              0.831569,
              0.966544,
              -0.156636,
              0.237484,
              0.857779,
              0.969372,
              -0.150784,
              0.224395,
              0.883051,
              0.972486,
              -0.143672,
              0.210786,
              0.907864,
              0.975853,
              -0.135772,
              0.196556,
              0.931223,
              0.977975,
              -0.127942,
              0.182307,
              0.954061,
              0.979122,
              -0.118347,
              0.167607,
              0.97531,
              0.980719,
              -0.109112,
              0.152739,
              0.995666,
              0.981223,
              -0.0991789,
              0.137932,
              1.01475,
              0.98216,
              -0.0883553,
              0.122692,
              1.03253,
              0.983379,
              -0.0780825,
              0.107493,
              1.04917,
              0.985434,
              -0.0665646,
              0.0917791,
              1.06464,
              0.987332,
              -0.0557714,
              0.0764949,
              1.07896,
              0.990004,
              -0.0442805,
              0.060721,
              1.09199,
              0.992975,
              -0.0331676,
              0.0452284,
              1.10393,
              0.995811,
              -0.0219547,
              0.0297934,
              1.11476,
              0.9982,
              -0.0107613,
              0.0146415,
              1.12484,
              1.00002,
              248678e-9,
              -14555e-8,
              1.13413,
              0.859519,
              -693595e-11,
              0.347264,
              171673e-10,
              0.859843,
              -17503e-8,
              0.347394,
              433219e-9,
              0.859656,
              -700076e-9,
              0.347319,
              0.00173277,
              0.859671,
              -0.00157517,
              0.347325,
              0.00389875,
              0.859669,
              -0.00280028,
              0.347324,
              0.00693112,
              0.85967,
              -0.0043754,
              0.347324,
              0.01083,
              0.859665,
              -0.00630049,
              0.347321,
              0.0155954,
              0.859685,
              -0.0085755,
              0.347328,
              0.0212278,
              0.859694,
              -0.0112003,
              0.347329,
              0.0277273,
              0.859718,
              -0.0141747,
              0.347336,
              0.0350946,
              0.85976,
              -0.0174988,
              0.347348,
              0.0433314,
              0.85982,
              -0.0211722,
              0.347366,
              0.0524384,
              0.859892,
              -0.0251941,
              0.347387,
              0.0624168,
              0.860006,
              -0.0295649,
              0.347422,
              0.0732708,
              0.860122,
              -0.0342825,
              0.347453,
              0.0849999,
              0.860282,
              -0.0393462,
              0.347499,
              0.0976102,
              0.860482,
              -0.0447513,
              0.347554,
              0.111104,
              0.860719,
              -0.0504775,
              0.347614,
              0.125479,
              0.860998,
              -0.0563577,
              0.347666,
              0.140703,
              0.861322,
              -0.0619473,
              0.347662,
              0.156681,
              0.861724,
              -0.0681277,
              0.347684,
              0.173597,
              0.862198,
              -0.0746567,
              0.347709,
              0.191371,
              0.862733,
              -0.0815234,
              0.347727,
              0.209976,
              0.863371,
              -0.0886643,
              0.347744,
              0.229351,
              0.86414,
              -0.0957908,
              0.347734,
              0.24934,
              0.865138,
              -0.102912,
              0.34772,
              0.269797,
              0.866182,
              -0.110924,
              0.3478,
              0.290654,
              0.867436,
              -0.119223,
              0.347911,
              0.312074,
              0.869087,
              -0.126197,
              0.347649,
              0.335438,
              0.870859,
              -0.133145,
              0.347222,
              0.359732,
              0.872997,
              -0.139869,
              0.346645,
              0.38467,
              0.875939,
              -0.146089,
              0.345935,
              0.41019,
              0.879012,
              -0.152334,
              0.345012,
              0.436218,
              0.883353,
              -0.15821,
              0.343924,
              0.462641,
              0.888362,
              -0.164097,
              0.342636,
              0.489449,
              0.895026,
              -0.169528,
              0.341351,
              0.516629,
              0.900753,
              -0.174408,
              0.339115,
              0.544109,
              0.906814,
              -0.17751,
              0.335809,
              0.572857,
              0.912855,
              -0.180101,
              0.331597,
              0.601554,
              0.919438,
              -0.182116,
              0.32698,
              0.630198,
              0.925962,
              -0.183494,
              0.321449,
              0.658404,
              0.931734,
              -0.184159,
              0.314595,
              0.686625,
              0.93762,
              -0.18304,
              0.306462,
              0.71531,
              0.943858,
              -0.181323,
              0.297514,
              0.744272,
              0.948662,
              -0.178683,
              0.287447,
              0.771462,
              0.953299,
              -0.175379,
              0.276166,
              0.798593,
              0.957346,
              -0.170395,
              0.263758,
              0.8256,
              0.962565,
              -0.165042,
              0.251019,
              0.852575,
              0.966075,
              -0.158655,
              0.237011,
              0.878316,
              0.969048,
              -0.151707,
              0.222518,
              0.90329,
              0.972423,
              -0.143271,
              0.207848,
              0.927745,
              0.975833,
              -0.134824,
              0.192463,
              0.950859,
              0.977629,
              -0.125444,
              0.1768,
              0.972947,
              0.978995,
              -0.114949,
              0.161033,
              0.993263,
              0.980533,
              -0.104936,
              0.145523,
              1.01337,
              0.980745,
              -0.0935577,
              0.129799,
              1.03128,
              0.981814,
              -0.0822956,
              0.113486,
              1.04825,
              0.983943,
              -0.0710082,
              0.0972925,
              1.06405,
              0.986141,
              -0.0587931,
              0.0808138,
              1.0785,
              0.988878,
              -0.0472755,
              0.0644915,
              1.09204,
              0.992132,
              -0.0349128,
              0.0478128,
              1.10413,
              0.9953,
              -0.0232407,
              0.031621,
              1.11527,
              0.998117,
              -0.0112713,
              0.0154935,
              1.12551,
              1.00003,
              339743e-9,
              -195763e-9,
              1.13504,
              0.845441,
              -729126e-11,
              0.364305,
              169208e-10,
              0.843588,
              -183164e-9,
              0.363506,
              425067e-9,
              0.843412,
              -73253e-8,
              0.36343,
              0.00169999,
              0.843401,
              -0.00164818,
              0.363426,
              0.00382495,
              0.843399,
              -0.00293008,
              0.363425,
              0.00679993,
              0.843401,
              -0.00457822,
              0.363425,
              0.010625,
              0.843394,
              -0.00659249,
              0.363421,
              0.0153002,
              0.843398,
              -0.00897282,
              0.363421,
              0.0208258,
              0.843415,
              -0.0117191,
              0.363426,
              0.0272024,
              0.843438,
              -0.0148312,
              0.363432,
              0.0344305,
              0.843483,
              -0.018309,
              0.363447,
              0.0425116,
              0.84356,
              -0.0221521,
              0.363472,
              0.0514471,
              0.843646,
              -0.0263597,
              0.363499,
              0.061238,
              0.843743,
              -0.0309315,
              0.363527,
              0.0718873,
              0.84388,
              -0.0358658,
              0.363569,
              0.0833969,
              0.844079,
              -0.0411624,
              0.363631,
              0.0957742,
              0.844279,
              -0.0468128,
              0.363688,
              0.109015,
              0.844549,
              -0.0527923,
              0.363761,
              0.123124,
              0.844858,
              -0.0588204,
              0.363817,
              0.138044,
              0.84522,
              -0.0647573,
              0.36383,
              0.153755,
              0.845669,
              -0.0713181,
              0.363879,
              0.170394,
              0.846155,
              -0.0781697,
              0.363908,
              0.187861,
              0.846789,
              -0.0853913,
              0.363969,
              0.206176,
              0.847502,
              -0.0928086,
              0.363999,
              0.225244,
              0.8484,
              -0.10005,
              0.363997,
              0.244926,
              0.849461,
              -0.107615,
              0.364008,
              0.265188,
              0.850562,
              -0.115814,
              0.364055,
              0.28587,
              0.851962,
              -0.124334,
              0.364179,
              0.306926,
              0.854326,
              -0.131995,
              0.364233,
              0.329605,
              0.856295,
              -0.139338,
              0.363856,
              0.35359,
              0.858857,
              -0.146346,
              0.363347,
              0.37831,
              0.862428,
              -0.152994,
              0.362807,
              0.403722,
              0.866203,
              -0.159463,
              0.361963,
              0.429537,
              0.871629,
              -0.165623,
              0.36112,
              0.456,
              0.877365,
              -0.171649,
              0.359917,
              0.482773,
              0.883744,
              -0.177151,
              0.35848,
              0.509705,
              0.890693,
              -0.182381,
              0.356523,
              0.537215,
              0.897278,
              -0.186076,
              0.3533,
              0.565493,
              0.903958,
              -0.188602,
              0.349095,
              0.594293,
              0.910908,
              -0.190755,
              0.344215,
              0.623165,
              0.918117,
              -0.192063,
              0.338606,
              0.651573,
              0.924644,
              -0.192758,
              0.331544,
              0.679869,
              0.931054,
              -0.192238,
              0.323163,
              0.708668,
              0.937303,
              -0.190035,
              0.313529,
              0.737201,
              0.943387,
              -0.187162,
              0.303152,
              0.764977,
              0.948494,
              -0.183876,
              0.29146,
              0.792683,
              0.952546,
              -0.178901,
              0.277917,
              0.819228,
              0.958077,
              -0.173173,
              0.264753,
              0.846559,
              0.962462,
              -0.16645,
              0.25002,
              0.872962,
              0.966569,
              -0.159452,
              0.234873,
              0.898729,
              0.969108,
              -0.15074,
              0.218752,
              0.923126,
              0.973072,
              -0.141523,
              0.202673,
              0.947278,
              0.975452,
              -0.132075,
              0.186326,
              0.969938,
              0.977784,
              -0.121257,
              0.169396,
              0.991325,
              0.97899,
              -0.110182,
              0.153044,
              1.01123,
              0.979777,
              -0.0989634,
              0.136485,
              1.0299,
              0.980865,
              -0.0865894,
              0.119343,
              1.04727,
              0.982432,
              -0.0746115,
              0.102452,
              1.06341,
              0.984935,
              -0.0621822,
              0.0852423,
              1.07834,
              0.987776,
              -0.0495694,
              0.0678546,
              1.092,
              0.99103,
              -0.0372386,
              0.0506917,
              1.1043,
              0.99474,
              -0.0244353,
              0.0333316,
              1.11576,
              0.997768,
              -0.0121448,
              0.0164348,
              1.12617,
              1.00003,
              31774e-8,
              -169504e-9,
              1.13598,
              0.825551,
              -756799e-11,
              0.378425,
              165099e-10,
              0.82664,
              -190922e-9,
              0.378923,
              416504e-9,
              0.826323,
              -763495e-9,
              0.378779,
              0.0016656,
              0.826359,
              -0.00171789,
              0.378795,
              0.00374768,
              0.82636,
              -0.00305402,
              0.378795,
              0.00666259,
              0.826368,
              -0.00477185,
              0.378798,
              0.0104104,
              0.826364,
              -0.00687131,
              0.378795,
              0.0149912,
              0.826368,
              -0.00935232,
              0.378795,
              0.0204054,
              0.826376,
              -0.0122146,
              0.378797,
              0.0266532,
              0.826399,
              -0.0154581,
              0.378803,
              0.0337355,
              0.82646,
              -0.0190825,
              0.378824,
              0.0416537,
              0.826525,
              -0.0230873,
              0.378846,
              0.0504091,
              0.826614,
              -0.0274719,
              0.378876,
              0.0600032,
              0.82674,
              -0.0322355,
              0.378917,
              0.0704393,
              0.826888,
              -0.0373766,
              0.378964,
              0.0817195,
              0.827078,
              -0.0428936,
              0.379024,
              0.0938492,
              0.827318,
              -0.0487778,
              0.379099,
              0.106828,
              0.82764,
              -0.0549935,
              0.379199,
              0.120659,
              0.827926,
              -0.0611058,
              0.379227,
              0.13526,
              0.828325,
              -0.0675054,
              0.379275,
              0.150713,
              0.828801,
              -0.0743455,
              0.379332,
              0.167034,
              0.8294,
              -0.0815523,
              0.379415,
              0.184209,
              0.830094,
              -0.0890779,
              0.379495,
              0.202203,
              0.8309,
              -0.096736,
              0.379555,
              0.220945,
              0.831943,
              -0.104135,
              0.379577,
              0.240306,
              0.833037,
              -0.112106,
              0.379604,
              0.260317,
              0.834278,
              -0.120554,
              0.379668,
              0.2808,
              0.836192,
              -0.129128,
              0.3799,
              0.301654,
              0.838671,
              -0.137541,
              0.380109,
              0.323502,
              0.840939,
              -0.14523,
              0.379809,
              0.347176,
              0.844575,
              -0.15248,
              0.379593,
              0.371706,
              0.848379,
              -0.159607,
              0.37909,
              0.39688,
              0.853616,
              -0.166267,
              0.378617,
              0.422702,
              0.858921,
              -0.172698,
              0.377746,
              0.448919,
              0.865324,
              -0.178823,
              0.376749,
              0.475661,
              0.872207,
              -0.184542,
              0.375363,
              0.502599,
              0.880018,
              -0.189836,
              0.373657,
              0.529914,
              0.88694,
              -0.194294,
              0.370673,
              0.557683,
              0.894779,
              -0.197022,
              0.36662,
              0.586848,
              0.902242,
              -0.199108,
              0.36138,
              0.615831,
              0.909914,
              -0.200398,
              0.355434,
              0.644478,
              0.917088,
              -0.20094,
              0.348173,
              0.672905,
              0.923888,
              -0.200671,
              0.339482,
              0.701327,
              0.930495,
              -0.198773,
              0.32956,
              0.730101,
              0.937247,
              -0.195394,
              0.318363,
              0.758383,
              0.943108,
              -0.191956,
              0.306323,
              0.786539,
              0.948296,
              -0.187227,
              0.292576,
              0.813637,
              0.953472,
              -0.181165,
              0.278234,
              0.840793,
              0.958485,
              -0.174119,
              0.263054,
              0.867712,
              0.962714,
              -0.166564,
              0.246756,
              0.893635,
              0.966185,
              -0.158181,
              0.229945,
              0.919028,
              0.970146,
              -0.148275,
              0.212633,
              0.943413,
              0.973491,
              -0.138157,
              0.195229,
              0.966627,
              0.975741,
              -0.127574,
              0.178048,
              0.988817,
              0.977238,
              -0.11554,
              0.160312,
              1.00924,
              0.978411,
              -0.10364,
              0.142857,
              1.02845,
              0.979811,
              -0.0913122,
              0.125317,
              1.04648,
              0.98116,
              -0.0782558,
              0.107627,
              1.06284,
              0.983543,
              -0.0655957,
              0.0895862,
              1.07798,
              0.986789,
              -0.0520411,
              0.0713756,
              1.092,
              0.990292,
              -0.0389727,
              0.053228,
              1.10484,
              0.994187,
              -0.025808,
              0.0351945,
              1.11642,
              0.997499,
              -0.0126071,
              0.0173198,
              1.12703,
              0.999999,
              275604e-9,
              -148602e-9,
              1.13674,
              0.81075,
              -78735e-10,
              0.394456,
              161829e-10,
              0.808692,
              -198293e-9,
              0.393453,
              407564e-9,
              0.80846,
              -792877e-9,
              0.39334,
              0.00162965,
              0.808595,
              -0.00178416,
              0.393407,
              0.00366711,
              0.808597,
              -0.00317182,
              0.393408,
              0.00651934,
              0.808598,
              -0.00495589,
              0.393408,
              0.0101866,
              0.808591,
              -0.00713627,
              0.393403,
              0.0146689,
              0.808592,
              -0.00971285,
              0.393402,
              0.0199667,
              0.80861,
              -0.0126855,
              0.393407,
              0.0260803,
              0.808633,
              -0.0160538,
              0.393413,
              0.0330107,
              0.80868,
              -0.0198175,
              0.393429,
              0.0407589,
              0.808748,
              -0.0239758,
              0.393453,
              0.0493264,
              0.808854,
              -0.0285286,
              0.39349,
              0.0587161,
              0.808992,
              -0.0334748,
              0.39354,
              0.0689304,
              0.809141,
              -0.0388116,
              0.393588,
              0.0799707,
              0.809352,
              -0.0445375,
              0.39366,
              0.0918432,
              0.809608,
              -0.0506427,
              0.393742,
              0.104549,
              0.809915,
              -0.0570708,
              0.393834,
              0.118085,
              0.810253,
              -0.0633526,
              0.393885,
              0.132377,
              0.810687,
              -0.0700966,
              0.393953,
              0.147537,
              0.811233,
              -0.0772274,
              0.394047,
              0.163543,
              0.811865,
              -0.0847629,
              0.394148,
              0.180394,
              0.812648,
              -0.0925663,
              0.394265,
              0.198051,
              0.813583,
              -0.100416,
              0.394363,
              0.216443,
              0.814683,
              -0.108119,
              0.394402,
              0.235502,
              0.815948,
              -0.11644,
              0.394489,
              0.255242,
              0.817278,
              -0.125036,
              0.394542,
              0.275441,
              0.819605,
              -0.133655,
              0.39486,
              0.296094,
              0.822256,
              -0.142682,
              0.395248,
              0.317309,
              0.825349,
              -0.150756,
              0.395241,
              0.340516,
              0.829605,
              -0.158392,
              0.395285,
              0.364819,
              0.83391,
              -0.165801,
              0.394922,
              0.389736,
              0.839808,
              -0.172677,
              0.394691,
              0.415409,
              0.845708,
              -0.179448,
              0.394006,
              0.441546,
              0.853025,
              -0.185746,
              0.393279,
              0.46832,
              0.859666,
              -0.191684,
              0.391655,
              0.495302,
              0.86789,
              -0.197146,
              0.390068,
              0.52262,
              0.875845,
              -0.201904,
              0.38727,
              0.550336,
              0.882634,
              -0.205023,
              0.382688,
              0.578825,
              0.891076,
              -0.207098,
              0.377543,
              0.608103,
              0.900589,
              -0.208474,
              0.371752,
              0.63723,
              0.90791,
              -0.209068,
              0.364016,
              0.665769,
              0.915971,
              -0.208655,
              0.355593,
              0.694428,
              0.923455,
              -0.20729,
              0.345439,
              0.723224,
              0.931514,
              -0.203821,
              0.334099,
              0.751925,
              0.937885,
              -0.19986,
              0.321069,
              0.780249,
              0.943136,
              -0.194993,
              0.306571,
              0.8077,
              0.948818,
              -0.189132,
              0.291556,
              0.83497,
              0.954433,
              -0.181617,
              0.275745,
              0.86188,
              0.959078,
              -0.173595,
              0.258695,
              0.888562,
              0.962705,
              -0.164855,
              0.240825,
              0.914008,
              0.966753,
              -0.155129,
              0.22268,
              0.939145,
              0.970704,
              -0.144241,
              0.204542,
              0.963393,
              0.973367,
              -0.133188,
              0.185927,
              0.985983,
              0.975984,
              -0.121146,
              0.167743,
              1.00704,
              0.976994,
              -0.108366,
              0.149218,
              1.02715,
              0.978485,
              -0.0956746,
              0.13131,
              1.0455,
              0.980074,
              -0.0820733,
              0.112513,
              1.06221,
              0.98225,
              -0.0684061,
              0.0938323,
              1.07782,
              0.98553,
              -0.0549503,
              0.0749508,
              1.09199,
              0.989529,
              -0.0407857,
              0.055848,
              1.10508,
              0.993536,
              -0.0271978,
              0.0368581,
              1.11684,
              0.997247,
              -0.0132716,
              0.0181845,
              1.12789,
              1,
              431817e-9,
              -198809e-9,
              1.13792,
              0.785886,
              -812608e-11,
              0.405036,
              157669e-10,
              0.790388,
              -205278e-9,
              0.407355,
              398297e-9,
              0.790145,
              -820824e-9,
              0.407231,
              0.00159263,
              0.790135,
              -0.00184681,
              0.407226,
              0.00358336,
              0.790119,
              -0.00328316,
              0.407218,
              0.00637039,
              0.790126,
              -0.00512988,
              0.40722,
              0.0099539,
              0.79013,
              -0.00738684,
              0.407221,
              0.0143339,
              0.790135,
              -0.0100538,
              0.407221,
              0.0195107,
              0.790134,
              -0.0131306,
              0.407217,
              0.0254848,
              0.79016,
              -0.0166169,
              0.407224,
              0.0322572,
              0.790197,
              -0.020512,
              0.407236,
              0.0398284,
              0.790273,
              -0.0248157,
              0.407263,
              0.0482014,
              0.790381,
              -0.029527,
              0.407304,
              0.0573777,
              0.790521,
              -0.0346446,
              0.407355,
              0.0673602,
              0.790704,
              -0.0401665,
              0.40742,
              0.0781522,
              0.790925,
              -0.0460896,
              0.407499,
              0.0897582,
              0.791195,
              -0.0524017,
              0.407589,
              0.10218,
              0.791522,
              -0.0590121,
              0.407691,
              0.11541,
              0.791878,
              -0.0654876,
              0.407748,
              0.12939,
              0.792361,
              -0.0725207,
              0.407849,
              0.144237,
              0.792942,
              -0.0799844,
              0.407963,
              0.159924,
              0.79362,
              -0.0877896,
              0.408087,
              0.176425,
              0.794529,
              -0.0958451,
              0.408259,
              0.193733,
              0.795521,
              -0.103827,
              0.408362,
              0.211756,
              0.796778,
              -0.111937,
              0.408482,
              0.230524,
              0.798027,
              -0.120521,
              0.408547,
              0.249967,
              0.799813,
              -0.129242,
              0.408721,
              0.269926,
              0.802387,
              -0.138048,
              0.409148,
              0.290338,
              0.805279,
              -0.147301,
              0.409641,
              0.311193,
              0.809251,
              -0.155895,
              0.410154,
              0.333611,
              0.813733,
              -0.163942,
              0.410297,
              0.357615,
              0.819081,
              -0.171666,
              0.410373,
              0.382339,
              0.825427,
              -0.178905,
              0.410348,
              0.407828,
              0.83172,
              -0.185812,
              0.409486,
              0.434034,
              0.83877,
              -0.192318,
              0.408776,
              0.460493,
              0.845817,
              -0.198249,
              0.407176,
              0.487346,
              0.854664,
              -0.204034,
              0.405719,
              0.514832,
              0.863495,
              -0.208908,
              0.403282,
              0.542401,
              0.871883,
              -0.212765,
              0.399293,
              0.570683,
              0.88065,
              -0.214911,
              0.393803,
              0.599947,
              0.89004,
              -0.216214,
              0.387536,
              0.62932,
              0.898476,
              -0.216745,
              0.379846,
              0.658319,
              0.906738,
              -0.216387,
              0.370625,
              0.687138,
              0.914844,
              -0.215053,
              0.360139,
              0.71601,
              0.923877,
              -0.212007,
              0.348849,
              0.745124,
              0.931925,
              -0.207481,
              0.335639,
              0.773366,
              0.938054,
              -0.202418,
              0.320798,
              0.801636,
              0.943895,
              -0.196507,
              0.304772,
              0.829055,
              0.949468,
              -0.189009,
              0.288033,
              0.856097,
              0.955152,
              -0.180539,
              0.270532,
              0.88301,
              0.959403,
              -0.171437,
              0.251639,
              0.909296,
              0.963309,
              -0.161661,
              0.232563,
              0.934868,
              0.967399,
              -0.150425,
              0.213231,
              0.959662,
              0.972009,
              -0.138659,
              0.194247,
              0.98302,
              0.97433,
              -0.126595,
              0.174718,
              1.00517,
              0.975823,
              -0.113205,
              0.155518,
              1.02566,
              0.976371,
              -0.0996096,
              0.136709,
              1.04418,
              0.978705,
              -0.0860754,
              0.117571,
              1.06146,
              0.981477,
              -0.0714438,
              0.0980046,
              1.07777,
              0.984263,
              -0.0572304,
              0.0782181,
              1.09214,
              0.988423,
              -0.0428875,
              0.0584052,
              1.10553,
              0.993,
              -0.0282442,
              0.038522,
              1.11758,
              0.99704,
              -0.0140183,
              0.0190148,
              1.12864,
              0.999913,
              369494e-9,
              -145203e-9,
              1.13901,
              0.777662,
              -84153e-10,
              0.423844,
              154403e-10,
              0.770458,
              -211714e-9,
              0.419915,
              38845e-8,
              0.770716,
              -846888e-9,
              0.420055,
              0.00155386,
              0.770982,
              -0.00190567,
              0.420202,
              0.00349653,
              0.770981,
              -0.00338782,
              0.420201,
              0.00621606,
              0.77098,
              -0.00529338,
              0.4202,
              0.00971274,
              0.770983,
              -0.00762223,
              0.4202,
              0.0139867,
              0.770985,
              -0.0103741,
              0.420198,
              0.0190381,
              0.770996,
              -0.0135489,
              0.4202,
              0.0248677,
              0.771029,
              -0.0171461,
              0.420212,
              0.0314764,
              0.771052,
              -0.0211647,
              0.420215,
              0.0388648,
              0.771131,
              -0.0256048,
              0.420245,
              0.047036,
              0.771235,
              -0.0304647,
              0.420284,
              0.0559911,
              0.771383,
              -0.0357436,
              0.420341,
              0.0657346,
              0.771591,
              -0.0414392,
              0.420423,
              0.0762694,
              0.771819,
              -0.0475462,
              0.420506,
              0.0875984,
              0.772123,
              -0.0540506,
              0.420617,
              0.099727,
              0.772464,
              -0.060797,
              0.42072,
              0.112637,
              0.772855,
              -0.0675393,
              0.420799,
              0.126313,
              0.773317,
              -0.0748323,
              0.420893,
              0.140824,
              0.773981,
              -0.0825681,
              0.421058,
              0.15617,
              0.774746,
              -0.0906307,
              0.421226,
              0.172322,
              0.77566,
              -0.0988982,
              0.421397,
              0.189253,
              0.776837,
              -0.106994,
              0.421569,
              0.206912,
              0.778097,
              -0.115528,
              0.421704,
              0.225359,
              0.779588,
              -0.124317,
              0.421849,
              0.24447,
              0.781574,
              -0.133139,
              0.422097,
              0.264156,
              0.784451,
              -0.142179,
              0.422615,
              0.284318,
              0.787682,
              -0.15165,
              0.423269,
              0.304902,
              0.792433,
              -0.160771,
              0.424396,
              0.3265,
              0.797359,
              -0.169166,
              0.424772,
              0.35014,
              0.803986,
              -0.177149,
              0.425475,
              0.374768,
              0.809504,
              -0.184745,
              0.424996,
              0.399928,
              0.815885,
              -0.19173,
              0.424247,
              0.425796,
              0.823513,
              -0.198525,
              0.423515,
              0.452287,
              0.832549,
              -0.204709,
              0.422787,
              0.479321,
              0.841653,
              -0.210447,
              0.421187,
              0.506718,
              0.850401,
              -0.215501,
              0.418519,
              0.53432,
              0.859854,
              -0.219752,
              0.414715,
              0.56242,
              0.869364,
              -0.222305,
              0.409462,
              0.591558,
              0.878837,
              -0.223744,
              0.402926,
              0.621074,
              0.888636,
              -0.224065,
              0.395043,
              0.650538,
              0.898132,
              -0.223742,
              0.38564,
              0.679538,
              0.907181,
              -0.222308,
              0.375378,
              0.708674,
              0.915621,
              -0.219837,
              0.363212,
              0.737714,
              0.9239,
              -0.215233,
              0.349313,
              0.767014,
              0.931644,
              -0.209592,
              0.334162,
              0.795133,
              0.938887,
              -0.203644,
              0.317943,
              0.823228,
              0.945282,
              -0.196349,
              0.300581,
              0.850822,
              0.950758,
              -0.18742,
              0.282195,
              0.877594,
              0.956146,
              -0.177879,
              0.262481,
              0.904564,
              0.960355,
              -0.167643,
              0.242487,
              0.930741,
              0.965256,
              -0.156671,
              0.222668,
              0.955868,
              0.968029,
              -0.144123,
              0.201907,
              0.979869,
              0.97251,
              -0.131305,
              0.18202,
              1.00291,
              0.974925,
              -0.118335,
              0.161909,
              1.02392,
              0.975402,
              -0.103714,
              0.142129,
              1.0433,
              0.976987,
              -0.089415,
              0.122447,
              1.06089,
              0.979677,
              -0.0748858,
              0.102248,
              1.07713,
              0.983184,
              -0.0596086,
              0.0814851,
              1.09218,
              0.987466,
              -0.0447671,
              0.0609484,
              1.10585,
              0.992348,
              -0.0295217,
              0.0401835,
              1.11829,
              0.996674,
              -0.0143917,
              0.0198163,
              1.12966,
              1.00003,
              321364e-9,
              -149983e-9,
              1.1402,
              0.757901,
              -869074e-11,
              0.436176,
              151011e-10,
              0.751195,
              -217848e-9,
              0.432317,
              378533e-9,
              0.751178,
              -871373e-9,
              0.432307,
              0.0015141,
              0.751195,
              -0.00196061,
              0.432317,
              0.0034068,
              0.751198,
              -0.00348552,
              0.432318,
              0.00605659,
              0.751195,
              -0.00544599,
              0.432315,
              0.00946353,
              0.751207,
              -0.00784203,
              0.43232,
              0.013628,
              0.751213,
              -0.0106732,
              0.43232,
              0.0185499,
              0.751221,
              -0.0139393,
              0.432319,
              0.0242302,
              0.751244,
              -0.0176398,
              0.432325,
              0.0306694,
              0.7513,
              -0.0217743,
              0.432348,
              0.0378698,
              0.751358,
              -0.0263412,
              0.432367,
              0.0458321,
              0.751458,
              -0.0313396,
              0.432404,
              0.0545587,
              0.751608,
              -0.0367682,
              0.432464,
              0.0640543,
              0.7518,
              -0.0426246,
              0.43254,
              0.0743222,
              0.752065,
              -0.0489031,
              0.432645,
              0.0853668,
              0.752376,
              -0.0555828,
              0.432762,
              0.0971911,
              0.752715,
              -0.0623861,
              0.432859,
              0.109768,
              0.753137,
              -0.069415,
              0.432958,
              0.123126,
              0.753676,
              -0.0770039,
              0.433099,
              0.137308,
              0.754345,
              -0.084971,
              0.433272,
              0.15229,
              0.755235,
              -0.0932681,
              0.433504,
              0.168075,
              0.756186,
              -0.10171,
              0.433693,
              0.184625,
              0.757363,
              -0.110019,
              0.433857,
              0.201897,
              0.75884,
              -0.11887,
              0.434102,
              0.220014,
              0.760467,
              -0.127881,
              0.434306,
              0.238778,
              0.762969,
              -0.136766,
              0.434751,
              0.258172,
              0.765823,
              -0.14612,
              0.43529,
              0.278062,
              0.769676,
              -0.15566,
              0.436236,
              0.298437,
              0.774909,
              -0.165177,
              0.437754,
              0.319532,
              0.77994,
              -0.17402,
              0.438343,
              0.342505,
              0.785757,
              -0.182201,
              0.438609,
              0.366693,
              0.792487,
              -0.190104,
              0.438762,
              0.391668,
              0.80038,
              -0.197438,
              0.438795,
              0.417494,
              0.808494,
              -0.204365,
              0.438226,
              0.443933,
              0.817695,
              -0.210714,
              0.437283,
              0.470929,
              0.828111,
              -0.216651,
              0.436087,
              0.498569,
              0.837901,
              -0.221804,
              0.433717,
              0.526165,
              0.847813,
              -0.226318,
              0.430133,
              0.554155,
              0.858314,
              -0.229297,
              0.425213,
              0.582822,
              0.868891,
              -0.230999,
              0.418576,
              0.612847,
              0.878941,
              -0.231155,
              0.410405,
              0.642445,
              0.888809,
              -0.230935,
              0.400544,
              0.672024,
              0.898089,
              -0.229343,
              0.389613,
              0.701366,
              0.908081,
              -0.226886,
              0.377197,
              0.730763,
              0.916819,
              -0.222676,
              0.363397,
              0.759642,
              0.924968,
              -0.216835,
              0.347437,
              0.788775,
              0.932906,
              -0.210245,
              0.32995,
              0.817135,
              0.940025,
              -0.202992,
              0.312262,
              0.844912,
              0.946101,
              -0.19436,
              0.293313,
              0.872164,
              0.952835,
              -0.184125,
              0.273638,
              0.899443,
              0.957347,
              -0.173657,
              0.252385,
              0.926389,
              0.961434,
              -0.162204,
              0.231038,
              0.951947,
              0.965522,
              -0.14979,
              0.209834,
              0.976751,
              0.969412,
              -0.136307,
              0.188821,
              1.00022,
              0.973902,
              -0.122527,
              0.168013,
              1.02229,
              0.974045,
              -0.108213,
              0.147634,
              1.04199,
              0.975775,
              -0.0927397,
              0.12705,
              1.06019,
              0.978383,
              -0.0778212,
              0.106309,
              1.07711,
              0.98211,
              -0.0621216,
              0.0849279,
              1.09245,
              0.986517,
              -0.0463847,
              0.0633519,
              1.10651,
              0.991696,
              -0.0309353,
              0.0419698,
              1.11903,
              0.996349,
              -0.0150914,
              0.0206272,
              1.13073,
              1.00003,
              442449e-9,
              -231396e-9,
              1.14146,
              0.727498,
              -885074e-11,
              0.441528,
              145832e-10,
              0.730897,
              -223525e-9,
              0.443589,
              368298e-9,
              0.730796,
              -893996e-9,
              0.443528,
              0.00147303,
              0.730805,
              -0.00201149,
              0.443533,
              0.00331433,
              0.730814,
              -0.00357596,
              0.443538,
              0.00589222,
              0.730815,
              -0.00558734,
              0.443538,
              0.00920678,
              0.730822,
              -0.00804544,
              0.44354,
              0.0132582,
              0.730836,
              -0.0109501,
              0.443545,
              0.0180468,
              0.730848,
              -0.0143008,
              0.443546,
              0.0235732,
              0.730871,
              -0.0180969,
              0.443552,
              0.0298382,
              0.730915,
              -0.022338,
              0.443567,
              0.0368438,
              0.730982,
              -0.0270225,
              0.443591,
              0.044591,
              0.731076,
              -0.0321491,
              0.443627,
              0.0530831,
              0.731245,
              -0.0377166,
              0.443699,
              0.0623243,
              0.73144,
              -0.0437216,
              0.443777,
              0.0723181,
              0.7317,
              -0.0501576,
              0.443881,
              0.0830691,
              0.732034,
              -0.0569942,
              0.444014,
              0.0945809,
              0.732388,
              -0.0638756,
              0.444113,
              0.106825,
              0.732853,
              -0.071203,
              0.444247,
              0.119859,
              0.733473,
              -0.0790076,
              0.444442,
              0.13369,
              0.734195,
              -0.0871937,
              0.444645,
              0.148304,
              0.735069,
              -0.095696,
              0.444877,
              0.163702,
              0.736169,
              -0.10426,
              0.445133,
              0.179861,
              0.73747,
              -0.112853,
              0.44537,
              0.196778,
              0.738991,
              -0.12199,
              0.445651,
              0.214496,
              0.740865,
              -0.131153,
              0.445958,
              0.232913,
              0.743637,
              -0.140245,
              0.446548,
              0.251977,
              0.746797,
              -0.149722,
              0.447246,
              0.271551,
              0.751517,
              -0.159341,
              0.448656,
              0.291774,
              0.756156,
              -0.169106,
              0.449866,
              0.312455,
              0.761519,
              -0.178436,
              0.450919,
              0.334552,
              0.768295,
              -0.186904,
              0.451776,
              0.358491,
              0.776613,
              -0.195117,
              0.452832,
              0.383446,
              0.783966,
              -0.202695,
              0.45249,
              0.408945,
              0.793542,
              -0.20985,
              0.452587,
              0.435364,
              0.803192,
              -0.216403,
              0.451852,
              0.462336,
              0.813892,
              -0.22251,
              0.450708,
              0.48987,
              0.824968,
              -0.227676,
              0.4486,
              0.517697,
              0.835859,
              -0.232443,
              0.445156,
              0.545975,
              0.846825,
              -0.235775,
              0.440351,
              0.574483,
              0.858085,
              -0.237897,
              0.433641,
              0.604246,
              0.868825,
              -0.238074,
              0.425354,
              0.634101,
              0.879638,
              -0.237661,
              0.415383,
              0.664201,
              0.889966,
              -0.236186,
              0.404136,
              0.693918,
              0.899479,
              -0.233599,
              0.390917,
              0.723481,
              0.908769,
              -0.229737,
              0.376352,
              0.75258,
              0.917966,
              -0.223836,
              0.360372,
              0.781764,
              0.926304,
              -0.217067,
              0.342551,
              0.811139,
              0.934626,
              -0.209309,
              0.324238,
              0.839585,
              0.941841,
              -0.20071,
              0.304484,
              0.867044,
              0.94789,
              -0.190602,
              0.283607,
              0.894579,
              0.954196,
              -0.179253,
              0.262205,
              0.921743,
              0.958383,
              -0.167646,
              0.239847,
              0.948026,
              0.963119,
              -0.155073,
              0.218078,
              0.973296,
              0.966941,
              -0.141426,
              0.195899,
              0.998135,
              0.970836,
              -0.126849,
              0.174121,
              1.02021,
              0.973301,
              -0.112296,
              0.153052,
              1.04085,
              0.97448,
              -0.0964965,
              0.131733,
              1.05946,
              0.977045,
              -0.080489,
              0.10997,
              1.07693,
              0.980751,
              -0.064844,
              0.0881657,
              1.09254,
              0.985475,
              -0.0481938,
              0.0657987,
              1.10697,
              0.991089,
              -0.0319185,
              0.0435215,
              1.12004,
              0.996122,
              -0.0158088,
              0.0214779,
              1.13173,
              1.00001,
              372455e-9,
              -200295e-9,
              1.14291,
              0.708622,
              -907597e-11,
              0.45304,
              141962e-10,
              0.711162,
              -228911e-9,
              0.454662,
              358052e-9,
              0.709812,
              -914446e-9,
              0.453797,
              0.00143034,
              0.709865,
              -0.00205819,
              0.453834,
              0.00321935,
              0.709864,
              -0.00365894,
              0.453833,
              0.00572331,
              0.709855,
              -0.00571692,
              0.453826,
              0.00894278,
              0.709862,
              -0.00823201,
              0.453828,
              0.012878,
              0.709875,
              -0.011204,
              0.453832,
              0.0175295,
              0.709896,
              -0.0146323,
              0.453839,
              0.0228978,
              0.709925,
              -0.0185163,
              0.453847,
              0.0289839,
              0.709974,
              -0.0228551,
              0.453866,
              0.0357894,
              0.710045,
              -0.0276473,
              0.453892,
              0.0433161,
              0.710133,
              -0.032891,
              0.453924,
              0.0515665,
              0.710292,
              -0.0385851,
              0.453992,
              0.0605458,
              0.710485,
              -0.0447254,
              0.45407,
              0.0702574,
              0.710769,
              -0.0513051,
              0.454192,
              0.0807077,
              0.711106,
              -0.0582733,
              0.454329,
              0.091896,
              0.711516,
              -0.0652866,
              0.45446,
              0.103814,
              0.712071,
              -0.0728426,
              0.454653,
              0.116508,
              0.712676,
              -0.0808307,
              0.45484,
              0.129968,
              0.713476,
              -0.0892216,
              0.455096,
              0.144206,
              0.714377,
              -0.0979047,
              0.455346,
              0.159212,
              0.715579,
              -0.106531,
              0.455647,
              0.174973,
              0.716977,
              -0.115492,
              0.455961,
              0.191504,
              0.71862,
              -0.124821,
              0.456315,
              0.208835,
              0.72084,
              -0.134079,
              0.4568,
              0.226869,
              0.723786,
              -0.143427,
              0.457521,
              0.245582,
              0.727464,
              -0.153061,
              0.458475,
              0.264957,
              0.732771,
              -0.162768,
              0.460239,
              0.284948,
              0.736515,
              -0.172627,
              0.460899,
              0.30522,
              0.743519,
              -0.182487,
              0.463225,
              0.326717,
              0.750041,
              -0.191295,
              0.464027,
              0.350113,
              0.758589,
              -0.199746,
              0.465227,
              0.374782,
              0.767703,
              -0.207584,
              0.465877,
              0.400226,
              0.777484,
              -0.214973,
              0.465996,
              0.426442,
              0.788792,
              -0.221796,
              0.466019,
              0.453688,
              0.800194,
              -0.228038,
              0.465083,
              0.481246,
              0.811234,
              -0.233346,
              0.462506,
              0.509086,
              0.822859,
              -0.238073,
              0.459257,
              0.537338,
              0.835082,
              -0.241764,
              0.454863,
              0.566108,
              0.846332,
              -0.244241,
              0.448163,
              0.595126,
              0.858355,
              -0.244736,
              0.439709,
              0.625574,
              0.87034,
              -0.244278,
              0.429837,
              0.65617,
              0.881027,
              -0.24255,
              0.418002,
              0.686029,
              0.891007,
              -0.239912,
              0.404325,
              0.716039,
              0.900874,
              -0.236133,
              0.389222,
              0.745518,
              0.911072,
              -0.230672,
              0.373269,
              0.775026,
              0.920359,
              -0.22356,
              0.355083,
              0.804521,
              0.928604,
              -0.215591,
              0.335533,
              0.834045,
              0.937175,
              -0.206503,
              0.315278,
              0.861612,
              0.942825,
              -0.196684,
              0.293653,
              0.889131,
              0.949805,
              -0.185116,
              0.271503,
              0.916853,
              0.955535,
              -0.172703,
              0.248821,
              0.943541,
              0.959843,
              -0.159978,
              0.225591,
              0.970132,
              0.964393,
              -0.146375,
              0.202719,
              0.994709,
              0.968008,
              -0.131269,
              0.179928,
              1.0186,
              0.971013,
              -0.11569,
              0.158007,
              1.03928,
              0.973334,
              -0.1003,
              0.13624,
              1.05887,
              0.975775,
              -0.0833352,
              0.1138,
              1.07652,
              0.979579,
              -0.0668981,
              0.0913141,
              1.09297,
              0.984323,
              -0.0500902,
              0.0683051,
              1.10734,
              0.990351,
              -0.0332377,
              0.0451771,
              1.12084,
              0.995823,
              -0.0161491,
              0.0221705,
              1.13296,
              1.0001,
              234083e-9,
              -108712e-9,
              1.14441,
              0.683895,
              -924677e-11,
              0.46015,
              137429e-10,
              0.68833,
              -233383e-9,
              0.463134,
              346865e-9,
              0.688368,
              -933547e-9,
              0.463159,
              0.00138748,
              0.688367,
              -0.00210049,
              0.463159,
              0.00312187,
              0.688369,
              -0.00373415,
              0.463159,
              0.00555004,
              0.688377,
              -0.00583449,
              0.463163,
              0.00867216,
              0.688386,
              -0.00840128,
              0.463166,
              0.0124884,
              0.688398,
              -0.0114343,
              0.463169,
              0.0169993,
              0.688418,
              -0.0149329,
              0.463175,
              0.0222054,
              0.688453,
              -0.0188964,
              0.463188,
              0.028108,
              0.688515,
              -0.0233239,
              0.463214,
              0.0347085,
              0.68857,
              -0.0282136,
              0.463231,
              0.0420091,
              0.688679,
              -0.033564,
              0.463276,
              0.0500132,
              0.688854,
              -0.0393733,
              0.463356,
              0.0587255,
              0.689038,
              -0.0456354,
              0.46343,
              0.0681476,
              0.689321,
              -0.0523433,
              0.463553,
              0.0782897,
              0.689662,
              -0.059412,
              0.463693,
              0.0891501,
              0.690188,
              -0.0665736,
              0.4639,
              0.100735,
              0.690755,
              -0.0743106,
              0.464107,
              0.113074,
              0.691405,
              -0.0824722,
              0.464329,
              0.126161,
              0.692198,
              -0.0910484,
              0.464585,
              0.140007,
              0.693196,
              -0.0998778,
              0.464893,
              0.154612,
              0.69454,
              -0.108651,
              0.465285,
              0.169984,
              0.695921,
              -0.117855,
              0.465596,
              0.186106,
              0.697749,
              -0.12734,
              0.466056,
              0.203034,
              0.700375,
              -0.136714,
              0.466771,
              0.220703,
              0.703395,
              -0.146386,
              0.467579,
              0.239062,
              0.707904,
              -0.156096,
              0.469067,
              0.258188,
              0.711673,
              -0.165904,
              0.469851,
              0.277759,
              0.717489,
              -0.175812,
              0.471815,
              0.297935,
              0.724051,
              -0.185931,
              0.47389,
              0.318916,
              0.731965,
              -0.195238,
              0.47587,
              0.341591,
              0.741151,
              -0.204021,
              0.477523,
              0.366062,
              0.751416,
              -0.212113,
              0.478881,
              0.391396,
              0.761848,
              -0.21979,
              0.479226,
              0.417599,
              0.771886,
              -0.2267,
              0.478495,
              0.444401,
              0.783998,
              -0.232991,
              0.477622,
              0.472084,
              0.796523,
              -0.238645,
              0.475833,
              0.500193,
              0.808851,
              -0.243396,
              0.472568,
              0.52865,
              0.821191,
              -0.247226,
              0.467857,
              0.557362,
              0.834261,
              -0.250102,
              0.461871,
              0.586768,
              0.846762,
              -0.251056,
              0.453543,
              0.617085,
              0.859867,
              -0.250604,
              0.443494,
              0.647659,
              0.871948,
              -0.248783,
              0.431711,
              0.678119,
              0.882967,
              -0.245855,
              0.417911,
              0.708399,
              0.892826,
              -0.242168,
              0.401993,
              0.738256,
              0.90332,
              -0.237062,
              0.385371,
              0.767999,
              0.913633,
              -0.22997,
              0.366837,
              0.798191,
              0.922774,
              -0.221687,
              0.346372,
              0.827756,
              0.931371,
              -0.212345,
              0.325682,
              0.856425,
              0.938929,
              -0.20206,
              0.303665,
              0.884299,
              0.944821,
              -0.190981,
              0.280786,
              0.912023,
              0.951792,
              -0.178065,
              0.2573,
              0.939669,
              0.957712,
              -0.164634,
              0.233448,
              0.96655,
              0.961912,
              -0.150863,
              0.209504,
              0.992366,
              0.966382,
              -0.13577,
              0.18597,
              1.01633,
              0.969588,
              -0.119593,
              0.162905,
              1.03843,
              0.971777,
              -0.103203,
              0.14053,
              1.05841,
              0.97433,
              -0.0865888,
              0.117909,
              1.07632,
              0.978686,
              -0.0690829,
              0.0944101,
              1.09326,
              0.983281,
              -0.0516568,
              0.0705671,
              1.10796,
              0.989562,
              -0.034558,
              0.0468592,
              1.12182,
              0.995465,
              -0.0167808,
              0.0229846,
              1.1342,
              0.999991,
              373016e-9,
              -235606e-9,
              1.1459,
              0.662251,
              -939016e-11,
              0.468575,
              132714e-10,
              0.666634,
              -237624e-9,
              0.471675,
              335842e-9,
              0.666411,
              -950385e-9,
              0.471516,
              0.00134321,
              0.666399,
              -0.00213833,
              0.471509,
              0.00302221,
              0.666386,
              -0.0038014,
              0.471499,
              0.00537283,
              0.666405,
              -0.00593958,
              0.471511,
              0.00839533,
              0.666406,
              -0.00855253,
              0.471508,
              0.0120898,
              0.666428,
              -0.0116401,
              0.471519,
              0.0164569,
              0.666444,
              -0.0152015,
              0.471522,
              0.0214971,
              0.66649,
              -0.0192362,
              0.471543,
              0.027212,
              0.666537,
              -0.0237428,
              0.471558,
              0.033603,
              0.666617,
              -0.0287198,
              0.471591,
              0.0406728,
              0.666718,
              -0.0341647,
              0.471631,
              0.0484238,
              0.666889,
              -0.0400759,
              0.47171,
              0.0568621,
              0.667104,
              -0.0464479,
              0.471805,
              0.0659915,
              0.667374,
              -0.0532677,
              0.471923,
              0.0758178,
              0.667772,
              -0.0603805,
              0.472098,
              0.0863425,
              0.668371,
              -0.0677392,
              0.472363,
              0.0975917,
              0.668971,
              -0.0756028,
              0.472596,
              0.109567,
              0.669696,
              -0.0839293,
              0.472869,
              0.122272,
              0.670481,
              -0.0926683,
              0.473126,
              0.135718,
              0.6715,
              -0.1016,
              0.473442,
              0.149914,
              0.672911,
              -0.110566,
              0.47389,
              0.164882,
              0.674512,
              -0.119984,
              0.474354,
              0.180602,
              0.67651,
              -0.129574,
              0.474922,
              0.19711,
              0.679292,
              -0.139106,
              0.475764,
              0.214371,
              0.682798,
              -0.148993,
              0.476886,
              0.232405,
              0.686955,
              -0.158737,
              0.478179,
              0.251153,
              0.691406,
              -0.168754,
              0.479432,
              0.270436,
              0.697438,
              -0.178703,
              0.481481,
              0.290374,
              0.704761,
              -0.188955,
              0.484143,
              0.311044,
              0.713599,
              -0.198814,
              0.487007,
              0.333003,
              0.723194,
              -0.207869,
              0.488962,
              0.357144,
              0.732601,
              -0.216189,
              0.489815,
              0.382169,
              0.744193,
              -0.22398,
              0.490888,
              0.408227,
              0.754907,
              -0.231156,
              0.490355,
              0.434928,
              0.767403,
              -0.23747,
              0.489548,
              0.462599,
              0.78107,
              -0.243503,
              0.488274,
              0.490908,
              0.793893,
              -0.248114,
              0.484843,
              0.519421,
              0.807296,
              -0.25222,
              0.4803,
              0.548561,
              0.820529,
              -0.255265,
              0.474097,
              0.577772,
              0.833716,
              -0.256741,
              0.466041,
              0.607782,
              0.848403,
              -0.25637,
              0.456547,
              0.638807,
              0.860755,
              -0.254804,
              0.443946,
              0.670058,
              0.874012,
              -0.251834,
              0.430852,
              0.700749,
              0.885619,
              -0.247867,
              0.414903,
              0.731446,
              0.896069,
              -0.242634,
              0.397276,
              0.761191,
              0.906266,
              -0.236093,
              0.378535,
              0.791053,
              0.916759,
              -0.227543,
              0.358038,
              0.821298,
              0.92523,
              -0.21783,
              0.335705,
              0.850747,
              0.93436,
              -0.207534,
              0.313797,
              0.879258,
              0.941631,
              -0.195983,
              0.289671,
              0.907734,
              0.947564,
              -0.183567,
              0.265319,
              0.935206,
              0.953681,
              -0.169345,
              0.240815,
              0.962739,
              0.960008,
              -0.154909,
              0.216119,
              0.989227,
              0.964145,
              -0.140161,
              0.192096,
              1.01465,
              0.968171,
              -0.123411,
              0.167855,
              1.03737,
              0.969859,
              -0.106525,
              0.144817,
              1.05767,
              0.972666,
              -0.0891023,
              0.12149,
              1.0761,
              0.977055,
              -0.0718094,
              0.0975306,
              1.09336,
              0.982527,
              -0.0534213,
              0.0730217,
              1.10878,
              0.989001,
              -0.0355579,
              0.0483366,
              1.12285,
              0.99512,
              -0.0176383,
              0.023938,
              1.13548,
              1.00007,
              368831e-9,
              -211581e-9,
              1.14744,
              0.651047,
              -960845e-11,
              0.484101,
              12922e-9,
              0.644145,
              -241347e-9,
              0.478968,
              324578e-9,
              0.64396,
              -965142e-9,
              0.478831,
              0.00129798,
              0.64396,
              -0.00217154,
              0.47883,
              0.00292046,
              0.643968,
              -0.00386049,
              0.478835,
              0.00519202,
              0.643974,
              -0.00603186,
              0.478838,
              0.0081128,
              0.643977,
              -0.0086854,
              0.478836,
              0.011683,
              0.643982,
              -0.0118207,
              0.478834,
              0.0159031,
              0.644024,
              -0.0154374,
              0.478856,
              0.0207743,
              0.644059,
              -0.0195343,
              0.478868,
              0.0262975,
              0.644122,
              -0.0241103,
              0.478896,
              0.0324747,
              0.644207,
              -0.0291638,
              0.478933,
              0.039309,
              0.64432,
              -0.0346919,
              0.478981,
              0.0468029,
              0.644481,
              -0.0406919,
              0.479053,
              0.0549614,
              0.644722,
              -0.047159,
              0.479169,
              0.0637909,
              0.645013,
              -0.0540748,
              0.479302,
              0.0732974,
              0.645503,
              -0.0612001,
              0.479541,
              0.0834898,
              0.646117,
              -0.0687303,
              0.479829,
              0.0943873,
              0.646707,
              -0.0767846,
              0.480061,
              0.105991,
              0.647431,
              -0.0852465,
              0.480343,
              0.11831,
              0.64831,
              -0.0940719,
              0.48066,
              0.131348,
              0.649486,
              -0.103056,
              0.481083,
              0.14514,
              0.650864,
              -0.112261,
              0.481528,
              0.159676,
              0.652604,
              -0.121852,
              0.482102,
              0.174979,
              0.654825,
              -0.131505,
              0.482813,
              0.191079,
              0.657876,
              -0.141189,
              0.483876,
              0.207927,
              0.661339,
              -0.151239,
              0.48499,
              0.225586,
              0.665463,
              -0.161091,
              0.486279,
              0.243947,
              0.670542,
              -0.171235,
              0.487968,
              0.262957,
              0.677361,
              -0.181347,
              0.49053,
              0.282781,
              0.685672,
              -0.191679,
              0.493862,
              0.303311,
              0.694551,
              -0.201781,
              0.49699,
              0.324607,
              0.703753,
              -0.211164,
              0.498884,
              0.347916,
              0.713703,
              -0.219675,
              0.500086,
              0.372628,
              0.725911,
              -0.227836,
              0.501554,
              0.398694,
              0.73862,
              -0.23533,
              0.502193,
              0.425529,
              0.752118,
              -0.241786,
              0.501811,
              0.453209,
              0.76579,
              -0.247865,
              0.500185,
              0.481381,
              0.779568,
              -0.252696,
              0.497159,
              0.51011,
              0.793991,
              -0.256802,
              0.492765,
              0.539322,
              0.808182,
              -0.259942,
              0.486827,
              0.569078,
              0.821698,
              -0.261703,
              0.478386,
              0.598818,
              0.836009,
              -0.262006,
              0.468772,
              0.629762,
              0.849824,
              -0.260333,
              0.456352,
              0.661366,
              0.863888,
              -0.257398,
              0.442533,
              0.69295,
              0.876585,
              -0.253264,
              0.426573,
              0.723608,
              0.888665,
              -0.248026,
              0.408964,
              0.754378,
              0.899537,
              -0.241487,
              0.389677,
              0.784761,
              0.9094,
              -0.233463,
              0.368516,
              0.814688,
              0.920166,
              -0.223397,
              0.346624,
              0.845009,
              0.928899,
              -0.21255,
              0.322717,
              0.874431,
              0.937156,
              -0.200869,
              0.298698,
              0.902922,
              0.943861,
              -0.188387,
              0.273491,
              0.931356,
              0.949557,
              -0.174341,
              0.247866,
              0.958854,
              0.955862,
              -0.158994,
              0.222496,
              0.986098,
              0.961721,
              -0.143664,
              0.197522,
              1.01229,
              0.965976,
              -0.127412,
              0.17302,
              1.03571,
              0.968652,
              -0.109798,
              0.148954,
              1.05699,
              0.971084,
              -0.0916787,
              0.125044,
              1.07587,
              0.975584,
              -0.0739634,
              0.100577,
              1.09372,
              0.98122,
              -0.055322,
              0.0753666,
              1.10948,
              0.988253,
              -0.0366825,
              0.0498899,
              1.12394,
              0.99482,
              -0.0180389,
              0.024611,
              1.13694,
              1.00001,
              229839e-9,
              -188283e-9,
              1.14919,
              0.613867,
              -964198e-11,
              0.479449,
              123452e-10,
              0.621485,
              -244534e-9,
              0.485399,
              313091e-9,
              0.621429,
              -978202e-9,
              0.485353,
              0.00125245,
              0.62112,
              -0.00220004,
              0.485114,
              0.00281687,
              0.621119,
              -0.0039111,
              0.485112,
              0.00500783,
              0.621122,
              -0.00611091,
              0.485112,
              0.00782498,
              0.621133,
              -0.00879922,
              0.485117,
              0.0112687,
              0.621152,
              -0.0119756,
              0.485125,
              0.0153394,
              0.621183,
              -0.0156396,
              0.485139,
              0.0200382,
              0.621227,
              -0.0197898,
              0.485158,
              0.0253663,
              0.621298,
              -0.0244253,
              0.485192,
              0.0313261,
              0.621388,
              -0.0295441,
              0.485233,
              0.0379204,
              0.621507,
              -0.0351432,
              0.485286,
              0.0451523,
              0.621693,
              -0.0412198,
              0.485378,
              0.0530277,
              0.621933,
              -0.0477673,
              0.485495,
              0.0615522,
              0.622232,
              -0.0547574,
              0.485635,
              0.0707316,
              0.622809,
              -0.0619417,
              0.485943,
              0.0805883,
              0.623407,
              -0.069625,
              0.486232,
              0.0911267,
              0.62406,
              -0.077796,
              0.486516,
              0.102354,
              0.624835,
              -0.0863731,
              0.486838,
              0.114279,
              0.625758,
              -0.095251,
              0.487188,
              0.126902,
              0.627043,
              -0.104299,
              0.487695,
              0.140285,
              0.628438,
              -0.113724,
              0.488163,
              0.154397,
              0.630325,
              -0.123417,
              0.488858,
              0.169267,
              0.632801,
              -0.133137,
              0.489754,
              0.184941,
              0.635784,
              -0.143052,
              0.490815,
              0.20136,
              0.639406,
              -0.153132,
              0.492048,
              0.218643,
              0.643872,
              -0.163143,
              0.49363,
              0.236615,
              0.6499,
              -0.17333,
              0.496009,
              0.255449,
              0.657201,
              -0.183622,
              0.498994,
              0.275006,
              0.666221,
              -0.194019,
              0.502888,
              0.295354,
              0.674419,
              -0.204192,
              0.505459,
              0.316244,
              0.683729,
              -0.21406,
              0.507771,
              0.33849,
              0.695584,
              -0.222854,
              0.510245,
              0.363166,
              0.708583,
              -0.231315,
              0.512293,
              0.389071,
              0.721233,
              -0.238911,
              0.512747,
              0.415737,
              0.735134,
              -0.245657,
              0.512482,
              0.443331,
              0.750179,
              -0.251879,
              0.511526,
              0.471891,
              0.765073,
              -0.256911,
              0.508935,
              0.500892,
              0.779794,
              -0.261144,
              0.504341,
              0.530294,
              0.794801,
              -0.264316,
              0.498515,
              0.560144,
              0.810339,
              -0.266276,
              0.491015,
              0.590213,
              0.824818,
              -0.266981,
              0.481126,
              0.620865,
              0.839375,
              -0.265778,
              0.468685,
              0.652687,
              0.853043,
              -0.262748,
              0.453925,
              0.684759,
              0.867335,
              -0.258474,
              0.437912,
              0.716209,
              0.88037,
              -0.253187,
              0.419648,
              0.747508,
              0.891711,
              -0.246476,
              0.39982,
              0.77797,
              0.902896,
              -0.238735,
              0.37879,
              0.808586,
              0.913601,
              -0.22885,
              0.355891,
              0.838843,
              0.923019,
              -0.217656,
              0.331773,
              0.869014,
              0.933432,
              -0.205539,
              0.307356,
              0.898512,
              0.939691,
              -0.192595,
              0.281321,
              0.9269,
              0.946938,
              -0.178945,
              0.255441,
              0.955297,
              0.952372,
              -0.163587,
              0.229013,
              0.983231,
              0.95909,
              -0.147214,
              0.203179,
              1.00971,
              0.963675,
              -0.13064,
              0.17792,
              1.03438,
              0.968247,
              -0.113121,
              0.152898,
              1.05625,
              0.97001,
              -0.0945824,
              0.128712,
              1.07598,
              0.974458,
              -0.0755648,
              0.103349,
              1.094,
              0.980168,
              -0.0571998,
              0.0776731,
              1.1104,
              0.987295,
              -0.0377994,
              0.0514445,
              1.12491,
              0.994432,
              -0.0186417,
              0.025429,
              1.13851,
              0.999975,
              542714e-9,
              -282356e-9,
              1.15108,
              0.592656,
              -980249e-11,
              0.486018,
              119532e-10,
              0.598467,
              -247275e-9,
              0.490781,
              301531e-9,
              0.597934,
              -988317e-9,
              0.490343,
              0.00120517,
              0.597903,
              -0.00222366,
              0.490319,
              0.0027116,
              0.597913,
              -0.00395315,
              0.490327,
              0.00482077,
              0.597919,
              -0.00617653,
              0.490329,
              0.00753264,
              0.597936,
              -0.00889375,
              0.490339,
              0.0108478,
              0.597956,
              -0.0121043,
              0.490347,
              0.0147668,
              0.597992,
              -0.0158073,
              0.490365,
              0.0192905,
              0.598032,
              -0.0200017,
              0.490382,
              0.0244204,
              0.598109,
              -0.0246865,
              0.49042,
              0.0301593,
              0.598215,
              -0.0298594,
              0.490474,
              0.03651,
              0.59833,
              -0.0355167,
              0.490524,
              0.0434757,
              0.598525,
              -0.0416559,
              0.490624,
              0.0510629,
              0.598778,
              -0.0482692,
              0.490753,
              0.0592781,
              0.599135,
              -0.0553114,
              0.49094,
              0.0681304,
              0.599802,
              -0.062542,
              0.491328,
              0.0776467,
              0.600361,
              -0.0703638,
              0.491598,
              0.0878184,
              0.60101,
              -0.0786256,
              0.491882,
              0.0986573,
              0.601811,
              -0.0872962,
              0.492232,
              0.11018,
              0.602861,
              -0.0962284,
              0.492684,
              0.1224,
              0.604167,
              -0.10538,
              0.493213,
              0.135354,
              0.605693,
              -0.114896,
              0.493799,
              0.149034,
              0.607682,
              -0.124654,
              0.494576,
              0.163469,
              0.610672,
              -0.13456,
              0.4959,
              0.178747,
              0.613313,
              -0.144581,
              0.496713,
              0.194723,
              0.617603,
              -0.154703,
              0.498499,
              0.211617,
              0.622174,
              -0.16489,
              0.500188,
              0.229183,
              0.628855,
              -0.175164,
              0.503072,
              0.247786,
              0.636963,
              -0.185565,
              0.506798,
              0.267116,
              0.644866,
              -0.195911,
              0.509719,
              0.28702,
              0.653741,
              -0.206104,
              0.512776,
              0.307763,
              0.664942,
              -0.216447,
              0.516812,
              0.329631,
              0.67633,
              -0.22552,
              0.519181,
              0.353515,
              0.690012,
              -0.234316,
              0.521681,
              0.379226,
              0.704243,
              -0.242032,
              0.523129,
              0.405901,
              0.719396,
              -0.249172,
              0.523768,
              0.433585,
              0.734471,
              -0.255543,
              0.522541,
              0.462085,
              0.750539,
              -0.260697,
              0.520217,
              0.491233,
              0.766365,
              -0.26501,
              0.516293,
              0.521094,
              0.781677,
              -0.268409,
              0.509708,
              0.551014,
              0.797132,
              -0.270399,
              0.501944,
              0.581463,
              0.812655,
              -0.271247,
              0.492025,
              0.612402,
              0.828592,
              -0.270708,
              0.480424,
              0.643798,
              0.844044,
              -0.268085,
              0.465955,
              0.67682,
              0.857305,
              -0.263459,
              0.448425,
              0.708496,
              0.87114,
              -0.258151,
              0.430243,
              0.74046,
              0.884936,
              -0.251171,
              0.410578,
              0.771583,
              0.895772,
              -0.243305,
              0.38862,
              0.802234,
              0.906961,
              -0.234037,
              0.365214,
              0.833179,
              0.917775,
              -0.222714,
              0.34116,
              0.86353,
              0.927883,
              -0.210175,
              0.31572,
              0.893557,
              0.936617,
              -0.196925,
              0.289159,
              0.922976,
              0.943384,
              -0.182788,
              0.261996,
              0.951606,
              0.949713,
              -0.167965,
              0.235324,
              0.979958,
              0.955818,
              -0.151109,
              0.208408,
              1.00765,
              0.961344,
              -0.133834,
              0.182591,
              1.03329,
              0.965469,
              -0.115987,
              0.156958,
              1.0557,
              0.968693,
              -0.09746,
              0.132239,
              1.07583,
              0.973165,
              -0.0778514,
              0.106195,
              1.09451,
              0.979387,
              -0.0585067,
              0.0797669,
              1.11137,
              0.98671,
              -0.0390409,
              0.0530263,
              1.12643,
              0.994093,
              -0.019408,
              0.0263163,
              1.14016,
              1.00002,
              540029e-9,
              -194487e-9,
              1.15299,
              0.574483,
              -989066e-11,
              0.494533,
              114896e-10,
              0.574478,
              -249127e-9,
              0.494528,
              289403e-9,
              0.574607,
              -996811e-9,
              0.494637,
              0.00115797,
              0.574396,
              -0.00224241,
              0.494458,
              0.00260498,
              0.574377,
              -0.00398632,
              0.49444,
              0.00463102,
              0.574386,
              -0.00622836,
              0.494445,
              0.00723623,
              0.574401,
              -0.0089683,
              0.494453,
              0.010421,
              0.574419,
              -0.0122056,
              0.49446,
              0.0141859,
              0.574459,
              -0.0159396,
              0.494481,
              0.0185322,
              0.574525,
              -0.0201692,
              0.49452,
              0.0234617,
              0.574587,
              -0.0248924,
              0.494547,
              0.0289762,
              0.574697,
              -0.0301074,
              0.494604,
              0.0350797,
              0.574853,
              -0.0358114,
              0.494688,
              0.0417767,
              0.575027,
              -0.041999,
              0.494772,
              0.0490718,
              0.575294,
              -0.0486618,
              0.494915,
              0.0569728,
              0.575733,
              -0.0557148,
              0.495173,
              0.0654955,
              0.576356,
              -0.0630489,
              0.495537,
              0.0746612,
              0.576944,
              -0.0709285,
              0.495836,
              0.0844615,
              0.57765,
              -0.0792723,
              0.496177,
              0.0949142,
              0.578491,
              -0.0880167,
              0.496563,
              0.10603,
              0.579639,
              -0.0969462,
              0.497096,
              0.117841,
              0.580989,
              -0.10622,
              0.497684,
              0.130367,
              0.582587,
              -0.115861,
              0.498337,
              0.143609,
              0.584951,
              -0.125605,
              0.499414,
              0.157625,
              0.587602,
              -0.135608,
              0.500518,
              0.172413,
              0.59076,
              -0.145742,
              0.501767,
              0.187999,
              0.594992,
              -0.155934,
              0.503542,
              0.20445,
              0.600656,
              -0.166303,
              0.506135,
              0.221764,
              0.607816,
              -0.176681,
              0.509542,
              0.24002,
              0.61522,
              -0.187071,
              0.51263,
              0.258992,
              0.623702,
              -0.197465,
              0.516021,
              0.278773,
              0.634192,
              -0.207816,
              0.520422,
              0.299377,
              0.644936,
              -0.218183,
              0.524073,
              0.320802,
              0.657888,
              -0.2278,
              0.528049,
              0.34384,
              0.670666,
              -0.236747,
              0.52986,
              0.36916,
              0.685626,
              -0.24484,
              0.531892,
              0.395867,
              0.701304,
              -0.252071,
              0.532727,
              0.423488,
              0.717727,
              -0.258714,
              0.532146,
              0.452201,
              0.733914,
              -0.264211,
              0.529883,
              0.481579,
              0.750529,
              -0.26859,
              0.5259,
              0.511558,
              0.76747,
              -0.272046,
              0.51999,
              0.542042,
              0.785189,
              -0.274225,
              0.513083,
              0.572799,
              0.800954,
              -0.275189,
              0.502936,
              0.603816,
              0.816962,
              -0.274946,
              0.490921,
              0.635461,
              0.83336,
              -0.272695,
              0.47684,
              0.6676,
              0.848143,
              -0.268223,
              0.459405,
              0.70051,
              0.861818,
              -0.262768,
              0.440319,
              0.732902,
              0.876828,
              -0.255872,
              0.420123,
              0.765084,
              0.889312,
              -0.247703,
              0.398379,
              0.796391,
              0.900412,
              -0.238381,
              0.374496,
              0.827333,
              0.912251,
              -0.227783,
              0.349874,
              0.858385,
              0.921792,
              -0.214832,
              0.323181,
              0.888652,
              0.931273,
              -0.200949,
              0.296624,
              0.917763,
              0.940295,
              -0.186537,
              0.269211,
              0.947878,
              0.946812,
              -0.171538,
              0.241447,
              0.977016,
              0.953588,
              -0.155254,
              0.213829,
              1.00501,
              0.958841,
              -0.137156,
              0.186807,
              1.03179,
              0.963746,
              -0.118699,
              0.160706,
              1.05502,
              0.966468,
              -0.0998358,
              0.135504,
              1.07568,
              0.971178,
              -0.0805186,
              0.109131,
              1.09479,
              0.97831,
              -0.0599348,
              0.0818293,
              1.1123,
              0.985886,
              -0.0399661,
              0.0545872,
              1.12771,
              0.994021,
              -0.0198682,
              0.0269405,
              1.14186,
              1.00009,
              271022e-9,
              -12989e-8,
              1.15514,
              0.538716,
              -990918e-11,
              0.486732,
              109675e-10,
              0.550656,
              -250642e-9,
              0.497518,
              277412e-9,
              0.55057,
              -0.00100265,
              0.497441,
              0.00110974,
              0.550903,
              -0.00225672,
              0.497733,
              0.00249779,
              0.550568,
              -0.00401046,
              0.497438,
              0.00443906,
              0.550574,
              -0.00626613,
              0.49744,
              0.00693637,
              0.550591,
              -0.0090226,
              0.497449,
              0.00998921,
              0.550623,
              -0.0122795,
              0.497469,
              0.0135984,
              0.550667,
              -0.0160361,
              0.497495,
              0.0177654,
              0.550724,
              -0.0202908,
              0.497526,
              0.0224915,
              0.550792,
              -0.0250421,
              0.497557,
              0.0277795,
              0.550918,
              -0.0302878,
              0.49763,
              0.0336334,
              0.551058,
              -0.0360241,
              0.497701,
              0.0400573,
              0.551276,
              -0.0422473,
              0.497824,
              0.0470585,
              0.551551,
              -0.0489441,
              0.497977,
              0.0546433,
              0.552074,
              -0.0559596,
              0.498312,
              0.0628367,
              0.552681,
              -0.0633978,
              0.498679,
              0.071646,
              0.553324,
              -0.0713176,
              0.499031,
              0.0810746,
              0.554011,
              -0.0797268,
              0.499365,
              0.091129,
              0.55488,
              -0.0885238,
              0.499779,
              0.101837,
              0.556171,
              -0.0974417,
              0.500444,
              0.113239,
              0.557498,
              -0.106841,
              0.501025,
              0.125316,
              0.559299,
              -0.116533,
              0.501864,
              0.138128,
              0.561647,
              -0.126298,
              0.502967,
              0.151695,
              0.564347,
              -0.136388,
              0.504129,
              0.16604,
              0.567863,
              -0.146576,
              0.505713,
              0.181207,
              0.572569,
              -0.156832,
              0.507953,
              0.197259,
              0.578919,
              -0.167323,
              0.511186,
              0.214258,
              0.585387,
              -0.177712,
              0.514042,
              0.232038,
              0.593134,
              -0.188184,
              0.517484,
              0.250733,
              0.603295,
              -0.198717,
              0.522345,
              0.270454,
              0.613854,
              -0.209177,
              0.526751,
              0.290807,
              0.626092,
              -0.219644,
              0.531595,
              0.312202,
              0.637868,
              -0.229494,
              0.534721,
              0.334435,
              0.652458,
              -0.238718,
              0.538304,
              0.359184,
              0.666985,
              -0.247061,
              0.539875,
              0.385637,
              0.683301,
              -0.254652,
              0.541042,
              0.41328,
              0.69998,
              -0.261376,
              0.540735,
              0.441903,
              0.717824,
              -0.267085,
              0.539139,
              0.471609,
              0.734617,
              -0.271465,
              0.534958,
              0.501446,
              0.753663,
              -0.27528,
              0.53032,
              0.532571,
              0.770512,
              -0.277617,
              0.522134,
              0.563641,
              0.787356,
              -0.278525,
              0.51206,
              0.595067,
              0.806252,
              -0.278512,
              0.50119,
              0.627226,
              0.822061,
              -0.277023,
              0.486791,
              0.659402,
              0.838959,
              -0.273175,
              0.470467,
              0.692874,
              0.85379,
              -0.267238,
              0.450688,
              0.725702,
              0.868268,
              -0.260327,
              0.429741,
              0.75832,
              0.881994,
              -0.251946,
              0.407223,
              0.790189,
              0.893885,
              -0.242432,
              0.383214,
              0.821625,
              0.905118,
              -0.231904,
              0.357297,
              0.853011,
              0.916045,
              -0.219545,
              0.330733,
              0.883773,
              0.927614,
              -0.205378,
              0.303916,
              0.914435,
              0.936005,
              -0.190388,
              0.275941,
              0.944502,
              0.944533,
              -0.1749,
              0.247493,
              0.974439,
              0.950758,
              -0.158588,
              0.218996,
              1.00286,
              0.957078,
              -0.141027,
              0.191559,
              1.0304,
              0.962448,
              -0.121507,
              0.164457,
              1.05466,
              0.964993,
              -0.102068,
              0.138636,
              1.0761,
              0.970017,
              -0.0822598,
              0.111861,
              1.09541,
              0.97661,
              -0.062033,
              0.0843438,
              1.11317,
              0.985073,
              -0.0409832,
              0.0558496,
              1.12911,
              0.993515,
              -0.020146,
              0.0275331,
              1.1438,
              1.00006,
              27329e-8,
              -107883e-9,
              1.15736,
              0.525324,
              -999341e-11,
              0.498153,
              105385e-10,
              0.526513,
              -251605e-9,
              0.499277,
              265329e-9,
              0.526517,
              -0.00100641,
              0.499282,
              0.0010613,
              0.526588,
              -0.00226466,
              0.499337,
              0.00238823,
              0.526539,
              -0.0040255,
              0.499302,
              0.00424535,
              0.526547,
              -0.00628954,
              0.499306,
              0.00663364,
              0.526561,
              -0.00905628,
              0.499313,
              0.00955337,
              0.526593,
              -0.0123253,
              0.499334,
              0.0130054,
              0.526642,
              -0.0160957,
              0.499365,
              0.0169911,
              0.5267,
              -0.0203661,
              0.499396,
              0.0215122,
              0.526792,
              -0.0251347,
              0.499451,
              0.0265718,
              0.526904,
              -0.0303985,
              0.499511,
              0.0321732,
              0.527079,
              -0.0361554,
              0.499617,
              0.0383231,
              0.527285,
              -0.0423982,
              0.499731,
              0.045026,
              0.527602,
              -0.0491121,
              0.499924,
              0.0522936,
              0.528166,
              -0.0561127,
              0.500306,
              0.0601528,
              0.52879,
              -0.0635988,
              0.5007,
              0.0686059,
              0.529421,
              -0.071581,
              0.501048,
              0.0776518,
              0.530144,
              -0.0799854,
              0.501421,
              0.0873148,
              0.531062,
              -0.0888032,
              0.501884,
              0.0976084,
              0.532374,
              -0.0977643,
              0.50259,
              0.108588,
              0.533828,
              -0.107197,
              0.50329,
              0.120234,
              0.53581,
              -0.116887,
              0.504312,
              0.132602,
              0.538063,
              -0.126755,
              0.505365,
              0.145721,
              0.5409,
              -0.136819,
              0.506668,
              0.159617,
              0.544882,
              -0.147117,
              0.508731,
              0.174369,
              0.550238,
              -0.157446,
              0.511601,
              0.190028,
              0.556038,
              -0.167988,
              0.514431,
              0.206587,
              0.563031,
              -0.178364,
              0.517808,
              0.224046,
              0.571543,
              -0.189007,
              0.521937,
              0.242503,
              0.582255,
              -0.199546,
              0.527415,
              0.261977,
              0.59272,
              -0.210084,
              0.531682,
              0.282162,
              0.605648,
              -0.220448,
              0.537123,
              0.303426,
              0.61785,
              -0.230593,
              0.540664,
              0.325323,
              0.632223,
              -0.240238,
              0.544467,
              0.348993,
              0.648819,
              -0.24887,
              0.547594,
              0.375462,
              0.665825,
              -0.256657,
              0.54912,
              0.403024,
              0.683389,
              -0.263711,
              0.549294,
              0.431773,
              0.701495,
              -0.269666,
              0.547649,
              0.461494,
              0.719197,
              -0.274169,
              0.543786,
              0.491623,
              0.737906,
              -0.278124,
              0.538644,
              0.522994,
              0.756652,
              -0.280632,
              0.531057,
              0.554775,
              0.775279,
              -0.281741,
              0.521972,
              0.586441,
              0.792688,
              -0.281652,
              0.509613,
              0.618596,
              0.811894,
              -0.280345,
              0.496497,
              0.651462,
              0.827938,
              -0.277128,
              0.47968,
              0.684023,
              0.844837,
              -0.271646,
              0.460688,
              0.718024,
              0.859239,
              -0.264397,
              0.438872,
              0.751207,
              0.874088,
              -0.256144,
              0.41577,
              0.784232,
              0.887693,
              -0.246311,
              0.391369,
              0.816191,
              0.899402,
              -0.235497,
              0.365872,
              0.847828,
              0.910973,
              -0.223631,
              0.338618,
              0.87934,
              0.92204,
              -0.209874,
              0.310803,
              0.910325,
              0.930987,
              -0.194265,
              0.281802,
              0.940695,
              0.94,
              -0.178125,
              0.252836,
              0.970958,
              0.948018,
              -0.161479,
              0.224239,
              1.00078,
              0.955141,
              -0.144038,
              0.195857,
              1.0288,
              0.960513,
              -0.124915,
              0.168487,
              1.05371,
              0.963964,
              -0.104284,
              0.141495,
              1.07596,
              0.968713,
              -0.0838732,
              0.114437,
              1.09628,
              0.975524,
              -0.0635579,
              0.0863105,
              1.11448,
              0.98431,
              -0.042291,
              0.0574774,
              1.13069,
              0.992916,
              -0.0209131,
              0.0284343,
              1.14568,
              0.999926,
              743097e-9,
              -379265e-9,
              1.15955,
              0.501042,
              -998428e-11,
              0.498726,
              100306e-10,
              0.502992,
              -252112e-9,
              0.500665,
              253283e-9,
              0.502417,
              -0.00100791,
              0.500092,
              0.00101259,
              0.502965,
              -0.00226919,
              0.500621,
              0.00227978,
              0.502318,
              -0.00403109,
              0.499994,
              0.00405011,
              0.502333,
              -0.00629832,
              0.500005,
              0.00632868,
              0.502362,
              -0.00906907,
              0.500027,
              0.00911446,
              0.502369,
              -0.0123423,
              0.500023,
              0.0124078,
              0.50243,
              -0.0161178,
              0.500066,
              0.016211,
              0.502493,
              -0.0203937,
              0.500103,
              0.0205256,
              0.502592,
              -0.0251684,
              0.500166,
              0.0253548,
              0.502707,
              -0.0304389,
              0.50023,
              0.0307029,
              0.502881,
              -0.0362015,
              0.500335,
              0.0365753,
              0.503124,
              -0.0424507,
              0.500488,
              0.0429798,
              0.503443,
              -0.0491582,
              0.500686,
              0.0499268,
              0.504083,
              -0.0561476,
              0.501155,
              0.0574541,
              0.504668,
              -0.0636846,
              0.501524,
              0.0655408,
              0.505319,
              -0.0716834,
              0.501904,
              0.0742072,
              0.50609,
              -0.0800925,
              0.502321,
              0.0834699,
              0.507122,
              -0.0888425,
              0.502896,
              0.0933603,
              0.508414,
              -0.097855,
              0.503603,
              0.10391,
              0.509955,
              -0.107304,
              0.504416,
              0.115113,
              0.512061,
              -0.116921,
              0.505565,
              0.127054,
              0.514419,
              -0.12689,
              0.506732,
              0.139709,
              0.517529,
              -0.136934,
              0.508338,
              0.153173,
              0.522085,
              -0.147327,
              0.510987,
              0.167528,
              0.526986,
              -0.157612,
              0.513527,
              0.182708,
              0.533122,
              -0.168213,
              0.516717,
              0.198881,
              0.540807,
              -0.178688,
              0.520832,
              0.215986,
              0.550687,
              -0.189511,
              0.52632,
              0.234335,
              0.560567,
              -0.199998,
              0.531009,
              0.253375,
              0.571698,
              -0.210652,
              0.535839,
              0.273499,
              0.584364,
              -0.220917,
              0.541091,
              0.294355,
              0.599066,
              -0.23137,
              0.546875,
              0.316525,
              0.614148,
              -0.241206,
              0.551306,
              0.339671,
              0.631157,
              -0.250379,
              0.555187,
              0.36531,
              0.647919,
              -0.258397,
              0.556595,
              0.392767,
              0.666112,
              -0.265528,
              0.556949,
              0.421397,
              0.686158,
              -0.271827,
              0.556617,
              0.451433,
              0.704838,
              -0.27674,
              0.552975,
              0.482131,
              0.723957,
              -0.280733,
              0.547814,
              0.513458,
              0.74262,
              -0.283359,
              0.53997,
              0.545446,
              0.762009,
              -0.284541,
              0.530422,
              0.57775,
              0.781314,
              -0.284507,
              0.518546,
              0.610434,
              0.799116,
              -0.283309,
              0.504178,
              0.643178,
              0.817604,
              -0.280378,
              0.48843,
              0.676248,
              0.83459,
              -0.275619,
              0.469457,
              0.709698,
              0.850974,
              -0.26856,
              0.447698,
              0.744245,
              0.866747,
              -0.260094,
              0.424791,
              0.777695,
              0.881412,
              -0.249929,
              0.399913,
              0.810392,
              0.8936,
              -0.239137,
              0.37308,
              0.842872,
              0.905943,
              -0.226818,
              0.345705,
              0.874677,
              0.916408,
              -0.213699,
              0.31706,
              0.906257,
              0.927215,
              -0.198428,
              0.288444,
              0.936881,
              0.935625,
              -0.181643,
              0.258329,
              0.96795,
              0.944076,
              -0.164386,
              0.228488,
              0.998216,
              0.951229,
              -0.146339,
              0.199763,
              1.02689,
              0.958793,
              -0.127709,
              0.172153,
              1.0535,
              0.963219,
              -0.107244,
              0.144989,
              1.07646,
              0.967562,
              -0.0857764,
              0.11685,
              1.09675,
              0.974866,
              -0.0645377,
              0.0880571,
              1.11576,
              0.983353,
              -0.0431732,
              0.0587352,
              1.13227,
              0.992503,
              -0.0218356,
              0.0294181,
              1.1478,
              1.00003,
              605203e-9,
              -231013e-9,
              1.16207,
              0.482935,
              -101177e-10,
              0.504695,
              968142e-11,
              0.477554,
              -251521e-9,
              0.499071,
              240676e-9,
              0.477904,
              -0.00100683,
              0.499436,
              96342e-8,
              0.478368,
              -0.00226636,
              0.499899,
              0.0021687,
              0.477977,
              -0.00402719,
              0.499513,
              0.00385384,
              0.477993,
              -0.00629226,
              0.499525,
              0.0060221,
              0.478011,
              -0.00906011,
              0.499536,
              0.00867289,
              0.478051,
              -0.0123305,
              0.499566,
              0.0118074,
              0.478089,
              -0.016102,
              0.499587,
              0.0154269,
              0.478171,
              -0.0203736,
              0.499645,
              0.0195341,
              0.478254,
              -0.025143,
              0.499692,
              0.0241318,
              0.47839,
              -0.0304071,
              0.499779,
              0.0292247,
              0.478588,
              -0.0361631,
              0.499911,
              0.0348196,
              0.478812,
              -0.0424023,
              0.500046,
              0.0409231,
              0.479208,
              -0.0490724,
              0.500326,
              0.047552,
              0.479841,
              -0.0560722,
              0.500805,
              0.0547377,
              0.480392,
              -0.0636125,
              0.501152,
              0.0624607,
              0.481068,
              -0.0716134,
              0.501561,
              0.0707473,
              0.481898,
              -0.0800062,
              0.502054,
              0.0796118,
              0.483022,
              -0.0886568,
              0.502728,
              0.0890974,
              0.484332,
              -0.0977553,
              0.503479,
              0.0992099,
              0.486126,
              -0.107173,
              0.504546,
              0.10999,
              0.488066,
              -0.11677,
              0.50557,
              0.121476,
              0.490521,
              -0.126725,
              0.506849,
              0.133672,
              0.494232,
              -0.136793,
              0.50911,
              0.146731,
              0.498302,
              -0.147116,
              0.511345,
              0.160577,
              0.503565,
              -0.157446,
              0.514344,
              0.175335,
              0.510902,
              -0.168121,
              0.518824,
              0.191207,
              0.519263,
              -0.178799,
              0.523666,
              0.208058,
              0.528204,
              -0.189407,
              0.528296,
              0.225875,
              0.538854,
              -0.200145,
              0.533724,
              0.244782,
              0.551278,
              -0.210701,
              0.539833,
              0.264753,
              0.565222,
              -0.221303,
              0.546131,
              0.285745,
              0.579403,
              -0.231688,
              0.551496,
              0.307592,
              0.595469,
              -0.241718,
              0.556809,
              0.330582,
              0.610929,
              -0.250992,
              0.559641,
              0.354995,
              0.629433,
              -0.259602,
              0.562379,
              0.382471,
              0.648504,
              -0.267038,
              0.563676,
              0.411126,
              0.66756,
              -0.273388,
              0.562092,
              0.440924,
              0.689143,
              -0.278788,
              0.560807,
              0.472118,
              0.709056,
              -0.282783,
              0.555701,
              0.503774,
              0.729855,
              -0.285836,
              0.548698,
              0.536364,
              0.748954,
              -0.287078,
              0.538544,
              0.56895,
              0.768373,
              -0.287133,
              0.526711,
              0.601991,
              0.78827,
              -0.285839,
              0.512511,
              0.635403,
              0.807465,
              -0.283238,
              0.496323,
              0.668797,
              0.825194,
              -0.27906,
              0.477638,
              0.702584,
              0.842203,
              -0.272286,
              0.456253,
              0.736393,
              0.857749,
              -0.263854,
              0.432412,
              0.77096,
              0.874799,
              -0.253943,
              0.407806,
              0.80489,
              0.887497,
              -0.24237,
              0.38033,
              0.83771,
              0.89966,
              -0.230278,
              0.352446,
              0.870376,
              0.911753,
              -0.21646,
              0.323268,
              0.902256,
              0.923011,
              -0.202071,
              0.294314,
              0.933306,
              0.932375,
              -0.185519,
              0.264104,
              0.965177,
              0.940537,
              -0.167604,
              0.234035,
              0.996303,
              0.948904,
              -0.149068,
              0.20412,
              1.0261,
              0.955263,
              -0.129539,
              0.175431,
              1.05304,
              0.960303,
              -0.109932,
              0.148116,
              1.07617,
              0.965512,
              -0.0880572,
              0.119693,
              1.09742,
              0.973466,
              -0.0660548,
              0.0901619,
              1.11721,
              0.98284,
              -0.0439228,
              0.0599875,
              1.13436,
              0.992216,
              -0.0219588,
              0.0298975,
              1.15006,
              0.999946,
              119402e-9,
              -208547e-10,
              1.16471,
              0.447827,
              -100414e-10,
              0.491543,
              914833e-11,
              0.454778,
              -251257e-9,
              0.499172,
              22891e-8,
              0.453519,
              -0.00100342,
              0.497787,
              914184e-9,
              0.45357,
              -0.00225776,
              0.497847,
              0.00205701,
              0.453578,
              -0.00401371,
              0.497855,
              0.00365705,
              0.45357,
              -0.00627107,
              0.497841,
              0.00571453,
              0.453598,
              -0.00902968,
              0.497864,
              0.00823019,
              0.453627,
              -0.0122888,
              0.497882,
              0.0112049,
              0.453684,
              -0.0160475,
              0.497923,
              0.0146405,
              0.453764,
              -0.0203044,
              0.49798,
              0.0185394,
              0.453866,
              -0.0250576,
              0.498049,
              0.0229054,
              0.453996,
              -0.0303028,
              0.49813,
              0.0277424,
              0.454196,
              -0.0360379,
              0.498267,
              0.0330587,
              0.454457,
              -0.0422521,
              0.498445,
              0.0388613,
              0.454926,
              -0.0488393,
              0.498812,
              0.0451767,
              0.455525,
              -0.0558653,
              0.499272,
              0.0520153,
              0.456074,
              -0.0633772,
              0.499625,
              0.0593754,
              0.456752,
              -0.0713606,
              0.500049,
              0.0672751,
              0.457648,
              -0.07971,
              0.500615,
              0.0757447,
              0.458849,
              -0.0883032,
              0.501399,
              0.0848231,
              0.46029,
              -0.0974095,
              0.502293,
              0.0945135,
              0.462,
              -0.106729,
              0.503301,
              0.104848,
              0.464121,
              -0.116354,
              0.504533,
              0.115884,
              0.466889,
              -0.126214,
              0.506172,
              0.127652,
              0.470744,
              -0.136324,
              0.508667,
              0.14024,
              0.47488,
              -0.146595,
              0.510995,
              0.153673,
              0.480845,
              -0.157027,
              0.514832,
              0.168053,
              0.488262,
              -0.167658,
              0.519506,
              0.183508,
              0.496547,
              -0.178343,
              0.524347,
              0.199948,
              0.506254,
              -0.188916,
              0.52983,
              0.217503,
              0.517961,
              -0.199975,
              0.536357,
              0.236272,
              0.531484,
              -0.210624,
              0.543641,
              0.256096,
              0.545496,
              -0.221227,
              0.550048,
              0.277085,
              0.559497,
              -0.231568,
              0.555076,
              0.298615,
              0.575752,
              -0.241698,
              0.560541,
              0.321547,
              0.591999,
              -0.251172,
              0.564156,
              0.345602,
              0.610654,
              -0.260178,
              0.567607,
              0.371851,
              0.630484,
              -0.268094,
              0.56923,
              0.40076,
              0.651807,
              -0.274661,
              0.569779,
              0.430801,
              0.67239,
              -0.280331,
              0.566791,
              0.461939,
              0.693024,
              -0.284501,
              0.562007,
              0.493854,
              0.715473,
              -0.287852,
              0.555791,
              0.526992,
              0.736323,
              -0.28929,
              0.546345,
              0.560102,
              0.755771,
              -0.289405,
              0.534,
              0.593543,
              0.775424,
              -0.2881,
              0.519114,
              0.627256,
              0.795447,
              -0.285562,
              0.502543,
              0.661464,
              0.815319,
              -0.281416,
              0.484773,
              0.695206,
              0.831769,
              -0.275523,
              0.463445,
              0.729044,
              0.849464,
              -0.267516,
              0.440269,
              0.764069,
              0.866775,
              -0.257584,
              0.415049,
              0.799089,
              0.881252,
              -0.245817,
              0.388049,
              0.831948,
              0.894209,
              -0.233127,
              0.35889,
              0.865526,
              0.906922,
              -0.219579,
              0.329915,
              0.89818,
              0.919686,
              -0.204491,
              0.300441,
              0.930013,
              0.929044,
              -0.188962,
              0.269445,
              0.962061,
              0.938393,
              -0.171079,
              0.238402,
              0.994214,
              0.94661,
              -0.15199,
              0.208204,
              1.02533,
              0.953095,
              -0.131953,
              0.178653,
              1.0529,
              0.958644,
              -0.111233,
              0.150684,
              1.0771,
              0.963925,
              -0.0903098,
              0.122359,
              1.09855,
              0.971995,
              -0.0680505,
              0.0923342,
              1.11874,
              0.981658,
              -0.0448512,
              0.0614195,
              1.13635,
              0.991649,
              -0.0221931,
              0.0303582,
              1.15238,
              0.999985,
              393403e-9,
              -111086e-9,
              1.16772,
              0.396806,
              -971563e-11,
              0.457671,
              842355e-11,
              0.429186,
              -249421e-9,
              0.495017,
              21625e-8,
              0.429324,
              -998052e-9,
              0.495173,
              865322e-9,
              0.429175,
              -0.00224487,
              0.494999,
              0.00194637,
              0.429129,
              -0.00399041,
              0.494952,
              0.00346004,
              0.429153,
              -0.00623476,
              0.494974,
              0.00540684,
              0.429168,
              -0.0089773,
              0.494983,
              0.00778714,
              0.429207,
              -0.0122175,
              0.495012,
              0.0106022,
              0.429257,
              -0.0159542,
              0.495047,
              0.0138535,
              0.429338,
              -0.0201864,
              0.495106,
              0.0175443,
              0.429431,
              -0.0249104,
              0.495165,
              0.0216774,
              0.429587,
              -0.0301252,
              0.495279,
              0.0262594,
              0.429796,
              -0.0358249,
              0.495432,
              0.0312968,
              0.430065,
              -0.0419972,
              0.495621,
              0.0367985,
              0.430588,
              -0.0485144,
              0.496061,
              0.042798,
              0.43113,
              -0.0555028,
              0.496472,
              0.0492914,
              0.431743,
              -0.0629852,
              0.496904,
              0.0562907,
              0.432448,
              -0.0709256,
              0.497369,
              0.0638056,
              0.433414,
              -0.0791942,
              0.498032,
              0.071885,
              0.434638,
              -0.0877346,
              0.498854,
              0.0805517,
              0.43611,
              -0.0968056,
              0.499812,
              0.0898047,
              0.437859,
              -0.106002,
              0.500891,
              0.0997142,
              0.440017,
              -0.115648,
              0.502198,
              0.110289,
              0.443236,
              -0.125427,
              0.504389,
              0.121644,
              0.44697,
              -0.135492,
              0.506809,
              0.133769,
              0.451689,
              -0.145746,
              0.509858,
              0.146787,
              0.45811,
              -0.156219,
              0.514247,
              0.160793,
              0.465305,
              -0.166834,
              0.518816,
              0.175791,
              0.474085,
              -0.177546,
              0.524331,
              0.191906,
              0.484808,
              -0.188262,
              0.53104,
              0.209199,
              0.49732,
              -0.199346,
              0.538511,
              0.227825,
              0.509693,
              -0.209951,
              0.544554,
              0.247269,
              0.524367,
              -0.220533,
              0.551616,
              0.267978,
              0.539228,
              -0.231082,
              0.557368,
              0.289672,
              0.55644,
              -0.241342,
              0.563782,
              0.31268,
              0.574204,
              -0.250964,
              0.568851,
              0.33651,
              0.593388,
              -0.260306,
              0.57312,
              0.362219,
              0.613358,
              -0.268667,
              0.574916,
              0.390322,
              0.634512,
              -0.275591,
              0.575053,
              0.420478,
              0.65563,
              -0.281328,
              0.572404,
              0.451614,
              0.678265,
              -0.285948,
              0.568893,
              0.484112,
              0.70011,
              -0.289408,
              0.561878,
              0.517348,
              0.723005,
              -0.291328,
              0.55359,
              0.551355,
              0.743744,
              -0.291418,
              0.541099,
              0.585109,
              0.763949,
              -0.290252,
              0.526489,
              0.619487,
              0.784186,
              -0.287648,
              0.509496,
              0.65404,
              0.804304,
              -0.283782,
              0.491484,
              0.688649,
              0.823629,
              -0.278067,
              0.470517,
              0.723133,
              0.84094,
              -0.270588,
              0.44705,
              0.757163,
              0.857852,
              -0.261188,
              0.421252,
              0.792816,
              0.874934,
              -0.249313,
              0.394191,
              0.827248,
              0.888709,
              -0.236492,
              0.365359,
              0.861074,
              0.902589,
              -0.222185,
              0.336016,
              0.894417,
              0.914201,
              -0.207314,
              0.30527,
              0.926825,
              0.925978,
              -0.191146,
              0.274532,
              0.9595,
              0.93512,
              -0.174135,
              0.243393,
              0.991583,
              0.943656,
              -0.155231,
              0.212414,
              1.02356,
              0.951719,
              -0.134403,
              0.182005,
              1.05239,
              0.957164,
              -0.113023,
              0.153043,
              1.07754,
              0.962656,
              -0.0914493,
              0.124186,
              1.09984,
              0.970695,
              -0.0694179,
              0.0941654,
              1.12,
              0.980749,
              -0.0466199,
              0.0629671,
              1.13849,
              0.991205,
              -0.0227032,
              0.0311146,
              1.15494,
              0.999884,
              632388e-9,
              -254483e-9,
              1.1706,
              0.379821,
              -957289e-11,
              0.460637,
              789337e-11,
              0.405188,
              -247483e-9,
              0.491396,
              204064e-9,
              0.404796,
              -989434e-9,
              0.490914,
              815853e-9,
              0.40483,
              -0.00222607,
              0.490949,
              0.00183559,
              0.40473,
              -0.00395723,
              0.49084,
              0.00326332,
              0.404731,
              -0.00618287,
              0.490836,
              0.00509945,
              0.404768,
              -0.00890258,
              0.490871,
              0.00734463,
              0.404791,
              -0.0121156,
              0.490883,
              0.00999992,
              0.404857,
              -0.0158214,
              0.490938,
              0.0130676,
              0.404943,
              -0.0200178,
              0.491004,
              0.0165503,
              0.405059,
              -0.0247027,
              0.491093,
              0.0204521,
              0.405213,
              -0.0298729,
              0.491205,
              0.0247788,
              0.405399,
              -0.0355226,
              0.491333,
              0.0295373,
              0.405731,
              -0.0416352,
              0.491604,
              0.034741,
              0.406303,
              -0.0480807,
              0.492116,
              0.0404255,
              0.406814,
              -0.0550458,
              0.492506,
              0.0465732,
              0.407404,
              -0.0624652,
              0.492926,
              0.0532058,
              0.408149,
              -0.0702958,
              0.493442,
              0.0603442,
              0.409128,
              -0.0784623,
              0.494136,
              0.0680297,
              0.410408,
              -0.087007,
              0.495054,
              0.0762786,
              0.411813,
              -0.0959639,
              0.495962,
              0.0851046,
              0.413735,
              -0.105075,
              0.497257,
              0.0945878,
              0.416137,
              -0.114646,
              0.498882,
              0.104725,
              0.41934,
              -0.124394,
              0.501132,
              0.11563,
              0.423326,
              -0.134328,
              0.503883,
              0.127325,
              0.428419,
              -0.14458,
              0.50747,
              0.139911,
              0.43484,
              -0.154979,
              0.511964,
              0.153481,
              0.442641,
              -0.165628,
              0.517328,
              0.168114,
              0.452511,
              -0.176365,
              0.524258,
              0.183995,
              0.463473,
              -0.187298,
              0.531248,
              0.200953,
              0.475564,
              -0.198244,
              0.538367,
              0.219176,
              0.488664,
              -0.208938,
              0.545175,
              0.238514,
              0.504073,
              -0.219599,
              0.553227,
              0.259129,
              0.520832,
              -0.230378,
              0.560653,
              0.280997,
              0.538455,
              -0.240703,
              0.567523,
              0.303821,
              0.55709,
              -0.250548,
              0.573287,
              0.327948,
              0.576646,
              -0.259964,
              0.577795,
              0.353362,
              0.596705,
              -0.268721,
              0.580077,
              0.380336,
              0.618053,
              -0.276054,
              0.58018,
              0.4101,
              0.640303,
              -0.282176,
              0.578747,
              0.44161,
              0.662365,
              -0.286931,
              0.574294,
              0.474106,
              0.684542,
              -0.290521,
              0.567035,
              0.507549,
              0.707984,
              -0.292672,
              0.558687,
              0.541853,
              0.730913,
              -0.293189,
              0.547606,
              0.576581,
              0.752948,
              -0.292199,
              0.533471,
              0.61172,
              0.773452,
              -0.289508,
              0.516395,
              0.646339,
              0.794715,
              -0.285716,
              0.497873,
              0.682131,
              0.814251,
              -0.280051,
              0.476845,
              0.716396,
              0.833057,
              -0.272873,
              0.453449,
              0.751503,
              0.84959,
              -0.263982,
              0.427857,
              0.786085,
              0.867022,
              -0.252745,
              0.400335,
              0.821355,
              0.882277,
              -0.239655,
              0.371304,
              0.85646,
              0.895375,
              -0.225386,
              0.340397,
              0.890828,
              0.909347,
              -0.209587,
              0.310005,
              0.923532,
              0.921885,
              -0.193433,
              0.2796,
              0.956419,
              0.932127,
              -0.176135,
              0.247276,
              0.989445,
              0.941869,
              -0.157872,
              0.216186,
              1.02221,
              0.949735,
              -0.137577,
              0.185602,
              1.05195,
              0.956617,
              -0.115285,
              0.155767,
              1.07822,
              0.961974,
              -0.0928418,
              0.126103,
              1.10149,
              0.96972,
              -0.0700592,
              0.0956758,
              1.12207,
              0.98012,
              -0.0474671,
              0.0643269,
              1.1408,
              0.990825,
              -0.0238113,
              0.0320863,
              1.1577,
              0.999876,
              381574e-9,
              -812203e-10,
              1.17403,
              0.367636,
              -961342e-11,
              0.469176,
              753287e-11,
              0.380377,
              -244772e-9,
              0.485434,
              191797e-9,
              0.380416,
              -978857e-9,
              0.485475,
              767015e-9,
              0.380376,
              -0.00220165,
              0.485435,
              0.00172522,
              0.380419,
              -0.00391408,
              0.485487,
              0.00306734,
              0.380438,
              -0.00611549,
              0.485505,
              0.00479332,
              0.380462,
              -0.00880558,
              0.485525,
              0.00690391,
              0.380496,
              -0.0119837,
              0.485551,
              0.00940039,
              0.38056,
              -0.0156487,
              0.485605,
              0.0122848,
              0.38064,
              -0.0197988,
              0.485666,
              0.0155601,
              0.380767,
              -0.0244324,
              0.48577,
              0.0192313,
              0.380909,
              -0.0295444,
              0.485871,
              0.0233032,
              0.381142,
              -0.0351321,
              0.48606,
              0.0277861,
              0.381472,
              -0.0411535,
              0.486336,
              0.0326939,
              0.382015,
              -0.0475408,
              0.486833,
              0.0380565,
              0.382523,
              -0.0544395,
              0.487231,
              0.0438615,
              0.383129,
              -0.061784,
              0.487683,
              0.0501332,
              0.383952,
              -0.0695085,
              0.488313,
              0.0568996,
              0.38498,
              -0.0775819,
              0.489077,
              0.0641952,
              0.386331,
              -0.0860443,
              0.490113,
              0.0720324,
              0.387788,
              -0.0948406,
              0.491099,
              0.0804379,
              0.389808,
              -0.103899,
              0.492566,
              0.0894899,
              0.39252,
              -0.113313,
              0.494601,
              0.0992098,
              0.395493,
              -0.123007,
              0.496619,
              0.109641,
              0.399826,
              -0.132859,
              0.499912,
              0.120919,
              0.405341,
              -0.143077,
              0.504061,
              0.133107,
              0.411932,
              -0.153465,
              0.508905,
              0.146263,
              0.420591,
              -0.164108,
              0.515482,
              0.160544,
              0.43101,
              -0.174893,
              0.523191,
              0.176123,
              0.441881,
              -0.185839,
              0.53026,
              0.192757,
              0.453919,
              -0.196633,
              0.537295,
              0.210535,
              0.468715,
              -0.207611,
              0.546156,
              0.229886,
              0.485182,
              -0.218517,
              0.555173,
              0.250543,
              0.501926,
              -0.229249,
              0.562728,
              0.27221,
              0.51785,
              -0.239481,
              0.567494,
              0.294892,
              0.536947,
              -0.249395,
              0.573889,
              0.318987,
              0.557115,
              -0.259,
              0.578831,
              0.344348,
              0.577966,
              -0.268075,
              0.582055,
              0.371223,
              0.599489,
              -0.276115,
              0.583307,
              0.399834,
              0.62479,
              -0.282523,
              0.583902,
              0.431415,
              0.647504,
              -0.287663,
              0.57953,
              0.464301,
              0.670601,
              -0.291538,
              0.573103,
              0.498123,
              0.693539,
              -0.293842,
              0.563731,
              0.532662,
              0.717385,
              -0.294681,
              0.553169,
              0.567925,
              0.741533,
              -0.293717,
              0.539908,
              0.603502,
              0.762142,
              -0.291156,
              0.521902,
              0.639074,
              0.783014,
              -0.28719,
              0.502815,
              0.674439,
              0.805158,
              -0.281773,
              0.482598,
              0.710497,
              0.823646,
              -0.274682,
              0.458949,
              0.7456,
              0.841879,
              -0.266184,
              0.433129,
              0.781085,
              0.859515,
              -0.255682,
              0.406064,
              0.816,
              0.875335,
              -0.242849,
              0.376509,
              0.851074,
              0.890147,
              -0.228329,
              0.345502,
              0.886473,
              0.903144,
              -0.212491,
              0.31428,
              0.920751,
              0.916618,
              -0.195695,
              0.282994,
              0.954606,
              0.927953,
              -0.178267,
              0.251091,
              0.988402,
              0.937414,
              -0.159549,
              0.219107,
              1.02141,
              0.946823,
              -0.140022,
              0.18896,
              1.05167,
              0.954651,
              -0.118154,
              0.158667,
              1.07819,
              0.959955,
              -0.0946636,
              0.128808,
              1.1025,
              0.96858,
              -0.0711792,
              0.0973787,
              1.12391,
              0.97938,
              -0.0475046,
              0.0650965,
              1.14322,
              0.990498,
              -0.024059,
              0.0326267,
              1.16077,
              0.999844,
              -512408e-10,
              112444e-9,
              1.17727,
              0.316912,
              -934977e-11,
              0.425996,
              695559e-11,
              0.356423,
              -241372e-9,
              0.479108,
              179562e-9,
              0.356272,
              -965292e-9,
              0.478897,
              71811e-8,
              0.356262,
              -0.00217182,
              0.478894,
              0.00161574,
              0.356265,
              -0.00386092,
              0.478895,
              0.00287261,
              0.356278,
              -0.0060324,
              0.478905,
              0.00448907,
              0.356293,
              -0.00868565,
              0.478914,
              0.00646572,
              0.356346,
              -0.0118207,
              0.478965,
              0.00880438,
              0.356395,
              -0.0154355,
              0.479001,
              0.0115066,
              0.356484,
              -0.019529,
              0.479075,
              0.0145762,
              0.356609,
              -0.0240991,
              0.47918,
              0.018018,
              0.356766,
              -0.0291413,
              0.479305,
              0.0218379,
              0.357009,
              -0.0346498,
              0.479512,
              0.0260454,
              0.357424,
              -0.0405462,
              0.479909,
              0.0306657,
              0.357899,
              -0.0468825,
              0.480337,
              0.0357054,
              0.358424,
              -0.0536887,
              0.480771,
              0.0411728,
              0.359041,
              -0.0609416,
              0.481242,
              0.0470841,
              0.359903,
              -0.0685239,
              0.481943,
              0.0534831,
              0.360932,
              -0.0764883,
              0.482741,
              0.0603795,
              0.362196,
              -0.0848364,
              0.483688,
              0.0678028,
              0.363847,
              -0.0935002,
              0.484947,
              0.0758086,
              0.365972,
              -0.102471,
              0.486588,
              0.0844173,
              0.368741,
              -0.111751,
              0.488787,
              0.0937199,
              0.372146,
              -0.121334,
              0.491405,
              0.103732,
              0.377114,
              -0.131147,
              0.495604,
              0.114608,
              0.38226,
              -0.141213,
              0.499436,
              0.126345,
              0.389609,
              -0.151632,
              0.505334,
              0.139116,
              0.397925,
              -0.162073,
              0.51168,
              0.152995,
              0.407824,
              -0.172819,
              0.518876,
              0.168071,
              0.420014,
              -0.183929,
              0.527639,
              0.184495,
              0.434266,
              -0.195032,
              0.537588,
              0.20232,
              0.447352,
              -0.205792,
              0.544379,
              0.221189,
              0.463726,
              -0.216704,
              0.553422,
              0.241616,
              0.481406,
              -0.227531,
              0.562074,
              0.263298,
              0.498707,
              -0.238017,
              0.568227,
              0.286116,
              0.518039,
              -0.247936,
              0.574473,
              0.3101,
              0.538277,
              -0.257437,
              0.579191,
              0.335401,
              0.561166,
              -0.266829,
              0.584807,
              0.362246,
              0.583189,
              -0.275329,
              0.586476,
              0.390609,
              0.606024,
              -0.28234,
              0.585578,
              0.420998,
              0.632419,
              -0.287924,
              0.584496,
              0.454357,
              0.656128,
              -0.291972,
              0.577766,
              0.488233,
              0.679953,
              -0.29456,
              0.56875,
              0.523248,
              0.704654,
              -0.295816,
              0.558388,
              0.559168,
              0.729016,
              -0.295157,
              0.544826,
              0.595326,
              0.752062,
              -0.292779,
              0.528273,
              0.631864,
              0.773138,
              -0.288681,
              0.508482,
              0.667793,
              0.794869,
              -0.283358,
              0.487341,
              0.704035,
              0.815101,
              -0.27608,
              0.46354,
              0.739925,
              0.834212,
              -0.26767,
              0.438672,
              0.775539,
              0.852368,
              -0.257397,
              0.411239,
              0.810895,
              0.870207,
              -0.245689,
              0.3829,
              0.846472,
              0.884063,
              -0.231452,
              0.351496,
              0.881788,
              0.898284,
              -0.215561,
              0.31895,
              0.917438,
              0.912964,
              -0.198208,
              0.287367,
              0.952422,
              0.924666,
              -0.180426,
              0.254487,
              0.987551,
              0.934429,
              -0.161525,
              0.222226,
              1.02142,
              0.943485,
              -0.141197,
              0.191143,
              1.05218,
              0.9521,
              -0.120085,
              0.161112,
              1.07937,
              0.957876,
              -0.0975881,
              0.130982,
              1.10403,
              0.966943,
              -0.0726842,
              0.0990553,
              1.12616,
              0.978313,
              -0.0483705,
              0.0662818,
              1.14619,
              0.990048,
              -0.0239072,
              0.0329243,
              1.16413,
              0.999984,
              461885e-9,
              -772859e-10,
              1.18099,
              0.321287,
              -935049e-11,
              0.455413,
              659662e-11,
              0.332595,
              -237513e-9,
              0.471437,
              167562e-9,
              0.332729,
              -949964e-9,
              0.471618,
              670192e-9,
              0.332305,
              -0.00213618,
              0.471028,
              0.00150712,
              0.332326,
              -0.00379765,
              0.471055,
              0.00267959,
              0.332344,
              -0.00593353,
              0.471072,
              0.00418751,
              0.332356,
              -0.00854349,
              0.471077,
              0.00603172,
              0.332403,
              -0.0116268,
              0.471121,
              0.00821362,
              0.332461,
              -0.0151824,
              0.47117,
              0.0107357,
              0.332552,
              -0.0192088,
              0.471251,
              0.0136014,
              0.332657,
              -0.0237024,
              0.47133,
              0.0168152,
              0.332835,
              -0.0286615,
              0.471487,
              0.0203853,
              0.333083,
              -0.0340765,
              0.471708,
              0.0243212,
              0.333547,
              -0.0398563,
              0.47219,
              0.0286518,
              0.333989,
              -0.0460916,
              0.472587,
              0.0333763,
              0.334532,
              -0.0527897,
              0.473054,
              0.0385084,
              0.335167,
              -0.0599284,
              0.473568,
              0.0440638,
              0.33608,
              -0.0673514,
              0.474362,
              0.0500962,
              0.337146,
              -0.0752237,
              0.475231,
              0.0566022,
              0.338462,
              -0.083418,
              0.476282,
              0.0636272,
              0.34014,
              -0.0919382,
              0.477615,
              0.0712153,
              0.342341,
              -0.100741,
              0.479404,
              0.079417,
              0.345088,
              -0.109905,
              0.481618,
              0.0882631,
              0.349049,
              -0.119369,
              0.485081,
              0.0978851,
              0.353939,
              -0.129033,
              0.489317,
              0.108336,
              0.359893,
              -0.139038,
              0.494309,
              0.119698,
              0.366945,
              -0.149411,
              0.499983,
              0.132024,
              0.375814,
              -0.159843,
              0.507185,
              0.145558,
              0.387112,
              -0.170664,
              0.516392,
              0.160433,
              0.40023,
              -0.181897,
              0.526519,
              0.176648,
              0.412555,
              -0.192785,
              0.53423,
              0.193922,
              0.427023,
              -0.203663,
              0.542741,
              0.212662,
              0.443685,
              -0.214695,
              0.552066,
              0.232944,
              0.461499,
              -0.225561,
              0.560762,
              0.254495,
              0.480975,
              -0.236257,
              0.569421,
              0.277531,
              0.501,
              -0.24639,
              0.576101,
              0.301724,
              0.521691,
              -0.256101,
              0.581493,
              0.327112,
              0.543478,
              -0.265289,
              0.585221,
              0.353917,
              0.566094,
              -0.273938,
              0.587614,
              0.381941,
              0.589578,
              -0.281679,
              0.587991,
              0.41172,
              0.614583,
              -0.287655,
              0.585928,
              0.444148,
              0.641813,
              -0.292228,
              0.582092,
              0.478617,
              0.666189,
              -0.295172,
              0.57398,
              0.51397,
              0.690475,
              -0.29648,
              0.561676,
              0.550118,
              0.715543,
              -0.296203,
              0.548758,
              0.586933,
              0.740405,
              -0.293999,
              0.532792,
              0.62384,
              0.762183,
              -0.28998,
              0.512735,
              0.660723,
              0.786069,
              -0.28478,
              0.492402,
              0.69807,
              0.806812,
              -0.277568,
              0.469058,
              0.734422,
              0.826987,
              -0.268951,
              0.443017,
              0.770946,
              0.844588,
              -0.259049,
              0.415501,
              0.80699,
              0.863725,
              -0.2471,
              0.387328,
              0.842107,
              0.879137,
              -0.234157,
              0.356108,
              0.878078,
              0.894634,
              -0.218719,
              0.324315,
              0.914058,
              0.909162,
              -0.201293,
              0.291813,
              0.949922,
              0.92072,
              -0.18267,
              0.258474,
              0.985337,
              0.93158,
              -0.163212,
              0.225593,
              1.0205,
              0.941238,
              -0.142771,
              0.193986,
              1.05273,
              0.949293,
              -0.120956,
              0.163392,
              1.08075,
              0.956226,
              -0.0985743,
              0.132934,
              1.10559,
              0.96546,
              -0.075118,
              0.101255,
              1.12823,
              0.977403,
              -0.0497921,
              0.0675441,
              1.149,
              0.989648,
              -0.0241574,
              0.0334681,
              1.16765,
              1.00001,
              5762e-7,
              -184807e-9,
              1.18519,
              0.303474,
              -916603e-11,
              0.4542,
              61243e-10,
              0.308894,
              -232869e-9,
              0.462306,
              155592e-9,
              0.309426,
              -931661e-9,
              0.463093,
              622499e-9,
              0.308643,
              -0.0020949,
              0.461933,
              0.00139979,
              0.308651,
              -0.0037242,
              0.461941,
              0.00248874,
              0.308662,
              -0.00581873,
              0.46195,
              0.00388933,
              0.308687,
              -0.00837818,
              0.461974,
              0.00560247,
              0.308728,
              -0.0114016,
              0.462011,
              0.00762948,
              0.308789,
              -0.0148884,
              0.462067,
              0.00997326,
              0.308882,
              -0.0188369,
              0.462151,
              0.0126375,
              0.309007,
              -0.0232436,
              0.462263,
              0.0156271,
              0.30918,
              -0.0281054,
              0.462417,
              0.0189498,
              0.309442,
              -0.0334065,
              0.462667,
              0.0226167,
              0.309901,
              -0.0390589,
              0.463162,
              0.0266614,
              0.310331,
              -0.0452042,
              0.463555,
              0.0310715,
              0.310858,
              -0.0517735,
              0.464019,
              0.0358698,
              0.311576,
              -0.0587359,
              0.464669,
              0.0410848,
              0.312436,
              -0.0660383,
              0.465406,
              0.0467453,
              0.313526,
              -0.0737266,
              0.466339,
              0.0528718,
              0.314903,
              -0.0817574,
              0.467504,
              0.0595039,
              0.316814,
              -0.090167,
              0.469226,
              0.0666888,
              0.318965,
              -0.0987555,
              0.470981,
              0.0744658,
              0.322077,
              -0.107792,
              0.473814,
              0.082912,
              0.325947,
              -0.117098,
              0.477241,
              0.0920846,
              0.331008,
              -0.126602,
              0.48184,
              0.102137,
              0.337893,
              -0.136619,
              0.488334,
              0.113135,
              0.345106,
              -0.146838,
              0.494415,
              0.12511,
              0.355111,
              -0.157357,
              0.503275,
              0.138356,
              0.365095,
              -0.167955,
              0.510966,
              0.152686,
              0.378344,
              -0.179157,
              0.521508,
              0.16856,
              0.391599,
              -0.190143,
              0.530455,
              0.18561,
              0.407786,
              -0.20123,
              0.541275,
              0.204308,
              0.425294,
              -0.212456,
              0.551784,
              0.224623,
              0.444021,
              -0.223568,
              0.561493,
              0.246172,
              0.463418,
              -0.234154,
              0.569886,
              0.268979,
              0.484077,
              -0.244546,
              0.577116,
              0.293411,
              0.505513,
              -0.254301,
              0.582914,
              0.318936,
              0.527672,
              -0.263564,
              0.587208,
              0.345856,
              0.550565,
              -0.272332,
              0.589277,
              0.374054,
              0.573656,
              -0.280011,
              0.588426,
              0.403276,
              0.59827,
              -0.286924,
              0.587504,
              0.43474,
              0.624731,
              -0.291994,
              0.583401,
              0.468767,
              0.652396,
              -0.295159,
              0.576997,
              0.504411,
              0.67732,
              -0.296954,
              0.565863,
              0.54114,
              0.703147,
              -0.296877,
              0.552316,
              0.57816,
              0.728715,
              -0.295147,
              0.536773,
              0.616124,
              0.752448,
              -0.291275,
              0.51771,
              0.653885,
              0.775169,
              -0.285905,
              0.496087,
              0.691537,
              0.799307,
              -0.279064,
              0.474232,
              0.729251,
              0.819482,
              -0.270294,
              0.447676,
              0.766267,
              0.837659,
              -0.260032,
              0.419656,
              0.802616,
              0.856903,
              -0.248497,
              0.391328,
              0.838583,
              0.873325,
              -0.235252,
              0.360285,
              0.874711,
              0.889788,
              -0.221126,
              0.329215,
              0.91077,
              0.904486,
              -0.204304,
              0.296392,
              0.94653,
              0.917711,
              -0.185562,
              0.262159,
              0.983828,
              0.928969,
              -0.165635,
              0.229142,
              1.01955,
              0.939707,
              -0.14442,
              0.19673,
              1.05317,
              0.948167,
              -0.122147,
              0.165095,
              1.0823,
              0.955222,
              -0.099098,
              0.13451,
              1.10791,
              0.964401,
              -0.0755332,
              0.102476,
              1.1312,
              0.976605,
              -0.0513817,
              0.0689667,
              1.15218,
              0.989085,
              -0.0258499,
              0.034506,
              1.17129,
              0.999908,
              617773e-9,
              -271268e-9,
              1.18961,
              0.285803,
              -905752e-11,
              0.452348,
              572272e-11,
              0.284689,
              -22732e-8,
              0.450581,
              143626e-9,
              0.285263,
              -910214e-9,
              0.451482,
              575099e-9,
              0.285302,
              -0.00204784,
              0.451553,
              0.00129395,
              0.285318,
              -0.00364057,
              0.451574,
              0.0023006,
              0.28533,
              -0.00568813,
              0.451585,
              0.00359547,
              0.285361,
              -0.00819001,
              0.451618,
              0.00517934,
              0.285397,
              -0.0111458,
              0.45165,
              0.007054,
              0.285447,
              -0.0145536,
              0.451688,
              0.00922167,
              0.285527,
              -0.0184127,
              0.451758,
              0.0116869,
              0.285688,
              -0.0227207,
              0.451929,
              0.0144555,
              0.28584,
              -0.0274712,
              0.452055,
              0.0175341,
              0.286136,
              -0.0326278,
              0.452369,
              0.0209406,
              0.286574,
              -0.0381792,
              0.452853,
              0.0246965,
              0.287012,
              -0.0441879,
              0.453272,
              0.0287996,
              0.287542,
              -0.0506096,
              0.453752,
              0.033268,
              0.288299,
              -0.0573634,
              0.454488,
              0.0381504,
              0.289186,
              -0.0645458,
              0.455294,
              0.0434447,
              0.290302,
              -0.0720405,
              0.456301,
              0.0491973,
              0.291776,
              -0.0799046,
              0.457648,
              0.0554453,
              0.29372,
              -0.088117,
              0.459483,
              0.0622311,
              0.296052,
              -0.0965328,
              0.461571,
              0.0695992,
              0.299563,
              -0.105409,
              0.465085,
              0.077658,
              0.30335,
              -0.114553,
              0.468506,
              0.0864176,
              0.309167,
              -0.123917,
              0.474423,
              0.0961078,
              0.31529,
              -0.13381,
              0.47995,
              0.106643,
              0.324163,
              -0.144021,
              0.488592,
              0.118322,
              0.333272,
              -0.154382,
              0.496461,
              0.131133,
              0.344224,
              -0.165015,
              0.50562,
              0.145208,
              0.357733,
              -0.176168,
              0.516719,
              0.16073,
              0.373046,
              -0.187468,
              0.528513,
              0.177807,
              0.38788,
              -0.198488,
              0.537713,
              0.196072,
              0.405133,
              -0.209545,
              0.547999,
              0.21605,
              0.423845,
              -0.220724,
              0.55759,
              0.237484,
              0.443777,
              -0.231518,
              0.566246,
              0.26039,
              0.464824,
              -0.242035,
              0.574326,
              0.284835,
              0.486635,
              -0.251898,
              0.58037,
              0.310518,
              0.51012,
              -0.261304,
              0.58568,
              0.337678,
              0.535301,
              -0.270384,
              0.590197,
              0.366242,
              0.559193,
              -0.27841,
              0.590569,
              0.395873,
              0.583544,
              -0.285325,
              0.588161,
              0.426857,
              0.608834,
              -0.291113,
              0.584249,
              0.459477,
              0.635753,
              -0.294882,
              0.57763,
              0.494734,
              0.664367,
              -0.297088,
              0.569479,
              0.532023,
              0.689688,
              -0.297364,
              0.555064,
              0.569629,
              0.715732,
              -0.295949,
              0.539522,
              0.608124,
              0.741307,
              -0.292259,
              0.521613,
              0.646231,
              0.764949,
              -0.287063,
              0.49969,
              0.684938,
              0.788599,
              -0.28012,
              0.476747,
              0.723548,
              0.81048,
              -0.27153,
              0.45116,
              0.761135,
              0.831372,
              -0.261289,
              0.424101,
              0.798916,
              0.850092,
              -0.249559,
              0.39443,
              0.835952,
              0.867777,
              -0.236348,
              0.363849,
              0.871606,
              0.884632,
              -0.221569,
              0.332477,
              0.907843,
              0.90047,
              -0.20618,
              0.300667,
              0.944187,
              0.914524,
              -0.188771,
              0.266552,
              0.981371,
              0.926892,
              -0.168362,
              0.232349,
              1.01841,
              0.937951,
              -0.146761,
              0.199359,
              1.05308,
              0.947236,
              -0.123813,
              0.1675,
              1.0839,
              0.954367,
              -0.099984,
              0.136166,
              1.11047,
              0.963907,
              -0.0759278,
              0.103808,
              1.13414,
              0.976218,
              -0.0511367,
              0.0697061,
              1.15575,
              0.988772,
              -0.0267415,
              0.0352529,
              1.17531,
              0.999888,
              -520778e-9,
              289926e-9,
              1.19389,
              0.263546,
              -883274e-11,
              0.441896,
              526783e-11,
              0.262352,
              -221849e-9,
              0.439889,
              132311e-9,
              0.262325,
              -886683e-9,
              0.439848,
              528824e-9,
              0.26228,
              -0.00199476,
              0.439765,
              0.00118975,
              0.262372,
              -0.00354671,
              0.439922,
              0.00211568,
              0.26239,
              -0.00554141,
              0.439941,
              0.00330652,
              0.262412,
              -0.00797888,
              0.439961,
              0.00476346,
              0.262453,
              -0.0108584,
              0.440002,
              0.00648818,
              0.262528,
              -0.0141788,
              0.440085,
              0.0084835,
              0.262615,
              -0.017938,
              0.440166,
              0.0107533,
              0.262744,
              -0.0221346,
              0.440291,
              0.0133044,
              0.262939,
              -0.026762,
              0.440493,
              0.0161445,
              0.263277,
              -0.0317573,
              0.440889,
              0.0192974,
              0.26368,
              -0.0371832,
              0.441338,
              0.0227699,
              0.264106,
              -0.0430371,
              0.441753,
              0.0265698,
              0.264624,
              -0.0493035,
              0.442227,
              0.0307178,
              0.265378,
              -0.0558669,
              0.442985,
              0.0352616,
              0.266253,
              -0.0628718,
              0.443795,
              0.0401968,
              0.267478,
              -0.0701569,
              0.445008,
              0.04559,
              0.269062,
              -0.077845,
              0.446599,
              0.0514539,
              0.270926,
              -0.0857941,
              0.448349,
              0.0578382,
              0.273693,
              -0.0940773,
              0.451221,
              0.0648363,
              0.276746,
              -0.102704,
              0.454097,
              0.0724389,
              0.281693,
              -0.111735,
              0.459517,
              0.0808744,
              0.287335,
              -0.121004,
              0.46531,
              0.0901551,
              0.29448,
              -0.130734,
              0.472605,
              0.100371,
              0.30257,
              -0.140777,
              0.480251,
              0.111644,
              0.312465,
              -0.15111,
              0.489444,
              0.124111,
              0.324856,
              -0.16189,
              0.500919,
              0.137979,
              0.33774,
              -0.172946,
              0.511317,
              0.153163,
              0.35255,
              -0.184152,
              0.522684,
              0.169817,
              0.367786,
              -0.19522,
              0.53248,
              0.187886,
              0.385474,
              -0.20632,
              0.543326,
              0.207634,
              0.404976,
              -0.217744,
              0.554109,
              0.229165,
              0.425203,
              -0.228691,
              0.563395,
              0.252068,
              0.446704,
              -0.239299,
              0.571565,
              0.276471,
              0.468951,
              -0.249348,
              0.577935,
              0.302323,
              0.493487,
              -0.258933,
              0.584309,
              0.329882,
              0.517861,
              -0.268009,
              0.58773,
              0.358525,
              0.543309,
              -0.276238,
              0.589612,
              0.388585,
              0.569704,
              -0.28356,
              0.589294,
              0.419787,
              0.594871,
              -0.289497,
              0.585137,
              0.452114,
              0.622555,
              -0.294452,
              0.580356,
              0.486466,
              0.651167,
              -0.296918,
              0.57185,
              0.523079,
              0.677332,
              -0.297647,
              0.558428,
              0.5611,
              0.703718,
              -0.296321,
              0.542232,
              0.599592,
              0.730262,
              -0.293339,
              0.524541,
              0.639138,
              0.754304,
              -0.288036,
              0.502691,
              0.677978,
              0.778051,
              -0.281018,
              0.479212,
              0.716537,
              0.801557,
              -0.272414,
              0.454071,
              0.75586,
              0.822559,
              -0.262419,
              0.425952,
              0.794477,
              0.843051,
              -0.250702,
              0.397313,
              0.832664,
              0.86232,
              -0.237264,
              0.366534,
              0.869876,
              0.879044,
              -0.222716,
              0.334816,
              0.906973,
              0.896362,
              -0.206827,
              0.303143,
              0.943558,
              0.910342,
              -0.189659,
              0.269699,
              0.979759,
              0.924119,
              -0.171108,
              0.236411,
              1.01718,
              0.935374,
              -0.149579,
              0.202224,
              1.05289,
              0.944295,
              -0.126295,
              0.16989,
              1.08496,
              0.952227,
              -0.101511,
              0.138089,
              1.11256,
              0.962041,
              -0.0766392,
              0.105053,
              1.1375,
              0.97528,
              -0.0511967,
              0.070329,
              1.15983,
              0.988476,
              -0.025463,
              0.0351268,
              1.17987,
              0.999962,
              286808e-10,
              145564e-10,
              1.19901,
              0.227089,
              -841413e-11,
              0.404216,
              472707e-11,
              0.239725,
              -215083e-9,
              0.426708,
              120833e-9,
              0.239904,
              -860718e-9,
              0.427028,
              483555e-9,
              0.239911,
              -0.00193661,
              0.427039,
              0.00108806,
              0.239914,
              -0.00344276,
              0.42704,
              0.00193457,
              0.239933,
              -0.00537907,
              0.427064,
              0.00302363,
              0.239944,
              -0.00774482,
              0.427065,
              0.00435604,
              0.239993,
              -0.01054,
              0.427122,
              0.00593398,
              0.240052,
              -0.0137626,
              0.427179,
              0.00775987,
              0.240148,
              -0.0174115,
              0.427279,
              0.00983854,
              0.240278,
              -0.021484,
              0.42741,
              0.0121763,
              0.240472,
              -0.0259729,
              0.427618,
              0.0147827,
              0.240839,
              -0.0308131,
              0.428086,
              0.0176837,
              0.241201,
              -0.0360893,
              0.428482,
              0.0208775,
              0.241626,
              -0.0417723,
              0.428907,
              0.0243821,
              0.242207,
              -0.0478337,
              0.42952,
              0.0282228,
              0.24298,
              -0.0542199,
              0.430332,
              0.0324333,
              0.243881,
              -0.0610015,
              0.431222,
              0.0370252,
              0.245123,
              -0.0680874,
              0.432512,
              0.0420535,
              0.24667,
              -0.0755482,
              0.434088,
              0.0475414,
              0.248779,
              -0.0832873,
              0.436323,
              0.0535542,
              0.251665,
              -0.0913546,
              0.439509,
              0.0601716,
              0.255305,
              -0.0998489,
              0.443478,
              0.0674282,
              0.260049,
              -0.108576,
              0.448713,
              0.0754673,
              0.266192,
              -0.117754,
              0.455524,
              0.084339,
              0.273158,
              -0.127294,
              0.4627,
              0.0941683,
              0.282131,
              -0.137311,
              0.472068,
              0.10515,
              0.293332,
              -0.147736,
              0.483565,
              0.117402,
              0.304667,
              -0.158357,
              0.493702,
              0.130824,
              0.317785,
              -0.169274,
              0.504708,
              0.145724,
              0.333245,
              -0.180595,
              0.517107,
              0.16215,
              0.349843,
              -0.191892,
              0.528849,
              0.180149,
              0.367944,
              -0.203168,
              0.540301,
              0.199746,
              0.387579,
              -0.214443,
              0.551514,
              0.221047,
              0.408247,
              -0.225624,
              0.560906,
              0.243981,
              0.43014,
              -0.236422,
              0.56959,
              0.268513,
              0.452669,
              -0.24654,
              0.576098,
              0.294409,
              0.476196,
              -0.256157,
              0.580925,
              0.322002,
              0.501157,
              -0.265289,
              0.584839,
              0.351052,
              0.527632,
              -0.273671,
              0.587614,
              0.3812,
              0.555754,
              -0.281254,
              0.589119,
              0.412994,
              0.581682,
              -0.287448,
              0.585204,
              0.445498,
              0.608196,
              -0.292614,
              0.579006,
              0.479505,
              0.635661,
              -0.296068,
              0.571297,
              0.514643,
              0.664999,
              -0.297395,
              0.560855,
              0.552213,
              0.691039,
              -0.296645,
              0.544525,
              0.591365,
              0.7179,
              -0.293785,
              0.526535,
              0.630883,
              0.744059,
              -0.289089,
              0.50545,
              0.670932,
              0.76863,
              -0.282239,
              0.482514,
              0.710904,
              0.793273,
              -0.273688,
              0.457246,
              0.750259,
              0.814731,
              -0.26328,
              0.428872,
              0.78948,
              0.835603,
              -0.251526,
              0.399384,
              0.828597,
              0.85489,
              -0.238339,
              0.368811,
              0.866892,
              0.872828,
              -0.223607,
              0.336617,
              0.90563,
              0.889462,
              -0.207538,
              0.303997,
              0.943538,
              0.904929,
              -0.190297,
              0.270812,
              0.980591,
              0.919101,
              -0.172034,
              0.237453,
              1.01935,
              0.930536,
              -0.152058,
              0.204431,
              1.05498,
              0.941223,
              -0.129515,
              0.172495,
              1.08717,
              0.94982,
              -0.104263,
              0.140175,
              1.11551,
              0.960592,
              -0.0781944,
              0.106465,
              1.14098,
              0.974629,
              -0.051688,
              0.0711592,
              1.16418,
              0.98811,
              -0.0253929,
              0.0354432,
              1.18465,
              1.00004,
              804378e-9,
              -330876e-9,
              1.20462,
              0.214668,
              -821282e-11,
              0.406619,
              433582e-11,
              0.218053,
              -208144e-9,
              0.413025,
              109887e-9,
              0.217987,
              -832212e-9,
              0.412901,
              439362e-9,
              0.217971,
              -0.00187246,
              0.412876,
              988623e-9,
              0.217968,
              -0.00332855,
              0.41286,
              0.00175772,
              0.217985,
              -0.00520055,
              0.412882,
              0.00274729,
              0.218014,
              -0.00748814,
              0.412916,
              0.00395842,
              0.218054,
              -0.0101901,
              0.412957,
              0.00539274,
              0.218106,
              -0.0133057,
              0.413005,
              0.00705348,
              0.218217,
              -0.0168342,
              0.413139,
              0.00894581,
              0.218338,
              -0.0207707,
              0.413258,
              0.0110754,
              0.21855,
              -0.0251001,
              0.413509,
              0.0134551,
              0.218913,
              -0.0297861,
              0.413992,
              0.0161081,
              0.219265,
              -0.0348956,
              0.414383,
              0.0190307,
              0.219696,
              -0.0403909,
              0.414839,
              0.0222458,
              0.220329,
              -0.0462003,
              0.415567,
              0.025792,
              0.220989,
              -0.0524208,
              0.41621,
              0.0296637,
              0.222027,
              -0.058948,
              0.417385,
              0.0339323,
              0.223301,
              -0.0658208,
              0.418779,
              0.0386055,
              0.224988,
              -0.0730347,
              0.420665,
              0.0437355,
              0.227211,
              -0.0805274,
              0.423198,
              0.0493844,
              0.230131,
              -0.088395,
              0.426566,
              0.0556135,
              0.233908,
              -0.0966208,
              0.43091,
              0.0624829,
              0.239092,
              -0.105223,
              0.437148,
              0.0701636,
              0.245315,
              -0.11424,
              0.444302,
              0.0786949,
              0.253166,
              -0.12368,
              0.453262,
              0.0882382,
              0.262374,
              -0.133569,
              0.463211,
              0.0988682,
              0.273145,
              -0.143836,
              0.474271,
              0.110727,
              0.285512,
              -0.154577,
              0.4863,
              0.123945,
              0.299512,
              -0.165501,
              0.498817,
              0.138581,
              0.314287,
              -0.176698,
              0.510341,
              0.154676,
              0.331083,
              -0.188066,
              0.522583,
              0.172459,
              0.349615,
              -0.199597,
              0.534879,
              0.191979,
              0.369318,
              -0.210843,
              0.546083,
              0.21309,
              0.390377,
              -0.222068,
              0.5562,
              0.235998,
              0.412411,
              -0.233059,
              0.564704,
              0.260518,
              0.435715,
              -0.24357,
              0.572314,
              0.286795,
              0.461196,
              -0.253356,
              0.579395,
              0.314559,
              0.485587,
              -0.262362,
              0.581985,
              0.343581,
              0.511908,
              -0.270895,
              0.584347,
              0.374367,
              0.539798,
              -0.278452,
              0.58505,
              0.406015,
              0.567974,
              -0.284877,
              0.583344,
              0.439168,
              0.594303,
              -0.290124,
              0.577348,
              0.473005,
              0.622951,
              -0.294183,
              0.570751,
              0.508534,
              0.652404,
              -0.296389,
              0.561541,
              0.544764,
              0.679291,
              -0.296605,
              0.546426,
              0.582927,
              0.706437,
              -0.294095,
              0.528599,
              0.622681,
              0.734485,
              -0.28978,
              0.508676,
              0.663567,
              0.758841,
              -0.283363,
              0.484768,
              0.704092,
              0.78537,
              -0.275015,
              0.460434,
              0.745101,
              0.807315,
              -0.264689,
              0.432166,
              0.784712,
              0.8271,
              -0.252597,
              0.401807,
              0.824241,
              0.849191,
              -0.239154,
              0.371458,
              0.863803,
              0.867046,
              -0.224451,
              0.338873,
              0.903063,
              0.8852,
              -0.208342,
              0.306175,
              0.942763,
              0.901771,
              -0.190684,
              0.272759,
              0.981559,
              0.915958,
              -0.172105,
              0.239306,
              1.02048,
              0.928046,
              -0.152214,
              0.206071,
              1.05765,
              0.939961,
              -0.130247,
              0.17367,
              1.08999,
              0.948711,
              -0.10672,
              0.142201,
              1.11829,
              0.959305,
              -0.0808688,
              0.108454,
              1.14467,
              0.973009,
              -0.0539145,
              0.0728109,
              1.16839,
              0.987631,
              -0.0262947,
              0.0360625,
              1.19004,
              0.999978,
              0.00132758,
              -559424e-9,
              1.21058,
              0.193925,
              -793421e-11,
              0.391974,
              392537e-11,
              0.196746,
              -200315e-9,
              0.397675,
              991033e-10,
              0.19667,
              -801099e-9,
              0.397521,
              396342e-9,
              0.196633,
              -0.00180246,
              0.397445,
              891829e-9,
              0.196654,
              -0.00320443,
              0.397482,
              0.00158582,
              0.196659,
              -0.00500647,
              0.39748,
              0.00247867,
              0.196683,
              -0.0072086,
              0.397506,
              0.00357167,
              0.196728,
              -0.00981001,
              0.397562,
              0.00486675,
              0.196792,
              -0.0128096,
              0.397633,
              0.00636707,
              0.19689,
              -0.0162055,
              0.397746,
              0.00807752,
              0.197017,
              -0.0199943,
              0.397884,
              0.0100052,
              0.19729,
              -0.024139,
              0.39827,
              0.0121691,
              0.197583,
              -0.0286671,
              0.398639,
              0.0145755,
              0.197927,
              -0.0335858,
              0.399034,
              0.0172355,
              0.198383,
              -0.0388806,
              0.399554,
              0.0201718,
              0.199002,
              -0.0444736,
              0.400289,
              0.0234194,
              0.199739,
              -0.0504583,
              0.401111,
              0.026984,
              0.200784,
              -0.056729,
              0.402349,
              0.0309217,
              0.202075,
              -0.0633643,
              0.403841,
              0.0352496,
              0.203898,
              -0.0703247,
              0.406076,
              0.0400313,
              0.206199,
              -0.0775565,
              0.408841,
              0.0453282,
              0.209252,
              -0.085184,
              0.41259,
              0.0511794,
              0.213638,
              -0.0931994,
              0.418288,
              0.0577459,
              0.21881,
              -0.101617,
              0.424681,
              0.0650508,
              0.225642,
              -0.11052,
              0.433429,
              0.0732759,
              0.233717,
              -0.119772,
              0.442897,
              0.0824683,
              0.242823,
              -0.129505,
              0.452888,
              0.0927484,
              0.254772,
              -0.139906,
              0.466407,
              0.104417,
              0.266603,
              -0.150402,
              0.477413,
              0.117211,
              0.28073,
              -0.161395,
              0.490519,
              0.131598,
              0.295399,
              -0.172465,
              0.50201,
              0.147407,
              0.312705,
              -0.183982,
              0.515311,
              0.165031,
              0.331335,
              -0.195532,
              0.52786,
              0.184336,
              0.351037,
              -0.206971,
              0.5392,
              0.205361,
              0.372175,
              -0.218117,
              0.54941,
              0.228043,
              0.394548,
              -0.229327,
              0.558642,
              0.25267,
              0.419598,
              -0.240052,
              0.567861,
              0.279071,
              0.443922,
              -0.249937,
              0.573332,
              0.306882,
              0.471495,
              -0.259407,
              0.58013,
              0.33661,
              0.496769,
              -0.267749,
              0.580564,
              0.367328,
              0.524951,
              -0.275524,
              0.581696,
              0.399753,
              0.55318,
              -0.282148,
              0.579885,
              0.433134,
              0.581577,
              -0.287533,
              0.575471,
              0.467534,
              0.609231,
              -0.291612,
              0.567445,
              0.502943,
              0.637478,
              -0.293911,
              0.557657,
              0.53871,
              0.667795,
              -0.295096,
              0.546535,
              0.576568,
              0.694272,
              -0.294073,
              0.529561,
              0.614929,
              0.722937,
              -0.290386,
              0.510561,
              0.655909,
              0.749682,
              -0.284481,
              0.487846,
              0.697663,
              0.774754,
              -0.276188,
              0.462487,
              0.738515,
              0.799301,
              -0.266215,
              0.43481,
              0.779802,
              0.820762,
              -0.254116,
              0.404879,
              0.820045,
              0.843231,
              -0.240393,
              0.374559,
              0.860294,
              0.861857,
              -0.225503,
              0.341582,
              0.900965,
              0.880815,
              -0.209382,
              0.308778,
              0.941727,
              0.89766,
              -0.19155,
              0.275232,
              0.980916,
              0.912926,
              -0.172346,
              0.240938,
              1.02162,
              0.926391,
              -0.151799,
              0.207223,
              1.0597,
              0.938429,
              -0.129968,
              0.17484,
              1.09291,
              0.947834,
              -0.10651,
              0.142984,
              1.12248,
              0.958432,
              -0.0824098,
              0.109902,
              1.149,
              0.972402,
              -0.0565242,
              0.0744454,
              1.1733,
              0.987191,
              -0.028427,
              0.0373794,
              1.19538,
              0.999975,
              385685e-10,
              -4203e-8,
              1.21676,
              0.178114,
              -766075e-11,
              0.385418,
              354027e-11,
              0.176074,
              -191966e-9,
              0.381002,
              887135e-10,
              0.17601,
              -767549e-9,
              0.380861,
              354715e-9,
              0.17598,
              -0.00172696,
              0.380798,
              798168e-9,
              0.175994,
              -0.00307012,
              0.380824,
              0.00141928,
              0.176017,
              -0.00479684,
              0.380858,
              0.00221859,
              0.176019,
              -0.00690648,
              0.380839,
              0.00319714,
              0.176072,
              -0.00939888,
              0.380913,
              0.0043572,
              0.176131,
              -0.0122726,
              0.380979,
              0.005702,
              0.176239,
              -0.0155264,
              0.38112,
              0.00723689,
              0.176371,
              -0.0191551,
              0.381272,
              0.00896907,
              0.176638,
              -0.023117,
              0.381669,
              0.0109194,
              0.176912,
              -0.0274633,
              0.382015,
              0.0130903,
              0.177279,
              -0.032173,
              0.382476,
              0.0154949,
              0.17774,
              -0.0372219,
              0.383041,
              0.0181669,
              0.178344,
              -0.0426132,
              0.38378,
              0.0211209,
              0.179153,
              -0.0483309,
              0.384773,
              0.0243899,
              0.180197,
              -0.0543447,
              0.386076,
              0.0280062,
              0.181581,
              -0.0607122,
              0.387809,
              0.032004,
              0.18344,
              -0.0673855,
              0.390205,
              0.036453,
              0.186139,
              -0.0743989,
              0.393944,
              0.0414162,
              0.189432,
              -0.0817731,
              0.39832,
              0.0469394,
              0.193795,
              -0.0895464,
              0.404188,
              0.0531442,
              0.199641,
              -0.0978264,
              0.4121,
              0.0601374,
              0.206679,
              -0.106499,
              0.421425,
              0.0680078,
              0.214865,
              -0.115654,
              0.431504,
              0.076919,
              0.224406,
              -0.125268,
              0.442526,
              0.0868835,
              0.235876,
              -0.135475,
              0.455465,
              0.0981875,
              0.248335,
              -0.146023,
              0.4681,
              0.110759,
              0.262868,
              -0.157016,
              0.482069,
              0.124885,
              0.278962,
              -0.168245,
              0.496182,
              0.140645,
              0.295082,
              -0.17958,
              0.507401,
              0.157838,
              0.313738,
              -0.191227,
              0.520252,
              0.17695,
              0.333573,
              -0.202718,
              0.531708,
              0.197817,
              0.356433,
              -0.214424,
              0.544509,
              0.220785,
              0.378853,
              -0.225492,
              0.55373,
              0.245306,
              0.402717,
              -0.236236,
              0.561348,
              0.271593,
              0.428375,
              -0.246568,
              0.568538,
              0.299776,
              0.454724,
              -0.255941,
              0.573462,
              0.329433,
              0.482291,
              -0.264511,
              0.576356,
              0.360598,
              0.509706,
              -0.272129,
              0.576446,
              0.393204,
              0.538805,
              -0.278979,
              0.575298,
              0.427227,
              0.568919,
              -0.284528,
              0.572154,
              0.462157,
              0.596804,
              -0.288801,
              0.564691,
              0.497997,
              0.625987,
              -0.291334,
              0.555134,
              0.534467,
              0.656414,
              -0.292722,
              0.545051,
              0.571736,
              0.683916,
              -0.292185,
              0.528813,
              0.610158,
              0.711809,
              -0.290043,
              0.51106,
              0.649061,
              0.739547,
              -0.285246,
              0.490103,
              0.690081,
              0.766914,
              -0.277647,
              0.465523,
              0.732554,
              0.791375,
              -0.267603,
              0.437718,
              0.773982,
              0.814772,
              -0.256109,
              0.40882,
              0.81609,
              0.836691,
              -0.242281,
              0.377823,
              0.856849,
              0.856984,
              -0.227155,
              0.34496,
              0.898363,
              0.876332,
              -0.210395,
              0.311335,
              0.939471,
              0.894988,
              -0.192612,
              0.277703,
              0.980799,
              0.911113,
              -0.173236,
              0.243019,
              1.02215,
              0.924092,
              -0.152258,
              0.209037,
              1.06139,
              0.936828,
              -0.129575,
              0.175909,
              1.09635,
              0.946869,
              -0.10594,
              0.143852,
              1.12707,
              0.958284,
              -0.081318,
              0.110289,
              1.15419,
              0.972325,
              -0.0556133,
              0.0747232,
              1.17909,
              0.986878,
              -0.0297899,
              0.0383149,
              1.20163,
              0.999936,
              -0.00197169,
              912402e-9,
              1.22338,
              0.151174,
              -720365e-11,
              0.351531,
              309789e-11,
              0.155594,
              -18279e-8,
              0.361806,
              78608e-9,
              0.156099,
              -731569e-9,
              0.362982,
              314615e-9,
              0.156053,
              -0.00164578,
              0.362869,
              707845e-9,
              0.156093,
              -0.0029261,
              0.362961,
              0.00125884,
              0.156099,
              -0.00457155,
              0.362959,
              0.00196783,
              0.15612,
              -0.00658224,
              0.362982,
              0.00283622,
              0.156168,
              -0.00895774,
              0.363048,
              0.00386625,
              0.156221,
              -0.0116962,
              0.363101,
              0.00506109,
              0.156324,
              -0.0147973,
              0.363241,
              0.00642675,
              0.156476,
              -0.0182503,
              0.363448,
              0.00797175,
              0.156731,
              -0.0220266,
              0.36384,
              0.00971484,
              0.156994,
              -0.026176,
              0.364179,
              0.0116575,
              0.157341,
              -0.0306701,
              0.36462,
              0.0138207,
              0.157867,
              -0.0354591,
              0.365364,
              0.0162356,
              0.15846,
              -0.0406141,
              0.366111,
              0.0189092,
              0.159308,
              -0.0460519,
              0.367248,
              0.021885,
              0.160426,
              -0.0518096,
              0.368767,
              0.0252004,
              0.161877,
              -0.0578906,
              0.370745,
              0.0288825,
              0.163995,
              -0.0642812,
              0.373831,
              0.0330139,
              0.16655,
              -0.0710067,
              0.377366,
              0.0376283,
              0.170237,
              -0.0781522,
              0.382799,
              0.0428493,
              0.175096,
              -0.0857172,
              0.389915,
              0.0487324,
              0.181069,
              -0.0938025,
              0.398487,
              0.0554214,
              0.188487,
              -0.102363,
              0.408799,
              0.0630189,
              0.197029,
              -0.111343,
              0.419991,
              0.071634,
              0.206684,
              -0.120812,
              0.431455,
              0.0812797,
              0.218698,
              -0.131033,
              0.445746,
              0.0923651,
              0.230726,
              -0.141373,
              0.457471,
              0.104545,
              0.245516,
              -0.152387,
              0.472388,
              0.118449,
              0.261551,
              -0.163628,
              0.486671,
              0.133923,
              0.277437,
              -0.174814,
              0.49762,
              0.150849,
              0.296662,
              -0.186713,
              0.51162,
              0.169924,
              0.31795,
              -0.198513,
              0.525435,
              0.190848,
              0.339422,
              -0.210119,
              0.536267,
              0.213504,
              0.362143,
              -0.221354,
              0.545982,
              0.237947,
              0.387198,
              -0.23224,
              0.555364,
              0.264427,
              0.412349,
              -0.24257,
              0.561489,
              0.292519,
              0.439274,
              -0.252284,
              0.566903,
              0.322561,
              0.466779,
              -0.261023,
              0.569614,
              0.353952,
              0.496011,
              -0.26899,
              0.571589,
              0.387278,
              0.524964,
              -0.275498,
              0.570325,
              0.421356,
              0.556518,
              -0.281449,
              0.568792,
              0.457314,
              0.584363,
              -0.285526,
              0.560268,
              0.493199,
              0.614214,
              -0.28844,
              0.55205,
              0.530276,
              0.645684,
              -0.289777,
              0.541906,
              0.56855,
              0.673446,
              -0.289722,
              0.526464,
              0.606927,
              0.701924,
              -0.287792,
              0.509872,
              0.645945,
              0.73037,
              -0.284315,
              0.490649,
              0.685564,
              0.757405,
              -0.278804,
              0.467964,
              0.726511,
              0.784025,
              -0.269543,
              0.441468,
              0.768601,
              0.808255,
              -0.258117,
              0.41216,
              0.811321,
              0.830739,
              -0.244728,
              0.380606,
              0.853496,
              0.851914,
              -0.229428,
              0.348111,
              0.895374,
              0.872586,
              -0.212508,
              0.314732,
              0.937674,
              0.891581,
              -0.194025,
              0.280338,
              0.979869,
              0.907641,
              -0.174711,
              0.245203,
              1.02253,
              0.922233,
              -0.153509,
              0.21077,
              1.06371,
              0.935878,
              -0.130418,
              0.177399,
              1.09972,
              0.946338,
              -0.105558,
              0.144507,
              1.13124,
              0.957265,
              -0.080059,
              0.110508,
              1.15973,
              0.971668,
              -0.0539766,
              0.0742311,
              1.18515,
              0.9866,
              -0.0277101,
              0.0375224,
              1.20858,
              1.00021,
              -515531e-9,
              135226e-9,
              1.23135,
              0.137468,
              -686011e-11,
              0.345041,
              273315e-11,
              0.13703,
              -173378e-9,
              0.343936,
              690761e-10,
              0.136986,
              -693048e-9,
              0.34383,
              276126e-9,
              0.136964,
              -0.00155931,
              0.343761,
              621337e-9,
              0.137003,
              -0.00277211,
              0.343863,
              0.00110494,
              0.137012,
              -0.00433103,
              0.343868,
              0.00172744,
              0.137043,
              -0.00623606,
              0.343916,
              0.00249022,
              0.13709,
              -0.0084868,
              0.343986,
              0.00339559,
              0.137145,
              -0.0110814,
              0.344045,
              0.00444687,
              0.137242,
              -0.0140187,
              0.344177,
              0.00565007,
              0.137431,
              -0.0172713,
              0.344491,
              0.00701868,
              0.137644,
              -0.0208605,
              0.344805,
              0.00856042,
              0.13791,
              -0.024792,
              0.345172,
              0.0102863,
              0.138295,
              -0.0290461,
              0.345734,
              0.0122185,
              0.138764,
              -0.0335957,
              0.346371,
              0.0143771,
              0.139415,
              -0.038467,
              0.347298,
              0.0167894,
              0.140272,
              -0.0436176,
              0.348527,
              0.0194895,
              0.141457,
              -0.0491016,
              0.350276,
              0.0225043,
              0.14303,
              -0.0548764,
              0.352646,
              0.0258962,
              0.145289,
              -0.0610096,
              0.356206,
              0.0297168,
              0.148502,
              -0.0674777,
              0.361488,
              0.0340562,
              0.152188,
              -0.074345,
              0.367103,
              0.0389534,
              0.157359,
              -0.0817442,
              0.375247,
              0.0445541,
              0.16379,
              -0.0896334,
              0.385064,
              0.0509535,
              0.171376,
              -0.098005,
              0.396082,
              0.0582611,
              0.179901,
              -0.106817,
              0.407418,
              0.06654,
              0.189892,
              -0.116239,
              0.420031,
              0.075994,
              0.201838,
              -0.12627,
              0.434321,
              0.0867239,
              0.214311,
              -0.136701,
              0.447631,
              0.0987517,
              0.228902,
              -0.147616,
              0.462046,
              0.112353,
              0.245107,
              -0.158871,
              0.476942,
              0.127605,
              0.262292,
              -0.170261,
              0.490285,
              0.144469,
              0.281215,
              -0.182017,
              0.503783,
              0.163282,
              0.301058,
              -0.193729,
              0.515505,
              0.183873,
              0.322752,
              -0.205512,
              0.52682,
              0.206466,
              0.347547,
              -0.217214,
              0.539473,
              0.231194,
              0.370969,
              -0.227966,
              0.546625,
              0.257288,
              0.397533,
              -0.238555,
              0.55472,
              0.285789,
              0.42398,
              -0.248278,
              0.559468,
              0.315746,
              0.452928,
              -0.257422,
              0.564095,
              0.347724,
              0.482121,
              -0.265306,
              0.565426,
              0.380922,
              0.510438,
              -0.272043,
              0.563205,
              0.415639,
              0.541188,
              -0.277614,
              0.561087,
              0.451702,
              0.571667,
              -0.281927,
              0.554922,
              0.48845,
              0.602432,
              -0.285015,
              0.546838,
              0.526442,
              0.634126,
              -0.286512,
              0.537415,
              0.564896,
              0.662816,
              -0.286388,
              0.522906,
              0.604037,
              0.692411,
              -0.284734,
              0.507003,
              0.643795,
              0.720946,
              -0.281297,
              0.488398,
              0.68298,
              0.748293,
              -0.276262,
              0.466353,
              0.723466,
              0.776931,
              -0.269978,
              0.443573,
              0.764565,
              0.801065,
              -0.260305,
              0.415279,
              0.805838,
              0.825843,
              -0.247426,
              0.384773,
              0.849985,
              0.84807,
              -0.232437,
              0.352555,
              0.893174,
              0.869122,
              -0.215806,
              0.318642,
              0.936564,
              0.888963,
              -0.197307,
              0.28381,
              0.980253,
              0.905547,
              -0.177203,
              0.247888,
              1.02463,
              0.918554,
              -0.155542,
              0.212904,
              1.06714,
              0.931395,
              -0.131948,
              0.1787,
              1.10451,
              0.941749,
              -0.106723,
              0.145902,
              1.13694,
              0.954551,
              -0.0804939,
              0.111193,
              1.1666,
              0.970279,
              -0.0534239,
              0.0744697,
              1.19249,
              0.986117,
              -0.0257452,
              0.0368788,
              1.21665,
              0.999938,
              0.00190634,
              -0.0010291,
              1.23981,
              0.118493,
              -647439e-11,
              0.32272,
              23772e-10,
              0.118765,
              -163023e-9,
              0.323456,
              598573e-10,
              0.118772,
              -65212e-8,
              0.323477,
              239447e-9,
              0.118843,
              -0.00146741,
              0.323657,
              538881e-9,
              0.118804,
              -0.00260846,
              0.323553,
              95826e-8,
              0.118826,
              -0.00407576,
              0.323595,
              0.00149845,
              0.118846,
              -0.00586826,
              0.323617,
              0.00216047,
              0.118886,
              -0.00798578,
              0.32367,
              0.00294679,
              0.118947,
              -0.0104273,
              0.323753,
              0.00386124,
              0.119055,
              -0.0131909,
              0.323922,
              0.00490999,
              0.119241,
              -0.0162444,
              0.324251,
              0.00610804,
              0.11944,
              -0.0196339,
              0.324544,
              0.00745805,
              0.119739,
              -0.0233378,
              0.325026,
              0.00897805,
              0.12011,
              -0.0273179,
              0.325586,
              0.0106895,
              0.120571,
              -0.0316143,
              0.326231,
              0.0126073,
              0.12124,
              -0.0361939,
              0.327264,
              0.0147654,
              0.122162,
              -0.0410511,
              0.328733,
              0.0172001,
              0.123378,
              -0.0462233,
              0.330659,
              0.0199375,
              0.125183,
              -0.0517109,
              0.333754,
              0.0230498,
              0.127832,
              -0.0575652,
              0.338507,
              0.026597,
              0.130909,
              -0.0637441,
              0.343666,
              0.0306345,
              0.135221,
              -0.0704302,
              0.351063,
              0.035273,
              0.14082,
              -0.0776364,
              0.360604,
              0.0406137,
              0.146781,
              -0.0852293,
              0.369638,
              0.0466788,
              0.155121,
              -0.0935351,
              0.3827,
              0.0537628,
              0.16398,
              -0.102234,
              0.39522,
              0.0617985,
              0.173926,
              -0.111465,
              0.40793,
              0.07097,
              0.185137,
              -0.121296,
              0.42105,
              0.0813426,
              0.19826,
              -0.13169,
              0.435735,
              0.0931596,
              0.212938,
              -0.142614,
              0.450932,
              0.106547,
              0.229046,
              -0.153884,
              0.465726,
              0.121575,
              0.246246,
              -0.165382,
              0.479461,
              0.138286,
              0.264637,
              -0.176806,
              0.492106,
              0.15666,
              0.284959,
              -0.188793,
              0.504774,
              0.17728,
              0.308157,
              -0.200763,
              0.518805,
              0.19988,
              0.330951,
              -0.21239,
              0.528231,
              0.224293,
              0.3549,
              -0.223521,
              0.536376,
              0.250541,
              0.381502,
              -0.234169,
              0.544846,
              0.278902,
              0.409529,
              -0.244077,
              0.551717,
              0.309227,
              0.437523,
              -0.253363,
              0.55517,
              0.341426,
              0.467624,
              -0.261659,
              0.557772,
              0.37518,
              0.497268,
              -0.268498,
              0.556442,
              0.41007,
              0.528294,
              -0.274018,
              0.553915,
              0.446445,
              0.559053,
              -0.278169,
              0.549153,
              0.483779,
              0.589329,
              -0.281229,
              0.539878,
              0.522249,
              0.622503,
              -0.282902,
              0.53162,
              0.561754,
              0.652382,
              -0.282815,
              0.518119,
              0.601544,
              0.681847,
              -0.281247,
              0.502187,
              0.641574,
              0.712285,
              -0.277986,
              0.484824,
              0.682633,
              0.740094,
              -0.273017,
              0.463483,
              0.723426,
              0.768478,
              -0.266692,
              0.441299,
              0.763747,
              0.794556,
              -0.258358,
              0.415238,
              0.805565,
              0.819408,
              -0.248807,
              0.386912,
              0.847254,
              0.843411,
              -0.236214,
              0.356165,
              0.891091,
              0.862397,
              -0.219794,
              0.320562,
              0.936174,
              0.883113,
              -0.201768,
              0.285322,
              0.982562,
              0.90023,
              -0.181672,
              0.249713,
              1.02862,
              0.915192,
              -0.159279,
              0.214546,
              1.07163,
              0.928458,
              -0.134725,
              0.180285,
              1.10995,
              0.94069,
              -0.10913,
              0.147119,
              1.14354,
              0.953409,
              -0.0821315,
              0.112492,
              1.17372,
              0.969537,
              -0.0542677,
              0.0752014,
              1.20043,
              0.985612,
              -0.0259096,
              0.0370361,
              1.22528,
              0.999835,
              0.00298198,
              -0.00151801,
              1.24959,
              0.10097,
              -602574e-11,
              0.300277,
              202619e-11,
              0.101577,
              -152164e-9,
              0.302077,
              511662e-10,
              0.101572,
              -608889e-9,
              0.302066,
              204751e-9,
              0.101566,
              -0.00136997,
              0.302047,
              460753e-9,
              0.101592,
              -0.00243557,
              0.302114,
              819497e-9,
              0.101608,
              -0.0038053,
              0.30214,
              0.00128154,
              0.101627,
              -0.00547906,
              0.30216,
              0.0018483,
              0.101669,
              -0.00745647,
              0.302224,
              0.00252223,
              0.101732,
              -0.00973615,
              0.302318,
              0.00330716,
              0.101844,
              -0.0123097,
              0.302513,
              0.00421061,
              0.102025,
              -0.0151681,
              0.30285,
              0.00524481,
              0.102224,
              -0.0183334,
              0.303166,
              0.0064154,
              0.102515,
              -0.0217819,
              0.303654,
              0.00774063,
              0.102886,
              -0.0255067,
              0.304243,
              0.0092398,
              0.103395,
              -0.029514,
              0.305089,
              0.0109339,
              0.104109,
              -0.0337912,
              0.306301,
              0.0128561,
              0.105074,
              -0.0383565,
              0.30798,
              0.0150338,
              0.10654,
              -0.0432132,
              0.310726,
              0.0175228,
              0.108478,
              -0.0484244,
              0.314351,
              0.0203648,
              0.111015,
              -0.0539339,
              0.319032,
              0.0236325,
              0.114682,
              -0.0598885,
              0.32605,
              0.0274188,
              0.11911,
              -0.0663375,
              0.334109,
              0.0317905,
              0.124736,
              -0.0733011,
              0.344013,
              0.0368502,
              0.131479,
              -0.0807744,
              0.355358,
              0.0427104,
              0.139283,
              -0.0888204,
              0.367614,
              0.0494788,
              0.148054,
              -0.0973394,
              0.380072,
              0.0572367,
              0.159037,
              -0.10665,
              0.395678,
              0.0662704,
              0.169794,
              -0.116221,
              0.40795,
              0.0763192,
              0.18314,
              -0.126632,
              0.423546,
              0.087956,
              0.197515,
              -0.137383,
              0.438213,
              0.101042,
              0.213514,
              -0.148641,
              0.453248,
              0.115827,
              0.23065,
              -0.160117,
              0.46688,
              0.132283,
              0.249148,
              -0.171807,
              0.479962,
              0.150644,
              0.270219,
              -0.183695,
              0.494618,
              0.171073,
              0.292338,
              -0.195574,
              0.506937,
              0.193378,
              0.314999,
              -0.207205,
              0.516463,
              0.217585,
              0.340991,
              -0.218955,
              0.528123,
              0.24428,
              0.367982,
              -0.229917,
              0.537025,
              0.272784,
              0.39432,
              -0.239737,
              0.541627,
              0.302742,
              0.423364,
              -0.249048,
              0.546466,
              0.335112,
              0.453751,
              -0.257329,
              0.549466,
              0.369032,
              0.48416,
              -0.264623,
              0.549503,
              0.404577,
              0.515262,
              -0.270411,
              0.547008,
              0.441337,
              0.547036,
              -0.274581,
              0.542249,
              0.479162,
              0.576614,
              -0.277266,
              0.533015,
              0.517904,
              0.611143,
              -0.279144,
              0.525512,
              0.558508,
              0.640989,
              -0.279001,
              0.51154,
              0.598995,
              0.671182,
              -0.277324,
              0.495641,
              0.639935,
              0.700848,
              -0.273908,
              0.477526,
              0.681017,
              0.729862,
              -0.269063,
              0.457955,
              0.722764,
              0.758273,
              -0.262282,
              0.434846,
              0.764349,
              0.784121,
              -0.254281,
              0.409203,
              0.806206,
              0.809798,
              -0.24505,
              0.382694,
              0.848617,
              0.834953,
              -0.233861,
              0.354034,
              0.892445,
              0.856817,
              -0.221308,
              0.321764,
              0.936263,
              0.877609,
              -0.205996,
              0.288118,
              0.982401,
              0.897489,
              -0.186702,
              0.253277,
              1.02975,
              0.913792,
              -0.164618,
              0.217963,
              1.07488,
              0.92785,
              -0.140023,
              0.183221,
              1.11487,
              0.940378,
              -0.11328,
              0.149385,
              1.14947,
              0.95273,
              -0.0853958,
              0.114152,
              1.1807,
              0.969059,
              -0.0568698,
              0.0769845,
              1.20912,
              0.985574,
              -0.0276502,
              0.0381186,
              1.23498,
              0.999943,
              0.00239052,
              -0.00126861,
              1.25987,
              0.0852715,
              -560067e-11,
              0.279021,
              171162e-11,
              0.0854143,
              -140871e-9,
              0.279483,
              430516e-10,
              0.0854191,
              -563385e-9,
              0.2795,
              172184e-9,
              0.0854188,
              -0.00126753,
              0.279493,
              387464e-9,
              0.0854229,
              -0.00225337,
              0.279501,
              68918e-8,
              0.0854443,
              -0.00352086,
              0.279549,
              0.00107803,
              0.0854697,
              -0.00506962,
              0.279591,
              0.00155536,
              0.0855093,
              -0.00689873,
              0.279652,
              0.00212354,
              0.0855724,
              -0.00900821,
              0.279752,
              0.00278703,
              0.0856991,
              -0.0113799,
              0.280011,
              0.0035551,
              0.085855,
              -0.0140314,
              0.280297,
              0.00443449,
              0.0860682,
              -0.016963,
              0.280682,
              0.00543636,
              0.086344,
              -0.0201438,
              0.281159,
              0.0065788,
              0.0867426,
              -0.0235999,
              0.281886,
              0.00787977,
              0.087239,
              -0.0273069,
              0.282745,
              0.0093606,
              0.0879815,
              -0.031269,
              0.284139,
              0.011056,
              0.0891258,
              -0.035531,
              0.28647,
              0.0130065,
              0.0906909,
              -0.0400947,
              0.289708,
              0.0152495,
              0.0927624,
              -0.0449638,
              0.293904,
              0.0178454,
              0.0958376,
              -0.0502427,
              0.300471,
              0.0208915,
              0.0995827,
              -0.0559514,
              0.30806,
              0.0244247,
              0.104526,
              -0.0622152,
              0.317874,
              0.0285721,
              0.110532,
              -0.0690046,
              0.329332,
              0.0334227,
              0.117385,
              -0.0763068,
              0.341217,
              0.0390466,
              0.12522,
              -0.084184,
              0.353968,
              0.0455786,
              0.134037,
              -0.0925248,
              0.366797,
              0.0530773,
              0.144014,
              -0.101487,
              0.380209,
              0.0617424,
              0.156013,
              -0.111273,
              0.395956,
              0.071777,
              0.168872,
              -0.121431,
              0.41053,
              0.0830905,
              0.183089,
              -0.132105,
              0.425073,
              0.0959341,
              0.198763,
              -0.143286,
              0.439833,
              0.110448,
              0.216159,
              -0.154841,
              0.454507,
              0.126769,
              0.234859,
              -0.166588,
              0.468368,
              0.14495,
              0.255879,
              -0.178626,
              0.482846,
              0.165233,
              0.27677,
              -0.190218,
              0.493489,
              0.187217,
              0.301184,
              -0.202227,
              0.506549,
              0.211659,
              0.325852,
              -0.213764,
              0.5158,
              0.237922,
              0.352824,
              -0.22487,
              0.525442,
              0.26632,
              0.380882,
              -0.235246,
              0.532487,
              0.296691,
              0.410137,
              -0.244847,
              0.537703,
              0.329179,
              0.439787,
              -0.253122,
              0.540361,
              0.363135,
              0.472291,
              -0.260517,
              0.542734,
              0.399222,
              0.501856,
              -0.266519,
              0.538826,
              0.436352,
              0.534816,
              -0.270905,
              0.535152,
              0.474505,
              0.565069,
              -0.273826,
              0.525979,
              0.513988,
              0.597154,
              -0.275333,
              0.516394,
              0.554852,
              0.630473,
              -0.275314,
              0.506206,
              0.596592,
              0.660574,
              -0.273323,
              0.489769,
              0.638117,
              0.692015,
              -0.270008,
              0.472578,
              0.680457,
              0.720647,
              -0.265001,
              0.452134,
              0.723008,
              0.750528,
              -0.258311,
              0.430344,
              0.765954,
              0.777568,
              -0.250046,
              0.405624,
              0.809012,
              0.80387,
              -0.240114,
              0.378339,
              0.852425,
              0.828439,
              -0.228737,
              0.349877,
              0.895346,
              0.851472,
              -0.216632,
              0.318968,
              0.940695,
              0.873906,
              -0.202782,
              0.287489,
              0.987235,
              0.89467,
              -0.187059,
              0.254394,
              1.03348,
              0.912281,
              -0.168818,
              0.221294,
              1.07812,
              0.927358,
              -0.146494,
              0.18675,
              1.11928,
              0.940385,
              -0.120009,
              0.152322,
              1.15609,
              0.952672,
              -0.0917183,
              0.117514,
              1.18875,
              0.968496,
              -0.0620321,
              0.0797405,
              1.21821,
              0.985236,
              -0.0314945,
              0.0402383,
              1.24523,
              0.99998,
              -575153e-9,
              110644e-9,
              1.27133,
              0.0702429,
              -512222e-11,
              0.255273,
              140947e-11,
              0.0702981,
              -128826e-9,
              0.255469,
              354488e-10,
              0.0703691,
              -515562e-9,
              0.255727,
              141874e-9,
              0.0703805,
              -0.00116,
              0.255754,
              31929e-8,
              0.0703961,
              -0.00206224,
              0.255813,
              567999e-9,
              0.0704102,
              -0.00322223,
              0.255839,
              88871e-8,
              0.0704298,
              -0.00463928,
              0.255863,
              0.00128272,
              0.0704759,
              -0.00631375,
              0.255953,
              0.00175283,
              0.0705434,
              -0.00824317,
              0.256079,
              0.00230342,
              0.0706693,
              -0.010412,
              0.25636,
              0.0029443,
              0.0708189,
              -0.0128439,
              0.256647,
              0.00368031,
              0.0710364,
              -0.0155177,
              0.257084,
              0.00452614,
              0.0713223,
              -0.0184374,
              0.257637,
              0.00549706,
              0.0717182,
              -0.0216002,
              0.258416,
              0.00661246,
              0.072321,
              -0.0249966,
              0.259699,
              0.00790147,
              0.0731446,
              -0.0286566,
              0.261475,
              0.0093884,
              0.0743352,
              -0.0325888,
              0.264132,
              0.0111186,
              0.0760676,
              -0.036843,
              0.26815,
              0.013145,
              0.078454,
              -0.0414292,
              0.273636,
              0.0155251,
              0.0818618,
              -0.0464634,
              0.281653,
              0.0183525,
              0.0857382,
              -0.0519478,
              0.289992,
              0.0216642,
              0.0908131,
              -0.0579836,
              0.30066,
              0.0255956,
              0.0967512,
              -0.0645124,
              0.312204,
              0.0301954,
              0.103717,
              -0.0716505,
              0.325001,
              0.0356017,
              0.111596,
              -0.0793232,
              0.338129,
              0.041896,
              0.120933,
              -0.087645,
              0.352853,
              0.0492447,
              0.130787,
              -0.096492,
              0.366192,
              0.0576749,
              0.142311,
              -0.105973,
              0.380864,
              0.0673969,
              0.155344,
              -0.116182,
              0.396575,
              0.0785899,
              0.169535,
              -0.126815,
              0.411443,
              0.0912377,
              0.185173,
              -0.138015,
              0.426256,
              0.105607,
              0.201755,
              -0.149325,
              0.439607,
              0.121551,
              0.221334,
              -0.161207,
              0.455467,
              0.139608,
              0.241461,
              -0.173162,
              0.469096,
              0.159591,
              0.26294,
              -0.18504,
              0.481014,
              0.18156,
              0.286776,
              -0.196881,
              0.493291,
              0.205781,
              0.311596,
              -0.208311,
              0.503556,
              0.231819,
              0.338667,
              -0.219671,
              0.513268,
              0.260274,
              0.366021,
              -0.230451,
              0.519414,
              0.290862,
              0.395875,
              -0.240131,
              0.526766,
              0.323196,
              0.425564,
              -0.248566,
              0.52905,
              0.357071,
              0.457094,
              -0.256195,
              0.530796,
              0.393262,
              0.488286,
              -0.262331,
              0.528703,
              0.430797,
              0.522291,
              -0.267141,
              0.52727,
              0.470231,
              0.554172,
              -0.270411,
              0.519848,
              0.510477,
              0.586427,
              -0.271986,
              0.510307,
              0.551594,
              0.619638,
              -0.27192,
              0.499158,
              0.593849,
              0.650656,
              -0.269817,
              0.483852,
              0.636314,
              0.68284,
              -0.266267,
              0.467515,
              0.679679,
              0.714356,
              -0.26113,
              0.44931,
              0.723884,
              0.742717,
              -0.254067,
              0.425789,
              0.767245,
              0.770894,
              -0.245652,
              0.401144,
              0.811819,
              0.797358,
              -0.235554,
              0.374224,
              0.856315,
              0.823377,
              -0.223896,
              0.346167,
              0.901077,
              0.847456,
              -0.210865,
              0.316056,
              0.946502,
              0.870697,
              -0.196574,
              0.284503,
              0.993711,
              0.891068,
              -0.180814,
              0.251628,
              1.04134,
              0.909267,
              -0.163314,
              0.219065,
              1.08609,
              0.925653,
              -0.143304,
              0.186446,
              1.12702,
              0.940017,
              -0.121322,
              0.153416,
              1.16371,
              0.952398,
              -0.0973872,
              0.120334,
              1.19712,
              0.967568,
              -0.0698785,
              0.08352,
              1.22791,
              0.984772,
              -0.0390031,
              0.0439209,
              1.25672,
              1.00026,
              -0.0070087,
              0.00315668,
              1.28428,
              0.0556653,
              -459654e-11,
              0.227325,
              112556e-11,
              0.0565238,
              -116382e-9,
              0.230826,
              284985e-10,
              0.0565717,
              -465666e-9,
              0.231026,
              114036e-9,
              0.0565859,
              -0.00104773,
              0.231079,
              256656e-9,
              0.0565761,
              -0.00186255,
              0.231025,
              45663e-8,
              0.0565913,
              -0.00291002,
              0.231058,
              714664e-9,
              0.0566108,
              -0.00418998,
              0.231085,
              0.00103224,
              0.0566532,
              -0.00570206,
              0.231169,
              0.00141202,
              0.0567473,
              -0.00743666,
              0.231417,
              0.00186018,
              0.0568567,
              -0.00940298,
              0.231661,
              0.00238264,
              0.0569859,
              -0.0115991,
              0.231895,
              0.00298699,
              0.0572221,
              -0.0140096,
              0.232456,
              0.00368957,
              0.057519,
              -0.0166508,
              0.233096,
              0.00450303,
              0.0579534,
              -0.01951,
              0.234094,
              0.00544945,
              0.0585922,
              -0.0225991,
              0.235629,
              0.00655564,
              0.0595647,
              -0.0259416,
              0.238106,
              0.00785724,
              0.0609109,
              -0.0295661,
              0.241557,
              0.00939127,
              0.0628751,
              -0.0335126,
              0.246652,
              0.0112198,
              0.0656908,
              -0.0378604,
              0.254091,
              0.0134168,
              0.0691347,
              -0.0426543,
              0.262666,
              0.0160374,
              0.0732165,
              -0.0478967,
              0.272029,
              0.0191514,
              0.0782863,
              -0.0536716,
              0.283007,
              0.0228597,
              0.0843973,
              -0.0600683,
              0.295732,
              0.0272829,
              0.0913598,
              -0.0670095,
              0.308779,
              0.032484,
              0.0994407,
              -0.0745516,
              0.322886,
              0.0385886,
              0.108189,
              -0.082712,
              0.336408,
              0.0457133,
              0.118574,
              -0.0914927,
              0.351692,
              0.0539832,
              0.129989,
              -0.100854,
              0.366502,
              0.0635162,
              0.142722,
              -0.110837,
              0.381675,
              0.0744386,
              0.156654,
              -0.121353,
              0.3963,
              0.0868483,
              0.172151,
              -0.132414,
              0.411477,
              0.100963,
              0.188712,
              -0.143809,
              0.42508,
              0.116795,
              0.208093,
              -0.155765,
              0.441328,
              0.134715,
              0.227936,
              -0.167608,
              0.454328,
              0.154396,
              0.249495,
              -0.179579,
              0.467235,
              0.176179,
              0.27362,
              -0.191488,
              0.480248,
              0.200193,
              0.296371,
              -0.202618,
              0.487886,
              0.225775,
              0.324234,
              -0.214133,
              0.499632,
              0.25441,
              0.353049,
              -0.225212,
              0.509532,
              0.285077,
              0.381785,
              -0.234875,
              0.514265,
              0.317047,
              0.414038,
              -0.244205,
              0.521282,
              0.351874,
              0.445251,
              -0.252145,
              0.522931,
              0.388279,
              0.476819,
              -0.258433,
              0.520947,
              0.425825,
              0.509209,
              -0.263411,
              0.517669,
              0.465104,
              0.542759,
              -0.266732,
              0.512841,
              0.505741,
              0.574822,
              -0.268263,
              0.503317,
              0.547611,
              0.609324,
              -0.268489,
              0.493035,
              0.590953,
              0.641772,
              -0.266941,
              0.478816,
              0.63488,
              0.674049,
              -0.263297,
              0.462863,
              0.679072,
              0.705071,
              -0.257618,
              0.442931,
              0.723487,
              0.734709,
              -0.250625,
              0.421299,
              0.768708,
              0.763704,
              -0.24179,
              0.397085,
              0.814375,
              0.791818,
              -0.231115,
              0.370577,
              0.859907,
              0.817439,
              -0.21922,
              0.34232,
              0.906715,
              0.843202,
              -0.205658,
              0.312627,
              0.953943,
              0.866639,
              -0.190563,
              0.280933,
              1.00185,
              0.888129,
              -0.173978,
              0.248393,
              1.05105,
              0.907239,
              -0.155485,
              0.216007,
              1.09704,
              0.923893,
              -0.134782,
              0.183233,
              1.13857,
              0.938882,
              -0.11249,
              0.150376,
              1.17539,
              0.952464,
              -0.0890706,
              0.117177,
              1.20924,
              0.968529,
              -0.0646523,
              0.0813095,
              1.24055,
              0.984763,
              -0.038606,
              0.0439378,
              1.27018,
              1.00053,
              -0.01238,
              0.00598668,
              1.29873,
              0.0437928,
              -409594e-11,
              0.204012,
              8.79224e-7,
              0.0440166,
              -103395e-9,
              0.205049,
              221946e-10,
              0.0440529,
              -413633e-9,
              0.205225,
              887981e-10,
              0.0440493,
              -930594e-9,
              0.2052,
              199858e-9,
              0.0439884,
              -0.00165352,
              0.204901,
              355495e-9,
              0.0440716,
              -0.0025849,
              0.205255,
              556983e-9,
              0.0440968,
              -0.00372222,
              0.205311,
              805326e-9,
              0.0441359,
              -0.00506478,
              0.205391,
              0.00110333,
              0.0442231,
              -0.00660384,
              0.205638,
              0.00145768,
              0.0443254,
              -0.00835246,
              0.205877,
              0.00187275,
              0.0444832,
              -0.0102992,
              0.20627,
              0.00235938,
              0.0447001,
              -0.0124449,
              0.206796,
              0.0029299,
              0.0450168,
              -0.0147935,
              0.207593,
              0.0036005,
              0.0454816,
              -0.017336,
              0.208819,
              0.00439246,
              0.0462446,
              -0.0201156,
              0.211036,
              0.00533864,
              0.0473694,
              -0.0231568,
              0.214388,
              0.00646984,
              0.0490191,
              -0.0264941,
              0.219357,
              0.00783856,
              0.0512776,
              -0.030184,
              0.226061,
              0.00950182,
              0.0541279,
              -0.0342661,
              0.234094,
              0.0115156,
              0.0578989,
              -0.0388539,
              0.244297,
              0.0139687,
              0.0620835,
              -0.0438735,
              0.254457,
              0.0169015,
              0.0673497,
              -0.04951,
              0.266706,
              0.0204554,
              0.0731759,
              -0.0556263,
              0.278753,
              0.0246606,
              0.0803937,
              -0.0624585,
              0.29309,
              0.0297126,
              0.0879287,
              -0.0697556,
              0.305856,
              0.0355868,
              0.0970669,
              -0.0778795,
              0.321059,
              0.0425768,
              0.106508,
              -0.0863541,
              0.333873,
              0.05056,
              0.11776,
              -0.0955935,
              0.349008,
              0.0598972,
              0.130081,
              -0.105438,
              0.363776,
              0.0706314,
              0.144454,
              -0.115899,
              0.380112,
              0.0828822,
              0.1596,
              -0.126827,
              0.394843,
              0.0967611,
              0.176097,
              -0.138161,
              0.409033,
              0.112381,
              0.194726,
              -0.149904,
              0.424257,
              0.129952,
              0.213944,
              -0.161675,
              0.436945,
              0.149333,
              0.235516,
              -0.173659,
              0.450176,
              0.170892,
              0.260564,
              -0.185963,
              0.466305,
              0.194984,
              0.285183,
              -0.197582,
              0.477328,
              0.220805,
              0.311095,
              -0.208697,
              0.486566,
              0.248694,
              0.338924,
              -0.219519,
              0.494811,
              0.279015,
              0.369757,
              -0.229766,
              0.504065,
              0.311725,
              0.3996,
              -0.238879,
              0.507909,
              0.345844,
              0.430484,
              -0.246802,
              0.509805,
              0.381749,
              0.46413,
              -0.253924,
              0.511436,
              0.420251,
              0.497077,
              -0.259319,
              0.508787,
              0.459957,
              0.530434,
              -0.263297,
              0.50394,
              0.501356,
              0.565725,
              -0.265619,
              0.49804,
              0.544252,
              0.599254,
              -0.265842,
              0.487346,
              0.587856,
              0.631251,
              -0.263978,
              0.472975,
              0.631969,
              0.663972,
              -0.26043,
              0.457135,
              0.677471,
              0.697724,
              -0.255358,
              0.439844,
              0.723744,
              0.727725,
              -0.248308,
              0.417872,
              0.770653,
              0.756417,
              -0.239181,
              0.39273,
              0.817357,
              0.785419,
              -0.22814,
              0.367839,
              0.864221,
              0.81266,
              -0.215681,
              0.339449,
              0.912701,
              0.839391,
              -0.201623,
              0.309279,
              0.962419,
              0.86366,
              -0.185624,
              0.278029,
              1.0122,
              0.885028,
              -0.16797,
              0.245294,
              1.06186,
              0.904639,
              -0.148336,
              0.212689,
              1.10934,
              0.922048,
              -0.12637,
              0.179616,
              1.15063,
              0.936952,
              -0.102928,
              0.146749,
              1.18885,
              0.951895,
              -0.0785268,
              0.112733,
              1.22352,
              0.967198,
              -0.0530153,
              0.0760056,
              1.25681,
              0.984405,
              -0.02649,
              0.0383183,
              1.28762,
              1.00021,
              70019e-8,
              -20039e-8,
              1.31656,
              0.0325964,
              -355447e-11,
              0.176706,
              6.55682e-7,
              0.0329333,
              -899174e-10,
              0.178527,
              165869e-10,
              0.0329181,
              -359637e-9,
              0.178453,
              663498e-10,
              0.0329085,
              -808991e-9,
              0.178383,
              149332e-9,
              0.0329181,
              -0.00143826,
              0.178394,
              265873e-9,
              0.0329425,
              -0.00224678,
              0.178517,
              416597e-9,
              0.0329511,
              -0.00323575,
              0.17849,
              603299e-9,
              0.033011,
              -0.00439875,
              0.178695,
              829422e-9,
              0.0330733,
              -0.00574059,
              0.178843,
              0.00109908,
              0.0331857,
              -0.00725896,
              0.179176,
              0.00141933,
              0.0333445,
              -0.00895289,
              0.179618,
              0.0017999,
              0.0335674,
              -0.0108219,
              0.180238,
              0.00225316,
              0.033939,
              -0.0128687,
              0.181417,
              0.00279765,
              0.0345239,
              -0.015114,
              0.183395,
              0.0034564,
              0.0354458,
              -0.017596,
              0.186616,
              0.00425864,
              0.0368313,
              -0.0203524,
              0.191547,
              0.00524936,
              0.0386115,
              -0.0234105,
              0.197508,
              0.00647033,
              0.0410303,
              -0.0268509,
              0.205395,
              0.00798121,
              0.0442245,
              -0.0307481,
              0.215365,
              0.0098557,
              0.0478659,
              -0.0350863,
              0.225595,
              0.0121417,
              0.0522416,
              -0.0399506,
              0.236946,
              0.0149385,
              0.0574513,
              -0.045357,
              0.249442,
              0.0183189,
              0.0631208,
              -0.0512863,
              0.261222,
              0.0223644,
              0.0701124,
              -0.0579273,
              0.275418,
              0.0272418,
              0.0777331,
              -0.0650652,
              0.288989,
              0.0329458,
              0.0862709,
              -0.0728813,
              0.302546,
              0.0396819,
              0.096103,
              -0.081363,
              0.317164,
              0.04757,
              0.106976,
              -0.0904463,
              0.331733,
              0.0567012,
              0.119175,
              -0.100105,
              0.34661,
              0.067202,
              0.132919,
              -0.110375,
              0.362249,
              0.0792588,
              0.147727,
              -0.121115,
              0.376978,
              0.0928672,
              0.163618,
              -0.132299,
              0.390681,
              0.108228,
              0.182234,
              -0.143887,
              0.406571,
              0.125502,
              0.201809,
              -0.155827,
              0.42042,
              0.144836,
              0.225041,
              -0.168357,
              0.438411,
              0.166706,
              0.247621,
              -0.18004,
              0.450368,
              0.189909,
              0.27097,
              -0.191536,
              0.460083,
              0.215251,
              0.296658,
              -0.203024,
              0.469765,
              0.243164,
              0.325892,
              -0.214056,
              0.481837,
              0.273388,
              0.35406,
              -0.224104,
              0.487474,
              0.305344,
              0.384372,
              -0.233489,
              0.492773,
              0.339741,
              0.41749,
              -0.241874,
              0.498451,
              0.376287,
              0.45013,
              -0.248834,
              0.499632,
              0.414195,
              0.481285,
              -0.254658,
              0.495233,
              0.454077,
              0.519183,
              -0.259367,
              0.496401,
              0.496352,
              0.551544,
              -0.261818,
              0.487686,
              0.538798,
              0.587349,
              -0.262964,
              0.479453,
              0.583626,
              0.621679,
              -0.262128,
              0.467709,
              0.629451,
              0.654991,
              -0.258998,
              0.452123,
              0.67566,
              0.686873,
              -0.254119,
              0.433495,
              0.723248,
              0.719801,
              -0.246946,
              0.413657,
              0.771156,
              0.750355,
              -0.237709,
              0.390366,
              0.81989,
              0.780033,
              -0.226549,
              0.364947,
              0.868601,
              0.809254,
              -0.214186,
              0.337256,
              0.920034,
              0.836576,
              -0.199639,
              0.307395,
              0.971706,
              0.861774,
              -0.183169,
              0.275431,
              1.02479,
              0.885707,
              -0.165111,
              0.243431,
              1.07837,
              0.904742,
              -0.144363,
              0.210921,
              1.12783,
              0.915604,
              -0.121305,
              0.17647,
              1.17254,
              0.930959,
              -0.0962119,
              0.143106,
              1.21012,
              0.948404,
              -0.069969,
              0.108112,
              1.24474,
              0.967012,
              -0.0427586,
              0.0708478,
              1.27718,
              0.984183,
              -0.0147043,
              0.032335,
              1.3083,
              0.999577,
              0.0142165,
              -0.00726867,
              1.3382,
              0.0229227,
              -299799e-11,
              0.148623,
              4.62391e-7,
              0.0232194,
              -758796e-10,
              0.15054,
              117033e-10,
              0.0232315,
              -303636e-9,
              0.15063,
              468397e-10,
              0.0232354,
              -683189e-9,
              0.150624,
              105472e-9,
              0.0232092,
              -0.0012136,
              0.150445,
              187744e-9,
              0.0232523,
              -0.00189765,
              0.150679,
              294847e-9,
              0.0232828,
              -0.00273247,
              0.150789,
              428013e-9,
              0.0233371,
              -0.00371287,
              0.150995,
              591134e-9,
              0.0234015,
              -0.00484794,
              0.15118,
              787642e-9,
              0.023514,
              -0.00612877,
              0.151562,
              0.00102547,
              0.023679,
              -0.00756125,
              0.152116,
              0.00131351,
              0.0239559,
              -0.00914651,
              0.153162,
              0.00166594,
              0.0244334,
              -0.010904,
              0.155133,
              0.00210182,
              0.025139,
              -0.0128615,
              0.158035,
              0.00264406,
              0.0262598,
              -0.0150628,
              0.162751,
              0.00332923,
              0.0277875,
              -0.0175532,
              0.168944,
              0.00419773,
              0.0298472,
              -0.0203981,
              0.176835,
              0.00530034,
              0.0325444,
              -0.023655,
              0.186686,
              0.00669777,
              0.0355581,
              -0.0272982,
              0.196248,
              0.00842661,
              0.0392841,
              -0.0314457,
              0.207352,
              0.0105854,
              0.0436815,
              -0.0361157,
              0.219279,
              0.0132458,
              0.0485272,
              -0.0412932,
              0.230728,
              0.0164736,
              0.0541574,
              -0.0470337,
              0.242994,
              0.0203715,
              0.0609479,
              -0.0535002,
              0.257042,
              0.0250953,
              0.0685228,
              -0.0605409,
              0.27102,
              0.0306856,
              0.0768042,
              -0.0680553,
              0.28406,
              0.037193,
              0.0864844,
              -0.0765011,
              0.299186,
              0.0449795,
              0.0969415,
              -0.0852674,
              0.3132,
              0.0538316,
              0.108478,
              -0.0947333,
              0.327138,
              0.0641149,
              0.121705,
              -0.10481,
              0.342345,
              0.0759185,
              0.136743,
              -0.115474,
              0.358472,
              0.0894116,
              0.152986,
              -0.126536,
              0.374067,
              0.104562,
              0.170397,
              -0.138061,
              0.388267,
              0.121632,
              0.191392,
              -0.150203,
              0.406467,
              0.140996,
              0.211566,
              -0.161751,
              0.418641,
              0.161696,
              0.233567,
              -0.173407,
              0.430418,
              0.184557,
              0.257769,
              -0.185397,
              0.44277,
              0.210092,
              0.28531,
              -0.197048,
              0.457191,
              0.237827,
              0.311726,
              -0.20784,
              0.464712,
              0.267253,
              0.340537,
              -0.218345,
              0.472539,
              0.299332,
              0.372921,
              -0.228306,
              0.482331,
              0.333988,
              0.402924,
              -0.236665,
              0.484378,
              0.369722,
              0.434475,
              -0.244097,
              0.484717,
              0.407836,
              0.469736,
              -0.250547,
              0.487093,
              0.448465,
              0.505045,
              -0.25511,
              0.485575,
              0.490263,
              0.540262,
              -0.258444,
              0.481225,
              0.534495,
              0.576347,
              -0.259903,
              0.473481,
              0.579451,
              0.608656,
              -0.259572,
              0.4603,
              0.625604,
              0.646679,
              -0.257908,
              0.450341,
              0.674511,
              0.679902,
              -0.253663,
              0.431561,
              0.723269,
              0.714159,
              -0.247419,
              0.412684,
              0.773263,
              0.745345,
              -0.239122,
              0.389388,
              0.824182,
              0.778248,
              -0.228837,
              0.365361,
              0.876634,
              0.807208,
              -0.216197,
              0.337667,
              0.92945,
              0.835019,
              -0.201772,
              0.307197,
              0.985261,
              0.860261,
              -0.185291,
              0.274205,
              1.04299,
              0.877601,
              -0.165809,
              0.240178,
              1.09816,
              0.898211,
              -0.143897,
              0.207571,
              1.14694,
              0.915789,
              -0.119513,
              0.174904,
              1.19008,
              0.931831,
              -0.0932919,
              0.141423,
              1.2297,
              0.949244,
              -0.0656528,
              0.105603,
              1.26553,
              0.967527,
              -0.0370262,
              0.0679551,
              1.29986,
              0.984139,
              -0.00730117,
              0.0283133,
              1.33252,
              0.999713,
              0.0234648,
              -0.0121785,
              1.36397,
              0.0152135,
              -245447e-11,
              0.122795,
              3.04092e-7,
              0.0151652,
              -615778e-10,
              0.122399,
              76292e-10,
              0.0151181,
              -245948e-9,
              0.122023,
              304802e-10,
              0.0151203,
              -553394e-9,
              0.12203,
              686634e-10,
              0.015125,
              -983841e-9,
              0.122037,
              122463e-9,
              0.0151427,
              -0.00153774,
              0.12214,
              192706e-9,
              0.0151708,
              -0.0022103,
              0.122237,
              281219e-9,
              0.0152115,
              -0.00300741,
              0.12238,
              390804e-9,
              0.0152877,
              -0.00392494,
              0.1227,
              526317e-9,
              0.015412,
              -0.00496597,
              0.123244,
              69443e-8,
              0.0156201,
              -0.00613314,
              0.124228,
              90547e-8,
              0.0159658,
              -0.00744113,
              0.125945,
              0.0011732,
              0.0165674,
              -0.00892546,
              0.129098,
              0.00151888,
              0.017487,
              -0.010627,
              0.133865,
              0.00197007,
              0.018839,
              -0.0126043,
              0.140682,
              0.0025637,
              0.020554,
              -0.0148814,
              0.148534,
              0.00333637,
              0.0226727,
              -0.0175123,
              0.157381,
              0.00433738,
              0.0251879,
              -0.0205266,
              0.166685,
              0.00561664,
              0.0283635,
              -0.0240319,
              0.177796,
              0.00725563,
              0.0318694,
              -0.0279432,
              0.188251,
              0.00928811,
              0.0361044,
              -0.0324313,
              0.200038,
              0.011835,
              0.0406656,
              -0.0373527,
              0.210685,
              0.0149146,
              0.0463846,
              -0.0430132,
              0.224182,
              0.0187254,
              0.0525696,
              -0.0491013,
              0.23634,
              0.0232283,
              0.0598083,
              -0.0559175,
              0.250013,
              0.0286521,
              0.0679437,
              -0.0633657,
              0.263981,
              0.0350634,
              0.0771181,
              -0.0714602,
              0.278072,
              0.0425882,
              0.0881273,
              -0.0803502,
              0.29511,
              0.0514487,
              0.0996628,
              -0.0896903,
              0.309976,
              0.0615766,
              0.112702,
              -0.099644,
              0.325611,
              0.0732139,
              0.126488,
              -0.109829,
              0.339321,
              0.0862324,
              0.142625,
              -0.120859,
              0.35574,
              0.101275,
              0.15953,
              -0.131956,
              0.369845,
              0.117892,
              0.176991,
              -0.143145,
              0.38146,
              0.136205,
              0.199715,
              -0.155292,
              0.40052,
              0.157252,
              0.220787,
              -0.167066,
              0.412055,
              0.179966,
              0.243697,
              -0.178396,
              0.423133,
              0.204418,
              0.272106,
              -0.190433,
              0.439524,
              0.232141,
              0.297637,
              -0.201265,
              0.447041,
              0.261109,
              0.325273,
              -0.211834,
              0.454488,
              0.292627,
              0.357219,
              -0.221889,
              0.465004,
              0.326669,
              0.387362,
              -0.230729,
              0.468527,
              0.362426,
              0.423131,
              -0.23924,
              0.475836,
              0.401533,
              0.45543,
              -0.246067,
              0.475017,
              0.441902,
              0.493393,
              -0.251557,
              0.478017,
              0.484239,
              0.526253,
              -0.255571,
              0.4709,
              0.528586,
              0.560554,
              -0.257752,
              0.463167,
              0.574346,
              0.599306,
              -0.258076,
              0.456452,
              0.621655,
              0.634541,
              -0.256471,
              0.443725,
              0.670492,
              0.668907,
              -0.253283,
              0.428719,
              0.721943,
              0.705619,
              -0.247562,
              0.411348,
              0.772477,
              0.739034,
              -0.240626,
              0.388939,
              0.8264,
              0.771408,
              -0.231493,
              0.36425,
              0.881702,
              0.803312,
              -0.220125,
              0.337321,
              0.9385,
              0.828457,
              -0.206645,
              0.305364,
              0.997437,
              0.854819,
              -0.190664,
              0.273715,
              1.05693,
              0.878666,
              -0.171429,
              0.242218,
              1.11251,
              0.898404,
              -0.149235,
              0.209556,
              1.16398,
              0.917416,
              -0.12435,
              0.176863,
              1.21014,
              0.933133,
              -0.0972703,
              0.142775,
              1.25178,
              0.95066,
              -0.0683607,
              0.106735,
              1.29028,
              0.968589,
              -0.0378724,
              0.0681609,
              1.32703,
              0.984776,
              -0.00605712,
              0.0273966,
              1.36158,
              0.99994,
              0.0263276,
              -0.0138124,
              1.3943,
              0.00867437,
              -186005e-11,
              0.0928979,
              1.73682e-7,
              0.00864003,
              -466389e-10,
              0.0925237,
              435505e-11,
              0.00864593,
              -186594e-9,
              0.0925806,
              174322e-10,
              0.00864095,
              -419639e-9,
              0.0924903,
              392862e-10,
              0.00863851,
              -746272e-9,
              0.0924589,
              702598e-10,
              0.00868531,
              -0.00116456,
              0.0929,
              111188e-9,
              0.00869667,
              -0.00167711,
              0.0928529,
              163867e-9,
              0.00874332,
              -0.00228051,
              0.0930914,
              23104e-8,
              0.00882709,
              -0.00297864,
              0.0935679,
              31741e-8,
              0.00898874,
              -0.00377557,
              0.0946165,
              430186e-9,
              0.00929346,
              -0.00469247,
              0.0967406,
              580383e-9,
              0.00978271,
              -0.00575491,
              0.100084,
              783529e-9,
              0.0105746,
              -0.00701514,
              0.105447,
              0.00106304,
              0.0116949,
              -0.00851797,
              0.112494,
              0.00144685,
              0.0130419,
              -0.0102757,
              0.119876,
              0.00196439,
              0.0148375,
              -0.012381,
              0.129034,
              0.00266433,
              0.0168725,
              -0.01482,
              0.137812,
              0.00358364,
              0.0193689,
              -0.0176563,
              0.147696,
              0.00478132,
              0.0222691,
              -0.0209211,
              0.157795,
              0.00631721,
              0.0256891,
              -0.0246655,
              0.168431,
              0.00826346,
              0.0294686,
              -0.0288597,
              0.178587,
              0.0106714,
              0.0340412,
              -0.0336441,
              0.190251,
              0.0136629,
              0.0393918,
              -0.039033,
              0.202999,
              0.0173272,
              0.0453947,
              -0.0450087,
              0.215655,
              0.0217448,
              0.0521936,
              -0.0515461,
              0.228686,
              0.0269941,
              0.0600279,
              -0.058817,
              0.242838,
              0.033272,
              0.0692398,
              -0.0667228,
              0.258145,
              0.0406457,
              0.0793832,
              -0.0752401,
              0.273565,
              0.0492239,
              0.0902297,
              -0.0841851,
              0.287735,
              0.0590105,
              0.102014,
              -0.0936479,
              0.301161,
              0.0702021,
              0.116054,
              -0.103967,
              0.317438,
              0.0832001,
              0.13191,
              -0.114622,
              0.334166,
              0.0977951,
              0.148239,
              -0.125452,
              0.348192,
              0.113985,
              0.165809,
              -0.136453,
              0.361094,
              0.131928,
              0.184616,
              -0.147648,
              0.373534,
              0.151811,
              0.207491,
              -0.159607,
              0.39101,
              0.174476,
              0.230106,
              -0.171119,
              0.402504,
              0.198798,
              0.257036,
              -0.182906,
              0.418032,
              0.225796,
              0.281172,
              -0.193605,
              0.425468,
              0.254027,
              0.312034,
              -0.204771,
              0.440379,
              0.285713,
              0.340402,
              -0.214988,
              0.445406,
              0.319196,
              0.370231,
              -0.224711,
              0.44968,
              0.35537,
              0.407105,
              -0.233516,
              0.460747,
              0.393838,
              0.439037,
              -0.240801,
              0.460624,
              0.433747,
              0.47781,
              -0.24762,
              0.465957,
              0.477234,
              0.510655,
              -0.251823,
              0.460054,
              0.52044,
              0.550584,
              -0.255552,
              0.459172,
              0.567853,
              0.585872,
              -0.257036,
              0.450311,
              0.615943,
              0.620466,
              -0.257535,
              0.437763,
              0.667693,
              0.660496,
              -0.255248,
              0.426639,
              0.718988,
              0.695578,
              -0.251141,
              0.409185,
              0.772503,
              0.732176,
              -0.244718,
              0.39015,
              0.827023,
              0.760782,
              -0.236782,
              0.362594,
              0.885651,
              0.79422,
              -0.225923,
              0.33711,
              0.943756,
              0.824521,
              -0.213855,
              0.308272,
              1.00874,
              0.854964,
              -0.197723,
              0.278529,
              1.06764,
              0.878065,
              -0.179209,
              0.246208,
              1.12836,
              0.899834,
              -0.157569,
              0.21329,
              1.18318,
              0.918815,
              -0.133206,
              0.181038,
              1.23161,
              0.934934,
              -0.106545,
              0.146993,
              1.27644,
              0.952115,
              -0.0780574,
              0.111175,
              1.31842,
              0.96906,
              -0.0478279,
              0.0728553,
              1.35839,
              0.985178,
              -0.0160014,
              0.032579,
              1.39697,
              1.00039,
              0.0173126,
              -0.0095256,
              1.43312,
              0.00384146,
              -124311e-11,
              0.0613583,
              7.78271e-8,
              0.00390023,
              -314043e-10,
              0.0622919,
              196626e-11,
              0.00389971,
              -125622e-9,
              0.0622632,
              787379e-11,
              0.00389491,
              -282352e-9,
              0.0620659,
              1778e-8,
              0.00391618,
              -502512e-9,
              0.0624687,
              320918e-10,
              0.00392662,
              -784458e-9,
              0.0625113,
              515573e-10,
              0.00396053,
              -0.00112907,
              0.0628175,
              778668e-10,
              0.00401911,
              -0.00153821,
              0.0633286,
              113811e-9,
              0.00414994,
              -0.0020208,
              0.0646443,
              16445e-8,
              0.00441223,
              -0.00260007,
              0.0673886,
              237734e-9,
              0.00484427,
              -0.0033097,
              0.0716528,
              345929e-9,
              0.00549109,
              -0.00418966,
              0.0774998,
              505987e-9,
              0.00636293,
              -0.00527331,
              0.0844758,
              739208e-9,
              0.00746566,
              -0.00660428,
              0.0921325,
              0.00107347,
              0.00876625,
              -0.00818826,
              0.0997067,
              0.00153691,
              0.0103125,
              -0.0100811,
              0.107433,
              0.00217153,
              0.0123309,
              -0.0123643,
              0.117088,
              0.00303427,
              0.0146274,
              -0.0150007,
              0.126438,
              0.00416018,
              0.0172295,
              -0.0180531,
              0.135672,
              0.00561513,
              0.0204248,
              -0.0215962,
              0.146244,
              0.007478,
              0.0241597,
              -0.0256234,
              0.157481,
              0.00981046,
              0.0284693,
              -0.0302209,
              0.169125,
              0.0127148,
              0.033445,
              -0.0353333,
              0.181659,
              0.0162453,
              0.0391251,
              -0.0410845,
              0.1944,
              0.0205417,
              0.0454721,
              -0.0473451,
              0.207082,
              0.0256333,
              0.0530983,
              -0.0542858,
              0.221656,
              0.0317036,
              0.0615356,
              -0.0618384,
              0.236036,
              0.0388319,
              0.0703363,
              -0.0697631,
              0.248398,
              0.046974,
              0.0810391,
              -0.0784757,
              0.263611,
              0.0565246,
              0.0920144,
              -0.0873488,
              0.275857,
              0.0671724,
              0.105584,
              -0.0973652,
              0.292555,
              0.0798105,
              0.119506,
              -0.107271,
              0.306333,
              0.0935945,
              0.134434,
              -0.117608,
              0.318888,
              0.109106,
              0.153399,
              -0.128938,
              0.337552,
              0.127074,
              0.171258,
              -0.139944,
              0.349955,
              0.14643,
              0.191059,
              -0.151288,
              0.361545,
              0.168,
              0.215069,
              -0.163018,
              0.378421,
              0.192082,
              0.237838,
              -0.174226,
              0.38879,
              0.217838,
              0.266965,
              -0.186063,
              0.405857,
              0.246931,
              0.292827,
              -0.196909,
              0.414146,
              0.277505,
              0.324352,
              -0.207473,
              0.426955,
              0.310711,
              0.354427,
              -0.217713,
              0.433429,
              0.346794,
              0.389854,
              -0.227183,
              0.443966,
              0.385237,
              0.420749,
              -0.235131,
              0.44471,
              0.424955,
              0.459597,
              -0.242786,
              0.451729,
              0.468446,
              0.495316,
              -0.248767,
              0.45072,
              0.513422,
              0.534903,
              -0.253351,
              0.450924,
              0.560618,
              0.572369,
              -0.256277,
              0.445266,
              0.609677,
              0.612383,
              -0.2576,
              0.438798,
              0.660995,
              0.644037,
              -0.256931,
              0.421693,
              0.713807,
              0.686749,
              -0.254036,
              0.4109,
              0.767616,
              0.719814,
              -0.249785,
              0.390151,
              0.82533,
              0.754719,
              -0.244283,
              0.367847,
              0.888311,
              0.792022,
              -0.235076,
              0.345013,
              0.948177,
              0.822404,
              -0.225061,
              0.316193,
              1.01661,
              0.853084,
              -0.211113,
              0.287013,
              1.08075,
              0.879871,
              -0.19449,
              0.255424,
              1.14501,
              0.901655,
              -0.174023,
              0.222879,
              1.20203,
              0.919957,
              -0.1509,
              0.18989,
              1.25698,
              0.938412,
              -0.124923,
              0.15606,
              1.30588,
              0.953471,
              -0.0968139,
              0.120512,
              1.3529,
              0.970451,
              -0.066734,
              0.0828515,
              1.3986,
              0.985522,
              -0.034734,
              0.0424458,
              1.44148,
              1.00099,
              -0.00102222,
              678929e-9,
              1.48398,
              965494e-9,
              -6.27338e-7,
              0.0306409,
              1.97672e-8,
              99168e-8,
              -158573e-10,
              0.0314638,
              4.99803e-7,
              991068e-9,
              -634012e-10,
              0.031363,
              200682e-11,
              974567e-9,
              -14144e-8,
              0.03036,
              457312e-11,
              998079e-9,
              -252812e-9,
              0.031496,
              860131e-11,
              0.00102243,
              -396506e-9,
              0.0319955,
              148288e-10,
              0.00107877,
              -577593e-9,
              0.0331376,
              249141e-10,
              0.00121622,
              -816816e-9,
              0.0359396,
              423011e-10,
              0.0014455,
              -0.00113761,
              0.0399652,
              724613e-10,
              0.00178791,
              -0.00156959,
              0.0450556,
              123929e-9,
              0.00225668,
              -0.00214064,
              0.0508025,
              208531e-9,
              0.00285627,
              -0.00287655,
              0.0568443,
              341969e-9,
              0.0035991,
              -0.00380271,
              0.0630892,
              544158e-9,
              0.00455524,
              -0.00496264,
              0.0702204,
              842423e-9,
              0.00569143,
              -0.0063793,
              0.0773426,
              0.00126704,
              0.00716928,
              -0.00813531,
              0.0860839,
              0.00186642,
              0.00885307,
              -0.0101946,
              0.0944079,
              0.00267014,
              0.0109316,
              -0.0126386,
              0.103951,
              0.00374033,
              0.0133704,
              -0.0154876,
              0.113786,
              0.0051304,
              0.0161525,
              -0.0187317,
              0.123477,
              0.00688858,
              0.0194267,
              -0.0224652,
              0.133986,
              0.00910557,
              0.0230967,
              -0.0265976,
              0.143979,
              0.0118074,
              0.0273627,
              -0.0312848,
              0.154645,
              0.0151266,
              0.0323898,
              -0.0365949,
              0.166765,
              0.0191791,
              0.0379225,
              -0.0422914,
              0.177932,
              0.0239236,
              0.0447501,
              -0.0487469,
              0.19167,
              0.0296568,
              0.0519391,
              -0.0556398,
              0.203224,
              0.0362924,
              0.0599464,
              -0.0631646,
              0.215652,
              0.0440585,
              0.0702427,
              -0.0714308,
              0.232089,
              0.0531619,
              0.0806902,
              -0.0800605,
              0.245258,
              0.0634564,
              0.0923194,
              -0.0892815,
              0.258609,
              0.0752481,
              0.106938,
              -0.09931,
              0.276654,
              0.0888914,
              0.121238,
              -0.109575,
              0.289847,
              0.104055,
              0.138817,
              -0.120461,
              0.307566,
              0.121266,
              0.15595,
              -0.131209,
              0.320117,
              0.139944,
              0.178418,
              -0.143049,
              0.339677,
              0.161591,
              0.197875,
              -0.154074,
              0.349886,
              0.184303,
              0.224368,
              -0.166307,
              0.369352,
              0.210669,
              0.252213,
              -0.178051,
              0.386242,
              0.238895,
              0.277321,
              -0.189335,
              0.395294,
              0.269182,
              0.310332,
              -0.200683,
              0.412148,
              0.302508,
              0.338809,
              -0.210856,
              0.418266,
              0.337264,
              0.372678,
              -0.220655,
              0.428723,
              0.374881,
              0.405632,
              -0.230053,
              0.433887,
              0.415656,
              0.442293,
              -0.237993,
              0.439911,
              0.457982,
              0.477256,
              -0.244897,
              0.440175,
              0.502831,
              0.515592,
              -0.250657,
              0.441079,
              0.550277,
              0.550969,
              -0.255459,
              0.435219,
              0.601102,
              0.592883,
              -0.257696,
              0.432882,
              0.651785,
              0.629092,
              -0.259894,
              0.421054,
              0.708961,
              0.672033,
              -0.258592,
              0.41177,
              0.763806,
              0.709147,
              -0.256525,
              0.395267,
              0.824249,
              0.745367,
              -0.254677,
              0.375013,
              0.8951,
              0.784715,
              -0.247892,
              0.353906,
              0.959317,
              0.818107,
              -0.240162,
              0.327801,
              1.03153,
              0.847895,
              -0.229741,
              0.298821,
              1.10601,
              0.879603,
              -0.213084,
              0.269115,
              1.164,
              0.902605,
              -0.195242,
              0.236606,
              1.22854,
              0.922788,
              -0.174505,
              0.203442,
              1.29017,
              0.944831,
              -0.150169,
              0.169594,
              1.34157,
              0.959656,
              -0.124099,
              0.135909,
              1.3956,
              0.972399,
              -0.0960626,
              0.0990563,
              1.45128,
              0.986549,
              -0.0657097,
              0.0602348,
              1.50312,
              1.00013,
              -0.0333558,
              0.0186694,
              1.55364,
              619747e-11,
              -1e-7,
              0.00778326,
              796756e-16,
              2.37499e-8,
              -9.99999e-8,
              282592e-10,
              1.14596e-10,
              100292e-11,
              -166369e-11,
              250354e-9,
              6.77492e-9,
              350752e-11,
              -637769e-11,
              357289e-9,
              6.31655e-8,
              826445e-11,
              -174689e-10,
              516179e-9,
              3.1851e-7,
              242481e-10,
              -450868e-10,
              0.0010223,
              130577e-11,
              455631e-10,
              -89044e-9,
              0.00144302,
              374587e-11,
              971222e-10,
              -178311e-9,
              0.00241912,
              102584e-10,
              171403e-9,
              -313976e-9,
              0.00354938,
              236481e-10,
              292747e-9,
              -520026e-9,
              0.00513765,
              496014e-10,
              789827e-9,
              -0.00118187,
              0.0238621,
              139056e-9,
              0.00114093,
              -0.00171827,
              0.0286691,
              244093e-9,
              0.00176119,
              -0.00249667,
              0.0368565,
              420623e-9,
              0.0022233,
              -0.00333742,
              0.0400469,
              65673e-8,
              0.00343382,
              -0.00481976,
              0.0535751,
              0.00109323,
              0.00427602,
              -0.00600755,
              0.057099,
              0.00155268,
              0.00461435,
              -0.00737637,
              0.0551084,
              0.00215031,
              0.00695698,
              -0.00971401,
              0.0715767,
              0.00316529,
              0.00867619,
              -0.0120943,
              0.0793314,
              0.00436995,
              0.0106694,
              -0.0148202,
              0.0869391,
              0.0058959,
              0.0140351,
              -0.0183501,
              0.101572,
              0.00798757,
              0.0168939,
              -0.022006,
              0.11018,
              0.0104233,
              0.020197,
              -0.0261568,
              0.119041,
              0.0134167,
              0.0254702,
              -0.0312778,
              0.135404,
              0.0173009,
              0.0298384,
              -0.0362469,
              0.1437,
              0.0215428,
              0.035159,
              -0.042237,
              0.15512,
              0.0268882,
              0.0427685,
              -0.0488711,
              0.17128,
              0.033235,
              0.0494848,
              -0.0557997,
              0.181813,
              0.0404443,
              0.0592394,
              -0.0635578,
              0.198745,
              0.0490043,
              0.0681463,
              -0.071838,
              0.210497,
              0.0588239,
              0.0804753,
              -0.0809297,
              0.228864,
              0.0702835,
              0.0942205,
              -0.0906488,
              0.247008,
              0.0834012,
              0.106777,
              -0.100216,
              0.258812,
              0.0975952,
              0.124471,
              -0.110827,
              0.278617,
              0.114162,
              0.138389,
              -0.121193,
              0.287049,
              0.131983,
              0.159543,
              -0.13253,
              0.307151,
              0.152541,
              0.176432,
              -0.143611,
              0.31564,
              0.174673,
              0.201723,
              -0.15548,
              0.33538,
              0.199842,
              0.229721,
              -0.167166,
              0.355256,
              0.227097,
              0.250206,
              -0.178238,
              0.360047,
              0.256014,
              0.282118,
              -0.189905,
              0.378761,
              0.28855,
              0.312821,
              -0.201033,
              0.39181,
              0.323348,
              0.341482,
              -0.211584,
              0.397716,
              0.360564,
              0.377368,
              -0.221314,
              0.410141,
              0.400004,
              0.418229,
              -0.230474,
              0.423485,
              0.442371,
              0.444881,
              -0.239443,
              0.418874,
              0.488796,
              0.488899,
              -0.245987,
              0.427545,
              0.535012,
              0.520317,
              -0.253948,
              0.422147,
              0.589678,
              0.568566,
              -0.256616,
              0.42719,
              0.637683,
              0.599607,
              -0.26376,
              0.415114,
              0.703363,
              0.64222,
              -0.268687,
              0.408715,
              0.771363,
              0.685698,
              -0.2694,
              0.399722,
              0.83574,
              0.732327,
              -0.266642,
              0.388651,
              0.897764,
              0.769873,
              -0.267712,
              0.369198,
              0.983312,
              0.806733,
              -0.263479,
              0.346802,
              1.06222,
              0.843466,
              -0.254575,
              0.321368,
              1.13477,
              0.873008,
              -0.242749,
              0.29211,
              1.20712,
              0.908438,
              -0.22725,
              0.262143,
              1.27465,
              0.936321,
              -0.207621,
              0.228876,
              1.33203,
              0.950353,
              -0.187932,
              0.19484,
              1.40439,
              0.96442,
              -0.165154,
              0.163178,
              1.4732,
              0.979856,
              -0.139302,
              0.127531,
              1.53574,
              0.982561,
              -0.11134,
              0.0903457,
              1.59982,
              0.996389,
              -0.0808124,
              0.0489007,
              1.6577,
            ],
            t = [
              1,
              0,
              0,
              0,
              1,
              791421e-36,
              0,
              0,
              1,
              104392e-29,
              0,
              0,
              1,
              349405e-26,
              0,
              0,
              1,
              109923e-23,
              0,
              0,
              1,
              947414e-22,
              0,
              0,
              1,
              359627e-20,
              0,
              0,
              1,
              772053e-19,
              0,
              0,
              1,
              108799e-17,
              0,
              0,
              1,
              110655e-16,
              0,
              0,
              1,
              865818e-16,
              0,
              0,
              0.999998,
              5.45037e-10,
              0,
              0,
              0.999994,
              2.85095e-9,
              0,
              0,
              0.999989,
              1.26931e-8,
              0,
              0,
              0.999973,
              4.89938e-8,
              0,
              0,
              0.999947,
              1.66347e-7,
              0,
              0,
              0.999894,
              5.02694e-7,
              0,
              0,
              0.999798,
              136532e-11,
              0,
              0,
              0.999617,
              335898e-11,
              0,
              0,
              0.999234,
              752126e-11,
              0,
              0,
              0.998258,
              152586e-10,
              0,
              0,
              0.99504,
              266207e-10,
              0,
              0,
              0.980816,
              236802e-10,
              0,
              0,
              0.967553,
              207684e-11,
              0,
              0,
              0.966877,
              403733e-11,
              0,
              0,
              0.965752,
              741174e-11,
              0,
              0,
              0.96382,
              127746e-10,
              0,
              0,
              0.960306,
              202792e-10,
              0,
              0,
              0.953619,
              280232e-10,
              0,
              0,
              0.941103,
              278816e-10,
              0,
              0,
              0.926619,
              160221e-10,
              0,
              0,
              0.920983,
              235164e-10,
              0,
              0,
              0.912293,
              311924e-10,
              0,
              0.0158731,
              0.899277,
              348118e-10,
              0,
              0.0476191,
              0.880884,
              26041e-9,
              0,
              0.0793651,
              0.870399,
              338726e-10,
              0,
              0.111111,
              0.856138,
              392906e-10,
              0,
              0.142857,
              0.837436,
              372874e-10,
              0,
              0.174603,
              0.820973,
              392558e-10,
              0,
              0.206349,
              0.803583,
              434658e-10,
              0,
              0.238095,
              0.782168,
              40256e-9,
              0,
              0.269841,
              0.764107,
              448159e-10,
              0,
              0.301587,
              0.743092,
              457627e-10,
              0,
              0.333333,
              0.721626,
              455314e-10,
              0,
              0.365079,
              0.700375,
              477335e-10,
              0,
              0.396825,
              0.677334,
              461072e-10,
              0,
              0.428571,
              0.655702,
              484393e-10,
              0,
              0.460317,
              0.632059,
              464583e-10,
              0,
              0.492064,
              0.610125,
              483923e-10,
              0,
              0.52381,
              0.58653,
              464342e-10,
              0,
              0.555556,
              0.564508,
              477033e-10,
              0,
              0.587302,
              0.541405,
              459263e-10,
              0,
              0.619048,
              0.519556,
              46412e-9,
              0,
              0.650794,
              0.497292,
              448913e-10,
              0,
              0.68254,
              0.475898,
              445789e-10,
              0,
              0.714286,
              0.454722,
              433496e-10,
              0,
              0.746032,
              0.434042,
              423054e-10,
              0,
              0.777778,
              0.414126,
              413737e-10,
              0,
              0.809524,
              0.394387,
              397265e-10,
              0,
              0.84127,
              0.375841,
              390709e-10,
              0,
              0.873016,
              0.357219,
              369938e-10,
              0,
              0.904762,
              0.340084,
              365618e-10,
              0,
              0.936508,
              0.322714,
              342533e-10,
              0,
              0.968254,
              0.306974,
              339596e-10,
              0,
              1,
              1,
              101524e-23,
              0,
              0,
              1,
              10292e-22,
              0,
              0,
              1,
              130908e-23,
              0,
              0,
              1,
              473331e-23,
              0,
              0,
              1,
              625319e-22,
              0,
              0,
              1,
              107932e-20,
              0,
              0,
              1,
              163779e-19,
              0,
              0,
              1,
              203198e-18,
              0,
              0,
              1,
              204717e-17,
              0,
              0,
              0.999999,
              168995e-16,
              0,
              0,
              0.999998,
              1.15855e-10,
              0,
              0,
              0.999996,
              6.6947e-10,
              0,
              0,
              0.999991,
              3.30863e-9,
              0,
              0,
              0.999983,
              1.41737e-8,
              0,
              0,
              0.999968,
              5.32626e-8,
              0,
              0,
              0.99994,
              1.77431e-7,
              0,
              0,
              0.999891,
              5.28835e-7,
              0,
              0,
              0.999797,
              142169e-11,
              0,
              0,
              0.999617,
              347057e-11,
              0,
              0,
              0.999227,
              77231e-10,
              0,
              0,
              0.998239,
              155753e-10,
              0,
              0,
              0.994937,
              268495e-10,
              0,
              0,
              0.980225,
              213742e-10,
              0,
              0,
              0.967549,
              21631e-10,
              0,
              0,
              0.966865,
              417989e-11,
              0,
              0,
              0.965739,
              763341e-11,
              0,
              0,
              0.963794,
              130892e-10,
              0,
              0,
              0.960244,
              206456e-10,
              0,
              0,
              0.953495,
              282016e-10,
              0,
              148105e-9,
              0.940876,
              271581e-10,
              0,
              0.002454,
              0.926569,
              164159e-10,
              0,
              0.00867491,
              0.920905,
              239521e-10,
              0,
              0.01956,
              0.912169,
              315127e-10,
              0,
              0.035433,
              0.899095,
              346626e-10,
              0,
              0.056294,
              0.882209,
              290223e-10,
              0,
              0.0818191,
              0.870272,
              342992e-10,
              0,
              0.111259,
              0.855977,
              394164e-10,
              0,
              0.142857,
              0.837431,
              372343e-10,
              0,
              0.174603,
              0.820826,
              396691e-10,
              0,
              0.206349,
              0.803408,
              435395e-10,
              0,
              0.238095,
              0.782838,
              419579e-10,
              0,
              0.269841,
              0.763941,
              450953e-10,
              0,
              0.301587,
              0.742904,
              455847e-10,
              0,
              0.333333,
              0.721463,
              458833e-10,
              0,
              0.365079,
              0.700197,
              477159e-10,
              0,
              0.396825,
              0.677501,
              470641e-10,
              0,
              0.428571,
              0.655527,
              484732e-10,
              0,
              0.460317,
              0.6324,
              476834e-10,
              0,
              0.492064,
              0.609964,
              484213e-10,
              0,
              0.52381,
              0.586839,
              475541e-10,
              0,
              0.555556,
              0.564353,
              476951e-10,
              0,
              0.587302,
              0.541589,
              467611e-10,
              0,
              0.619048,
              0.519413,
              463493e-10,
              0,
              0.650794,
              0.497337,
              453994e-10,
              0,
              0.68254,
              0.475797,
              445308e-10,
              0,
              0.714286,
              0.454659,
              435787e-10,
              0,
              0.746032,
              0.434065,
              424839e-10,
              0,
              0.777778,
              0.414018,
              41436e-9,
              0,
              0.809524,
              0.39455,
              401902e-10,
              0,
              0.84127,
              0.375742,
              390813e-10,
              0,
              0.873016,
              0.357501,
              377116e-10,
              0,
              0.904762,
              0.339996,
              36535e-9,
              0,
              0.936508,
              0.323069,
              351265e-10,
              0,
              0.968254,
              0.306897,
              339112e-10,
              0,
              1,
              1,
              10396e-19,
              0,
              0,
              1,
              104326e-20,
              0,
              0,
              1,
              110153e-20,
              0,
              0,
              1,
              144668e-20,
              0,
              0,
              1,
              34528e-19,
              0,
              0,
              1,
              175958e-19,
              0,
              0,
              1,
              12627e-17,
              0,
              0,
              1,
              936074e-18,
              0,
              0,
              1,
              645742e-17,
              0,
              0,
              0.999998,
              401228e-16,
              0,
              0,
              0.999997,
              2.22338e-10,
              0,
              0,
              0.999995,
              1.0967e-9,
              0,
              0,
              0.999991,
              4.82132e-9,
              0,
              0,
              0.999981,
              1.89434e-8,
              0,
              0,
              0.999967,
              6.67716e-8,
              0,
              0,
              0.999938,
              2.12066e-7,
              0,
              0,
              0.999886,
              6.0977e-7,
              0,
              0,
              0.999792,
              159504e-11,
              0,
              0,
              0.999608,
              381191e-11,
              0,
              0,
              0.999209,
              833727e-11,
              0,
              0,
              0.998179,
              165288e-10,
              0,
              0,
              0.994605,
              274387e-10,
              0,
              0,
              0.979468,
              167316e-10,
              0,
              0,
              0.967529,
              242877e-11,
              0,
              0,
              0.966836,
              461696e-11,
              0,
              0,
              0.96569,
              830977e-11,
              0,
              0,
              0.963706,
              140427e-10,
              0,
              244659e-11,
              0.960063,
              217353e-10,
              0,
              760774e-9,
              0.953113,
              286606e-10,
              0,
              0.00367261,
              0.940192,
              247691e-10,
              0,
              0.00940263,
              0.927731,
              195814e-10,
              0,
              0.018333,
              0.920669,
              252531e-10,
              0,
              0.0306825,
              0.911799,
              324277e-10,
              0,
              0.0465556,
              0.89857,
              340982e-10,
              0,
              0.0659521,
              0.883283,
              319622e-10,
              0,
              0.0887677,
              0.86989,
              35548e-9,
              0,
              0.114784,
              0.855483,
              397143e-10,
              0,
              0.143618,
              0.837987,
              391665e-10,
              0,
              0.174606,
              0.820546,
              411306e-10,
              0,
              0.206349,
              0.802878,
              436753e-10,
              0,
              0.238095,
              0.783402,
              444e-7,
              0,
              0.269841,
              0.763439,
              458726e-10,
              0,
              0.301587,
              0.742925,
              467097e-10,
              0,
              0.333333,
              0.721633,
              478887e-10,
              0,
              0.365079,
              0.69985,
              481251e-10,
              0,
              0.396825,
              0.67783,
              491811e-10,
              0,
              0.428571,
              0.655126,
              488199e-10,
              0,
              0.460318,
              0.632697,
              496025e-10,
              0,
              0.492064,
              0.609613,
              48829e-9,
              0,
              0.52381,
              0.587098,
              492754e-10,
              0,
              0.555556,
              0.564119,
              482625e-10,
              0,
              0.587302,
              0.541813,
              482807e-10,
              0,
              0.619048,
              0.519342,
              471552e-10,
              0,
              0.650794,
              0.497514,
              466765e-10,
              0,
              0.68254,
              0.475879,
              455582e-10,
              0,
              0.714286,
              0.454789,
              446007e-10,
              0,
              0.746032,
              0.434217,
              435382e-10,
              0,
              0.777778,
              0.414086,
              421753e-10,
              0,
              0.809524,
              0.394744,
              412093e-10,
              0,
              0.84127,
              0.375782,
              396634e-10,
              0,
              0.873016,
              0.357707,
              386419e-10,
              0,
              0.904762,
              0.340038,
              370345e-10,
              0,
              0.936508,
              0.323284,
              359725e-10,
              0,
              0.968254,
              0.306954,
              3436e-8,
              0,
              1,
              1,
              599567e-19,
              0,
              0,
              1,
              600497e-19,
              0,
              0,
              1,
              614839e-19,
              0,
              0,
              1,
              686641e-19,
              0,
              0,
              1,
              972658e-19,
              0,
              0,
              1,
              221271e-18,
              0,
              0,
              1,
              833195e-18,
              0,
              0,
              1,
              403601e-17,
              0,
              0,
              0.999999,
              206001e-16,
              0,
              0,
              0.999998,
              1.01739e-10,
              0,
              0,
              0.999997,
              4.70132e-10,
              0,
              0,
              0.999993,
              2.00436e-9,
              0,
              0,
              0.999988,
              7.83682e-9,
              0,
              0,
              0.999979,
              2.80338e-8,
              0,
              0,
              0.999962,
              9.17033e-8,
              0,
              0,
              0.999933,
              2.74514e-7,
              0,
              0,
              0.999881,
              7.53201e-7,
              0,
              0,
              0.999783,
              189826e-11,
              0,
              0,
              0.999594,
              440279e-11,
              0,
              0,
              0.999178,
              93898e-10,
              0,
              0,
              0.998073,
              181265e-10,
              0,
              0,
              0.993993,
              280487e-10,
              0,
              0,
              0.979982,
              149422e-10,
              0,
              0,
              0.968145,
              378481e-11,
              0,
              0,
              0.966786,
              53771e-10,
              0,
              0,
              0.965611,
              947508e-11,
              0,
              388934e-10,
              0.963557,
              156616e-10,
              0,
              9693e-7,
              0.959752,
              235144e-10,
              0,
              0.00370329,
              0.952461,
              291568e-10,
              0,
              0.00868428,
              0.940193,
              240102e-10,
              0,
              0.0161889,
              0.929042,
              231235e-10,
              0,
              0.0263948,
              0.920266,
              273968e-10,
              0,
              0.0394088,
              0.911178,
              337915e-10,
              0,
              0.0552818,
              0.897873,
              333629e-10,
              0,
              0.0740138,
              0.884053,
              351405e-10,
              0,
              0.0955539,
              0.869455,
              378034e-10,
              0,
              0.119795,
              0.854655,
              399378e-10,
              0,
              0.14656,
              0.838347,
              419108e-10,
              0,
              0.175573,
              0.820693,
              440831e-10,
              0,
              0.206388,
              0.802277,
              445599e-10,
              0,
              0.238095,
              0.783634,
              472691e-10,
              0,
              0.269841,
              0.763159,
              476984e-10,
              0,
              0.301587,
              0.742914,
              491487e-10,
              0,
              0.333333,
              0.721662,
              502312e-10,
              0,
              0.365079,
              0.699668,
              502817e-10,
              0,
              0.396825,
              0.677839,
              51406e-9,
              0,
              0.428571,
              0.655091,
              511095e-10,
              0,
              0.460317,
              0.632665,
              516067e-10,
              0,
              0.492064,
              0.609734,
              512255e-10,
              0,
              0.52381,
              0.587043,
              510263e-10,
              0,
              0.555556,
              0.564298,
              50565e-9,
              0,
              0.587302,
              0.541769,
              497951e-10,
              0,
              0.619048,
              0.519529,
              492698e-10,
              0,
              0.650794,
              0.497574,
              482066e-10,
              0,
              0.68254,
              0.476028,
              473689e-10,
              0,
              0.714286,
              0.454961,
              461941e-10,
              0,
              0.746032,
              0.434341,
              450618e-10,
              0,
              0.777778,
              0.414364,
              438355e-10,
              0,
              0.809524,
              0.394832,
              424196e-10,
              0,
              0.84127,
              0.376109,
              412563e-10,
              0,
              0.873016,
              0.35779,
              396226e-10,
              0,
              0.904762,
              0.340379,
              384886e-10,
              0,
              0.936508,
              0.323385,
              368214e-10,
              0,
              0.968254,
              0.307295,
              356636e-10,
              0,
              1,
              1,
              106465e-17,
              0,
              0,
              1,
              106555e-17,
              0,
              0,
              1,
              107966e-17,
              0,
              0,
              1,
              114601e-17,
              0,
              0,
              1,
              137123e-17,
              0,
              0,
              1,
              21243e-16,
              0,
              0,
              0.999999,
              489653e-17,
              0,
              0,
              0.999999,
              160283e-16,
              0,
              0,
              0.999998,
              62269e-15,
              0,
              0,
              0.999997,
              2.51859e-10,
              0,
              0,
              0.999996,
              9.96192e-10,
              0,
              0,
              0.999992,
              3.74531e-9,
              0,
              0,
              0.999986,
              1.32022e-8,
              0,
              0,
              0.999975,
              4.33315e-8,
              0,
              0,
              0.999959,
              1.31956e-7,
              0,
              0,
              0.999927,
              3.72249e-7,
              0,
              0,
              0.999871,
              9.72461e-7,
              0,
              0,
              0.999771,
              235343e-11,
              0,
              0,
              0.999572,
              52768e-10,
              0,
              0,
              0.999133,
              109237e-10,
              0,
              0,
              0.997912,
              203675e-10,
              0,
              0,
              0.993008,
              279396e-10,
              0,
              0,
              0.980645,
              139604e-10,
              0,
              0,
              0.970057,
              646596e-11,
              0,
              0,
              0.966717,
              65089e-10,
              0,
              474145e-10,
              0.965497,
              111863e-10,
              0,
              89544e-8,
              0.96334,
              179857e-10,
              0,
              0.0032647,
              0.959294,
              259045e-10,
              0,
              0.0075144,
              0.951519,
              292327e-10,
              0,
              0.0138734,
              0.940517,
              249769e-10,
              0,
              0.0224952,
              0.93014,
              26803e-9,
              0,
              0.0334828,
              0.91972,
              303656e-10,
              0,
              0.0468973,
              0.910294,
              353323e-10,
              0,
              0.0627703,
              0.897701,
              351002e-10,
              0,
              0.0811019,
              0.884522,
              388104e-10,
              0,
              0.10186,
              0.869489,
              412932e-10,
              0,
              0.124985,
              0.853983,
              415781e-10,
              0,
              0.150372,
              0.838425,
              454066e-10,
              0,
              0.177868,
              0.820656,
              471624e-10,
              0,
              0.207245,
              0.801875,
              475243e-10,
              0,
              0.238143,
              0.783521,
              505621e-10,
              0,
              0.269841,
              0.763131,
              50721e-9,
              0,
              0.301587,
              0.74261,
              523293e-10,
              0,
              0.333333,
              0.72148,
              528699e-10,
              0,
              0.365079,
              0.699696,
              538677e-10,
              0,
              0.396825,
              0.677592,
              539255e-10,
              0,
              0.428571,
              0.65525,
              546367e-10,
              0,
              0.460317,
              0.632452,
              541348e-10,
              0,
              0.492064,
              0.609903,
              544976e-10,
              0,
              0.52381,
              0.586928,
              536201e-10,
              0,
              0.555556,
              0.564464,
              535185e-10,
              0,
              0.587302,
              0.541801,
              524949e-10,
              0,
              0.619048,
              0.519681,
              51812e-9,
              0,
              0.650794,
              0.497685,
              507687e-10,
              0,
              0.68254,
              0.47622,
              496243e-10,
              0,
              0.714286,
              0.455135,
              485714e-10,
              0,
              0.746032,
              0.4346,
              471847e-10,
              0,
              0.777778,
              0.414564,
              459294e-10,
              0,
              0.809524,
              0.395165,
              444705e-10,
              0,
              0.84127,
              0.376333,
              430772e-10,
              0,
              0.873016,
              0.358197,
              416229e-10,
              0,
              0.904762,
              0.34064,
              401019e-10,
              0,
              0.936508,
              0.323816,
              386623e-10,
              0,
              0.968254,
              0.307581,
              370933e-10,
              0,
              1,
              1,
              991541e-17,
              0,
              0,
              1,
              992077e-17,
              0,
              0,
              1,
              100041e-16,
              0,
              0,
              1,
              10385e-15,
              0,
              0,
              1,
              115777e-16,
              0,
              0,
              1,
              150215e-16,
              0,
              0,
              0.999999,
              254738e-16,
              0,
              0,
              0.999999,
              598822e-16,
              0,
              0,
              0.999998,
              1.79597e-10,
              0,
              0,
              0.999997,
              6.02367e-10,
              0,
              0,
              0.999994,
              2.06835e-9,
              0,
              0,
              0.99999,
              6.94952e-9,
              0,
              0,
              0.999984,
              2.23363e-8,
              0,
              0,
              0.999972,
              6.78578e-8,
              0,
              0,
              0.999952,
              1.93571e-7,
              0,
              0,
              0.999919,
              5.16594e-7,
              0,
              0,
              0.99986,
              128739e-11,
              0,
              0,
              0.999753,
              299298e-11,
              0,
              0,
              0.999546,
              648258e-11,
              0,
              0,
              0.999074,
              129985e-10,
              0,
              0,
              0.997671,
              232176e-10,
              0,
              0,
              0.991504,
              256701e-10,
              0,
              0,
              0.981148,
              131141e-10,
              0,
              0,
              0.971965,
              869048e-11,
              0,
              280182e-10,
              0.966624,
              808301e-11,
              0,
              695475e-9,
              0.965344,
              135235e-10,
              0,
              0.00265522,
              0.963048,
              210592e-10,
              0,
              0.00622975,
              0.958673,
              287473e-10,
              0,
              0.0116234,
              0.950262,
              281379e-10,
              0,
              0.018976,
              0.940836,
              271089e-10,
              0,
              0.0283844,
              0.930996,
              30926e-9,
              0,
              0.0399151,
              0.919848,
              348359e-10,
              0,
              0.0536063,
              0.909136,
              366092e-10,
              0,
              0.0694793,
              0.897554,
              384162e-10,
              0,
              0.0875342,
              0.884691,
              430971e-10,
              0,
              0.107749,
              0.869414,
              447803e-10,
              0,
              0.130087,
              0.853462,
              452858e-10,
              0,
              0.154481,
              0.838187,
              495769e-10,
              0,
              0.180833,
              0.820381,
              502709e-10,
              0,
              0.209005,
              0.801844,
              522713e-10,
              0,
              0.238791,
              0.783061,
              541505e-10,
              0,
              0.269869,
              0.763205,
              553712e-10,
              0,
              0.301587,
              0.742362,
              564909e-10,
              0,
              0.333333,
              0.721393,
              572646e-10,
              0,
              0.365079,
              0.699676,
              581012e-10,
              0,
              0.396825,
              0.677395,
              58096e-9,
              0,
              0.428571,
              0.655208,
              585766e-10,
              0,
              0.460317,
              0.632451,
              583602e-10,
              0,
              0.492064,
              0.609839,
              580234e-10,
              0,
              0.52381,
              0.587093,
              577161e-10,
              0,
              0.555556,
              0.564467,
              568447e-10,
              0,
              0.587302,
              0.542043,
              563166e-10,
              0,
              0.619048,
              0.519826,
              55156e-9,
              0,
              0.650794,
              0.497952,
              541682e-10,
              0,
              0.68254,
              0.476477,
              528971e-10,
              0,
              0.714286,
              0.455412,
              514952e-10,
              0,
              0.746032,
              0.434926,
              502222e-10,
              0,
              0.777778,
              0.4149,
              485779e-10,
              0,
              0.809524,
              0.395552,
              472242e-10,
              0,
              0.84127,
              0.376712,
              454891e-10,
              0,
              0.873016,
              0.358622,
              440924e-10,
              0,
              0.904762,
              0.341048,
              422984e-10,
              0,
              0.936508,
              0.324262,
              408582e-10,
              0,
              0.968254,
              0.308013,
              390839e-10,
              0,
              1,
              1,
              613913e-16,
              0,
              0,
              1,
              614145e-16,
              0,
              0,
              1,
              617708e-16,
              0,
              0,
              1,
              633717e-16,
              0,
              0,
              1,
              681648e-16,
              0,
              0,
              1,
              808291e-16,
              0,
              0,
              1,
              1.14608e-10,
              0,
              0,
              0.999998,
              2.10507e-10,
              0,
              0,
              0.999997,
              4.99595e-10,
              0,
              0,
              0.999995,
              1.39897e-9,
              0,
              0,
              0.999994,
              4.19818e-9,
              0,
              0,
              0.999988,
              1.27042e-8,
              0,
              0,
              0.999979,
              3.75153e-8,
              0,
              0,
              0.999965,
              1.06206e-7,
              0,
              0,
              0.999945,
              2.85381e-7,
              0,
              0,
              0.999908,
              7.23611e-7,
              0,
              0,
              0.999846,
              17255e-10,
              0,
              0,
              0.999733,
              386104e-11,
              0,
              0,
              0.999511,
              808493e-11,
              0,
              0,
              0.998993,
              156884e-10,
              0,
              0,
              0.997326,
              265538e-10,
              0,
              0,
              0.989706,
              206466e-10,
              0,
              0,
              0.981713,
              130756e-10,
              0,
              70005e-10,
              0.973636,
              106473e-10,
              0,
              464797e-9,
              0.966509,
              10194e-9,
              0,
              0.00201743,
              0.965149,
              165881e-10,
              0,
              0.00497549,
              0.962669,
              249147e-10,
              0,
              0.00953262,
              0.95786,
              317449e-10,
              0,
              0.0158211,
              0.949334,
              281045e-10,
              0,
              0.0239343,
              0.941041,
              303263e-10,
              0,
              0.0339372,
              0.931575,
              356754e-10,
              0,
              0.0458738,
              0.920102,
              397075e-10,
              0,
              0.059772,
              0.908002,
              384886e-10,
              0,
              0.075645,
              0.897269,
              43027e-9,
              0,
              0.0934929,
              0.884559,
              479925e-10,
              0,
              0.113302,
              0.869161,
              48246e-9,
              0,
              0.135045,
              0.853342,
              509505e-10,
              0,
              0.158678,
              0.837633,
              542846e-10,
              0,
              0.184136,
              0.820252,
              554139e-10,
              0,
              0.211325,
              0.801872,
              581412e-10,
              0,
              0.240113,
              0.782418,
              585535e-10,
              0,
              0.270306,
              0.7631,
              610923e-10,
              0,
              0.301594,
              0.742183,
              613678e-10,
              0,
              0.333333,
              0.721098,
              627275e-10,
              0,
              0.365079,
              0.699512,
              629413e-10,
              0,
              0.396825,
              0.677372,
              636351e-10,
              0,
              0.428571,
              0.655059,
              633555e-10,
              0,
              0.460317,
              0.632567,
              636513e-10,
              0,
              0.492064,
              0.609784,
              628965e-10,
              0,
              0.52381,
              0.587237,
              625546e-10,
              0,
              0.555556,
              0.564525,
              615825e-10,
              0,
              0.587302,
              0.542181,
              605048e-10,
              0,
              0.619048,
              0.520017,
              596329e-10,
              0,
              0.650794,
              0.498204,
              581516e-10,
              0,
              0.68254,
              0.476742,
              569186e-10,
              0,
              0.714286,
              0.455803,
              553833e-10,
              0,
              0.746032,
              0.435251,
              537807e-10,
              0,
              0.777778,
              0.415374,
              522025e-10,
              0,
              0.809524,
              0.395921,
              503421e-10,
              0,
              0.84127,
              0.377253,
              488211e-10,
              0,
              0.873016,
              0.359021,
              468234e-10,
              0,
              0.904762,
              0.341637,
              453269e-10,
              0,
              0.936508,
              0.3247,
              433014e-10,
              0,
              0.968254,
              0.308625,
              418007e-10,
              0,
              1,
              1,
              2.86798e-10,
              0,
              0,
              1,
              2.86877e-10,
              0,
              0,
              1,
              2.88094e-10,
              0,
              0,
              1,
              2.93506e-10,
              0,
              0,
              1,
              3.09262e-10,
              0,
              0,
              0.999999,
              3.48593e-10,
              0,
              0,
              0.999999,
              4.44582e-10,
              0,
              0,
              0.999998,
              6.88591e-10,
              0,
              0,
              0.999996,
              1.34391e-9,
              0,
              0,
              0.999993,
              3.17438e-9,
              0,
              0,
              0.999989,
              8.35609e-9,
              0,
              0,
              0.999983,
              2.28677e-8,
              0,
              0,
              0.999974,
              6.23361e-8,
              0,
              0,
              0.999959,
              1.65225e-7,
              0,
              0,
              0.999936,
              4.19983e-7,
              0,
              0,
              0.999896,
              101546e-11,
              0,
              0,
              0.99983,
              232376e-11,
              0,
              0,
              0.999709,
              50156e-10,
              0,
              0,
              0.999469,
              10167e-9,
              0,
              0,
              0.998886,
              190775e-10,
              0,
              0,
              0.996819,
              300511e-10,
              0,
              0,
              0.988837,
              185092e-10,
              0,
              1.68222e-7,
              0.982178,
              134622e-10,
              0,
              259622e-9,
              0.975017,
              125961e-10,
              0,
              0.00142595,
              0.967101,
              13507e-9,
              0,
              0.00382273,
              0.964905,
              205003e-10,
              0,
              0.00764164,
              0.96218,
              29546e-9,
              0,
              0.0130121,
              0.956821,
              343738e-10,
              0,
              0.0200253,
              0.948829,
              305063e-10,
              0,
              0.0287452,
              0.941092,
              346487e-10,
              0,
              0.039218,
              0.931883,
              412061e-10,
              0,
              0.0514748,
              0.920211,
              444651e-10,
              0,
              0.0655351,
              0.907307,
              431252e-10,
              0,
              0.0814082,
              0.89684,
              490382e-10,
              0,
              0.0990939,
              0.884119,
              53334e-9,
              0,
              0.118583,
              0.869148,
              54114e-9,
              0,
              0.139856,
              0.853377,
              578536e-10,
              0,
              0.162882,
              0.836753,
              592285e-10,
              0,
              0.187615,
              0.820063,
              622787e-10,
              0,
              0.213991,
              0.801694,
              645492e-10,
              0,
              0.241918,
              0.782116,
              65353e-9,
              0,
              0.271267,
              0.762673,
              674344e-10,
              0,
              0.301847,
              0.742133,
              682788e-10,
              0,
              0.333333,
              0.720779,
              691959e-10,
              0,
              0.365079,
              0.699386,
              696817e-10,
              0,
              0.396826,
              0.67732,
              699583e-10,
              0,
              0.428572,
              0.654888,
              698447e-10,
              0,
              0.460318,
              0.632499,
              694063e-10,
              0,
              0.492064,
              0.609825,
              691612e-10,
              0,
              0.52381,
              0.587287,
              681576e-10,
              0,
              0.555556,
              0.564743,
              674138e-10,
              0,
              0.587302,
              0.542409,
              661617e-10,
              0,
              0.619048,
              0.520282,
              647785e-10,
              0,
              0.650794,
              0.498506,
              633836e-10,
              0,
              0.68254,
              0.477102,
              615905e-10,
              0,
              0.714286,
              0.456167,
              601013e-10,
              0,
              0.746032,
              0.435728,
              581457e-10,
              0,
              0.777778,
              0.415809,
              564215e-10,
              0,
              0.809524,
              0.396517,
              544997e-10,
              0,
              0.84127,
              0.377737,
              525061e-10,
              0,
              0.873016,
              0.359698,
              506831e-10,
              0,
              0.904762,
              0.342164,
              48568e-9,
              0,
              0.936508,
              0.325417,
              467826e-10,
              0,
              0.968254,
              0.309186,
              446736e-10,
              0,
              1,
              1,
              1.09018e-9,
              0,
              0,
              1,
              1.0904e-9,
              0,
              0,
              1,
              1.09393e-9,
              0,
              0,
              1,
              1.1095e-9,
              0,
              0,
              1,
              1.154e-9,
              0,
              0,
              1,
              1.26089e-9,
              0,
              0,
              0.999999,
              1.5059e-9,
              0,
              0,
              0.999997,
              2.07899e-9,
              0,
              0,
              0.999994,
              3.48164e-9,
              0,
              0,
              0.999993,
              7.05728e-9,
              0,
              0,
              0.999987,
              1.63692e-8,
              0,
              0,
              0.999981,
              4.06033e-8,
              0,
              0,
              0.999969,
              1.0245e-7,
              0,
              0,
              0.999953,
              2.55023e-7,
              0,
              0,
              0.999925,
              6.1511e-7,
              0,
              0,
              0.999881,
              142218e-11,
              0,
              0,
              0.99981,
              313086e-11,
              0,
              0,
              0.99968,
              653119e-11,
              0,
              0,
              0.999418,
              12832e-9,
              0,
              0,
              0.998748,
              232497e-10,
              0,
              0,
              0.996066,
              329522e-10,
              0,
              0,
              0.988379,
              179613e-10,
              0,
              108799e-9,
              0.982567,
              143715e-10,
              0,
              921302e-9,
              0.976097,
              148096e-10,
              0,
              0.00280738,
              0.968475,
              178905e-10,
              0,
              0.00596622,
              0.964606,
              253921e-10,
              0,
              0.0105284,
              0.961564,
              348623e-10,
              0,
              0.0165848,
              0.955517,
              357612e-10,
              0,
              0.0242,
              0.948381,
              343493e-10,
              0,
              0.03342,
              0.941095,
              405849e-10,
              0,
              0.0442777,
              0.931923,
              475394e-10,
              0,
              0.0567958,
              0.91996,
              484328e-10,
              0,
              0.0709879,
              0.907419,
              502146e-10,
              0,
              0.086861,
              0.89618,
              561654e-10,
              0,
              0.104415,
              0.88337,
              587612e-10,
              0,
              0.123643,
              0.869046,
              618057e-10,
              0,
              0.144531,
              0.853278,
              657392e-10,
              0,
              0.167057,
              0.836091,
              66303e-9,
              0,
              0.191188,
              0.819644,
              704445e-10,
              0,
              0.216878,
              0.801246,
              714071e-10,
              0,
              0.244062,
              0.782031,
              740093e-10,
              0,
              0.272649,
              0.762066,
              74685e-9,
              0,
              0.302509,
              0.741964,
              766647e-10,
              0,
              0.333442,
              0.720554,
              766328e-10,
              0,
              0.365079,
              0.699098,
              777857e-10,
              0,
              0.396826,
              0.677189,
              774633e-10,
              0,
              0.428572,
              0.65484,
              776235e-10,
              0,
              0.460318,
              0.632496,
              770316e-10,
              0,
              0.492064,
              0.609908,
              762669e-10,
              0,
              0.52381,
              0.587312,
              753972e-10,
              0,
              0.555556,
              0.564938,
              739994e-10,
              0,
              0.587302,
              0.542577,
              728382e-10,
              0,
              0.619048,
              0.52062,
              71112e-9,
              0,
              0.650794,
              0.498819,
              694004e-10,
              0,
              0.68254,
              0.477555,
              675575e-10,
              0,
              0.714286,
              0.456568,
              653449e-10,
              0,
              0.746032,
              0.436278,
              636068e-10,
              0,
              0.777778,
              0.41637,
              613466e-10,
              0,
              0.809524,
              0.397144,
              594177e-10,
              0,
              0.84127,
              0.378412,
              570987e-10,
              0,
              0.873016,
              0.360376,
              550419e-10,
              0,
              0.904762,
              0.342906,
              527422e-10,
              0,
              0.936508,
              0.326136,
              506544e-10,
              0,
              0.968254,
              0.30997,
              484307e-10,
              0,
              1,
              1,
              3.54014e-9,
              0,
              0,
              1,
              3.54073e-9,
              0,
              0,
              1,
              3.54972e-9,
              0,
              0,
              1,
              3.58929e-9,
              0,
              0,
              1,
              3.70093e-9,
              0,
              0,
              0.999999,
              3.96194e-9,
              0,
              0,
              0.999998,
              4.53352e-9,
              0,
              0,
              0.999997,
              5.78828e-9,
              0,
              0,
              0.999994,
              8.63812e-9,
              0,
              0,
              0.999991,
              1.53622e-8,
              0,
              0,
              0.999985,
              3.16356e-8,
              0,
              0,
              0.999977,
              7.12781e-8,
              0,
              0,
              0.999964,
              1.66725e-7,
              0,
              0,
              0.999945,
              3.90501e-7,
              0,
              0,
              0.999912,
              8.95622e-7,
              0,
              0,
              0.999866,
              198428e-11,
              0,
              0,
              0.999786,
              421038e-11,
              0,
              0,
              0.999647,
              850239e-11,
              0,
              0,
              0.999356,
              162059e-10,
              0,
              0,
              0.998563,
              282652e-10,
              0,
              0,
              0.994928,
              336309e-10,
              0,
              244244e-10,
              0.987999,
              178458e-10,
              0,
              523891e-9,
              0.982893,
              159162e-10,
              0,
              0.00194729,
              0.977044,
              178056e-10,
              0,
              0.00451099,
              0.969972,
              230624e-10,
              0,
              0.00835132,
              0.964237,
              313922e-10,
              0,
              0.013561,
              0.960791,
              406145e-10,
              0,
              0.0202056,
              0.954292,
              372796e-10,
              0,
              0.0283321,
              0.948052,
              403199e-10,
              0,
              0.0379739,
              0.940938,
              479537e-10,
              0,
              0.0491551,
              0.931689,
              545292e-10,
              0,
              0.0618918,
              0.91987,
              54038e-9,
              0,
              0.0761941,
              0.907665,
              589909e-10,
              0,
              0.0920672,
              0.895281,
              642651e-10,
              0,
              0.109511,
              0.882621,
              659707e-10,
              0,
              0.12852,
              0.86873,
              709973e-10,
              0,
              0.149085,
              0.853008,
              742221e-10,
              0,
              0.171189,
              0.835944,
              761754e-10,
              0,
              0.194809,
              0.818949,
              797052e-10,
              0,
              0.21991,
              0.800951,
              812434e-10,
              0,
              0.246447,
              0.781847,
              838075e-10,
              0,
              0.274352,
              0.761649,
              84501e-9,
              0,
              0.303535,
              0.74152,
              860258e-10,
              0,
              0.333857,
              0.720495,
              866233e-10,
              0,
              0.365104,
              0.698742,
              868326e-10,
              0,
              0.396826,
              0.677096,
              87133e-9,
              0,
              0.428572,
              0.654782,
              863497e-10,
              0,
              0.460318,
              0.632335,
              860206e-10,
              0,
              0.492064,
              0.610031,
              849337e-10,
              0,
              0.52381,
              0.587457,
              838279e-10,
              0,
              0.555556,
              0.56513,
              82309e-9,
              0,
              0.587302,
              0.542877,
              803542e-10,
              0,
              0.619048,
              0.5209,
              786928e-10,
              0,
              0.650794,
              0.499291,
              765171e-10,
              0,
              0.68254,
              0.477971,
              744753e-10,
              0,
              0.714286,
              0.457221,
              72209e-9,
              0,
              0.746032,
              0.436803,
              697448e-10,
              0,
              0.777778,
              0.417083,
              675333e-10,
              0,
              0.809524,
              0.397749,
              648058e-10,
              0,
              0.84127,
              0.379177,
              625759e-10,
              0,
              0.873016,
              0.361061,
              598584e-10,
              0,
              0.904762,
              0.343713,
              575797e-10,
              0,
              0.936508,
              0.326894,
              549999e-10,
              0,
              0.968254,
              0.310816,
              527482e-10,
              0,
              1,
              1,
              1.0153e-8,
              0,
              0,
              1,
              1.01544e-8,
              0,
              0,
              1,
              1.01751e-8,
              0,
              0,
              1,
              1.02662e-8,
              0,
              0,
              1,
              1.0521e-8,
              0,
              0,
              0.999999,
              1.11049e-8,
              0,
              0,
              0.999999,
              1.23408e-8,
              0,
              0,
              0.999996,
              1.4924e-8,
              0,
              0,
              0.999992,
              2.04471e-8,
              0,
              0,
              0.999989,
              3.26539e-8,
              0,
              0,
              0.99998,
              6.03559e-8,
              0,
              0,
              0.999971,
              1.23936e-7,
              0,
              0,
              0.999955,
              2.69058e-7,
              0,
              0,
              0.999933,
              5.93604e-7,
              0,
              0,
              0.999901,
              129633e-11,
              0,
              0,
              0.999847,
              275621e-11,
              0,
              0,
              0.999761,
              564494e-11,
              0,
              0,
              0.999607,
              110485e-10,
              0,
              0,
              0.999282,
              204388e-10,
              0,
              0,
              0.99831,
              341084e-10,
              0,
              2.2038e-7,
              0.993288,
              294949e-10,
              0,
              242388e-9,
              0.987855,
              192736e-10,
              0,
              0.0012503,
              0.983167,
              182383e-10,
              0,
              0.0032745,
              0.977908,
              218633e-10,
              0,
              0.00646321,
              0.971194,
              290662e-10,
              0,
              0.0109133,
              0.963867,
              386401e-10,
              0,
              0.0166927,
              0.95982,
              462827e-10,
              0,
              0.0238494,
              0.953497,
              420705e-10,
              0,
              0.0324178,
              0.947621,
              477743e-10,
              0,
              0.0424225,
              0.940611,
              568258e-10,
              0,
              0.0538808,
              0.931174,
              618061e-10,
              0,
              0.0668047,
              0.919919,
              627098e-10,
              0,
              0.0812014,
              0.907856,
              694714e-10,
              0,
              0.0970745,
              0.894509,
              735008e-10,
              0,
              0.114424,
              0.881954,
              763369e-10,
              0,
              0.133246,
              0.868309,
              821896e-10,
              0,
              0.153534,
              0.852511,
              83769e-9,
              0,
              0.175275,
              0.835821,
              881615e-10,
              0,
              0.198453,
              0.817981,
              896368e-10,
              0,
              0.223042,
              0.800504,
              930906e-10,
              0,
              0.249009,
              0.78141,
              945056e-10,
              0,
              0.276304,
              0.761427,
              963605e-10,
              0,
              0.304862,
              0.74094,
              968088e-10,
              0,
              0.334584,
              0.720233,
              981481e-10,
              0,
              0.365322,
              0.698592,
              979122e-10,
              0,
              0.396826,
              0.676763,
              981057e-10,
              0,
              0.428571,
              0.654808,
              973956e-10,
              0,
              0.460318,
              0.632326,
              962619e-10,
              0,
              0.492064,
              0.610049,
              952996e-10,
              0,
              0.52381,
              0.58763,
              933334e-10,
              0,
              0.555556,
              0.565261,
              917573e-10,
              0,
              0.587302,
              0.543244,
              896636e-10,
              0,
              0.619048,
              0.521273,
              873304e-10,
              0,
              0.650794,
              0.499818,
              852648e-10,
              0,
              0.68254,
              0.478536,
              823961e-10,
              0,
              0.714286,
              0.457826,
              79939e-9,
              0,
              0.746032,
              0.437549,
              77126e-9,
              0,
              0.777778,
              0.41776,
              743043e-10,
              0,
              0.809524,
              0.39863,
              716426e-10,
              0,
              0.84127,
              0.379954,
              686456e-10,
              0,
              0.873016,
              0.362025,
              660514e-10,
              0,
              0.904762,
              0.344581,
              630755e-10,
              0,
              0.936508,
              0.327909,
              605439e-10,
              0,
              0.968254,
              0.311736,
              576345e-10,
              0,
              1,
              1,
              2.63344e-8,
              0,
              0,
              1,
              2.63373e-8,
              0,
              0,
              1,
              2.63815e-8,
              0,
              0,
              1,
              2.65753e-8,
              0,
              0,
              1,
              2.71132e-8,
              0,
              0,
              0.999999,
              2.83279e-8,
              0,
              0,
              0.999997,
              3.0833e-8,
              0,
              0,
              0.999995,
              3.58711e-8,
              0,
              0,
              0.999992,
              4.61266e-8,
              0,
              0,
              0.999985,
              6.7574e-8,
              0,
              0,
              0.999977,
              1.1358e-7,
              0,
              0,
              0.999966,
              2.13657e-7,
              0,
              0,
              0.999948,
              4.31151e-7,
              0,
              0,
              0.999923,
              8.96656e-7,
              0,
              0,
              0.999884,
              186603e-11,
              0,
              0,
              0.999826,
              381115e-11,
              0,
              0,
              0.999732,
              754184e-11,
              0,
              0,
              0.999561,
              143192e-10,
              0,
              0,
              0.999191,
              257061e-10,
              0,
              0,
              0.997955,
              405724e-10,
              0,
              744132e-10,
              0.992228,
              276537e-10,
              0,
              716477e-9,
              0.987638,
              208885e-10,
              0,
              0.0022524,
              0.983395,
              215226e-10,
              0,
              0.00484816,
              0.978614,
              270795e-10,
              0,
              0.00860962,
              0.972389,
              365282e-10,
              0,
              0.0136083,
              0.964392,
              474747e-10,
              0,
              0.0198941,
              0.95861,
              509141e-10,
              0,
              0.0275023,
              0.952806,
              48963e-9,
              0,
              0.0364584,
              0.94712,
              571119e-10,
              0,
              0.04678,
              0.940104,
              671704e-10,
              0,
              0.0584799,
              0.930398,
              687586e-10,
              0,
              0.0715665,
              0.919866,
              738161e-10,
              0,
              0.086045,
              0.907853,
              813235e-10,
              0,
              0.101918,
              0.894078,
              834582e-10,
              0,
              0.119186,
              0.881177,
              892093e-10,
              0,
              0.137845,
              0.867575,
              944548e-10,
              0,
              0.157891,
              0.852107,
              969607e-10,
              0,
              0.179316,
              0.835502,
              101456e-9,
              0,
              0.202106,
              0.81756,
              103256e-9,
              0,
              0.226243,
              0.79984,
              106954e-9,
              0,
              0.251704,
              0.780998,
              108066e-9,
              0,
              0.278451,
              0.761132,
              110111e-9,
              0,
              0.306436,
              0.740429,
              110459e-9,
              0,
              0.335586,
              0.719836,
              111219e-9,
              0,
              0.365796,
              0.698467,
              11145e-8,
              0,
              0.3969,
              0.676446,
              110393e-9,
              0,
              0.428571,
              0.654635,
              110035e-9,
              0,
              0.460318,
              0.632411,
              108548e-9,
              0,
              0.492064,
              0.609986,
              106963e-9,
              0,
              0.52381,
              0.587872,
              105238e-9,
              0,
              0.555556,
              0.565528,
              102665e-9,
              0,
              0.587302,
              0.543563,
              100543e-9,
              0,
              0.619048,
              0.52176,
              976182e-10,
              0,
              0.650794,
              0.500188,
              947099e-10,
              0,
              0.68254,
              0.479204,
              919929e-10,
              0,
              0.714286,
              0.458413,
              886139e-10,
              0,
              0.746032,
              0.438314,
              857839e-10,
              0,
              0.777778,
              0.418573,
              82411e-9,
              0,
              0.809524,
              0.39947,
              792211e-10,
              0,
              0.84127,
              0.380892,
              759546e-10,
              0,
              0.873016,
              0.362953,
              727571e-10,
              0,
              0.904762,
              0.345601,
              695738e-10,
              0,
              0.936508,
              0.328895,
              664907e-10,
              0,
              0.968254,
              0.312808,
              634277e-10,
              0,
              1,
              1,
              6.28647e-8,
              0,
              0,
              1,
              6.28705e-8,
              0,
              0,
              1,
              6.29587e-8,
              0,
              0,
              1,
              6.33441e-8,
              0,
              0,
              0.999999,
              6.44087e-8,
              0,
              0,
              0.999998,
              6.67856e-8,
              0,
              0,
              0.999997,
              7.15889e-8,
              0,
              0,
              0.999995,
              8.09577e-8,
              0,
              0,
              0.999989,
              9.92764e-8,
              0,
              0,
              0.999983,
              1.35834e-7,
              0,
              0,
              0.999974,
              2.10482e-7,
              0,
              0,
              0.999959,
              3.65215e-7,
              0,
              0,
              0.999939,
              6.86693e-7,
              0,
              0,
              0.999911,
              13472e-10,
              0,
              0,
              0.999868,
              26731e-10,
              0,
              0,
              0.999804,
              524756e-11,
              0,
              0,
              0.9997,
              100403e-10,
              0,
              0,
              0.99951,
              185019e-10,
              0,
              0,
              0.999078,
              322036e-10,
              0,
              620676e-11,
              0.997428,
              470002e-10,
              0,
              341552e-9,
              0.99162,
              287123e-10,
              0,
              0.00143727,
              0.987479,
              234706e-10,
              0,
              0.00349201,
              0.983582,
              260083e-10,
              0,
              0.0066242,
              0.979186,
              337927e-10,
              0,
              0.0109113,
              0.97325,
              454689e-10,
              0,
              0.0164064,
              0.965221,
              573759e-10,
              0,
              0.0231463,
              0.957262,
              544114e-10,
              0,
              0.0311571,
              0.952211,
              587006e-10,
              0,
              0.0404572,
              0.946631,
              692256e-10,
              0,
              0.0510592,
              0.939391,
              787819e-10,
              0,
              0.0629723,
              0.929795,
              792368e-10,
              0,
              0.0762025,
              0.91965,
              875075e-10,
              0,
              0.090753,
              0.907737,
              950903e-10,
              0,
              0.106626,
              0.893899,
              972963e-10,
              0,
              0.123822,
              0.880239,
              10459e-8,
              0,
              0.142337,
              0.866562,
              107689e-9,
              0,
              0.16217,
              0.85164,
              113081e-9,
              0,
              0.183314,
              0.835021,
              116636e-9,
              0,
              0.20576,
              0.817311,
              120074e-9,
              0,
              0.229496,
              0.798845,
              121921e-9,
              0,
              0.254502,
              0.780479,
              12475e-8,
              0,
              0.280753,
              0.760694,
              125255e-9,
              0,
              0.308212,
              0.740142,
              126719e-9,
              0,
              0.336825,
              0.719248,
              12636e-8,
              0,
              0.366517,
              0.698209,
              126712e-9,
              0,
              0.397167,
              0.676398,
              125769e-9,
              0,
              0.428578,
              0.654378,
              124432e-9,
              0,
              0.460318,
              0.632484,
              123272e-9,
              0,
              0.492064,
              0.610113,
              12085e-8,
              0,
              0.52381,
              0.587931,
              118411e-9,
              0,
              0.555556,
              0.565872,
              11569e-8,
              0,
              0.587302,
              0.543814,
              112521e-9,
              0,
              0.619048,
              0.522265,
              109737e-9,
              0,
              0.650794,
              0.500835,
              106228e-9,
              0,
              0.68254,
              0.479818,
              102591e-9,
              0,
              0.714286,
              0.459258,
              991288e-10,
              0,
              0.746032,
              0.439061,
              952325e-10,
              0,
              0.777778,
              0.419552,
              91895e-9,
              0,
              0.809524,
              0.400399,
              879051e-10,
              0,
              0.84127,
              0.381976,
              844775e-10,
              0,
              0.873016,
              0.364009,
              806316e-10,
              0,
              0.904762,
              0.346761,
              771848e-10,
              0,
              0.936508,
              0.330049,
              735429e-10,
              0,
              0.968254,
              0.314018,
              702103e-10,
              0,
              1,
              1,
              1.39968e-7,
              0,
              0,
              1,
              1.39979e-7,
              0,
              0,
              1,
              1.40145e-7,
              0,
              0,
              1,
              1.4087e-7,
              0,
              0,
              0.999999,
              1.42865e-7,
              0,
              0,
              0.999998,
              1.47279e-7,
              0,
              0,
              0.999997,
              1.56057e-7,
              0,
              0,
              0.999992,
              1.7276e-7,
              0,
              0,
              0.999989,
              2.04352e-7,
              0,
              0,
              0.99998,
              2.6494e-7,
              0,
              0,
              0.999969,
              3.83435e-7,
              0,
              0,
              0.999953,
              6.18641e-7,
              0,
              0,
              0.999929,
              108755e-11,
              0,
              0,
              0.999898,
              201497e-11,
              0,
              0,
              0.999849,
              381346e-11,
              0,
              0,
              0.999778,
              719815e-11,
              0,
              0,
              0.999661,
              133215e-10,
              0,
              0,
              0.999451,
              238313e-10,
              0,
              0,
              0.998936,
              401343e-10,
              0,
              113724e-9,
              0.99662,
              517346e-10,
              0,
              820171e-9,
              0.991094,
              304323e-10,
              0,
              0.00238143,
              0.987487,
              281757e-10,
              0,
              0.00493527,
              0.983731,
              320048e-10,
              0,
              0.00856859,
              0.979647,
              423905e-10,
              0,
              0.0133393,
              0.973837,
              562935e-10,
              0,
              0.0192863,
              0.96584,
              677442e-10,
              0,
              0.0264369,
              0.956309,
              623073e-10,
              0,
              0.03481,
              0.951523,
              704131e-10,
              0,
              0.0444184,
              0.946003,
              836594e-10,
              0,
              0.0552713,
              0.938454,
              911736e-10,
              0,
              0.0673749,
              0.929279,
              938264e-10,
              0,
              0.0807329,
              0.919239,
              103754e-9,
              0,
              0.0953479,
              0.907293,
              109928e-9,
              0,
              0.111221,
              0.893936,
              115257e-9,
              0,
              0.128352,
              0.879674,
              122265e-9,
              0,
              0.14674,
              0.865668,
              125733e-9,
              0,
              0.166382,
              0.850998,
              132305e-9,
              0,
              0.187276,
              0.834498,
              134844e-9,
              0,
              0.209413,
              0.816903,
              139276e-9,
              0,
              0.232786,
              0.798235,
              140984e-9,
              0,
              0.257382,
              0.779724,
              14378e-8,
              0,
              0.283181,
              0.760251,
              144623e-9,
              0,
              0.310156,
              0.739808,
              145228e-9,
              0,
              0.338269,
              0.718762,
              14539e-8,
              0,
              0.367461,
              0.697815,
              144432e-9,
              0,
              0.397646,
              0.67631,
              143893e-9,
              0,
              0.428685,
              0.654278,
              141846e-9,
              0,
              0.460318,
              0.632347,
              13935e-8,
              0,
              0.492064,
              0.610296,
              137138e-9,
              0,
              0.52381,
              0.588039,
              133806e-9,
              0,
              0.555556,
              0.566218,
              130755e-9,
              0,
              0.587302,
              0.544346,
              127128e-9,
              0,
              0.619048,
              0.522701,
              123002e-9,
              0,
              0.650794,
              0.501542,
              119443e-9,
              0,
              0.68254,
              0.480508,
              115055e-9,
              0,
              0.714286,
              0.460092,
              111032e-9,
              0,
              0.746032,
              0.440021,
              106635e-9,
              0,
              0.777778,
              0.420446,
              102162e-9,
              0,
              0.809524,
              0.401512,
              98184e-9,
              0,
              0.84127,
              0.38299,
              936497e-10,
              0,
              0.873016,
              0.365232,
              89813e-9,
              0,
              0.904762,
              0.347865,
              853073e-10,
              0,
              0.936508,
              0.331342,
              817068e-10,
              0,
              0.968254,
              0.315202,
              773818e-10,
              0,
              1,
              1,
              2.9368e-7,
              0,
              0,
              1,
              2.937e-7,
              0,
              0,
              1,
              2.93998e-7,
              0,
              0,
              1,
              2.95298e-7,
              0,
              0,
              0.999999,
              2.98865e-7,
              0,
              0,
              0.999998,
              3.067e-7,
              0,
              0,
              0.999995,
              3.22082e-7,
              0,
              0,
              0.999992,
              3.50767e-7,
              0,
              0,
              0.999986,
              4.03538e-7,
              0,
              0,
              0.999976,
              5.01372e-7,
              0,
              0,
              0.999964,
              6.8562e-7,
              0,
              0,
              0.999945,
              10374e-10,
              0,
              0,
              0.999919,
              171269e-11,
              0,
              0,
              0.999882,
              300175e-11,
              0,
              0,
              0.999829,
              542144e-11,
              0,
              0,
              0.999749,
              984182e-11,
              0,
              0,
              0.99962,
              176213e-10,
              0,
              0,
              0.999382,
              305995e-10,
              0,
              138418e-10,
              0.998751,
              496686e-10,
              0,
              389844e-9,
              0.995344,
              510733e-10,
              0,
              0.00150343,
              0.990768,
              345829e-10,
              0,
              0.00352451,
              0.987464,
              342841e-10,
              0,
              0.00655379,
              0.983846,
              399072e-10,
              0,
              0.0106554,
              0.980007,
              533219e-10,
              0,
              0.0158723,
              0.974494,
              696992e-10,
              0,
              0.0222333,
              0.96622,
              776754e-10,
              0,
              0.029758,
              0.956273,
              747718e-10,
              0,
              0.0384596,
              0.950952,
              864611e-10,
              0,
              0.0483473,
              0.945215,
              100464e-9,
              0,
              0.0594266,
              0.937287,
              103729e-9,
              0,
              0.0717019,
              0.928649,
              111665e-9,
              0,
              0.0851752,
              0.918791,
              12353e-8,
              0,
              0.0998479,
              0.906685,
              127115e-9,
              0,
              0.115721,
              0.893706,
              13628e-8,
              0,
              0.132794,
              0.879248,
              142427e-9,
              0,
              0.151067,
              0.864685,
              148091e-9,
              0,
              0.170538,
              0.850032,
              153517e-9,
              0,
              0.191204,
              0.833853,
              157322e-9,
              0,
              0.213063,
              0.816353,
              161086e-9,
              0,
              0.236107,
              0.797834,
              164111e-9,
              0,
              0.260329,
              0.778831,
              165446e-9,
              0,
              0.285714,
              0.759756,
              167492e-9,
              0,
              0.312243,
              0.739419,
              166928e-9,
              0,
              0.339887,
              0.718491,
              167e-6,
              0,
              0.368604,
              0.697392,
              165674e-9,
              0,
              0.398329,
              0.676102,
              163815e-9,
              0,
              0.428961,
              0.654243,
              162003e-9,
              0,
              0.460331,
              0.632176,
              158831e-9,
              0,
              0.492064,
              0.610407,
              155463e-9,
              0,
              0.52381,
              0.588394,
              152062e-9,
              0,
              0.555556,
              0.56645,
              147665e-9,
              0,
              0.587302,
              0.5449,
              14375e-8,
              0,
              0.619048,
              0.523276,
              138905e-9,
              0,
              0.650794,
              0.502179,
              134189e-9,
              0,
              0.68254,
              0.481359,
              129392e-9,
              0,
              0.714286,
              0.46092,
              124556e-9,
              0,
              0.746032,
              0.441084,
              11957e-8,
              0,
              0.777778,
              0.421517,
              114652e-9,
              0,
              0.809524,
              0.402721,
              109688e-9,
              0,
              0.84127,
              0.384222,
              104667e-9,
              0,
              0.873016,
              0.366534,
              999633e-10,
              0,
              0.904762,
              0.349205,
              950177e-10,
              0,
              0.936508,
              0.332702,
              907301e-10,
              0,
              0.968254,
              0.316599,
              859769e-10,
              0,
              1,
              1,
              5.85473e-7,
              0,
              0,
              1,
              5.85507e-7,
              0,
              0,
              1,
              5.8602e-7,
              0,
              0,
              0.999999,
              5.88259e-7,
              0,
              0,
              0.999999,
              5.94381e-7,
              0,
              0,
              0.999998,
              6.07754e-7,
              0,
              0,
              0.999995,
              6.33729e-7,
              0,
              0,
              0.99999,
              6.8137e-7,
              0,
              0,
              0.999984,
              7.67003e-7,
              0,
              0,
              0.999973,
              9.21212e-7,
              0,
              0,
              0.999959,
              120218e-11,
              0,
              0,
              0.999936,
              172024e-11,
              0,
              0,
              0.999907,
              268088e-11,
              0,
              0,
              0.999866,
              445512e-11,
              0,
              0,
              0.999806,
              768481e-11,
              0,
              0,
              0.999716,
              1342e-8,
              0,
              0,
              0.999576,
              232473e-10,
              0,
              0,
              0.9993,
              391694e-10,
              0,
              129917e-9,
              0.998498,
              608429e-10,
              0,
              845035e-9,
              0.994132,
              489743e-10,
              0,
              0.00237616,
              0.99031,
              384644e-10,
              0,
              0.00484456,
              0.987409,
              421768e-10,
              0,
              0.00832472,
              0.983981,
              504854e-10,
              0,
              0.0128643,
              0.980268,
              671028e-10,
              0,
              0.0184947,
              0.974875,
              852749e-10,
              0,
              0.025237,
              0.966063,
              85531e-9,
              0,
              0.0331046,
              0.956779,
              900588e-10,
              0,
              0.0421067,
              0.950259,
              10577e-8,
              0,
              0.0522487,
              0.944239,
              119458e-9,
              0,
              0.0635343,
              0.936341,
              122164e-9,
              0,
              0.0759654,
              0.928047,
              134929e-9,
              0,
              0.0895434,
              0.918065,
              145544e-9,
              0,
              0.104269,
              0.906267,
              150531e-9,
              0,
              0.120142,
              0.893419,
              161652e-9,
              0,
              0.137163,
              0.878758,
              16593e-8,
              0,
              0.15533,
              0.863699,
              174014e-9,
              0,
              0.174645,
              0.848876,
              177877e-9,
              0,
              0.195106,
              0.833032,
              184049e-9,
              0,
              0.21671,
              0.815557,
              186088e-9,
              0,
              0.239454,
              0.797323,
              19054e-8,
              0,
              0.263332,
              0.778124,
              191765e-9,
              0,
              0.288336,
              0.758929,
              192535e-9,
              0,
              0.314451,
              0.738979,
              192688e-9,
              0,
              0.341658,
              0.718213,
              191522e-9,
              0,
              0.369924,
              0.696947,
              190491e-9,
              0,
              0.399202,
              0.675807,
              187913e-9,
              0,
              0.429416,
              0.654147,
              184451e-9,
              0,
              0.460447,
              0.63229,
              181442e-9,
              0,
              0.492064,
              0.610499,
              177139e-9,
              0,
              0.523809,
              0.588747,
              172596e-9,
              0,
              0.555555,
              0.566783,
              167457e-9,
              0,
              0.587301,
              0.545359,
              162518e-9,
              0,
              0.619048,
              0.523984,
              156818e-9,
              0,
              0.650794,
              0.502917,
              151884e-9,
              0,
              0.68254,
              0.482294,
              145514e-9,
              0,
              0.714286,
              0.461945,
              140199e-9,
              0,
              0.746032,
              0.442133,
              134101e-9,
              0,
              0.777778,
              0.422705,
              128374e-9,
              0,
              0.809524,
              0.403916,
              122996e-9,
              0,
              0.84127,
              0.38554,
              116808e-9,
              0,
              0.873016,
              0.367909,
              111973e-9,
              0,
              0.904762,
              0.350651,
              105938e-9,
              0,
              0.936508,
              0.334208,
              101355e-9,
              0,
              0.968254,
              0.318123,
              957629e-10,
              0,
              1,
              1,
              111633e-11,
              0,
              0,
              1,
              111639e-11,
              0,
              0,
              1,
              111725e-11,
              0,
              0,
              1,
              112096e-11,
              0,
              0,
              0.999999,
              11311e-10,
              0,
              0,
              0.999997,
              115315e-11,
              0,
              0,
              0.999995,
              11956e-10,
              0,
              0,
              0.999989,
              127239e-11,
              0,
              0,
              0.999981,
              140772e-11,
              0,
              0,
              0.999969,
              164541e-11,
              0,
              0,
              0.999952,
              206607e-11,
              0,
              0,
              0.999928,
              281783e-11,
              0,
              0,
              0.999895,
              416835e-11,
              0,
              0,
              0.999848,
              658728e-11,
              0,
              0,
              0.999781,
              108648e-10,
              0,
              0,
              0.999682,
              182579e-10,
              0,
              0,
              0.999523,
              306003e-10,
              0,
              159122e-10,
              0.999205,
              499862e-10,
              0,
              391184e-9,
              0.998131,
              73306e-9,
              0,
              0.00147534,
              0.993334,
              513229e-10,
              0,
              0.0034227,
              0.99016,
              467783e-10,
              0,
              0.00632232,
              0.987321,
              523413e-10,
              0,
              0.0102295,
              0.984099,
              64267e-9,
              0,
              0.0151794,
              0.980432,
              843042e-10,
              0,
              0.0211947,
              0.974976,
              102819e-9,
              0,
              0.0282899,
              0.966429,
              996234e-10,
              0,
              0.0364739,
              0.957633,
              111074e-9,
              0,
              0.0457522,
              0.949422,
              128644e-9,
              0,
              0.0561278,
              0.943045,
              140076e-9,
              0,
              0.0676023,
              0.935448,
              146349e-9,
              0,
              0.0801762,
              0.927225,
              161854e-9,
              0,
              0.0938499,
              0.917033,
              169135e-9,
              0,
              0.108623,
              0.905762,
              179987e-9,
              0,
              0.124496,
              0.892879,
              189832e-9,
              0,
              0.141469,
              0.878435,
              195881e-9,
              0,
              0.159541,
              0.863114,
              20466e-8,
              0,
              0.178713,
              0.84776,
              209473e-9,
              0,
              0.198985,
              0.832084,
              214861e-9,
              0,
              0.220355,
              0.814915,
              217695e-9,
              0,
              0.242823,
              0.796711,
              220313e-9,
              0,
              0.266385,
              0.777603,
              22313e-8,
              0,
              0.291036,
              0.757991,
              222471e-9,
              0,
              0.316767,
              0.738371,
              222869e-9,
              0,
              0.343563,
              0.717872,
              221243e-9,
              0,
              0.371402,
              0.696619,
              218089e-9,
              0,
              0.400248,
              0.675379,
              21562e-8,
              0,
              0.430047,
              0.65411,
              21169e-8,
              0,
              0.460709,
              0.63241,
              206947e-9,
              0,
              0.492079,
              0.61046,
              201709e-9,
              0,
              0.52381,
              0.58903,
              196753e-9,
              0,
              0.555556,
              0.567267,
              189637e-9,
              0,
              0.587302,
              0.545886,
              184735e-9,
              0,
              0.619048,
              0.524714,
              177257e-9,
              0,
              0.650794,
              0.503789,
              171424e-9,
              0,
              0.68254,
              0.483204,
              164688e-9,
              0,
              0.714286,
              0.462976,
              157172e-9,
              0,
              0.746032,
              0.443294,
              151341e-9,
              0,
              0.777778,
              0.423988,
              143737e-9,
              0,
              0.809524,
              0.405325,
              138098e-9,
              0,
              0.84127,
              0.386981,
              130698e-9,
              0,
              0.873016,
              0.369436,
              125276e-9,
              0,
              0.904762,
              0.35219,
              118349e-9,
              0,
              0.936508,
              0.335804,
              11312e-8,
              0,
              0.968254,
              0.319749,
              106687e-9,
              0,
              1,
              1,
              204685e-11,
              0,
              0,
              1,
              204694e-11,
              0,
              0,
              1,
              204831e-11,
              0,
              0,
              0.999999,
              205428e-11,
              0,
              0,
              0.999999,
              207056e-11,
              0,
              0,
              0.999997,
              210581e-11,
              0,
              0,
              0.999993,
              21732e-10,
              0,
              0,
              0.999987,
              229365e-11,
              0,
              0,
              0.999979,
              250243e-11,
              0,
              0,
              0.999965,
              286127e-11,
              0,
              0,
              0.999947,
              348028e-11,
              0,
              0,
              0.999918,
              455588e-11,
              0,
              0,
              0.999881,
              643303e-11,
              0,
              0,
              0.999828,
              970064e-11,
              0,
              0,
              0.999753,
              153233e-10,
              0,
              0,
              0.999642,
              24793e-9,
              0,
              0,
              0.999464,
              402032e-10,
              0,
              122947e-9,
              0.999089,
              635852e-10,
              0,
              807414e-9,
              0.997567,
              857026e-10,
              0,
              0.00227206,
              0.992903,
              594912e-10,
              0,
              0.00462812,
              0.990011,
              578515e-10,
              0,
              0.00794162,
              0.987192,
              65399e-9,
              0,
              0.0122534,
              0.98418,
              819675e-10,
              0,
              0.0175888,
              0.980491,
              105514e-9,
              0,
              0.0239635,
              0.974779,
              121532e-9,
              0,
              0.031387,
              0.96675,
              119144e-9,
              0,
              0.0398644,
              0.958248,
              136125e-9,
              0,
              0.0493982,
              0.948884,
              155408e-9,
              0,
              0.0599896,
              0.941673,
              162281e-9,
              0,
              0.0716382,
              0.934521,
              176754e-9,
              0,
              0.0843437,
              0.926205,
              192873e-9,
              0,
              0.0981056,
              0.916089,
              200038e-9,
              0,
              0.112923,
              0.904963,
              213624e-9,
              0,
              0.128796,
              0.892089,
              221834e-9,
              0,
              0.145725,
              0.878028,
              232619e-9,
              0,
              0.163709,
              0.86249,
              238632e-9,
              0,
              0.182749,
              0.846587,
              247002e-9,
              0,
              0.202847,
              0.830988,
              250702e-9,
              0,
              0.224001,
              0.814165,
              255562e-9,
              0,
              0.246214,
              0.796135,
              257505e-9,
              0,
              0.269482,
              0.777052,
              258625e-9,
              0,
              0.293805,
              0.757201,
              258398e-9,
              0,
              0.319176,
              0.737655,
              256714e-9,
              0,
              0.345587,
              0.717477,
              255187e-9,
              0,
              0.373021,
              0.696433,
              251792e-9,
              0,
              0.401454,
              0.675084,
              247223e-9,
              0,
              0.430844,
              0.653907,
              242213e-9,
              0,
              0.461125,
              0.632561,
              237397e-9,
              0,
              0.492187,
              0.610658,
              229313e-9,
              0,
              0.52381,
              0.589322,
              224402e-9,
              0,
              0.555556,
              0.567857,
              216116e-9,
              0,
              0.587302,
              0.54652,
              209124e-9,
              0,
              0.619048,
              0.525433,
              201601e-9,
              0,
              0.650794,
              0.504679,
              192957e-9,
              0,
              0.68254,
              0.484203,
              186052e-9,
              0,
              0.714286,
              0.464203,
              177672e-9,
              0,
              0.746032,
              0.444549,
              170005e-9,
              0,
              0.777778,
              0.425346,
              162401e-9,
              0,
              0.809524,
              0.406706,
              1544e-7,
              0,
              0.84127,
              0.388576,
              147437e-9,
              0,
              0.873016,
              0.37094,
              139493e-9,
              0,
              0.904762,
              0.353996,
              133219e-9,
              0,
              0.936508,
              0.337391,
              125573e-9,
              0,
              0.968254,
              0.321648,
              119867e-9,
              0,
              1,
              1,
              362511e-11,
              0,
              0,
              1,
              362525e-11,
              0,
              0,
              1,
              362739e-11,
              0,
              0,
              0.999999,
              363673e-11,
              0,
              0,
              0.999998,
              366214e-11,
              0,
              0,
              0.999996,
              371698e-11,
              0,
              0,
              0.999992,
              382116e-11,
              0,
              0,
              0.999986,
              400554e-11,
              0,
              0,
              0.999976,
              432058e-11,
              0,
              0,
              0.999961,
              485194e-11,
              0,
              0,
              0.999938,
              574808e-11,
              0,
              0,
              0.999908,
              726643e-11,
              0,
              0,
              0.999865,
              984707e-11,
              0,
              0,
              0.999807,
              142217e-10,
              0,
              0,
              0.999723,
              215581e-10,
              0,
              0,
              0.999602,
              336114e-10,
              0,
              119113e-10,
              0.999398,
              527353e-10,
              0,
              355813e-9,
              0.998946,
              805809e-10,
              0,
              0.00137768,
              0.996647,
              942908e-10,
              0,
              0.00322469,
              0.992298,
              668733e-10,
              0,
              0.00597897,
              0.989802,
              716564e-10,
              0,
              0.00968903,
              0.987019,
              821355e-10,
              0,
              0.0143845,
              0.984219,
              104555e-9,
              0,
              0.0200831,
              0.980425,
              131245e-9,
              0,
              0.0267948,
              0.974241,
              139613e-9,
              0,
              0.034525,
              0.967006,
              145931e-9,
              0,
              0.0432757,
              0.95893,
              167153e-9,
              0,
              0.0530471,
              0.949157,
              188146e-9,
              0,
              0.0638386,
              0.94062,
              194625e-9,
              0,
              0.0756487,
              0.933509,
              213721e-9,
              0,
              0.0884762,
              0.925088,
              229616e-9,
              0,
              0.10232,
              0.915178,
              239638e-9,
              0,
              0.117178,
              0.904093,
              254814e-9,
              0,
              0.133051,
              0.891337,
              263685e-9,
              0,
              0.149939,
              0.877326,
              274789e-9,
              0,
              0.167841,
              0.861794,
              280534e-9,
              0,
              0.18676,
              0.845758,
              289534e-9,
              0,
              0.206696,
              0.829792,
              294446e-9,
              0,
              0.22765,
              0.813037,
              296877e-9,
              0,
              0.249625,
              0.795285,
              300217e-9,
              0,
              0.27262,
              0.776323,
              299826e-9,
              0,
              0.296636,
              0.756673,
              299787e-9,
              0,
              0.321671,
              0.736856,
              297867e-9,
              0,
              0.347718,
              0.716883,
              294052e-9,
              0,
              0.374768,
              0.696089,
              289462e-9,
              0,
              0.402804,
              0.67505,
              285212e-9,
              0,
              0.431796,
              0.653509,
              27653e-8,
              0,
              0.461695,
              0.63258,
              271759e-9,
              0,
              0.49242,
              0.61104,
              262811e-9,
              0,
              0.523822,
              0.589567,
              255151e-9,
              0,
              0.555556,
              0.568322,
              246434e-9,
              0,
              0.587302,
              0.547235,
              237061e-9,
              0,
              0.619048,
              0.52616,
              228343e-9,
              0,
              0.650794,
              0.505716,
              219236e-9,
              0,
              0.68254,
              0.485274,
              209595e-9,
              0,
              0.714286,
              0.465411,
              201011e-9,
              0,
              0.746032,
              0.445854,
              19109e-8,
              0,
              0.777778,
              0.426911,
              182897e-9,
              0,
              0.809524,
              0.408222,
              173569e-9,
              0,
              0.84127,
              0.390307,
              165496e-9,
              0,
              0.873016,
              0.372624,
              156799e-9,
              0,
              0.904762,
              0.355804,
              14917e-8,
              0,
              0.936508,
              0.33924,
              140907e-9,
              0,
              0.968254,
              0.323534,
              134062e-9,
              0,
              1,
              1,
              622487e-11,
              0,
              0,
              1,
              62251e-10,
              0,
              0,
              1,
              622837e-11,
              0,
              0,
              0.999999,
              624259e-11,
              0,
              0,
              0.999998,
              628127e-11,
              0,
              0,
              0.999996,
              636451e-11,
              0,
              0,
              0.999991,
              65218e-10,
              0,
              0,
              0.999984,
              679782e-11,
              0,
              0,
              0.999973,
              726361e-11,
              0,
              0,
              0.999955,
              803644e-11,
              0,
              0,
              0.999931,
              931397e-11,
              0,
              0,
              0.999896,
              114299e-10,
              0,
              0,
              0.999847,
              149402e-10,
              0,
              0,
              0.999784,
              207461e-10,
              0,
              0,
              0.999692,
              302493e-10,
              0,
              0,
              0.999554,
              454957e-10,
              0,
              997275e-10,
              0.999326,
              690762e-10,
              0,
              724813e-9,
              0.998757,
              101605e-9,
              0,
              0.0020972,
              0.995367,
              958745e-10,
              0,
              0.00432324,
              0.99209,
              832808e-10,
              0,
              0.00746347,
              0.989517,
              887601e-10,
              0,
              0.0115534,
              0.987008,
              10564e-8,
              0,
              0.0166134,
              0.98421,
              133179e-9,
              0,
              0.0226552,
              0.98021,
              161746e-9,
              0,
              0.0296838,
              0.973676,
              161821e-9,
              0,
              0.0377016,
              0.967052,
              178635e-9,
              0,
              0.0467079,
              0.959385,
              206765e-9,
              0,
              0.0567013,
              0.949461,
              22476e-8,
              0,
              0.0676796,
              0.939578,
              23574e-8,
              0,
              0.0796403,
              0.932416,
              25893e-8,
              0,
              0.0925812,
              0.923759,
              271228e-9,
              0,
              0.106501,
              0.914223,
              289165e-9,
              0,
              0.121397,
              0.902942,
              301156e-9,
              0,
              0.13727,
              0.890419,
              313852e-9,
              0,
              0.15412,
              0.876639,
              324408e-9,
              0,
              0.171946,
              0.861316,
              33249e-8,
              0,
              0.190751,
              0.84496,
              338497e-9,
              0,
              0.210537,
              0.828427,
              345861e-9,
              0,
              0.231305,
              0.811871,
              347863e-9,
              0,
              0.253057,
              0.794397,
              350225e-9,
              0,
              0.275797,
              0.775726,
              349915e-9,
              0,
              0.299525,
              0.75617,
              347297e-9,
              0,
              0.324242,
              0.736091,
              344232e-9,
              0,
              0.349947,
              0.716213,
              340835e-9,
              0,
              0.376633,
              0.695736,
              332369e-9,
              0,
              0.404289,
              0.674961,
              327943e-9,
              0,
              0.432895,
              0.653518,
              318533e-9,
              0,
              0.462415,
              0.632574,
              310391e-9,
              0,
              0.492788,
              0.61134,
              300755e-9,
              0,
              0.523909,
              0.590017,
              290506e-9,
              0,
              0.555556,
              0.568752,
              280446e-9,
              0,
              0.587302,
              0.548061,
              269902e-9,
              0,
              0.619048,
              0.52711,
              258815e-9,
              0,
              0.650794,
              0.506682,
              248481e-9,
              0,
              0.68254,
              0.486524,
              237141e-9,
              0,
              0.714286,
              0.466812,
              226872e-9,
              0,
              0.746032,
              0.44732,
              216037e-9,
              0,
              0.777778,
              0.428473,
              205629e-9,
              0,
              0.809524,
              0.409921,
              195691e-9,
              0,
              0.84127,
              0.392028,
              185457e-9,
              0,
              0.873016,
              0.374606,
              176436e-9,
              0,
              0.904762,
              0.357601,
              166508e-9,
              0,
              0.936508,
              0.341348,
              158385e-9,
              0,
              0.968254,
              0.32542,
              149203e-9,
              0,
              1,
              1,
              103967e-10,
              0,
              0,
              1,
              10397e-9,
              0,
              0,
              1,
              104019e-10,
              0,
              0,
              0.999999,
              104231e-10,
              0,
              0,
              0.999998,
              104806e-10,
              0,
              0,
              0.999995,
              106042e-10,
              0,
              0,
              0.999991,
              108366e-10,
              0,
              0,
              0.999982,
              112415e-10,
              0,
              0,
              0.999968,
              119174e-10,
              0,
              0,
              0.99995,
              130227e-10,
              0,
              0,
              0.999922,
              148176e-10,
              0,
              0,
              0.999884,
              177303e-10,
              0,
              0,
              0.99983,
              224564e-10,
              0,
              0,
              0.999758,
              300966e-10,
              0,
              0,
              0.999654,
              423193e-10,
              0,
              549083e-11,
              0.999503,
              614848e-10,
              0,
              296087e-9,
              0.999237,
              903576e-10,
              0,
              0.00123144,
              0.998491,
              1271e-7,
              0,
              0.00295954,
              0.994594,
              107754e-9,
              0,
              0.00555829,
              0.99178,
              103025e-9,
              0,
              0.00907209,
              0.989265,
              11154e-8,
              0,
              0.0135257,
              0.986998,
              136296e-9,
              0,
              0.0189327,
              0.984137,
              169154e-9,
              0,
              0.0252993,
              0.979798,
              196671e-9,
              0,
              0.0326272,
              0.97337,
              196678e-9,
              0,
              0.0409157,
              0.967239,
              223121e-9,
              0,
              0.0501623,
              0.959543,
              253809e-9,
              0,
              0.0603638,
              0.949466,
              265972e-9,
              0,
              0.0715171,
              0.939074,
              288372e-9,
              0,
              0.0836187,
              0.931118,
              310983e-9,
              0,
              0.0966657,
              0.922525,
              325561e-9,
              0,
              0.110656,
              0.912983,
              345725e-9,
              0,
              0.125588,
              0.901617,
              3556e-7,
              0,
              0.141461,
              0.889487,
              374012e-9,
              0,
              0.158275,
              0.875787,
              383445e-9,
              0,
              0.176031,
              0.860654,
              393972e-9,
              0,
              0.19473,
              0.844417,
              400311e-9,
              0,
              0.214374,
              0.82741,
              405004e-9,
              0,
              0.234967,
              0.810545,
              407378e-9,
              0,
              0.256512,
              0.793312,
              407351e-9,
              0,
              0.279011,
              0.774847,
              406563e-9,
              0,
              0.302468,
              0.755621,
              404903e-9,
              0,
              0.326887,
              0.735511,
              397486e-9,
              0,
              0.352266,
              0.715435,
              39357e-8,
              0,
              0.378605,
              0.695403,
              384739e-9,
              0,
              0.405897,
              0.674681,
              376108e-9,
              0,
              0.43413,
              0.65359,
              365997e-9,
              0,
              0.463277,
              0.632471,
              354957e-9,
              0,
              0.493295,
              0.61151,
              343593e-9,
              0,
              0.524106,
              0.59064,
              331841e-9,
              0,
              0.555561,
              0.569386,
              318891e-9,
              0,
              0.587302,
              0.548785,
              3072e-7,
              0,
              0.619048,
              0.528146,
              29361e-8,
              0,
              0.650794,
              0.507872,
              281709e-9,
              0,
              0.68254,
              0.487805,
              268627e-9,
              0,
              0.714286,
              0.468196,
              255887e-9,
              0,
              0.746032,
              0.448922,
              243997e-9,
              0,
              0.777778,
              0.430093,
              231662e-9,
              0,
              0.809524,
              0.411845,
              220339e-9,
              0,
              0.84127,
              0.393808,
              208694e-9,
              0,
              0.873016,
              0.376615,
              198045e-9,
              0,
              0.904762,
              0.359655,
              187375e-9,
              0,
              0.936508,
              0.343452,
              177371e-9,
              0,
              0.968254,
              0.32765,
              167525e-9,
              0,
              1,
              1,
              169351e-10,
              0,
              0,
              1,
              169356e-10,
              0,
              0,
              1,
              169427e-10,
              0,
              0,
              0.999999,
              169736e-10,
              0,
              0,
              0.999998,
              170575e-10,
              0,
              0,
              0.999995,
              172372e-10,
              0,
              0,
              0.99999,
              175739e-10,
              0,
              0,
              0.999979,
              181568e-10,
              0,
              0,
              0.999966,
              191206e-10,
              0,
              0,
              0.999944,
              20677e-9,
              0,
              0,
              0.999912,
              231644e-10,
              0,
              0,
              0.999869,
              271268e-10,
              0,
              0,
              0.999811,
              334272e-10,
              0,
              0,
              0.99973,
              433979e-10,
              0,
              0,
              0.999617,
              590083e-10,
              0,
              680315e-10,
              0.999445,
              829497e-10,
              0,
              612796e-9,
              0.999138,
              118019e-9,
              0,
              0.00187408,
              0.998095,
              156712e-9,
              0,
              0.00395791,
              0.993919,
              125054e-9,
              0,
              0.00692144,
              0.991333,
              126091e-9,
              0,
              0.0107962,
              0.989226,
              144912e-9,
              0,
              0.0155986,
              0.986954,
              175737e-9,
              0,
              0.0213364,
              0.983982,
              213883e-9,
              0,
              0.0280114,
              0.979128,
              234526e-9,
              0,
              0.0356226,
              0.973327,
              243725e-9,
              0,
              0.0441668,
              0.967416,
              2773e-7,
              0,
              0.0536399,
              0.959729,
              308799e-9,
              0,
              0.0640376,
              0.949758,
              322447e-9,
              0,
              0.0753554,
              0.939173,
              350021e-9,
              0,
              0.0875893,
              0.9296,
              370089e-9,
              0,
              0.100736,
              0.921181,
              391365e-9,
              0,
              0.114793,
              0.91164,
              413636e-9,
              0,
              0.129759,
              0.900435,
              427068e-9,
              0,
              0.145632,
              0.888183,
              441046e-9,
              0,
              0.162412,
              0.874772,
              454968e-9,
              0,
              0.180101,
              0.859566,
              461882e-9,
              0,
              0.1987,
              0.843579,
              471556e-9,
              0,
              0.218213,
              0.826453,
              474335e-9,
              0,
              0.238641,
              0.809164,
              477078e-9,
              0,
              0.259989,
              0.792179,
              47755e-8,
              0,
              0.282262,
              0.773866,
              472573e-9,
              0,
              0.305464,
              0.754944,
              469765e-9,
              0,
              0.329599,
              0.735133,
              462371e-9,
              0,
              0.35467,
              0.714858,
              453674e-9,
              0,
              0.380678,
              0.694829,
              443888e-9,
              0,
              0.407622,
              0.674453,
              432052e-9,
              0,
              0.435493,
              0.653685,
              420315e-9,
              0,
              0.464275,
              0.632666,
              406829e-9,
              0,
              0.493938,
              0.611676,
              392234e-9,
              0,
              0.524422,
              0.591193,
              379208e-9,
              0,
              0.555624,
              0.570145,
              36319e-8,
              0,
              0.587302,
              0.549566,
              349111e-9,
              0,
              0.619048,
              0.529278,
              334166e-9,
              0,
              0.650794,
              0.509026,
              318456e-9,
              0,
              0.68254,
              0.489186,
              30449e-8,
              0,
              0.714286,
              0.469662,
              289051e-9,
              0,
              0.746032,
              0.450691,
              275494e-9,
              0,
              0.777778,
              0.431841,
              261437e-9,
              0,
              0.809524,
              0.413752,
              247846e-9,
              0,
              0.84127,
              0.395951,
              235085e-9,
              0,
              0.873016,
              0.378633,
              222245e-9,
              0,
              0.904762,
              0.36194,
              210533e-9,
              0,
              0.936508,
              0.345599,
              198494e-9,
              0,
              0.968254,
              0.329999,
              188133e-9,
              0,
              1,
              1,
              269663e-10,
              0,
              0,
              1,
              26967e-9,
              0,
              0,
              1,
              269772e-10,
              0,
              0,
              0.999999,
              270214e-10,
              0,
              0,
              0.999998,
              271415e-10,
              0,
              0,
              0.999994,
              27398e-9,
              0,
              0,
              0.999988,
              278771e-10,
              0,
              0,
              0.999977,
              287019e-10,
              0,
              0,
              0.999961,
              300544e-10,
              0,
              0,
              0.999937,
              322138e-10,
              0,
              0,
              0.999904,
              356163e-10,
              0,
              0,
              0.999854,
              409465e-10,
              0,
              0,
              0.99979,
              492651e-10,
              0,
              0,
              0.999699,
              621722e-10,
              0,
              8.8288e-7,
              0.999572,
              819715e-10,
              0,
              223369e-9,
              0.999381,
              111689e-9,
              0,
              0.00105414,
              0.999016,
              153862e-9,
              0,
              0.0026493,
              0.997437,
              187667e-9,
              0,
              0.00508608,
              0.993545,
              155672e-9,
              0,
              0.00840554,
              0.991135,
              161455e-9,
              0,
              0.012629,
              0.989157,
              188241e-9,
              0,
              0.0177661,
              0.986874,
              226229e-9,
              0,
              0.0238198,
              0.983714,
              268668e-9,
              0,
              0.0307887,
              0.978301,
              277109e-9,
              0,
              0.0386688,
              0.973227,
              303446e-9,
              0,
              0.0474554,
              0.967317,
              341851e-9,
              0,
              0.0571428,
              0.959477,
              370885e-9,
              0,
              0.0677256,
              0.950012,
              392753e-9,
              0,
              0.0791988,
              0.939484,
              42781e-8,
              0,
              0.0915576,
              0.928135,
              443866e-9,
              0,
              0.104798,
              0.919819,
              472959e-9,
              0,
              0.118918,
              0.910049,
              491551e-9,
              0,
              0.133915,
              0.899181,
              512616e-9,
              0,
              0.149788,
              0.886881,
              523563e-9,
              0,
              0.166537,
              0.87359,
              540183e-9,
              0,
              0.184164,
              0.858613,
              547386e-9,
              0,
              0.202669,
              0.842809,
              554809e-9,
              0,
              0.222056,
              0.825727,
              558316e-9,
              0,
              0.242329,
              0.808086,
              557824e-9,
              0,
              0.263492,
              0.790728,
              556346e-9,
              0,
              0.285551,
              0.772987,
              552672e-9,
              0,
              0.30851,
              0.7541,
              543738e-9,
              0,
              0.332376,
              0.734669,
              536107e-9,
              0,
              0.357153,
              0.714411,
              523342e-9,
              0,
              0.382845,
              0.694196,
              512238e-9,
              0,
              0.409454,
              0.674252,
              497465e-9,
              0,
              0.436977,
              0.65357,
              481096e-9,
              0,
              0.465404,
              0.632999,
              467054e-9,
              0,
              0.494713,
              0.611994,
              448771e-9,
              0,
              0.524864,
              0.591604,
              431889e-9,
              0,
              0.555779,
              0.571134,
              415238e-9,
              0,
              0.587302,
              0.550528,
              396369e-9,
              0,
              0.619048,
              0.530292,
              379477e-9,
              0,
              0.650794,
              0.510364,
              361488e-9,
              0,
              0.68254,
              0.490749,
              343787e-9,
              0,
              0.714286,
              0.471266,
              327822e-9,
              0,
              0.746032,
              0.452462,
              310626e-9,
              0,
              0.777778,
              0.433907,
              295352e-9,
              0,
              0.809524,
              0.415659,
              279179e-9,
              0,
              0.84127,
              0.398138,
              264685e-9,
              0,
              0.873016,
              0.380833,
              249905e-9,
              0,
              0.904762,
              0.364247,
              236282e-9,
              0,
              0.936508,
              0.348041,
              222905e-9,
              0,
              0.968254,
              0.332389,
              210522e-9,
              0,
              1,
              1,
              420604e-10,
              0,
              0,
              1,
              420614e-10,
              0,
              0,
              1,
              420757e-10,
              0,
              0,
              0.999999,
              42138e-9,
              0,
              0,
              0.999997,
              423067e-10,
              0,
              0,
              0.999993,
              426668e-10,
              0,
              0,
              0.999986,
              433372e-10,
              0,
              0,
              0.999974,
              444857e-10,
              0,
              0,
              0.999956,
              463554e-10,
              0,
              0,
              0.99993,
              493105e-10,
              0,
              0,
              0.999892,
              539077e-10,
              0,
              0,
              0.999838,
              610005e-10,
              0,
              0,
              0.999767,
              718822e-10,
              0,
              0,
              0.999666,
              884581e-10,
              0,
              365471e-10,
              0.999525,
              113398e-9,
              0,
              485623e-9,
              0.999311,
              150043e-9,
              0,
              0.00162096,
              0.998865,
              200063e-9,
              0,
              0.00355319,
              0.996278,
              211014e-9,
              0,
              0.00633818,
              0.992956,
              189672e-9,
              0,
              0.0100043,
              0.991017,
              210262e-9,
              0,
              0.0145648,
              0.989055,
              244292e-9,
              0,
              0.0200237,
              0.986741,
              290481e-9,
              0,
              0.0263798,
              0.983288,
              334303e-9,
              0,
              0.033629,
              0.977784,
              340307e-9,
              0,
              0.0417652,
              0.973037,
              377864e-9,
              0,
              0.0507821,
              0.967181,
              4239e-7,
              0,
              0.060673,
              0.958971,
              443854e-9,
              0,
              0.0714314,
              0.950093,
              483039e-9,
              0,
              0.0830518,
              0.939552,
              517934e-9,
              0,
              0.0955288,
              0.927678,
              539449e-9,
              0,
              0.108859,
              0.918278,
              568604e-9,
              0,
              0.123038,
              0.908449,
              588505e-9,
              0,
              0.138065,
              0.897713,
              612473e-9,
              0,
              0.153938,
              0.885533,
              625575e-9,
              0,
              0.170657,
              0.872131,
              63854e-8,
              0,
              0.188224,
              0.857517,
              647034e-9,
              0,
              0.20664,
              0.841796,
              65209e-8,
              0,
              0.225909,
              0.824726,
              6544e-7,
              0,
              0.246035,
              0.807297,
              655744e-9,
              0,
              0.267022,
              0.789058,
              646716e-9,
              0,
              0.288878,
              0.77189,
              643898e-9,
              0,
              0.311607,
              0.753082,
              629973e-9,
              0,
              0.335216,
              0.7341,
              621564e-9,
              0,
              0.359713,
              0.714094,
              605171e-9,
              0,
              0.385103,
              0.693839,
              588752e-9,
              0,
              0.41139,
              0.673891,
              573294e-9,
              0,
              0.438576,
              0.653565,
              552682e-9,
              0,
              0.466656,
              0.633326,
              533446e-9,
              0,
              0.495617,
              0.612582,
              514635e-9,
              0,
              0.525431,
              0.59205,
              49303e-8,
              0,
              0.556041,
              0.571918,
              471842e-9,
              0,
              0.587338,
              0.551572,
              451713e-9,
              0,
              0.619048,
              0.531553,
              430049e-9,
              0,
              0.650794,
              0.51175,
              410445e-9,
              0,
              0.68254,
              0.49238,
              390098e-9,
              0,
              0.714286,
              0.473143,
              370033e-9,
              0,
              0.746032,
              0.45423,
              351205e-9,
              0,
              0.777778,
              0.435963,
              332049e-9,
              0,
              0.809524,
              0.41787,
              315021e-9,
              0,
              0.84127,
              0.400387,
              297315e-9,
              0,
              0.873016,
              0.383332,
              281385e-9,
              0,
              0.904762,
              0.366665,
              265397e-9,
              0,
              0.936508,
              0.350633,
              250601e-9,
              0,
              0.968254,
              0.334964,
              23589e-8,
              0,
              1,
              1,
              643736e-10,
              0,
              0,
              1,
              64375e-9,
              0,
              0,
              1,
              643947e-10,
              0,
              0,
              0.999999,
              64481e-9,
              0,
              0,
              0.999997,
              647143e-10,
              0,
              0,
              0.999994,
              652119e-10,
              0,
              0,
              0.999985,
              661359e-10,
              0,
              0,
              0.999972,
              677116e-10,
              0,
              0,
              0.999952,
              702599e-10,
              0,
              0,
              0.999922,
              742517e-10,
              0,
              0,
              0.99988,
              803906e-10,
              0,
              0,
              0.99982,
              897315e-10,
              0,
              0,
              0.999741,
              103838e-9,
              0,
              0,
              0.999629,
              12496e-8,
              0,
              149024e-9,
              0.999474,
              156161e-9,
              0,
              861027e-9,
              0.999229,
              201034e-9,
              0,
              0.00231198,
              0.998662,
              259069e-9,
              0,
              0.00458147,
              0.995299,
              245439e-9,
              0,
              0.00770895,
              0.992732,
              24498e-8,
              0,
              0.0117126,
              0.990847,
              273211e-9,
              0,
              0.0165989,
              0.988911,
              316492e-9,
              0,
              0.0223674,
              0.98654,
              37161e-8,
              0,
              0.0290135,
              0.982636,
              410352e-9,
              0,
              0.0365309,
              0.977346,
              421756e-9,
              0,
              0.0449117,
              0.972909,
              475578e-9,
              0,
              0.0541481,
              0.966821,
              522482e-9,
              0,
              0.0642326,
              0.958686,
              545008e-9,
              0,
              0.075158,
              0.949754,
              589286e-9,
              0,
              0.0869181,
              0.939184,
              619995e-9,
              0,
              0.0995074,
              0.927505,
              654266e-9,
              0,
              0.112922,
              0.916606,
              682362e-9,
              0,
              0.127157,
              0.906707,
              704286e-9,
              0,
              0.142212,
              0.895937,
              725909e-9,
              0,
              0.158085,
              0.883913,
              743939e-9,
              0,
              0.174776,
              0.870642,
              755157e-9,
              0,
              0.192287,
              0.856241,
              764387e-9,
              0,
              0.210619,
              0.84069,
              771032e-9,
              0,
              0.229775,
              0.823728,
              765906e-9,
              0,
              0.249761,
              0.806481,
              767604e-9,
              0,
              0.270582,
              0.787924,
              754385e-9,
              0,
              0.292243,
              0.770588,
              749668e-9,
              0,
              0.314753,
              0.751991,
              731613e-9,
              0,
              0.338118,
              0.733407,
              717655e-9,
              0,
              0.362347,
              0.713688,
              700604e-9,
              0,
              0.387447,
              0.693595,
              678765e-9,
              0,
              0.413424,
              0.673426,
              657042e-9,
              0,
              0.440284,
              0.65359,
              635892e-9,
              0,
              0.468027,
              0.633576,
              611569e-9,
              0,
              0.496645,
              0.613144,
              586011e-9,
              0,
              0.526122,
              0.592711,
              563111e-9,
              0,
              0.556417,
              0.572722,
              537699e-9,
              0,
              0.587451,
              0.552762,
              512556e-9,
              0,
              0.619048,
              0.532985,
              489757e-9,
              0,
              0.650794,
              0.513219,
              464139e-9,
              0,
              0.68254,
              0.493992,
              442193e-9,
              0,
              0.714286,
              0.47509,
              418629e-9,
              0,
              0.746032,
              0.456287,
              397045e-9,
              0,
              0.777778,
              0.438152,
              375504e-9,
              0,
              0.809524,
              0.420294,
              35492e-8,
              0,
              0.84127,
              0.402749,
              335327e-9,
              0,
              0.873016,
              0.385879,
              316422e-9,
              0,
              0.904762,
              0.369352,
              298333e-9,
              0,
              0.936508,
              0.353301,
              281417e-9,
              0,
              0.968254,
              0.337781,
              265203e-9,
              0,
              1,
              1,
              968267e-10,
              0,
              0,
              1,
              968284e-10,
              0,
              0,
              1,
              968556e-10,
              0,
              0,
              0.999999,
              969733e-10,
              0,
              0,
              0.999997,
              972913e-10,
              0,
              0,
              0.999993,
              979688e-10,
              0,
              0,
              0.999984,
              992239e-10,
              0,
              0,
              0.999969,
              101356e-9,
              0,
              0,
              0.999946,
              104784e-9,
              0,
              0,
              0.999913,
              110111e-9,
              0,
              0,
              0.999868,
              118217e-9,
              0,
              0,
              0.999801,
              130396e-9,
              0,
              0,
              0.999712,
              148523e-9,
              0,
              124907e-10,
              0.999589,
              175233e-9,
              0,
              355405e-9,
              0.999416,
              213999e-9,
              0,
              0.0013528,
              0.999136,
              268529e-9,
              0,
              0.00312557,
              0.998367,
              333088e-9,
              0,
              0.00573045,
              0.994701,
              304757e-9,
              0,
              0.00919397,
              0.992497,
              318031e-9,
              0,
              0.0135261,
              0.990608,
              353863e-9,
              0,
              0.0187278,
              0.988715,
              409044e-9,
              0,
              0.0247947,
              0.986241,
              472967e-9,
              0,
              0.0317196,
              0.981696,
              495104e-9,
              0,
              0.039494,
              0.977097,
              532873e-9,
              0,
              0.0481087,
              0.972583,
              594447e-9,
              0,
              0.0575549,
              0.966142,
              636867e-9,
              0,
              0.0678242,
              0.95823,
              669899e-9,
              0,
              0.0789089,
              0.949677,
              719499e-9,
              0,
              0.0908023,
              0.939226,
              750584e-9,
              0,
              0.103499,
              0.927501,
              793183e-9,
              0,
              0.116993,
              0.915199,
              81995e-8,
              0,
              0.131282,
              0.90498,
              847654e-9,
              0,
              0.146364,
              0.894243,
              868929e-9,
              0,
              0.162237,
              0.882154,
              884278e-9,
              0,
              0.178902,
              0.869161,
              898108e-9,
              0,
              0.196358,
              0.854751,
              901254e-9,
              0,
              0.21461,
              0.839368,
              90679e-8,
              0,
              0.23366,
              0.822874,
              901541e-9,
              0,
              0.253512,
              0.805514,
              897297e-9,
              0,
              0.274174,
              0.78716,
              881856e-9,
              0,
              0.29565,
              0.769061,
              870032e-9,
              0,
              0.31795,
              0.751,
              851719e-9,
              0,
              0.341081,
              0.732614,
              830671e-9,
              0,
              0.365053,
              0.713171,
              806569e-9,
              0,
              0.389874,
              0.693472,
              78338e-8,
              0,
              0.415553,
              0.673528,
              756404e-9,
              0,
              0.442098,
              0.653397,
              726872e-9,
              0,
              0.469512,
              0.633781,
              700494e-9,
              0,
              0.497794,
              0.613877,
              67105e-8,
              0,
              0.526935,
              0.593506,
              640361e-9,
              0,
              0.556908,
              0.573667,
              613502e-9,
              0,
              0.587657,
              0.553932,
              583177e-9,
              0,
              0.61906,
              0.534345,
              554375e-9,
              0,
              0.650794,
              0.515042,
              527811e-9,
              0,
              0.68254,
              0.495674,
              499367e-9,
              0,
              0.714286,
              0.477132,
              47429e-8,
              0,
              0.746032,
              0.458609,
              447726e-9,
              0,
              0.777778,
              0.440354,
              424205e-9,
              0,
              0.809524,
              0.422765,
              399549e-9,
              0,
              0.84127,
              0.405472,
              378315e-9,
              0,
              0.873016,
              0.388482,
              355327e-9,
              0,
              0.904762,
              0.372191,
              336122e-9,
              0,
              0.936508,
              0.356099,
              315247e-9,
              0,
              0.968254,
              0.340737,
              29794e-8,
              0,
              1,
              1,
              143327e-9,
              0,
              0,
              1,
              14333e-8,
              0,
              0,
              1,
              143366e-9,
              0,
              0,
              0.999999,
              143524e-9,
              0,
              0,
              0.999996,
              143952e-9,
              0,
              0,
              0.999991,
              144862e-9,
              0,
              0,
              0.999981,
              146544e-9,
              0,
              0,
              0.999966,
              149391e-9,
              0,
              0,
              0.999941,
              153946e-9,
              0,
              0,
              0.999905,
              160971e-9,
              0,
              0,
              0.999852,
              171562e-9,
              0,
              0,
              0.99978,
              18729e-8,
              0,
              0,
              0.999681,
              210386e-9,
              0,
              826239e-10,
              0.999546,
              243906e-9,
              0,
              664807e-9,
              0.999352,
              291739e-9,
              0,
              0.00196192,
              0.999027,
              357419e-9,
              0,
              0.00405941,
              0.997886,
              422349e-9,
              0,
              0.00699664,
              0.99419,
              385008e-9,
              0,
              0.0107896,
              0.99214,
              409775e-9,
              0,
              0.0154415,
              0.990274,
              456418e-9,
              0,
              0.0209488,
              0.988455,
              527008e-9,
              0,
              0.0273037,
              0.985804,
              597685e-9,
              0,
              0.0344969,
              0.98103,
              613124e-9,
              0,
              0.0425183,
              0.976674,
              668321e-9,
              0,
              0.0513575,
              0.972021,
              736985e-9,
              0,
              0.0610046,
              0.965274,
              773789e-9,
              0,
              0.0714508,
              0.958046,
              830852e-9,
              0,
              0.0826877,
              0.949333,
              875766e-9,
              0,
              0.0947085,
              0.939135,
              917088e-9,
              0,
              0.107507,
              0.927119,
              952244e-9,
              0,
              0.121078,
              0.91469,
              990626e-9,
              0,
              0.135419,
              0.903006,
              0.00101304,
              0,
              0.150526,
              0.892368,
              0.00103834,
              0,
              0.166399,
              0.880231,
              0.00105002,
              0,
              0.183038,
              0.867432,
              0.00106331,
              0,
              0.200443,
              0.853208,
              0.00106783,
              0,
              0.218618,
              0.837956,
              0.00106458,
              0,
              0.237566,
              0.821772,
              0.00105945,
              0,
              0.257291,
              0.804328,
              0.00104685,
              0,
              0.2778,
              0.786465,
              0.00103178,
              0,
              0.2991,
              0.768004,
              0.00101077,
              0,
              0.321199,
              0.74972,
              985504e-9,
              0,
              0.344106,
              0.731682,
              962893e-9,
              0,
              0.36783,
              0.712813,
              932146e-9,
              0,
              0.392383,
              0.693139,
              89871e-8,
              0,
              0.417774,
              0.673566,
              869678e-9,
              0,
              0.444013,
              0.653483,
              835525e-9,
              0,
              0.471107,
              0.633891,
              799853e-9,
              0,
              0.49906,
              0.614433,
              766838e-9,
              0,
              0.527869,
              0.594586,
              732227e-9,
              0,
              0.557517,
              0.574769,
              696442e-9,
              0,
              0.587966,
              0.555149,
              663935e-9,
              0,
              0.61913,
              0.535898,
              629826e-9,
              0,
              0.650794,
              0.516753,
              596486e-9,
              0,
              0.68254,
              0.497816,
              567078e-9,
              0,
              0.714286,
              0.479034,
              534399e-9,
              0,
              0.746032,
              0.460975,
              507013e-9,
              0,
              0.777778,
              0.442935,
              477421e-9,
              0,
              0.809524,
              0.425263,
              451101e-9,
              0,
              0.84127,
              0.408248,
              424964e-9,
              0,
              0.873016,
              0.391339,
              39993e-8,
              0,
              0.904762,
              0.37513,
              377619e-9,
              0,
              0.936508,
              0.359172,
              354418e-9,
              0,
              0.968254,
              0.343876,
              334823e-9,
              0,
              1,
              1,
              209042e-9,
              0,
              0,
              1,
              209045e-9,
              0,
              0,
              1,
              209093e-9,
              0,
              0,
              0.999999,
              209304e-9,
              0,
              0,
              0.999996,
              209871e-9,
              0,
              0,
              0.999991,
              211078e-9,
              0,
              0,
              0.999979,
              213304e-9,
              0,
              0,
              0.999963,
              217061e-9,
              0,
              0,
              0.999933,
              223042e-9,
              0,
              0,
              0.999894,
              232206e-9,
              0,
              0,
              0.999837,
              245901e-9,
              0,
              0,
              0.999756,
              266023e-9,
              0,
              102927e-11,
              0.999648,
              295204e-9,
              0,
              233468e-9,
              0.999499,
              336958e-9,
              0,
              0.00108237,
              0.999283,
              395563e-9,
              0,
              0.00268832,
              0.998896,
              473785e-9,
              0,
              0.00511138,
              0.997006,
              520008e-9,
              0,
              0.00837705,
              0.993819,
              497261e-9,
              0,
              0.0124928,
              0.991632,
              523722e-9,
              0,
              0.0174561,
              0.989875,
              587258e-9,
              0,
              0.0232596,
              0.988109,
              676329e-9,
              0,
              0.0298932,
              0.985155,
              747701e-9,
              0,
              0.0373453,
              0.980479,
              768803e-9,
              0,
              0.0456045,
              0.976271,
              841054e-9,
              0,
              0.0546593,
              0.971347,
              911469e-9,
              0,
              0.0644994,
              0.964528,
              953057e-9,
              0,
              0.0751152,
              0.957632,
              0.00102221,
              0,
              0.0864981,
              0.948681,
              0.00106122,
              0,
              0.0986407,
              0.938716,
              0.00111857,
              0,
              0.111537,
              0.926629,
              0.00114762,
              0,
              0.125182,
              0.914025,
              0.00118995,
              0,
              0.139571,
              0.901026,
              0.00121228,
              0,
              0.154703,
              0.890358,
              0.00123946,
              0,
              0.170576,
              0.878283,
              0.0012527,
              0,
              0.18719,
              0.865459,
              0.00125536,
              0,
              0.204547,
              0.851407,
              0.00126134,
              0,
              0.222648,
              0.836276,
              0.00124759,
              0,
              0.241498,
              0.820436,
              0.00124443,
              0,
              0.261101,
              0.803253,
              0.00122071,
              0,
              0.281465,
              0.785562,
              0.00120107,
              0,
              0.302595,
              0.76718,
              0.00117762,
              0,
              0.324501,
              0.748551,
              0.00114289,
              0,
              0.347192,
              0.730564,
              0.00110872,
              0,
              0.370679,
              0.712253,
              0.00107636,
              0,
              0.394973,
              0.692867,
              0.00103646,
              0,
              0.420085,
              0.673695,
              996793e-9,
              0,
              0.446027,
              0.653912,
              95675e-8,
              0,
              0.47281,
              0.634129,
              916739e-9,
              0,
              0.500441,
              0.615004,
              874401e-9,
              0,
              0.528921,
              0.595587,
              833411e-9,
              0,
              0.558244,
              0.575965,
              794556e-9,
              0,
              0.588384,
              0.5566,
              75196e-8,
              0,
              0.619281,
              0.537428,
              716381e-9,
              0,
              0.650795,
              0.518623,
              676558e-9,
              0,
              0.68254,
              0.499964,
              64074e-8,
              0,
              0.714286,
              0.481356,
              605984e-9,
              0,
              0.746032,
              0.463279,
              570256e-9,
              0,
              0.777778,
              0.445673,
              540138e-9,
              0,
              0.809524,
              0.428032,
              507299e-9,
              0,
              0.84127,
              0.411112,
              479553e-9,
              0,
              0.873016,
              0.394444,
              450737e-9,
              0,
              0.904762,
              0.378247,
              424269e-9,
              0,
              0.936508,
              0.362415,
              399111e-9,
              0,
              0.968254,
              0.347103,
              375274e-9,
              0,
              1,
              1,
              300729e-9,
              0,
              0,
              1,
              300733e-9,
              0,
              0,
              1,
              300797e-9,
              0,
              0,
              0.999998,
              301072e-9,
              0,
              0,
              0.999996,
              301817e-9,
              0,
              0,
              0.999989,
              303398e-9,
              0,
              0,
              0.999977,
              306309e-9,
              0,
              0,
              0.999958,
              311209e-9,
              0,
              0,
              0.999927,
              318975e-9,
              0,
              0,
              0.999884,
              330804e-9,
              0,
              0,
              0.99982,
              34834e-8,
              0,
              0,
              0.999733,
              373854e-9,
              0,
              326995e-10,
              0.999613,
              410424e-9,
              0,
              477174e-9,
              0.999447,
              462047e-9,
              0,
              0.00161099,
              0.999204,
              533322e-9,
              0,
              0.00353153,
              0.998725,
              624964e-9,
              0,
              0.00627965,
              0.995871,
              631786e-9,
              0,
              0.0098693,
              0.993194,
              632017e-9,
              0,
              0.0143011,
              0.991541,
              68923e-8,
              0,
              0.019568,
              0.989773,
              766892e-9,
              0,
              0.0256593,
              0.987647,
              863668e-9,
              0,
              0.0325625,
              0.984193,
              922089e-9,
              0,
              0.0402647,
              0.980016,
              970749e-9,
              0,
              0.0487532,
              0.975859,
              0.00106027,
              0,
              0.058016,
              0.970514,
              0.00112239,
              0,
              0.0680419,
              0.963625,
              0.00117212,
              0,
              0.0788208,
              0.956959,
              0.00125211,
              0,
              0.0903439,
              0.947956,
              0.00129411,
              0,
              0.102604,
              0.93809,
              0.00135879,
              0,
              0.115594,
              0.92659,
              0.00139309,
              0,
              0.129309,
              0.913829,
              0.00143253,
              0,
              0.143745,
              0.90005,
              0.00145809,
              0,
              0.158901,
              0.888129,
              0.0014748,
              0,
              0.174774,
              0.87607,
              0.00148756,
              0,
              0.191365,
              0.863461,
              0.00148714,
              0,
              0.208674,
              0.849594,
              0.00148892,
              0,
              0.226705,
              0.834531,
              0.00146496,
              0,
              0.245461,
              0.81903,
              0.0014579,
              0,
              0.264947,
              0.802122,
              0.00143039,
              0,
              0.28517,
              0.78445,
              0.00139717,
              0,
              0.306137,
              0.766434,
              0.00136312,
              0,
              0.327857,
              0.747816,
              0.00132597,
              0,
              0.350341,
              0.729519,
              0.00128323,
              0,
              0.373598,
              0.711454,
              0.00123803,
              0,
              0.397642,
              0.692699,
              0.00119097,
              0,
              0.422485,
              0.673723,
              0.00114565,
              0,
              0.448139,
              0.654386,
              0.00109552,
              0,
              0.474619,
              0.634673,
              0.00104553,
              0,
              0.501933,
              0.615554,
              99985e-8,
              0,
              0.530089,
              0.596462,
              948207e-9,
              0,
              0.559087,
              0.577385,
              902299e-9,
              0,
              0.588913,
              0.558257,
              856448e-9,
              0,
              0.619525,
              0.5392,
              810395e-9,
              0,
              0.650826,
              0.520543,
              768558e-9,
              0,
              0.68254,
              0.502206,
              7239e-7,
              0,
              0.714286,
              0.48402,
              685794e-9,
              0,
              0.746032,
              0.465779,
              64471e-8,
              0,
              0.777778,
              0.448455,
              609583e-9,
              0,
              0.809524,
              0.431091,
              57227e-8,
              0,
              0.84127,
              0.414147,
              54042e-8,
              0,
              0.873016,
              0.39765,
              506545e-9,
              0,
              0.904762,
              0.381576,
              477635e-9,
              0,
              0.936508,
              0.365881,
              448446e-9,
              0,
              0.968254,
              0.350582,
              421424e-9,
              0,
              1,
              1,
              427144e-9,
              0,
              0,
              1,
              427151e-9,
              0,
              0,
              1,
              427232e-9,
              0,
              0,
              0.999998,
              42759e-8,
              0,
              0,
              0.999995,
              428555e-9,
              0,
              0,
              0.999988,
              430603e-9,
              0,
              0,
              0.999976,
              434368e-9,
              0,
              0,
              0.999952,
              440688e-9,
              0,
              0,
              0.999919,
              450667e-9,
              0,
              0,
              0.999871,
              46578e-8,
              0,
              0,
              0.999801,
              488024e-9,
              0,
              0,
              0.999704,
              520092e-9,
              0,
              129791e-9,
              0.999572,
              565553e-9,
              0,
              821056e-9,
              0.999389,
              628906e-9,
              0,
              0.00225241,
              0.999114,
              714911e-9,
              0,
              0.00449109,
              0.998488,
              819218e-9,
              0,
              0.00756249,
              0.995234,
              80415e-8,
              0,
              0.0114716,
              0.993021,
              830181e-9,
              0,
              0.0162131,
              0.991407,
              902645e-9,
              0,
              0.021776,
              0.989625,
              996934e-9,
              0,
              0.0281471,
              0.987064,
              0.00109707,
              0,
              0.0353118,
              0.983265,
              0.00114353,
              0,
              0.0432562,
              0.979535,
              0.0012272,
              0,
              0.0519665,
              0.975224,
              0.00132642,
              0,
              0.0614298,
              0.969574,
              0.00138092,
              0,
              0.0716348,
              0.963021,
              0.00145896,
              0,
              0.0825709,
              0.956046,
              0.00152834,
              0,
              0.094229,
              0.947136,
              0.00158217,
              0,
              0.106602,
              0.937313,
              0.0016347,
              0,
              0.119682,
              0.926073,
              0.00168383,
              0,
              0.133465,
              0.913121,
              0.00171627,
              0,
              0.147947,
              0.899165,
              0.00174229,
              0,
              0.163125,
              0.885891,
              0.00176137,
              0,
              0.178998,
              0.873783,
              0.00176406,
              0,
              0.195566,
              0.861331,
              0.00176156,
              0,
              0.21283,
              0.847569,
              0.00175346,
              0,
              0.230793,
              0.832785,
              0.00172753,
              0,
              0.249459,
              0.817442,
              0.00170204,
              0,
              0.268832,
              0.800613,
              0.00166576,
              0,
              0.28892,
              0.783597,
              0.00162909,
              0,
              0.30973,
              0.76571,
              0.0015826,
              0,
              0.331271,
              0.747021,
              0.00153106,
              0,
              0.353554,
              0.728593,
              0.00148036,
              0,
              0.37659,
              0.710661,
              0.00142808,
              0,
              0.400391,
              0.692426,
              0.00136906,
              0,
              0.424973,
              0.673623,
              0.00131066,
              0,
              0.450347,
              0.65494,
              0.00125569,
              0,
              0.476531,
              0.635448,
              0.00119517,
              0,
              0.503535,
              0.616221,
              0.00113828,
              0,
              0.531372,
              0.597531,
              0.0010816,
              0,
              0.560047,
              0.578795,
              0.00102673,
              0,
              0.589554,
              0.559892,
              970985e-9,
              0,
              0.619869,
              0.541307,
              919773e-9,
              0,
              0.650923,
              0.522608,
              868479e-9,
              0,
              0.68254,
              0.504484,
              82137e-8,
              0,
              0.714286,
              0.486603,
              772916e-9,
              0,
              0.746032,
              0.468802,
              730353e-9,
              0,
              0.777778,
              0.451172,
              684955e-9,
              0,
              0.809524,
              0.434348,
              647565e-9,
              0,
              0.84127,
              0.417445,
              605863e-9,
              0,
              0.873016,
              0.401077,
              571885e-9,
              0,
              0.904762,
              0.385039,
              536034e-9,
              0,
              0.936508,
              0.369483,
              504227e-9,
              0,
              0.968254,
              0.354272,
              473165e-9,
              0,
              1,
              1,
              599525e-9,
              0,
              0,
              1,
              599533e-9,
              0,
              0,
              1,
              599639e-9,
              0,
              0,
              0.999998,
              600097e-9,
              0,
              0,
              0.999994,
              601336e-9,
              0,
              0,
              0.999987,
              603958e-9,
              0,
              0,
              0.999972,
              608775e-9,
              0,
              0,
              0.999949,
              616842e-9,
              0,
              0,
              0.999912,
              629534e-9,
              0,
              0,
              0.999857,
              648658e-9,
              0,
              0,
              0.999781,
              676615e-9,
              0,
              538873e-11,
              0.999674,
              716574e-9,
              0,
              308602e-9,
              0.999528,
              772641e-9,
              0,
              0.00127003,
              0.999326,
              849806e-9,
              0,
              0.00300783,
              0.999009,
              952682e-9,
              0,
              0.00556637,
              0.998112,
              0.00106394,
              0,
              0.00895889,
              0.994496,
              0.00102228,
              0,
              0.0131827,
              0.992806,
              0.00108586,
              0,
              0.0182277,
              0.991211,
              0.0011759,
              0,
              0.0240795,
              0.989415,
              0.00128955,
              0,
              0.030723,
              0.986499,
              0.00139038,
              0,
              0.0381418,
              0.982679,
              0.00144539,
              0,
              0.046321,
              0.978839,
              0.00153954,
              0,
              0.0552459,
              0.974295,
              0.00164417,
              0,
              0.0649034,
              0.968784,
              0.00171517,
              0,
              0.0752814,
              0.962324,
              0.00180282,
              0,
              0.0863693,
              0.954956,
              0.00186387,
              0,
              0.0981578,
              0.94624,
              0.00193817,
              0,
              0.110639,
              0.936517,
              0.00198156,
              0,
              0.123806,
              0.925186,
              0.00203042,
              0,
              0.137655,
              0.91252,
              0.0020664,
              0,
              0.15218,
              0.898441,
              0.00207822,
              0,
              0.16738,
              0.884394,
              0.0020992,
              0,
              0.183253,
              0.871273,
              0.00208748,
              0,
              0.199799,
              0.859057,
              0.00208686,
              0,
              0.21702,
              0.845243,
              0.00205519,
              0,
              0.234918,
              0.830723,
              0.00202868,
              0,
              0.253496,
              0.815801,
              0.00199501,
              0,
              0.272761,
              0.79914,
              0.00194193,
              0,
              0.292719,
              0.782372,
              0.00188824,
              0,
              0.313377,
              0.76482,
              0.00183695,
              0,
              0.334745,
              0.746586,
              0.00177418,
              0,
              0.356833,
              0.7281,
              0.00170628,
              0,
              0.379654,
              0.709842,
              0.00164063,
              0,
              0.403221,
              0.692019,
              0.00157355,
              0,
              0.427548,
              0.67364,
              0.00150262,
              0,
              0.452651,
              0.655277,
              0.00143473,
              0,
              0.478545,
              0.636438,
              0.00136371,
              0,
              0.505246,
              0.617364,
              0.00129911,
              0,
              0.532768,
              0.598603,
              0.00123014,
              0,
              0.561122,
              0.580195,
              0.00116587,
              0,
              0.590309,
              0.561786,
              0.00110398,
              0,
              0.620318,
              0.543377,
              0.00104148,
              0,
              0.651102,
              0.525093,
              983984e-9,
              0,
              0.682545,
              0.506791,
              92667e-8,
              0,
              0.714286,
              0.489291,
              874326e-9,
              0,
              0.746032,
              0.471811,
              821734e-9,
              0,
              0.777778,
              0.454435,
              774698e-9,
              0,
              0.809524,
              0.437493,
              727302e-9,
              0,
              0.84127,
              0.420977,
              684039e-9,
              0,
              0.873016,
              0.404729,
              64373e-8,
              0,
              0.904762,
              0.388756,
              60285e-8,
              0,
              0.936508,
              0.373344,
              56765e-8,
              0,
              0.968254,
              0.358191,
              531929e-9,
              0,
              1,
              1,
              832169e-9,
              0,
              0,
              1,
              832178e-9,
              0,
              0,
              1,
              83231e-8,
              0,
              0,
              0.999998,
              832893e-9,
              0,
              0,
              0.999995,
              834465e-9,
              0,
              0,
              0.999985,
              837791e-9,
              0,
              0,
              0.999969,
              843893e-9,
              0,
              0,
              0.999944,
              854086e-9,
              0,
              0,
              0.999903,
              870071e-9,
              0,
              0,
              0.999843,
              894042e-9,
              0,
              0,
              0.999759,
              928865e-9,
              0,
              531805e-10,
              0.999643,
              978242e-9,
              0,
              579365e-9,
              0.99948,
              0.00104684,
              0,
              0.00182774,
              0.999255,
              0.00114012,
              0,
              0.00387804,
              0.998885,
              0.00126188,
              0,
              0.00675709,
              0.997405,
              0.00135888,
              0,
              0.010468,
              0.99424,
              0.00133626,
              0,
              0.0150018,
              0.992458,
              0.00140905,
              0,
              0.0203443,
              0.990929,
              0.00152305,
              0,
              0.0264786,
              0.989116,
              0.00165882,
              0,
              0.0333875,
              0.985624,
              0.00174128,
              0,
              0.0410536,
              0.982003,
              0.00182108,
              0,
              0.0494609,
              0.978336,
              0.00194498,
              0,
              0.0585941,
              0.973184,
              0.00202708,
              0,
              0.0684396,
              0.9678,
              0.00212166,
              0,
              0.0789851,
              0.961348,
              0.00221366,
              0,
              0.0902199,
              0.953841,
              0.00228219,
              0,
              0.102134,
              0.94534,
              0.00235662,
              0,
              0.114721,
              0.935552,
              0.00240572,
              0,
              0.127972,
              0.924064,
              0.00244405,
              0,
              0.141884,
              0.911827,
              0.00247557,
              0,
              0.156451,
              0.897731,
              0.00248374,
              0,
              0.171672,
              0.883409,
              0.00249863,
              0,
              0.187545,
              0.868625,
              0.00246688,
              0,
              0.20407,
              0.856529,
              0.00246523,
              0,
              0.221249,
              0.842999,
              0.00242368,
              0,
              0.239083,
              0.828505,
              0.00237354,
              0,
              0.257578,
              0.813825,
              0.00232588,
              0,
              0.276738,
              0.797813,
              0.00226731,
              0,
              0.296569,
              0.781097,
              0.00219704,
              0,
              0.31708,
              0.764038,
              0.00212394,
              0,
              0.338281,
              0.746067,
              0.00204786,
              0,
              0.360181,
              0.727687,
              0.00196728,
              0,
              0.382794,
              0.709571,
              0.00188779,
              0,
              0.406133,
              0.691503,
              0.00180532,
              0,
              0.430213,
              0.673673,
              0.00171849,
              0,
              0.45505,
              0.655732,
              0.00164147,
              0,
              0.480662,
              0.637399,
              0.00155858,
              0,
              0.507065,
              0.618616,
              0.00147641,
              0,
              0.534278,
              0.60005,
              0.00140125,
              0,
              0.562313,
              0.581713,
              0.00132441,
              0,
              0.59118,
              0.563546,
              0.00125014,
              0,
              0.620875,
              0.545605,
              0.00118249,
              0,
              0.651373,
              0.527559,
              0.0011116,
              0,
              0.682593,
              0.509764,
              0.00104979,
              0,
              0.714286,
              0.49193,
              985977e-9,
              0,
              0.746032,
              0.475011,
              928592e-9,
              0,
              0.777778,
              0.457878,
              873466e-9,
              0,
              0.809524,
              0.440979,
              819585e-9,
              0,
              0.84127,
              0.424613,
              772365e-9,
              0,
              0.873016,
              0.408549,
              722195e-9,
              0,
              0.904762,
              0.392771,
              680014e-9,
              0,
              0.936508,
              0.377317,
              636797e-9,
              0,
              0.968254,
              0.362352,
              598318e-9,
              0,
              1,
              1,
              0.00114313,
              0,
              0,
              1,
              0.00114314,
              0,
              0,
              0.999999,
              0.00114331,
              0,
              0,
              0.999998,
              0.00114404,
              0,
              0,
              0.999994,
              0.00114601,
              0,
              0,
              0.999984,
              0.00115019,
              0,
              0,
              0.999967,
              0.00115784,
              0,
              0,
              0.999937,
              0.0011706,
              0,
              0,
              0.999894,
              0.00119054,
              0,
              0,
              0.999828,
              0.00122031,
              0,
              0,
              0.999735,
              0.00126331,
              0,
              169263e-9,
              0.999606,
              0.00132382,
              0,
              949167e-9,
              0.999426,
              0.0014071,
              0,
              0.00249668,
              0.999173,
              0.00151895,
              0,
              0.00486392,
              0.99873,
              0.00166102,
              0,
              0.00806323,
              0.996243,
              0.0017023,
              0,
              0.0120895,
              0.993779,
              0.00172782,
              0,
              0.0169288,
              0.9919,
              0.0018108,
              0,
              0.0225633,
              0.990524,
              0.00196028,
              0,
              0.028974,
              0.98868,
              0.00212014,
              0,
              0.036142,
              0.984663,
              0.00217598,
              0,
              0.044049,
              0.981457,
              0.00230563,
              0,
              0.0526781,
              0.977608,
              0.00243966,
              0,
              0.0620137,
              0.972215,
              0.00251336,
              0,
              0.0720418,
              0.966798,
              0.0026285,
              0,
              0.0827499,
              0.960241,
              0.00271409,
              0,
              0.0941271,
              0.952489,
              0.00278381,
              0,
              0.106164,
              0.944127,
              0.00285399,
              0,
              0.118852,
              0.934282,
              0.00290994,
              0,
              0.132185,
              0.923271,
              0.00294558,
              0,
              0.146157,
              0.910803,
              0.00296269,
              0,
              0.160766,
              0.896705,
              0.00296803,
              0,
              0.176007,
              0.88238,
              0.00296637,
              0,
              0.19188,
              0.867116,
              0.00293163,
              0,
              0.208385,
              0.853636,
              0.00289418,
              0,
              0.225523,
              0.840469,
              0.00284663,
              0,
              0.243296,
              0.82639,
              0.00278594,
              0,
              0.261709,
              0.811759,
              0.00271618,
              0,
              0.280767,
              0.796113,
              0.00263187,
              0,
              0.300476,
              0.779518,
              0.00254589,
              0,
              0.320845,
              0.763142,
              0.00246003,
              0,
              0.341883,
              0.745464,
              0.00236529,
              0,
              0.363601,
              0.727491,
              0.00226536,
              0,
              0.386011,
              0.709414,
              0.00216375,
              0,
              0.409128,
              0.691396,
              0.00207127,
              0,
              0.432967,
              0.67368,
              0.00197106,
              0,
              0.457545,
              0.656049,
              0.00187022,
              0,
              0.482881,
              0.638188,
              0.00177605,
              0,
              0.508992,
              0.620177,
              0.00168482,
              0,
              0.535899,
              0.601506,
              0.00158909,
              0,
              0.563619,
              0.58362,
              0.00150583,
              0,
              0.592165,
              0.565496,
              0.00141791,
              0,
              0.621544,
              0.54789,
              0.00133693,
              0,
              0.651743,
              0.530323,
              0.00126038,
              0,
              0.682709,
              0.512795,
              0.00118556,
              0,
              0.714286,
              0.495199,
              0.00111527,
              0,
              0.746032,
              0.478101,
              0.0010489,
              0,
              0.777778,
              0.461511,
              984264e-9,
              0,
              0.809524,
              0.444879,
              92591e-8,
              0,
              0.84127,
              0.428424,
              866582e-9,
              0,
              0.873016,
              0.412495,
              814463e-9,
              0,
              0.904762,
              0.396975,
              764498e-9,
              0,
              0.936508,
              0.381614,
              715967e-9,
              0,
              0.968254,
              0.366732,
              672483e-9,
              0,
              1,
              1,
              0.00155501,
              0,
              0,
              1,
              0.00155503,
              0,
              0,
              1,
              0.00155524,
              0,
              0,
              0.999998,
              0.00155615,
              0,
              0,
              0.999994,
              0.0015586,
              0,
              0,
              0.999983,
              0.00156379,
              0,
              0,
              0.999963,
              0.0015733,
              0,
              0,
              0.999932,
              0.00158911,
              0,
              0,
              0.999882,
              0.00161376,
              0,
              0,
              0.99981,
              0.00165041,
              0,
              100875e-10,
              0.999708,
              0.00170304,
              0,
              367658e-9,
              0.999565,
              0.00177658,
              0,
              0.0014234,
              0.999368,
              0.00187688,
              0,
              0.00327939,
              0.999081,
              0.00200989,
              0,
              0.00596629,
              0.99852,
              0.00217177,
              0,
              0.0094852,
              0.99549,
              0.0021745,
              0,
              0.013824,
              0.993252,
              0.00222357,
              0,
              0.0189642,
              0.991727,
              0.00235022,
              0,
              0.0248856,
              0.989951,
              0.00250561,
              0,
              0.0315669,
              0.988029,
              0.00268829,
              0,
              0.0389882,
              0.984029,
              0.0027496,
              0,
              0.0471302,
              0.980683,
              0.00289793,
              0,
              0.0559754,
              0.976554,
              0.00303315,
              0,
              0.0655081,
              0.97139,
              0.00313257,
              0,
              0.0757138,
              0.965544,
              0.00323656,
              0,
              0.08658,
              0.95912,
              0.00333432,
              0,
              0.0980954,
              0.951183,
              0.0034039,
              0,
              0.110251,
              0.942974,
              0.00347515,
              0,
              0.123038,
              0.932642,
              0.00350381,
              0,
              0.13645,
              0.922158,
              0.00354519,
              0,
              0.150482,
              0.909404,
              0.00353851,
              0,
              0.165129,
              0.896071,
              0.0035435,
              0,
              0.18039,
              0.881206,
              0.00349936,
              0,
              0.196263,
              0.866077,
              0.00347256,
              0,
              0.212748,
              0.85093,
              0.003415,
              0,
              0.229847,
              0.837703,
              0.00333367,
              0,
              0.247561,
              0.823878,
              0.003249,
              0,
              0.265895,
              0.809449,
              0.00316347,
              0,
              0.284854,
              0.794379,
              0.00306351,
              0,
              0.304445,
              0.778138,
              0.0029499,
              0,
              0.324675,
              0.761997,
              0.00284099,
              0,
              0.345555,
              0.744938,
              0.00272104,
              0,
              0.367095,
              0.727212,
              0.00260715,
              0,
              0.389309,
              0.709549,
              0.00248855,
              0,
              0.41221,
              0.691704,
              0.00236783,
              0,
              0.435814,
              0.673689,
              0.00225178,
              0,
              0.460138,
              0.656453,
              0.00213765,
              0,
              0.485203,
              0.639128,
              0.00202178,
              0,
              0.511028,
              0.621512,
              0.00191443,
              0,
              0.537634,
              0.603598,
              0.00180977,
              0,
              0.565041,
              0.58559,
              0.00170456,
              0,
              0.593268,
              0.567852,
              0.00160927,
              0,
              0.622327,
              0.5503,
              0.00151395,
              0,
              0.652217,
              0.533033,
              0.00142499,
              0,
              0.682907,
              0.515942,
              0.00133955,
              0,
              0.714296,
              0.498814,
              0.0012602,
              0,
              0.746032,
              0.481595,
              0.00118188,
              0,
              0.777778,
              0.465117,
              0.00111171,
              0,
              0.809524,
              0.448865,
              0.00104091,
              0,
              0.84127,
              0.432711,
              976618e-9,
              0,
              0.873016,
              0.416822,
              91859e-8,
              0,
              0.904762,
              0.401272,
              857704e-9,
              0,
              0.936508,
              0.386226,
              807172e-9,
              0,
              0.968254,
              0.371321,
              75464e-8,
              0,
              1,
              1,
              0.00209596,
              0,
              0,
              1,
              0.00209598,
              0,
              0,
              1,
              0.00209624,
              0,
              0,
              0.999997,
              0.00209736,
              0,
              0,
              0.999991,
              0.00210039,
              0,
              0,
              0.999979,
              0.00210678,
              0,
              0,
              0.999959,
              0.00211847,
              0,
              0,
              0.999925,
              0.0021379,
              0,
              0,
              0.99987,
              0.00216809,
              0,
              0,
              0.999791,
              0.00221281,
              0,
              681487e-10,
              0.999677,
              0.00227669,
              0,
              658161e-9,
              0.999521,
              0.00236533,
              0,
              0.00200635,
              0.999301,
              0.00248514,
              0,
              0.0041779,
              0.998977,
              0.00264185,
              0,
              0.00718648,
              0.998191,
              0.00281695,
              0,
              0.0110239,
              0.994801,
              0.00278518,
              0,
              0.015672,
              0.993091,
              0.00288774,
              0,
              0.0211091,
              0.991571,
              0.00303931,
              0,
              0.0273123,
              0.9897,
              0.00321643,
              0,
              0.034259,
              0.987023,
              0.00337332,
              0,
              0.0419282,
              0.983289,
              0.00346146,
              0,
              0.0502998,
              0.979892,
              0.00363704,
              0,
              0.0593562,
              0.975111,
              0.00373601,
              0,
              0.069081,
              0.970351,
              0.0038842,
              0,
              0.0794598,
              0.964131,
              0.00397053,
              0,
              0.0904798,
              0.957747,
              0.00408078,
              0,
              0.10213,
              0.949536,
              0.00413533,
              0,
              0.1144,
              0.941372,
              0.00420305,
              0,
              0.127284,
              0.931049,
              0.00422815,
              0,
              0.140772,
              0.920647,
              0.00425048,
              0,
              0.154862,
              0.908033,
              0.0042281,
              0,
              0.169548,
              0.895028,
              0.00422026,
              0,
              0.184828,
              0.879968,
              0.00415042,
              0,
              0.200701,
              0.864875,
              0.00408821,
              0,
              0.217167,
              0.84918,
              0.00400909,
              0,
              0.234227,
              0.834934,
              0.00391178,
              0,
              0.251884,
              0.821397,
              0.00380066,
              0,
              0.270141,
              0.807135,
              0.00367974,
              0,
              0.289004,
              0.792363,
              0.00355172,
              0,
              0.308479,
              0.776661,
              0.003411,
              0,
              0.328575,
              0.760705,
              0.00328123,
              0,
              0.349301,
              0.744408,
              0.00314003,
              0,
              0.370668,
              0.726994,
              0.0029906,
              0,
              0.392689,
              0.709598,
              0.00285034,
              0,
              0.415379,
              0.692112,
              0.00271179,
              0,
              0.438754,
              0.674435,
              0.00257185,
              0,
              0.46283,
              0.65676,
              0.00243425,
              0,
              0.48763,
              0.639982,
              0.00230351,
              0,
              0.513173,
              0.622983,
              0.0021777,
              0,
              0.539482,
              0.605471,
              0.00204991,
              0,
              0.566579,
              0.58796,
              0.00193759,
              0,
              0.594488,
              0.570463,
              0.00181976,
              0,
              0.623226,
              0.553058,
              0.00171497,
              0,
              0.6528,
              0.535894,
              0.00161109,
              0,
              0.683198,
              0.519089,
              0.00151394,
              0,
              0.714354,
              0.502454,
              0.00142122,
              0,
              0.746032,
              0.485681,
              0.00133488,
              0,
              0.777778,
              0.468935,
              0.00124975,
              0,
              0.809524,
              0.452951,
              0.00117309,
              0,
              0.84127,
              0.437139,
              0.00110155,
              0,
              0.873016,
              0.421446,
              0.00103124,
              0,
              0.904762,
              0.405951,
              966387e-9,
              0,
              0.936508,
              0.391003,
              908119e-9,
              0,
              0.968254,
              0.376198,
              848057e-9,
              0,
              1,
              1,
              0.00280076,
              0,
              0,
              1,
              0.00280078,
              0,
              0,
              0.999999,
              0.00280109,
              0,
              0,
              0.999997,
              0.00280246,
              0,
              0,
              0.999992,
              0.00280616,
              0,
              0,
              0.999979,
              0.00281396,
              0,
              0,
              0.999956,
              0.00282822,
              0,
              0,
              0.999916,
              0.00285186,
              0,
              0,
              0.999857,
              0.0028885,
              0,
              0,
              0.999768,
              0.00294259,
              0,
              196026e-9,
              0.999645,
              0.00301946,
              0,
              0.00104842,
              0.99947,
              0.00312541,
              0,
              0.00270199,
              0.999229,
              0.00326733,
              0,
              0.00519449,
              0.998852,
              0.00344992,
              0,
              0.00852602,
              0.997558,
              0.00361052,
              0,
              0.0126804,
              0.994417,
              0.0035898,
              0,
              0.017635,
              0.992824,
              0.00372393,
              0,
              0.023365,
              0.991344,
              0.00390695,
              0,
              0.0298456,
              0.989337,
              0.00410392,
              0,
              0.0370529,
              0.985811,
              0.00420987,
              0,
              0.0449651,
              0.982772,
              0.00437488,
              0,
              0.0535615,
              0.979001,
              0.00455069,
              0,
              0.0628243,
              0.974102,
              0.00464462,
              0,
              0.0727368,
              0.969197,
              0.00480577,
              0,
              0.0832844,
              0.962759,
              0.00487818,
              0,
              0.0944545,
              0.956207,
              0.00498176,
              0,
              0.106236,
              0.947909,
              0.00503392,
              0,
              0.118619,
              0.939596,
              0.00507474,
              0,
              0.131595,
              0.929642,
              0.00509798,
              0,
              0.145159,
              0.918807,
              0.00508476,
              0,
              0.159305,
              0.906921,
              0.00505634,
              0,
              0.174028,
              0.893312,
              0.00498845,
              0,
              0.189327,
              0.878933,
              0.0049133,
              0,
              0.2052,
              0.863986,
              0.0048259,
              0,
              0.221647,
              0.847936,
              0.00470848,
              0,
              0.23867,
              0.832253,
              0.00456889,
              0,
              0.25627,
              0.818619,
              0.00442726,
              0,
              0.274453,
              0.804788,
              0.00427677,
              0,
              0.293222,
              0.790241,
              0.00411906,
              0,
              0.312585,
              0.775162,
              0.00394833,
              0,
              0.33255,
              0.759463,
              0.00377366,
              0,
              0.353126,
              0.743598,
              0.00361026,
              0,
              0.374324,
              0.72697,
              0.00343627,
              0,
              0.396158,
              0.709646,
              0.00326422,
              0,
              0.418641,
              0.69277,
              0.00309717,
              0,
              0.44179,
              0.675371,
              0.0029356,
              0,
              0.465624,
              0.657863,
              0.00277712,
              0,
              0.490163,
              0.640772,
              0.00261738,
              0,
              0.515429,
              0.624441,
              0.0024737,
              0,
              0.541445,
              0.607497,
              0.00233125,
              0,
              0.568236,
              0.590438,
              0.00218994,
              0,
              0.595828,
              0.573224,
              0.0020664,
              0,
              0.624242,
              0.556168,
              0.00193526,
              0,
              0.653496,
              0.539232,
              0.00182463,
              0,
              0.683588,
              0.522352,
              0.00170735,
              0,
              0.714482,
              0.506172,
              0.00160555,
              0,
              0.746032,
              0.489842,
              0.00150451,
              0,
              0.777778,
              0.473463,
              0.00140938,
              0,
              0.809524,
              0.457266,
              0.00132568,
              0,
              0.84127,
              0.441609,
              0.0012376,
              0,
              0.873016,
              0.426348,
              0.00116265,
              0,
              0.904762,
              0.411002,
              0.00108935,
              0,
              0.936508,
              0.396045,
              0.00101946,
              0,
              0.968254,
              0.381448,
              955665e-9,
              0,
              1,
              1,
              0.0037121,
              0,
              0,
              1,
              0.00371213,
              0,
              0,
              1,
              0.00371251,
              0,
              0,
              0.999997,
              0.00371417,
              0,
              0,
              0.99999,
              0.00371863,
              0,
              0,
              0.999977,
              0.00372807,
              0,
              0,
              0.99995,
              0.00374529,
              0,
              0,
              0.999908,
              0.0037738,
              0,
              0,
              0.999843,
              0.00381789,
              0,
              123596e-10,
              0.999745,
              0.00388273,
              0,
              407442e-9,
              0.999608,
              0.00397443,
              0,
              0.0015447,
              0.999415,
              0.00409998,
              0,
              0.00351385,
              0.999143,
              0.00426662,
              0,
              0.0063316,
              0.9987,
              0.00447625,
              0,
              0.00998679,
              0.996363,
              0.00455323,
              0,
              0.0144569,
              0.994021,
              0.00461052,
              0,
              0.0197151,
              0.992372,
              0.00476359,
              0,
              0.0257344,
              0.991007,
              0.00499101,
              0,
              0.0324882,
              0.988767,
              0.0051972,
              0,
              0.0399517,
              0.984872,
              0.00528407,
              0,
              0.0481022,
              0.982004,
              0.00548926,
              0,
              0.0569191,
              0.977714,
              0.00564385,
              0,
              0.0663839,
              0.973076,
              0.0057693,
              0,
              0.0764801,
              0.967565,
              0.0058924,
              0,
              0.0871928,
              0.961384,
              0.00599629,
              0,
              0.0985095,
              0.954435,
              0.00605998,
              0,
              0.110419,
              0.946303,
              0.0061133,
              0,
              0.122912,
              0.937662,
              0.00612028,
              0,
              0.13598,
              0.927867,
              0.00612209,
              0,
              0.149617,
              0.916475,
              0.00604813,
              0,
              0.163817,
              0.90541,
              0.00603088,
              0,
              0.178577,
              0.891591,
              0.00592218,
              0,
              0.193894,
              0.877573,
              0.00578854,
              0,
              0.209767,
              0.862511,
              0.00566648,
              0,
              0.226196,
              0.846861,
              0.00551481,
              0,
              0.243182,
              0.83068,
              0.00533754,
              0,
              0.260728,
              0.815725,
              0.00515487,
              0,
              0.278837,
              0.802321,
              0.0049655,
              0,
              0.297515,
              0.787826,
              0.00475421,
              0,
              0.316768,
              0.773454,
              0.00456002,
              0,
              0.336605,
              0.758224,
              0.00434727,
              0,
              0.357034,
              0.74265,
              0.00414444,
              0,
              0.378067,
              0.726729,
              0.00393738,
              0,
              0.399717,
              0.710155,
              0.00373575,
              0,
              0.421998,
              0.693312,
              0.00353736,
              0,
              0.444928,
              0.67653,
              0.00334368,
              0,
              0.468523,
              0.659444,
              0.00315981,
              0,
              0.492806,
              0.642051,
              0.00297809,
              0,
              0.517798,
              0.625758,
              0.00280592,
              0,
              0.543525,
              0.609615,
              0.00264254,
              0,
              0.570012,
              0.592919,
              0.00248459,
              0,
              0.597288,
              0.576298,
              0.00233327,
              0,
              0.625379,
              0.559489,
              0.00219519,
              0,
              0.654307,
              0.542891,
              0.00205441,
              0,
              0.684084,
              0.526255,
              0.00193385,
              0,
              0.714693,
              0.509853,
              0.00180745,
              0,
              0.746044,
              0.494131,
              0.00169817,
              0,
              0.777778,
              0.478114,
              0.0015913,
              0,
              0.809524,
              0.462274,
              0.00148981,
              0,
              0.84127,
              0.446412,
              0.00139537,
              0,
              0.873016,
              0.431274,
              0.00130984,
              0,
              0.904762,
              0.41635,
              0.00122403,
              0,
              0.936508,
              0.401476,
              0.00114809,
              0,
              0.968254,
              0.386993,
              0.00107563,
              0,
              1,
              1,
              0.00488216,
              0,
              0,
              1,
              0.0048822,
              0,
              0,
              1,
              0.00488265,
              0,
              0,
              0.999997,
              0.00488463,
              0,
              0,
              0.999988,
              0.00488999,
              0,
              0,
              0.999974,
              0.00490129,
              0,
              0,
              0.999946,
              0.00492191,
              0,
              0,
              0.999897,
              0.00495598,
              0,
              0,
              0.999825,
              0.00500855,
              0,
              744791e-10,
              0.999718,
              0.00508559,
              0,
              712744e-9,
              0.999565,
              0.005194,
              0,
              0.00215249,
              0.999352,
              0.00534147,
              0,
              0.00444576,
              0.999046,
              0.00553523,
              0,
              0.00759218,
              0.998492,
              0.00577016,
              0,
              0.0115714,
              0.995564,
              0.00578487,
              0,
              0.0163557,
              0.993339,
              0.00586414,
              0,
              0.021915,
              0.991834,
              0.00606002,
              0,
              0.0282201,
              0.990496,
              0.00633312,
              0,
              0.0352433,
              0.987826,
              0.00651941,
              0,
              0.042959,
              0.98383,
              0.00660842,
              0,
              0.0513439,
              0.98109,
              0.00685523,
              0,
              0.0603772,
              0.976131,
              0.00695778,
              0,
              0.0700402,
              0.971922,
              0.00714236,
              0,
              0.0803163,
              0.965901,
              0.00721437,
              0,
              0.0911908,
              0.959606,
              0.00732017,
              0,
              0.102651,
              0.952504,
              0.00735788,
              0,
              0.114686,
              0.944365,
              0.00738493,
              0,
              0.127286,
              0.935652,
              0.00737969,
              0,
              0.140443,
              0.925813,
              0.00733612,
              0,
              0.154151,
              0.914397,
              0.00723094,
              0,
              0.168405,
              0.903257,
              0.00714002,
              0,
              0.183201,
              0.890015,
              0.00700149,
              0,
              0.198536,
              0.876014,
              0.00682813,
              0,
              0.214409,
              0.861436,
              0.00665567,
              0,
              0.23082,
              0.845752,
              0.00644526,
              0,
              0.24777,
              0.829169,
              0.00621635,
              0,
              0.265263,
              0.813435,
              0.00597789,
              0,
              0.283301,
              0.799701,
              0.00575694,
              0,
              0.301889,
              0.785726,
              0.00549866,
              0,
              0.321035,
              0.77152,
              0.0052503,
              0,
              0.340746,
              0.75683,
              0.00499619,
              0,
              0.361032,
              0.741951,
              0.0047543,
              0,
              0.381904,
              0.726367,
              0.0045084,
              0,
              0.403374,
              0.710537,
              0.00426784,
              0,
              0.425457,
              0.693965,
              0.00403487,
              0,
              0.448169,
              0.677724,
              0.0038075,
              0,
              0.47153,
              0.66117,
              0.00359431,
              0,
              0.495561,
              0.644274,
              0.00338354,
              0,
              0.520284,
              0.627449,
              0.00318163,
              0,
              0.545725,
              0.611645,
              0.00299672,
              0,
              0.571911,
              0.595614,
              0.00281016,
              0,
              0.598873,
              0.579426,
              0.00264252,
              0,
              0.62664,
              0.563016,
              0.00247509,
              0,
              0.655239,
              0.546728,
              0.00232647,
              0,
              0.684692,
              0.530539,
              0.00217803,
              0,
              0.714999,
              0.514164,
              0.00204216,
              0,
              0.746106,
              0.498344,
              0.00191403,
              0,
              0.777778,
              0.482957,
              0.00179203,
              0,
              0.809524,
              0.467336,
              0.00167695,
              0,
              0.84127,
              0.451994,
              0.00157567,
              0,
              0.873016,
              0.436514,
              0.00147113,
              0,
              0.904762,
              0.42178,
              0.00138034,
              0,
              0.936508,
              0.407271,
              0.00129219,
              0,
              0.968254,
              0.392822,
              0.0012098,
              0,
              1,
              1,
              0.00637427,
              0,
              0,
              1,
              0.00637431,
              0,
              0,
              0.999999,
              0.00637485,
              0,
              0,
              0.999996,
              0.00637721,
              0,
              0,
              0.999987,
              0.00638357,
              0,
              0,
              0.999971,
              0.006397,
              0,
              0,
              0.999939,
              0.00642142,
              0,
              0,
              0.999888,
              0.00646177,
              0,
              0,
              0.999807,
              0.00652387,
              0,
              207916e-9,
              0.999689,
              0.00661454,
              0,
              0.00112051,
              0.99952,
              0.00674155,
              0,
              0.00287719,
              0.999283,
              0.00691313,
              0,
              0.00550145,
              0.998936,
              0.00713598,
              0,
              0.00897928,
              0.998165,
              0.00738501,
              0,
              0.0132829,
              0.994847,
              0.00734388,
              0,
              0.01838,
              0.993182,
              0.00749991,
              0,
              0.0242381,
              0.991665,
              0.0077246,
              0,
              0.030826,
              0.989708,
              0.00797579,
              0,
              0.0381152,
              0.986663,
              0.00813011,
              0,
              0.0460794,
              0.983288,
              0.00830365,
              0,
              0.0546951,
              0.980104,
              0.00853496,
              0,
              0.0639411,
              0.974855,
              0.00861045,
              0,
              0.0737988,
              0.97045,
              0.00879133,
              0,
              0.0842516,
              0.964509,
              0.00886377,
              0,
              0.0952848,
              0.957594,
              0.00890346,
              0,
              0.106886,
              0.950546,
              0.00893289,
              0,
              0.119044,
              0.942225,
              0.00890074,
              0,
              0.131749,
              0.933365,
              0.00886826,
              0,
              0.144994,
              0.923202,
              0.0087316,
              0,
              0.158772,
              0.912605,
              0.00863082,
              0,
              0.173078,
              0.901099,
              0.00847403,
              0,
              0.187908,
              0.888177,
              0.00825838,
              0,
              0.203261,
              0.873955,
              0.00801834,
              0,
              0.219134,
              0.860091,
              0.00779026,
              0,
              0.235527,
              0.84434,
              0.00752478,
              0,
              0.252443,
              0.828517,
              0.00724074,
              0,
              0.269883,
              0.81239,
              0.00693769,
              0,
              0.287851,
              0.79721,
              0.00664817,
              0,
              0.306352,
              0.783489,
              0.00634763,
              0,
              0.325393,
              0.769514,
              0.00604221,
              0,
              0.344981,
              0.755419,
              0.00573568,
              0,
              0.365126,
              0.741083,
              0.00544359,
              0,
              0.385839,
              0.726059,
              0.00515515,
              0,
              0.407132,
              0.710809,
              0.00487139,
              0,
              0.42902,
              0.695052,
              0.00459846,
              0,
              0.45152,
              0.678886,
              0.00433412,
              0,
              0.474651,
              0.663042,
              0.00407981,
              0,
              0.498433,
              0.646634,
              0.00384264,
              0,
              0.52289,
              0.630117,
              0.00360897,
              0,
              0.548048,
              0.613804,
              0.00338863,
              0,
              0.573936,
              0.598338,
              0.00318486,
              0,
              0.600584,
              0.582687,
              0.00298377,
              0,
              0.628027,
              0.566809,
              0.00280082,
              0,
              0.656295,
              0.550817,
              0.00262255,
              0,
              0.685417,
              0.534937,
              0.00245835,
              0,
              0.715406,
              0.519151,
              0.00230574,
              0,
              0.74624,
              0.503118,
              0.0021549,
              0,
              0.777778,
              0.487723,
              0.00202008,
              0,
              0.809524,
              0.472725,
              0.00189355,
              0,
              0.84127,
              0.457599,
              0.00177108,
              0,
              0.873016,
              0.442558,
              0.00165843,
              0,
              0.904762,
              0.427624,
              0.00155494,
              0,
              0.936508,
              0.413171,
              0.00145273,
              0,
              0.968254,
              0.399122,
              0.00136454,
              0,
              1,
              1,
              0.00826496,
              0,
              0,
              1,
              0.00826499,
              0,
              0,
              1,
              0.00826564,
              0,
              0,
              0.999996,
              0.00826842,
              0,
              0,
              0.999987,
              0.00827589,
              0,
              0,
              0.999967,
              0.00829167,
              0,
              0,
              0.999933,
              0.00832037,
              0,
              0,
              0.999876,
              0.00836768,
              0,
              109338e-10,
              0.999786,
              0.00844031,
              0,
              427145e-9,
              0.999655,
              0.00854603,
              0,
              0.0016384,
              0.999468,
              0.00869337,
              0,
              0.00372392,
              0.999203,
              0.008891,
              0,
              0.00668513,
              0.998803,
              0.00914387,
              0,
              0.0104968,
              0.99748,
              0.00935838,
              0,
              0.015125,
              0.994446,
              0.00933309,
              0,
              0.0205338,
              0.99292,
              0.00953084,
              0,
              0.0266884,
              0.991414,
              0.0097893,
              0,
              0.0335565,
              0.989049,
              0.0100228,
              0,
              0.0411086,
              0.98582,
              0.0101664,
              0,
              0.0493181,
              0.982441,
              0.0103582,
              0,
              0.0581613,
              0.978595,
              0.0105292,
              0,
              0.0676169,
              0.973495,
              0.0106274,
              0,
              0.0776661,
              0.968405,
              0.0107261,
              0,
              0.0882926,
              0.962717,
              0.0108234,
              0,
              0.0994817,
              0.955478,
              0.0108102,
              0,
              0.111221,
              0.948275,
              0.0107914,
              0,
              0.123499,
              0.940006,
              0.0107161,
              0,
              0.136308,
              0.930831,
              0.0106309,
              0,
              0.149639,
              0.920648,
              0.0104083,
              0,
              0.163485,
              0.910205,
              0.0102312,
              0,
              0.177843,
              0.898445,
              0.0100051,
              0,
              0.192707,
              0.885986,
              0.00971928,
              0,
              0.208077,
              0.872204,
              0.00940747,
              0,
              0.22395,
              0.858436,
              0.0091085,
              0,
              0.240326,
              0.843454,
              0.00876595,
              0,
              0.257208,
              0.827437,
              0.00839794,
              0,
              0.274596,
              0.811488,
              0.00803692,
              0,
              0.292496,
              0.796039,
              0.00767352,
              0,
              0.310911,
              0.781083,
              0.0073097,
              0,
              0.329849,
              0.767642,
              0.00694032,
              0,
              0.349316,
              0.753901,
              0.00657476,
              0,
              0.369323,
              0.740131,
              0.00622699,
              0,
              0.38988,
              0.725845,
              0.0058838,
              0,
              0.410999,
              0.710991,
              0.00555586,
              0,
              0.432696,
              0.696002,
              0.00523089,
              0,
              0.454987,
              0.680461,
              0.00492494,
              0,
              0.47789,
              0.664875,
              0.00463464,
              0,
              0.501426,
              0.649273,
              0.00435422,
              0,
              0.52562,
              0.63302,
              0.0040875,
              0,
              0.550498,
              0.61705,
              0.00384075,
              0,
              0.576089,
              0.601154,
              0.00359557,
              0,
              0.602427,
              0.586008,
              0.00337636,
              0,
              0.629544,
              0.570699,
              0.00316019,
              0,
              0.657479,
              0.555166,
              0.00296033,
              0,
              0.686264,
              0.539645,
              0.00277552,
              0,
              0.715924,
              0.524159,
              0.00259499,
              0,
              0.746459,
              0.508682,
              0.00243257,
              0,
              0.777789,
              0.493163,
              0.00227851,
              0,
              0.809524,
              0.478004,
              0.00213083,
              0,
              0.84127,
              0.46347,
              0.00199502,
              0,
              0.873016,
              0.448778,
              0.00186967,
              0,
              0.904762,
              0.434105,
              0.00174732,
              0,
              0.936508,
              0.419576,
              0.00163861,
              0,
              0.968254,
              0.405541,
              0.00153341,
              0,
              1,
              1,
              0.0106462,
              0,
              0,
              1,
              0.0106462,
              0,
              0,
              0.999999,
              0.010647,
              0,
              0,
              0.999995,
              0.0106502,
              0,
              0,
              0.999985,
              0.0106589,
              0,
              0,
              0.999964,
              0.0106773,
              0,
              0,
              0.999925,
              0.0107106,
              0,
              0,
              0.999861,
              0.0107655,
              0,
              712986e-10,
              0.999763,
              0.0108497,
              0,
              743959e-9,
              0.999616,
              0.0109716,
              0,
              0.00227361,
              0.999408,
              0.0111408,
              0,
              0.0046983,
              0.999112,
              0.0113659,
              0,
              0.00800158,
              0.998637,
              0.0116475,
              0,
              0.0121493,
              0.996223,
              0.0117231,
              0,
              0.0171023,
              0.994006,
              0.0118064,
              0,
              0.0228218,
              0.992444,
              0.0120254,
              0,
              0.0292711,
              0.991028,
              0.0123314,
              0,
              0.036417,
              0.98803,
              0.0124954,
              0,
              0.0442295,
              0.984816,
              0.0126538,
              0,
              0.0526815,
              0.981399,
              0.0128537,
              0,
              0.0617492,
              0.977085,
              0.0129694,
              0,
              0.0714114,
              0.972154,
              0.013091,
              0,
              0.0816495,
              0.966617,
              0.0131166,
              0,
              0.0924472,
              0.960628,
              0.0131583,
              0,
              0.10379,
              0.953295,
              0.0131094,
              0,
              0.115665,
              0.94575,
              0.0129966,
              0,
              0.128062,
              0.937654,
              0.0128796,
              0,
              0.140972,
              0.927716,
              0.0126477,
              0,
              0.154387,
              0.917932,
              0.0123889,
              0,
              0.168301,
              0.907719,
              0.012131,
              0,
              0.182709,
              0.89584,
              0.0118013,
              0,
              0.197608,
              0.883526,
              0.0114145,
              0,
              0.212994,
              0.870301,
              0.0110075,
              0,
              0.228867,
              0.856272,
              0.0106019,
              0,
              0.245227,
              0.842251,
              0.0101938,
              0,
              0.262074,
              0.826466,
              0.00973254,
              0,
              0.279412,
              0.810859,
              0.0092846,
              0,
              0.297244,
              0.795051,
              0.00883304,
              0,
              0.315575,
              0.780053,
              0.00840272,
              0,
              0.334412,
              0.76575,
              0.00796438,
              0,
              0.35376,
              0.752298,
              0.00752526,
              0,
              0.373631,
              0.739153,
              0.00711486,
              0,
              0.394034,
              0.725514,
              0.00670361,
              0,
              0.414983,
              0.711473,
              0.00632656,
              0,
              0.436491,
              0.696936,
              0.00595206,
              0,
              0.458575,
              0.682126,
              0.00559191,
              0,
              0.481253,
              0.667027,
              0.00525362,
              0,
              0.504547,
              0.651875,
              0.00493805,
              0,
              0.528481,
              0.636463,
              0.00462848,
              0,
              0.553081,
              0.620641,
              0.00433936,
              0,
              0.578377,
              0.604931,
              0.00407,
              0,
              0.604404,
              0.589549,
              0.00380864,
              0,
              0.631197,
              0.574712,
              0.00357049,
              0,
              0.658795,
              0.559775,
              0.00334466,
              0,
              0.687238,
              0.544514,
              0.00312505,
              0,
              0.716559,
              0.529555,
              0.00293199,
              0,
              0.746776,
              0.514402,
              0.00274204,
              0,
              0.777849,
              0.499302,
              0.00256647,
              0,
              0.809524,
              0.484114,
              0.00239901,
              0,
              0.84127,
              0.469308,
              0.00225148,
              0,
              0.873016,
              0.455133,
              0.00210178,
              0,
              0.904762,
              0.440939,
              0.0019727,
              0,
              0.936508,
              0.426627,
              0.00184382,
              0,
              0.968254,
              0.412509,
              0.00172548,
              0,
              1,
              1,
              0.013628,
              0,
              0,
              1,
              0.0136281,
              0,
              0,
              0.999999,
              0.0136289,
              0,
              0,
              0.999995,
              0.0136327,
              0,
              0,
              0.999983,
              0.0136427,
              0,
              0,
              0.99996,
              0.0136638,
              0,
              0,
              0.999917,
              0.0137022,
              0,
              0,
              0.999846,
              0.0137652,
              0,
              204597e-9,
              0.999736,
              0.0138615,
              0,
              0.00116837,
              0.999573,
              0.0140007,
              0,
              0.00303325,
              0.99934,
              0.0141927,
              0,
              0.00580613,
              0.999004,
              0.0144457,
              0,
              0.00945626,
              0.998407,
              0.0147489,
              0,
              0.0139421,
              0.995464,
              0.014731,
              0,
              0.0192202,
              0.993328,
              0.0148283,
              0,
              0.0252495,
              0.991799,
              0.0150797,
              0,
              0.0319921,
              0.990397,
              0.0154316,
              0,
              0.0394138,
              0.986835,
              0.0155005,
              0,
              0.0474843,
              0.983938,
              0.0157308,
              0,
              0.0561763,
              0.980154,
              0.0158753,
              0,
              0.0654661,
              0.975659,
              0.0159581,
              0,
              0.0753326,
              0.970171,
              0.0159832,
              0,
              0.0857571,
              0.964803,
              0.0160084,
              0,
              0.0967236,
              0.958366,
              0.0159484,
              0,
              0.108218,
              0.950613,
              0.0158001,
              0,
              0.120227,
              0.942874,
              0.0155845,
              0,
              0.132741,
              0.935005,
              0.0154292,
              0,
              0.145751,
              0.924991,
              0.0150742,
              0,
              0.159249,
              0.914814,
              0.0146757,
              0,
              0.17323,
              0.904743,
              0.0143097,
              0,
              0.187687,
              0.893216,
              0.0138695,
              0,
              0.202619,
              0.880769,
              0.0133706,
              0,
              0.218021,
              0.868136,
              0.0128606,
              0,
              0.233894,
              0.85469,
              0.0123403,
              0,
              0.250238,
              0.840593,
              0.0118091,
              0,
              0.267052,
              0.825808,
              0.011253,
              0,
              0.284341,
              0.81009,
              0.0107099,
              0,
              0.302106,
              0.79504,
              0.0101636,
              0,
              0.320354,
              0.779757,
              0.00964041,
              0,
              0.33909,
              0.764697,
              0.00911896,
              0,
              0.358322,
              0.750913,
              0.00859533,
              0,
              0.378059,
              0.738175,
              0.00811592,
              0,
              0.398311,
              0.725242,
              0.00764504,
              0,
              0.41909,
              0.711864,
              0.00718885,
              0,
              0.440412,
              0.698009,
              0.00675843,
              0,
              0.462292,
              0.683841,
              0.00634984,
              0,
              0.484748,
              0.669391,
              0.00595502,
              0,
              0.507802,
              0.654731,
              0.00558671,
              0,
              0.531477,
              0.639805,
              0.00523578,
              0,
              0.555802,
              0.624789,
              0.00490834,
              0,
              0.580805,
              0.609325,
              0.00459448,
              0,
              0.606522,
              0.593975,
              0.00430342,
              0,
              0.63299,
              0.578983,
              0.00403019,
              0,
              0.66025,
              0.564442,
              0.0037707,
              0,
              0.688346,
              0.549835,
              0.0035316,
              0,
              0.717319,
              0.535039,
              0.00330255,
              0,
              0.7472,
              0.520403,
              0.00308932,
              0,
              0.777982,
              0.505687,
              0.00289335,
              0,
              0.809524,
              0.490939,
              0.00270818,
              0,
              0.84127,
              0.476233,
              0.0025343,
              0,
              0.873016,
              0.461624,
              0.00237097,
              0,
              0.904762,
              0.447833,
              0.00222065,
              0,
              0.936508,
              0.433992,
              0.00207561,
              0,
              0.968254,
              0.420147,
              0.00194955,
              0,
              1,
              1,
              0.0173415,
              0,
              0,
              1,
              0.0173416,
              0,
              0,
              0.999999,
              0.0173426,
              0,
              0,
              0.999995,
              0.0173468,
              0,
              0,
              0.999983,
              0.0173582,
              0,
              0,
              0.999954,
              0.0173822,
              0,
              0,
              0.999908,
              0.0174258,
              0,
              669501e-11,
              0.999828,
              0.0174973,
              0,
              427399e-9,
              0.999705,
              0.0176063,
              0,
              0.00171019,
              0.999524,
              0.0177631,
              0,
              0.0039248,
              0.999263,
              0.0179781,
              0,
              0.00705382,
              0.998878,
              0.018258,
              0,
              0.0110552,
              0.998012,
              0.0185551,
              0,
              0.0158812,
              0.994614,
              0.0184264,
              0,
              0.0214852,
              0.993132,
              0.0186385,
              0,
              0.0278239,
              0.991563,
              0.0189067,
              0,
              0.0348585,
              0.989298,
              0.0191577,
              0,
              0.0425544,
              0.986036,
              0.0192522,
              0,
              0.050881,
              0.982558,
              0.0194063,
              0,
              0.059811,
              0.978531,
              0.019486,
              0,
              0.0693209,
              0.974198,
              0.0195847,
              0,
              0.0793895,
              0.968148,
              0.0194749,
              0,
              0.0899984,
              0.962565,
              0.0194277,
              0,
              0.101132,
              0.956041,
              0.0192991,
              0,
              0.112775,
              0.947749,
              0.0189893,
              0,
              0.124917,
              0.94018,
              0.018704,
              0,
              0.137547,
              0.93165,
              0.0183458,
              0,
              0.150655,
              0.921798,
              0.0178775,
              0,
              0.164236,
              0.911573,
              0.0173618,
              0,
              0.178281,
              0.901569,
              0.0168482,
              0,
              0.192788,
              0.890341,
              0.016265,
              0,
              0.207752,
              0.877835,
              0.0156199,
              0,
              0.223171,
              0.865472,
              0.0149516,
              0,
              0.239044,
              0.852905,
              0.0143274,
              0,
              0.255371,
              0.838906,
              0.0136643,
              0,
              0.272153,
              0.824888,
              0.0129903,
              0,
              0.289393,
              0.809977,
              0.0123218,
              0,
              0.307093,
              0.794697,
              0.0116572,
              0,
              0.325259,
              0.780028,
              0.0110307,
              0,
              0.343896,
              0.765124,
              0.0104236,
              0,
              0.363012,
              0.750411,
              0.0098219,
              0,
              0.382617,
              0.737264,
              0.00924397,
              0,
              0.402719,
              0.724799,
              0.00868719,
              0,
              0.423332,
              0.712253,
              0.00816476,
              0,
              0.444469,
              0.699267,
              0.00767262,
              0,
              0.466146,
              0.685618,
              0.00719746,
              0,
              0.488383,
              0.671736,
              0.00673916,
              0,
              0.511199,
              0.657777,
              0.00631937,
              0,
              0.534618,
              0.643497,
              0.00592411,
              0,
              0.558668,
              0.62889,
              0.00553928,
              0,
              0.58338,
              0.614299,
              0.0051934,
              0,
              0.608787,
              0.599197,
              0.00485985,
              0,
              0.634929,
              0.584175,
              0.00454357,
              0,
              0.661849,
              0.569541,
              0.00425787,
              0,
              0.689594,
              0.555193,
              0.00397905,
              0,
              0.718211,
              0.540947,
              0.00372364,
              0,
              0.747742,
              0.526593,
              0.00348599,
              0,
              0.778205,
              0.512335,
              0.00326103,
              0,
              0.80953,
              0.498017,
              0.00305137,
              0,
              0.84127,
              0.483609,
              0.00285485,
              0,
              0.873016,
              0.469368,
              0.00267472,
              0,
              0.904762,
              0.455037,
              0.00249945,
              0,
              0.936508,
              0.441493,
              0.00234792,
              0,
              0.968254,
              0.428147,
              0.00219936,
              0,
              1,
              1,
              0.0219422,
              0,
              0,
              1,
              0.0219423,
              0,
              0,
              0.999998,
              0.0219434,
              0,
              0,
              0.999993,
              0.0219481,
              0,
              0,
              0.999981,
              0.021961,
              0,
              0,
              0.999949,
              0.0219879,
              0,
              0,
              0.999896,
              0.0220367,
              0,
              593194e-10,
              0.999808,
              0.0221167,
              0,
              75364e-8,
              0.99967,
              0.0222383,
              0,
              0.00237884,
              0.999466,
              0.0224125,
              0,
              0.00495612,
              0.999174,
              0.0226495,
              0,
              0.00844887,
              0.998725,
              0.0229525,
              0,
              0.0128058,
              0.996979,
              0.0231123,
              0,
              0.0179742,
              0.994317,
              0.0230742,
              0,
              0.0239047,
              0.992781,
              0.0232895,
              0,
              0.0305526,
              0.991191,
              0.0235734,
              0,
              0.0378786,
              0.987787,
              0.0236152,
              0,
              0.0458475,
              0.985092,
              0.0237994,
              0,
              0.0544287,
              0.981121,
              0.0238553,
              0,
              0.0635952,
              0.976924,
              0.0238706,
              0,
              0.0733233,
              0.97218,
              0.0238704,
              0,
              0.0835922,
              0.965956,
              0.0236598,
              0,
              0.0943839,
              0.959998,
              0.0234735,
              0,
              0.105682,
              0.953245,
              0.0232277,
              0,
              0.117474,
              0.944445,
              0.0226973,
              0,
              0.129747,
              0.937087,
              0.0223527,
              0,
              0.142491,
              0.928341,
              0.0218144,
              0,
              0.155697,
              0.9184,
              0.0211516,
              0,
              0.169358,
              0.907959,
              0.0204553,
              0,
              0.183469,
              0.89808,
              0.0197673,
              0,
              0.198024,
              0.887047,
              0.0189915,
              0,
              0.21302,
              0.875221,
              0.0182082,
              0,
              0.228455,
              0.86269,
              0.0173584,
              0,
              0.244329,
              0.850735,
              0.0165718,
              0,
              0.260639,
              0.837545,
              0.0157524,
              0,
              0.277389,
              0.823639,
              0.0149482,
              0,
              0.29458,
              0.809699,
              0.0141431,
              0,
              0.312216,
              0.794797,
              0.0133527,
              0,
              0.3303,
              0.780578,
              0.0126193,
              0,
              0.34884,
              0.766019,
              0.0118914,
              0,
              0.367842,
              0.751447,
              0.0111839,
              0,
              0.387315,
              0.737275,
              0.010514,
              0,
              0.40727,
              0.724545,
              0.00987277,
              0,
              0.427717,
              0.712644,
              0.00926569,
              0,
              0.448671,
              0.700432,
              0.00869029,
              0,
              0.470149,
              0.687664,
              0.00814691,
              0,
              0.492167,
              0.674288,
              0.00763012,
              0,
              0.514746,
              0.660966,
              0.00714437,
              0,
              0.537911,
              0.647264,
              0.00668457,
              0,
              0.561688,
              0.633431,
              0.00626581,
              0,
              0.586108,
              0.619133,
              0.00585593,
              0,
              0.611206,
              0.604935,
              0.00548188,
              0,
              0.637022,
              0.590236,
              0.00513288,
              0,
              0.663599,
              0.575473,
              0.0047906,
              0,
              0.690989,
              0.561228,
              0.00448895,
              0,
              0.719242,
              0.547054,
              0.00420233,
              0,
              0.748411,
              0.533175,
              0.00392869,
              0,
              0.778531,
              0.519163,
              0.00367445,
              0,
              0.809583,
              0.505328,
              0.00344097,
              0,
              0.84127,
              0.491446,
              0.00322003,
              0,
              0.873016,
              0.477356,
              0.00301283,
              0,
              0.904762,
              0.46356,
              0.00282592,
              0,
              0.936508,
              0.449623,
              0.00264956,
              0,
              0.968254,
              0.436068,
              0.00246956,
              0,
              1,
              1,
              0.0276135,
              0,
              0,
              1,
              0.0276136,
              0,
              0,
              0.999998,
              0.0276148,
              0,
              0,
              0.999993,
              0.0276201,
              0,
              0,
              0.999976,
              0.0276342,
              0,
              0,
              0.999945,
              0.027664,
              0,
              0,
              0.999884,
              0.0277179,
              0,
              18679e-8,
              0.999784,
              0.027806,
              0,
              0.00119607,
              0.99963,
              0.0279394,
              0,
              0.00318407,
              0.999401,
              0.0281295,
              0,
              0.00613601,
              0.999066,
              0.0283858,
              0,
              0.00999963,
              0.998524,
              0.0287027,
              0,
              0.0147164,
              0.995702,
              0.0286256,
              0,
              0.0202295,
              0.993593,
              0.0286733,
              0,
              0.0264876,
              0.992067,
              0.0288989,
              0,
              0.0334452,
              0.990548,
              0.0292135,
              0,
              0.0410621,
              0.986775,
              0.0291296,
              0,
              0.0493032,
              0.984054,
              0.0293099,
              0,
              0.0581381,
              0.979481,
              0.0291881,
              0,
              0.0675397,
              0.975297,
              0.0291598,
              0,
              0.0774848,
              0.96981,
              0.028954,
              0,
              0.0879528,
              0.963524,
              0.028628,
              0,
              0.0989258,
              0.957398,
              0.0283135,
              0,
              0.110388,
              0.950088,
              0.0278469,
              0,
              0.122327,
              0.941538,
              0.0271798,
              0,
              0.134729,
              0.933332,
              0.0265388,
              0,
              0.147587,
              0.924392,
              0.0257776,
              0,
              0.160889,
              0.914581,
              0.024916,
              0,
              0.174631,
              0.904347,
              0.0240242,
              0,
              0.188806,
              0.894324,
              0.0231229,
              0,
              0.203409,
              0.883724,
              0.022153,
              0,
              0.218437,
              0.872207,
              0.0211355,
              0,
              0.233888,
              0.859927,
              0.0201048,
              0,
              0.249761,
              0.848373,
              0.0191263,
              0,
              0.266056,
              0.836023,
              0.0181306,
              0,
              0.282774,
              0.82289,
              0.0171718,
              0,
              0.299917,
              0.809324,
              0.0162196,
              0,
              0.317488,
              0.795361,
              0.0152622,
              0,
              0.335493,
              0.781253,
              0.01439,
              0,
              0.353936,
              0.767338,
              0.013533,
              0,
              0.372825,
              0.753156,
              0.0127244,
              0,
              0.392168,
              0.739122,
              0.0119454,
              0,
              0.411976,
              0.725358,
              0.0112054,
              0,
              0.432259,
              0.712949,
              0.010487,
              0,
              0.453032,
              0.701621,
              0.00984032,
              0,
              0.47431,
              0.689703,
              0.00921495,
              0,
              0.496111,
              0.677216,
              0.00862492,
              0,
              0.518456,
              0.664217,
              0.00806882,
              0,
              0.541367,
              0.65137,
              0.00755922,
              0,
              0.564872,
              0.638,
              0.00705705,
              0,
              0.589001,
              0.62453,
              0.00661266,
              0,
              0.613789,
              0.610601,
              0.00618432,
              0,
              0.639277,
              0.59676,
              0.00578033,
              0,
              0.66551,
              0.582433,
              0.00540927,
              0,
              0.692539,
              0.568026,
              0.00506104,
              0,
              0.720422,
              0.55414,
              0.0047353,
              0,
              0.749216,
              0.540178,
              0.00442889,
              0,
              0.778974,
              0.526513,
              0.00414363,
              0,
              0.809711,
              0.512954,
              0.00388237,
              0,
              0.84127,
              0.499403,
              0.00362875,
              0,
              0.873016,
              0.486026,
              0.00340827,
              0,
              0.904762,
              0.472345,
              0.00318598,
              0,
              0.936508,
              0.458828,
              0.00297635,
              0,
              0.968254,
              0.445379,
              0.00279447,
              0,
              1,
              1,
              0.0345716,
              0,
              0,
              1,
              0.0345717,
              0,
              0,
              0.999999,
              0.034573,
              0,
              0,
              0.999991,
              0.0345787,
              0,
              0,
              0.999974,
              0.0345941,
              0,
              0,
              0.999937,
              0.0346263,
              0,
              188589e-11,
              0.999869,
              0.0346847,
              0,
              409238e-9,
              0.999757,
              0.0347798,
              0,
              0.0017674,
              0.999582,
              0.0349233,
              0,
              0.00413658,
              0.999322,
              0.0351265,
              0,
              0.00747408,
              0.998939,
              0.0353967,
              0,
              0.0117157,
              0.998219,
              0.0357018,
              0,
              0.0167966,
              0.994974,
              0.0354726,
              0,
              0.0226572,
              0.993201,
              0.0355621,
              0,
              0.0292445,
              0.991573,
              0.0357641,
              0,
              0.0365123,
              0.989301,
              0.0359252,
              0,
              0.0444203,
              0.985712,
              0.0358017,
              0,
              0.0529334,
              0.982411,
              0.0358353,
              0,
              0.0620214,
              0.977827,
              0.035617,
              0,
              0.0716574,
              0.973278,
              0.0354398,
              0,
              0.0818186,
              0.967397,
              0.0350483,
              0,
              0.0924846,
              0.960696,
              0.0344795,
              0,
              0.103638,
              0.954349,
              0.0339861,
              0,
              0.115263,
              0.946066,
              0.0331323,
              0,
              0.127348,
              0.938012,
              0.032359,
              0,
              0.13988,
              0.929413,
              0.0314413,
              0,
              0.152849,
              0.920355,
              0.0304103,
              0,
              0.166248,
              0.910586,
              0.0292785,
              0,
              0.18007,
              0.900609,
              0.0281391,
              0,
              0.194308,
              0.890093,
              0.0269103,
              0,
              0.208958,
              0.880013,
              0.0257269,
              0,
              0.224018,
              0.869001,
              0.0244671,
              0,
              0.239485,
              0.85751,
              0.0232252,
              0,
              0.255359,
              0.84582,
              0.0220117,
              0,
              0.271638,
              0.834383,
              0.0208274,
              0,
              0.288324,
              0.822158,
              0.0196628,
              0,
              0.305419,
              0.809056,
              0.0185306,
              0,
              0.322927,
              0.795832,
              0.0174174,
              0,
              0.340851,
              0.782547,
              0.0163758,
              0,
              0.359199,
              0.7689,
              0.015391,
              0,
              0.377975,
              0.755526,
              0.0144488,
              0,
              0.397189,
              0.741681,
              0.0135372,
              0,
              0.416851,
              0.728178,
              0.0126957,
              0,
              0.436971,
              0.714642,
              0.0118812,
              0,
              0.457564,
              0.702756,
              0.0111165,
              0,
              0.478644,
              0.69175,
              0.0104145,
              0,
              0.500229,
              0.680159,
              0.00974439,
              0,
              0.522339,
              0.668073,
              0.00911926,
              0,
              0.544997,
              0.655405,
              0.00851393,
              0,
              0.56823,
              0.642921,
              0.00797637,
              0,
              0.592068,
              0.629993,
              0.00745119,
              0,
              0.616546,
              0.616828,
              0.00696972,
              0,
              0.641705,
              0.603305,
              0.00652425,
              0,
              0.66759,
              0.589833,
              0.00610188,
              0,
              0.694255,
              0.575945,
              0.00570834,
              0,
              0.72176,
              0.561745,
              0.00533384,
              0,
              0.750168,
              0.548277,
              0.00500001,
              0,
              0.779545,
              0.534467,
              0.00467582,
              0,
              0.809933,
              0.521032,
              0.00438092,
              0,
              0.841272,
              0.507877,
              0.00410348,
              0,
              0.873016,
              0.494654,
              0.00383618,
              0,
              0.904762,
              0.481592,
              0.00358699,
              0,
              0.936508,
              0.468509,
              0.00337281,
              0,
              0.968254,
              0.455293,
              0.00316196,
              0,
              1,
              1,
              0.0430698,
              0,
              0,
              1,
              0.0430699,
              0,
              0,
              0.999998,
              0.0430713,
              0,
              0,
              0.999991,
              0.0430773,
              0,
              0,
              0.99997,
              0.0430936,
              0,
              0,
              0.999928,
              0.0431277,
              0,
              406396e-10,
              0.999852,
              0.0431893,
              0,
              744376e-9,
              0.999724,
              0.0432895,
              0,
              0.0024806,
              0.999527,
              0.0434397,
              0,
              0.00524779,
              0.99923,
              0.0436507,
              0,
              0.00898164,
              0.998783,
              0.0439255,
              0,
              0.0136083,
              0.997507,
              0.0441104,
              0,
              0.0190582,
              0.994418,
              0.0438225,
              0,
              0.0252694,
              0.992864,
              0.0439396,
              0,
              0.0321879,
              0.991127,
              0.0440962,
              0,
              0.039767,
              0.987331,
              0.0438408,
              0,
              0.0479667,
              0.984819,
              0.0438991,
              0,
              0.056752,
              0.980384,
              0.0435906,
              0,
              0.0660929,
              0.975846,
              0.0432543,
              0,
              0.075963,
              0.970748,
              0.0428293,
              0,
              0.0863398,
              0.964303,
              0.042153,
              0,
              0.0972035,
              0.95772,
              0.0414111,
              0,
              0.108537,
              0.950747,
              0.0405893,
              0,
              0.120325,
              0.942533,
              0.0394887,
              0,
              0.132554,
              0.934045,
              0.0383544,
              0,
              0.145215,
              0.924942,
              0.037057,
              0,
              0.158296,
              0.915811,
              0.0356993,
              0,
              0.17179,
              0.90612,
              0.0342401,
              0,
              0.185691,
              0.896434,
              0.0328078,
              0,
              0.199993,
              0.886021,
              0.031288,
              0,
              0.214691,
              0.876081,
              0.0297776,
              0,
              0.229782,
              0.865608,
              0.0282334,
              0,
              0.245265,
              0.854924,
              0.026749,
              0,
              0.261138,
              0.843607,
              0.02526,
              0,
              0.277401,
              0.832456,
              0.0238214,
              0,
              0.294056,
              0.821342,
              0.0224682,
              0,
              0.311104,
              0.809303,
              0.0211297,
              0,
              0.328548,
              0.796468,
              0.0198387,
              0,
              0.346394,
              0.784046,
              0.0186227,
              0,
              0.364645,
              0.771262,
              0.0174561,
              0,
              0.38331,
              0.758118,
              0.0163806,
              0,
              0.402396,
              0.745075,
              0.0153287,
              0,
              0.421912,
              0.731926,
              0.0143647,
              0,
              0.44187,
              0.71863,
              0.0134363,
              0,
              0.462283,
              0.705414,
              0.0125603,
              0,
              0.483165,
              0.693792,
              0.0117508,
              0,
              0.504535,
              0.683108,
              0.0110016,
              0,
              0.52641,
              0.67183,
              0.0102757,
              0,
              0.548816,
              0.66015,
              0.00962044,
              0,
              0.571776,
              0.647907,
              0.00898031,
              0,
              0.595323,
              0.635734,
              0.00840811,
              0,
              0.619489,
              0.623208,
              0.00786211,
              0,
              0.644317,
              0.610438,
              0.00734953,
              0,
              0.669852,
              0.597345,
              0.00687688,
              0,
              0.696148,
              0.584138,
              0.00643469,
              0,
              0.723267,
              0.5707,
              0.00602236,
              0,
              0.75128,
              0.556966,
              0.0056324,
              0,
              0.780258,
              0.543607,
              0.00528277,
              0,
              0.810268,
              0.530213,
              0.00493999,
              0,
              0.841311,
              0.516912,
              0.00462265,
              0,
              0.873016,
              0.503916,
              0.0043307,
              0,
              0.904762,
              0.491146,
              0.00406858,
              0,
              0.936508,
              0.478439,
              0.00381436,
              0,
              0.968254,
              0.465834,
              0.00358003,
              0,
              1,
              1,
              0.0534039,
              0,
              0,
              1,
              0.053404,
              0,
              0,
              0.999998,
              0.0534055,
              0,
              0,
              0.999989,
              0.0534116,
              0,
              0,
              0.999968,
              0.0534283,
              0,
              0,
              0.999918,
              0.0534633,
              0,
              155895e-9,
              0.99983,
              0.0535262,
              0,
              0.00120914,
              0.999685,
              0.0536281,
              0,
              0.00334944,
              0.999461,
              0.0537799,
              0,
              0.00653077,
              0.999119,
              0.0539902,
              0,
              0.0106718,
              0.998582,
              0.0542524,
              0,
              0.0156907,
              0.995919,
              0.0540318,
              0,
              0.0215147,
              0.993735,
              0.0538914,
              0,
              0.0280801,
              0.992126,
              0.0539557,
              0,
              0.0353323,
              0.990266,
              0.0540401,
              0,
              0.0432247,
              0.986317,
              0.0536064,
              0,
              0.0517172,
              0.983213,
              0.0534425,
              0,
              0.0607754,
              0.978303,
              0.0528622,
              0,
              0.0703698,
              0.973665,
              0.0523363,
              0,
              0.0804742,
              0.968091,
              0.0516165,
              0,
              0.0910667,
              0.961026,
              0.0505434,
              0,
              0.102128,
              0.954333,
              0.049523,
              0,
              0.113641,
              0.946372,
              0.0481698,
              0,
              0.125591,
              0.938254,
              0.0467674,
              0,
              0.137965,
              0.929516,
              0.0452341,
              0,
              0.150754,
              0.920106,
              0.0435083,
              0,
              0.163947,
              0.910899,
              0.0417399,
              0,
              0.177537,
              0.901532,
              0.0399389,
              0,
              0.191516,
              0.891919,
              0.0380901,
              0,
              0.205881,
              0.882006,
              0.0362341,
              0,
              0.220626,
              0.871965,
              0.0343444,
              0,
              0.235749,
              0.862145,
              0.0324832,
              0,
              0.251248,
              0.852058,
              0.0306681,
              0,
              0.267121,
              0.84161,
              0.0289097,
              0,
              0.283368,
              0.830806,
              0.0272079,
              0,
              0.299992,
              0.820476,
              0.0256089,
              0,
              0.316992,
              0.809514,
              0.0240394,
              0,
              0.334374,
              0.797865,
              0.0225379,
              0,
              0.35214,
              0.785621,
              0.0211235,
              0,
              0.370296,
              0.773765,
              0.0197908,
              0,
              0.388849,
              0.761629,
              0.0185235,
              0,
              0.407807,
              0.748891,
              0.0173358,
              0,
              0.427178,
              0.736437,
              0.0162305,
              0,
              0.446974,
              0.723707,
              0.0151778,
              0,
              0.467207,
              0.710606,
              0.0141791,
              0,
              0.487892,
              0.698019,
              0.0132592,
              0,
              0.509046,
              0.686203,
              0.0123887,
              0,
              0.530687,
              0.675692,
              0.0115976,
              0,
              0.552839,
              0.664826,
              0.0108325,
              0,
              0.575527,
              0.65349,
              0.0101348,
              0,
              0.59878,
              0.641774,
              0.00947756,
              0,
              0.622634,
              0.629794,
              0.00886058,
              0,
              0.647128,
              0.617647,
              0.00828526,
              0,
              0.672308,
              0.60534,
              0.00775312,
              0,
              0.698231,
              0.592718,
              0.00726033,
              0,
              0.724958,
              0.579746,
              0.00679731,
              0,
              0.752563,
              0.566763,
              0.00636111,
              0,
              0.781127,
              0.553515,
              0.00595228,
              0,
              0.810733,
              0.540118,
              0.00556876,
              0,
              0.841426,
              0.527325,
              0.00523051,
              0,
              0.873016,
              0.514265,
              0.00490712,
              0,
              0.904762,
              0.501406,
              0.00460297,
              0,
              0.936508,
              0.488922,
              0.00431247,
              0,
              0.968254,
              0.476541,
              0.0040472,
              0,
              1,
              1,
              0.0659184,
              0,
              0,
              1,
              0.0659185,
              0,
              0,
              0.999998,
              0.06592,
              0,
              0,
              0.999988,
              0.0659259,
              0,
              0,
              0.999963,
              0.0659423,
              0,
              0,
              0.999907,
              0.0659764,
              0,
              374198e-9,
              0.999806,
              0.0660376,
              0,
              0.00182071,
              0.999639,
              0.0661361,
              0,
              0.0043894,
              0.999378,
              0.0662814,
              0,
              0.00800055,
              0.998985,
              0.0664779,
              0,
              0.0125594,
              0.998285,
              0.0666914,
              0,
              0.0179786,
              0.995071,
              0.0661989,
              0,
              0.0241822,
              0.993172,
              0.0660454,
              0,
              0.031106,
              0.991438,
              0.0660105,
              0,
              0.0386952,
              0.988428,
              0.0656875,
              0,
              0.0469032,
              0.985218,
              0.0652913,
              0,
              0.0556905,
              0.981128,
              0.0647107,
              0,
              0.065023,
              0.976015,
              0.0638491,
              0,
              0.0748717,
              0.97097,
              0.062993,
              0,
              0.0852112,
              0.964582,
              0.0617927,
              0,
              0.0960199,
              0.957383,
              0.0603626,
              0,
              0.107279,
              0.949969,
              0.0588128,
              0,
              0.118971,
              0.941843,
              0.0570274,
              0,
              0.131084,
              0.933624,
              0.0551885,
              0,
              0.143604,
              0.924543,
              0.053122,
              0,
              0.156521,
              0.914919,
              0.0508897,
              0,
              0.169825,
              0.905773,
              0.0486418,
              0,
              0.18351,
              0.896434,
              0.0463364,
              0,
              0.197569,
              0.887195,
              0.0440623,
              0,
              0.211997,
              0.877706,
              0.0417799,
              0,
              0.226789,
              0.867719,
              0.03945,
              0,
              0.241944,
              0.858587,
              0.037243,
              0,
              0.257458,
              0.849317,
              0.0350956,
              0,
              0.273331,
              0.839585,
              0.0329852,
              0,
              0.289563,
              0.829856,
              0.0310028,
              0,
              0.306154,
              0.819589,
              0.0290953,
              0,
              0.323108,
              0.809714,
              0.0272738,
              0,
              0.340426,
              0.79934,
              0.0255631,
              0,
              0.358113,
              0.788224,
              0.0239175,
              0,
              0.376175,
              0.776619,
              0.0223831,
              0,
              0.394616,
              0.76521,
              0.0209298,
              0,
              0.413445,
              0.753716,
              0.0195786,
              0,
              0.432671,
              0.741564,
              0.0183001,
              0,
              0.452305,
              0.729413,
              0.0171259,
              0,
              0.472358,
              0.717146,
              0.0159933,
              0,
              0.492845,
              0.70436,
              0.0149495,
              0,
              0.513783,
              0.69219,
              0.0139681,
              0,
              0.535189,
              0.680289,
              0.0130577,
              0,
              0.557087,
              0.669611,
              0.0122198,
              0,
              0.5795,
              0.659113,
              0.0114174,
              0,
              0.602459,
              0.648148,
              0.0106729,
              0,
              0.625997,
              0.636905,
              0.00998997,
              0,
              0.650154,
              0.625154,
              0.00934313,
              0,
              0.674976,
              0.613481,
              0.00874839,
              0,
              0.700518,
              0.60154,
              0.00818265,
              0,
              0.726845,
              0.58943,
              0.00766889,
              0,
              0.754032,
              0.576828,
              0.00717153,
              0,
              0.782167,
              0.564194,
              0.00672696,
              0,
              0.811344,
              0.551501,
              0.00630863,
              0,
              0.841644,
              0.538635,
              0.00592177,
              0,
              0.873016,
              0.525724,
              0.00554888,
              0,
              0.904762,
              0.513209,
              0.00520225,
              0,
              0.936508,
              0.500457,
              0.00488231,
              0,
              0.968254,
              0.48799,
              0.00457153,
              0,
              1,
              1,
              0.0810131,
              0,
              0,
              1,
              0.0810133,
              0,
              0,
              0.999997,
              0.0810145,
              0,
              0,
              0.999985,
              0.08102,
              0,
              0,
              0.999956,
              0.0810347,
              0,
              195026e-10,
              0.999893,
              0.0810656,
              0,
              719316e-9,
              0.999777,
              0.0811205,
              0,
              0.00259774,
              0.999583,
              0.081208,
              0,
              0.00561807,
              0.999281,
              0.0813343,
              0,
              0.00967472,
              0.998813,
              0.0814969,
              0,
              0.0146627,
              0.997597,
              0.0815217,
              0,
              0.0204902,
              0.994379,
              0.0808502,
              0,
              0.0270802,
              0.992744,
              0.0806792,
              0,
              0.0343674,
              0.990745,
              0.0804589,
              0,
              0.0422974,
              0.986646,
              0.0796107,
              0,
              0.0508242,
              0.983611,
              0.0790913,
              0,
              0.0599087,
              0.978869,
              0.0780746,
              0,
              0.0695175,
              0.973475,
              0.0768218,
              0,
              0.0796223,
              0.967845,
              0.0754926,
              0,
              0.0901983,
              0.960778,
              0.0737063,
              0,
              0.101224,
              0.953333,
              0.0718052,
              0,
              0.112682,
              0.945274,
              0.0695946,
              0,
              0.124555,
              0.936955,
              0.0672492,
              0,
              0.136831,
              0.928319,
              0.0647732,
              0,
              0.149496,
              0.919075,
              0.0620947,
              0,
              0.162542,
              0.909114,
              0.0591816,
              0,
              0.175958,
              0.900137,
              0.0563917,
              0,
              0.189739,
              0.891069,
              0.0535392,
              0,
              0.203877,
              0.882262,
              0.0507642,
              0,
              0.218368,
              0.873232,
              0.0479793,
              0,
              0.233208,
              0.864042,
              0.045226,
              0,
              0.248393,
              0.855002,
              0.0425413,
              0,
              0.263923,
              0.846569,
              0.0400126,
              0,
              0.279796,
              0.837714,
              0.0375269,
              0,
              0.296012,
              0.828918,
              0.0352027,
              0,
              0.312573,
              0.819783,
              0.0330011,
              0,
              0.329479,
              0.810129,
              0.0308908,
              0,
              0.346734,
              0.800866,
              0.0289112,
              0,
              0.364342,
              0.79093,
              0.0270255,
              0,
              0.382307,
              0.780593,
              0.0252758,
              0,
              0.400637,
              0.769511,
              0.0236178,
              0,
              0.419337,
              0.758558,
              0.0220652,
              0,
              0.438418,
              0.747632,
              0.0206289,
              0,
              0.457889,
              0.736146,
              0.0192873,
              0,
              0.477761,
              0.724093,
              0.0180333,
              0,
              0.49805,
              0.71234,
              0.0168264,
              0,
              0.51877,
              0.700201,
              0.015746,
              0,
              0.53994,
              0.687949,
              0.0147027,
              0,
              0.561581,
              0.676163,
              0.0137512,
              0,
              0.583718,
              0.665001,
              0.0128655,
              0,
              0.60638,
              0.65472,
              0.0120366,
              0,
              0.629599,
              0.644213,
              0.0112604,
              0,
              0.653415,
              0.633382,
              0.0105413,
              0,
              0.677874,
              0.62212,
              0.00986498,
              0,
              0.70303,
              0.610631,
              0.00923308,
              0,
              0.728948,
              0.599078,
              0.00864206,
              0,
              0.755706,
              0.587519,
              0.00811784,
              0,
              0.783396,
              0.575505,
              0.00761237,
              0,
              0.812121,
              0.563148,
              0.00713949,
              0,
              0.841989,
              0.550828,
              0.00668379,
              0,
              0.873035,
              0.538458,
              0.00627715,
              0,
              0.904762,
              0.525905,
              0.00588336,
              0,
              0.936508,
              0.513517,
              0.00552687,
              0,
              0.968254,
              0.501395,
              0.00519681,
              0,
              1,
              1,
              0.0991506,
              0,
              0,
              1,
              0.0991504,
              0,
              0,
              0.999996,
              0.0991515,
              0,
              0,
              0.999984,
              0.0991558,
              0,
              0,
              0.999947,
              0.0991672,
              0,
              114389e-9,
              0.999874,
              0.0991912,
              0,
              0.00121503,
              0.999739,
              0.0992331,
              0,
              0.00356108,
              0.999514,
              0.0992983,
              0,
              0.00705578,
              0.999159,
              0.0993877,
              0,
              0.011574,
              0.998586,
              0.0994837,
              0,
              0.017003,
              0.995731,
              0.0988425,
              0,
              0.0232484,
              0.993384,
              0.098276,
              0,
              0.0302318,
              0.991615,
              0.0979269,
              0,
              0.0378884,
              0.989029,
              0.0973432,
              0,
              0.0461641,
              0.985373,
              0.0963539,
              0,
              0.0550136,
              0.981278,
              0.0952306,
              0,
              0.0643988,
              0.975777,
              0.0936233,
              0,
              0.0742868,
              0.970526,
              0.0920219,
              0,
              0.0846501,
              0.963755,
              0.0898912,
              0,
              0.0954644,
              0.956676,
              0.0876064,
              0,
              0.106709,
              0.948099,
              0.0847751,
              0,
              0.118367,
              0.939718,
              0.0818638,
              0,
              0.130423,
              0.931305,
              0.078857,
              0,
              0.142862,
              0.922342,
              0.0756127,
              0,
              0.155674,
              0.912842,
              0.0721473,
              0,
              0.168849,
              0.903304,
              0.0686195,
              0,
              0.182378,
              0.89411,
              0.0650589,
              0,
              0.196255,
              0.885512,
              0.0616022,
              0,
              0.210473,
              0.877193,
              0.0582434,
              0,
              0.225027,
              0.86877,
              0.0548979,
              0,
              0.239915,
              0.860267,
              0.0516095,
              0,
              0.255132,
              0.851915,
              0.048468,
              0,
              0.270678,
              0.843912,
              0.0454447,
              0,
              0.286551,
              0.83604,
              0.0425612,
              0,
              0.302751,
              0.828245,
              0.0398752,
              0,
              0.31928,
              0.820159,
              0.0373198,
              0,
              0.336138,
              0.81167,
              0.034916,
              0,
              0.35333,
              0.802659,
              0.0326402,
              0,
              0.370858,
              0.793921,
              0.0304901,
              0,
              0.388728,
              0.784713,
              0.0284857,
              0,
              0.406944,
              0.774946,
              0.0266186,
              0,
              0.425515,
              0.76448,
              0.0248593,
              0,
              0.444449,
              0.753793,
              0.0232114,
              0,
              0.463756,
              0.743506,
              0.0217039,
              0,
              0.483447,
              0.732555,
              0.0202841,
              0,
              0.503535,
              0.720965,
              0.0189648,
              0,
              0.524036,
              0.709422,
              0.0177189,
              0,
              0.544968,
              0.697756,
              0.0165626,
              0,
              0.56635,
              0.685565,
              0.015483,
              0,
              0.588208,
              0.673987,
              0.0144892,
              0,
              0.610569,
              0.66244,
              0.0135607,
              0,
              0.633466,
              0.651675,
              0.0126956,
              0,
              0.656936,
              0.641598,
              0.0118788,
              0,
              0.681025,
              0.63121,
              0.0111261,
              0,
              0.705788,
              0.620514,
              0.010437,
              0,
              0.731289,
              0.609366,
              0.00978747,
              0,
              0.757606,
              0.598137,
              0.00917257,
              0,
              0.784834,
              0.586966,
              0.00859778,
              0,
              0.813085,
              0.575549,
              0.00806803,
              0,
              0.842485,
              0.563797,
              0.00757294,
              0,
              0.87313,
              0.551758,
              0.00710592,
              0,
              0.904762,
              0.539894,
              0.0066841,
              0,
              0.936508,
              0.527901,
              0.00627901,
              0,
              0.968254,
              0.515819,
              0.00590506,
              0,
              1,
              1,
              0.120864,
              0,
              0,
              1,
              0.120864,
              0,
              0,
              0.999996,
              0.120864,
              0,
              0,
              0.99998,
              0.120867,
              0,
              0,
              0.99994,
              0.120872,
              0,
              323781e-9,
              0.999852,
              0.120884,
              0,
              0.00188693,
              0.999693,
              0.120903,
              0,
              0.00473489,
              0.999426,
              0.120929,
              0,
              0.00872704,
              0.999002,
              0.120955,
              0,
              0.0137237,
              0.998235,
              0.120918,
              0,
              0.0196068,
              0.994608,
              0.119764,
              0,
              0.0262803,
              0.992997,
              0.119265,
              0,
              0.0336657,
              0.990968,
              0.11863,
              0,
              0.0416987,
              0.987002,
              0.117261,
              0,
              0.0503261,
              0.983524,
              0.116009,
              0,
              0.0595035,
              0.97875,
              0.114252,
              0,
              0.0691935,
              0.972652,
              0.11193,
              0,
              0.0793645,
              0.966613,
              0.109555,
              0,
              0.0899894,
              0.959275,
              0.106612,
              0,
              0.101045,
              0.951272,
              0.103375,
              0,
              0.112512,
              0.942323,
              0.0996594,
              0,
              0.124372,
              0.933679,
              0.0958841,
              0,
              0.136611,
              0.924822,
              0.0919265,
              0,
              0.149216,
              0.915742,
              0.0878061,
              0,
              0.162176,
              0.906348,
              0.0834894,
              0,
              0.175482,
              0.896883,
              0.079085,
              0,
              0.189125,
              0.88774,
              0.0746745,
              0,
              0.203098,
              0.87986,
              0.0705773,
              0,
              0.217396,
              0.871998,
              0.0665005,
              0,
              0.232015,
              0.864325,
              0.0625413,
              0,
              0.24695,
              0.856685,
              0.0586781,
              0,
              0.2622,
              0.84925,
              0.0550063,
              0,
              0.277761,
              0.841719,
              0.0514727,
              0,
              0.293634,
              0.834755,
              0.0481398,
              0,
              0.309819,
              0.827853,
              0.0450172,
              0,
              0.326315,
              0.820888,
              0.0420969,
              0,
              0.343126,
              0.813616,
              0.0393702,
              0,
              0.360254,
              0.805767,
              0.0367771,
              0,
              0.377701,
              0.797338,
              0.0343274,
              0,
              0.395474,
              0.789122,
              0.0320529,
              0,
              0.413577,
              0.780601,
              0.0299485,
              0,
              0.432018,
              0.771424,
              0.0279812,
              0,
              0.450804,
              0.761502,
              0.0261054,
              0,
              0.469944,
              0.751166,
              0.0243942,
              0,
              0.489451,
              0.741276,
              0.0228087,
              0,
              0.509337,
              0.730898,
              0.0213265,
              0,
              0.529617,
              0.719878,
              0.0199307,
              0,
              0.550307,
              0.708379,
              0.0186574,
              0,
              0.571428,
              0.697165,
              0.0174446,
              0,
              0.593003,
              0.685554,
              0.0163144,
              0,
              0.615059,
              0.673631,
              0.015276,
              0,
              0.637628,
              0.662385,
              0.0143003,
              0,
              0.660746,
              0.651059,
              0.0134112,
              0,
              0.68446,
              0.640451,
              0.0125794,
              0,
              0.70882,
              0.630536,
              0.011793,
              0,
              0.733893,
              0.620316,
              0.0110547,
              0,
              0.759756,
              0.609722,
              0.0103668,
              0,
              0.786505,
              0.598804,
              0.00973009,
              0,
              0.814259,
              0.587871,
              0.00912812,
              0,
              0.843157,
              0.577121,
              0.00858916,
              0,
              0.87334,
              0.566019,
              0.00807333,
              0,
              0.904762,
              0.554664,
              0.00759687,
              0,
              0.936508,
              0.543101,
              0.00714759,
              0,
              0.968254,
              0.531558,
              0.00673418,
              0,
              1,
              1,
              0.146767,
              0,
              0,
              1,
              0.146767,
              0,
              0,
              0.999997,
              0.146767,
              0,
              0,
              0.999977,
              0.146765,
              0,
              320658e-11,
              0.999929,
              0.146762,
              0,
              682576e-9,
              0.999823,
              0.146753,
              0,
              0.00276402,
              0.999633,
              0.146735,
              0,
              0.00614771,
              0.999314,
              0.146699,
              0,
              0.0106613,
              0.998796,
              0.14662,
              0,
              0.0161546,
              0.997124,
              0.146107,
              0,
              0.0225063,
              0.994062,
              0.144857,
              0,
              0.0296198,
              0.992154,
              0.144011,
              0,
              0.037417,
              0.989186,
              0.142712,
              0,
              0.0458348,
              0.985279,
              0.140926,
              0,
              0.0548211,
              0.980826,
              0.13885,
              0,
              0.0643326,
              0.975056,
              0.136168,
              0,
              0.074333,
              0.969005,
              0.133217,
              0,
              0.0847917,
              0.961554,
              0.12959,
              0,
              0.0956828,
              0.954206,
              0.125886,
              0,
              0.106984,
              0.945046,
              0.121335,
              0,
              0.118675,
              0.935678,
              0.116492,
              0,
              0.130741,
              0.926748,
              0.111635,
              0,
              0.143166,
              0.917764,
              0.106625,
              0,
              0.155939,
              0.908358,
              0.101325,
              0,
              0.169049,
              0.899219,
              0.0960249,
              0,
              0.182487,
              0.890089,
              0.0906527,
              0,
              0.196245,
              0.881488,
              0.0853905,
              0,
              0.210317,
              0.874031,
              0.0804177,
              0,
              0.224697,
              0.866932,
              0.0756005,
              0,
              0.23938,
              0.859976,
              0.0709019,
              0,
              0.254364,
              0.853375,
              0.0664391,
              0,
              0.269646,
              0.846971,
              0.0622012,
              0,
              0.285223,
              0.840483,
              0.058129,
              0,
              0.301096,
              0.833969,
              0.0542762,
              0,
              0.317265,
              0.82806,
              0.0507042,
              0,
              0.333729,
              0.822128,
              0.047368,
              0,
              0.350491,
              0.815989,
              0.044272,
              0,
              0.367554,
              0.809336,
              0.0413444,
              0,
              0.38492,
              0.802177,
              0.038601,
              0,
              0.402594,
              0.79441,
              0.0360227,
              0,
              0.420582,
              0.786573,
              0.0336383,
              0,
              0.438891,
              0.778619,
              0.0314321,
              0,
              0.457527,
              0.77,
              0.029362,
              0,
              0.476499,
              0.760698,
              0.0274102,
              0,
              0.49582,
              0.750932,
              0.0256146,
              0,
              0.5155,
              0.740993,
              0.023974,
              0,
              0.535555,
              0.731159,
              0.0224182,
              0,
              0.556,
              0.720836,
              0.0209889,
              0,
              0.576855,
              0.709913,
              0.0196411,
              0,
              0.598143,
              0.698415,
              0.0183824,
              0,
              0.619888,
              0.68745,
              0.0172222,
              0,
              0.642123,
              0.676154,
              0.0161509,
              0,
              0.664883,
              0.664383,
              0.0151397,
              0,
              0.688211,
              0.6533,
              0.0141873,
              0,
              0.71216,
              0.642072,
              0.0133105,
              0,
              0.736792,
              0.631412,
              0.0124932,
              0,
              0.762186,
              0.621622,
              0.0117408,
              0,
              0.788439,
              0.611681,
              0.0110358,
              0,
              0.815672,
              0.60142,
              0.0103775,
              0,
              0.844034,
              0.59083,
              0.00975623,
              0,
              0.873699,
              0.580254,
              0.00918084,
              0,
              0.904765,
              0.569841,
              0.00864721,
              0,
              0.936508,
              0.559224,
              0.00815731,
              0,
              0.968254,
              0.548315,
              0.00767924,
              0,
              1,
              1,
              0.177563,
              0,
              0,
              1,
              0.177563,
              0,
              0,
              0.999994,
              0.177562,
              0,
              0,
              0.999972,
              0.177555,
              0,
              664171e-10,
              0.999914,
              0.177536,
              0,
              0.0012276,
              0.999787,
              0.177496,
              0,
              0.00388025,
              0.999556,
              0.17742,
              0,
              0.00783463,
              0.999165,
              0.177285,
              0,
              0.0128953,
              0.9985,
              0.177037,
              0,
              0.0189053,
              0.995388,
              0.175634,
              0,
              0.025742,
              0.993102,
              0.174375,
              0,
              0.033309,
              0.990992,
              0.173121,
              0,
              0.0415298,
              0.986932,
              0.170896,
              0,
              0.0503425,
              0.982786,
              0.16847,
              0,
              0.0596964,
              0.977592,
              0.165455,
              0,
              0.0695498,
              0.971075,
              0.161676,
              0,
              0.0798676,
              0.963967,
              0.157458,
              0,
              0.0906201,
              0.956397,
              0.152836,
              0,
              0.101783,
              0.947489,
              0.147467,
              0,
              0.113333,
              0.937564,
              0.14145,
              0,
              0.125254,
              0.928182,
              0.135383,
              0,
              0.137529,
              0.919027,
              0.129212,
              0,
              0.150144,
              0.909618,
              0.12276,
              0,
              0.163088,
              0.900492,
              0.116273,
              0,
              0.176351,
              0.891671,
              0.1098,
              0,
              0.189924,
              0.883146,
              0.103362,
              0,
              0.203799,
              0.875151,
              0.0970799,
              0,
              0.21797,
              0.868338,
              0.0911732,
              0,
              0.232433,
              0.862033,
              0.0854966,
              0,
              0.247182,
              0.856107,
              0.0800691,
              0,
              0.262216,
              0.850644,
              0.0749618,
              0,
              0.27753,
              0.845261,
              0.070079,
              0,
              0.293124,
              0.839885,
              0.0654321,
              0,
              0.308997,
              0.834609,
              0.0610975,
              0,
              0.325149,
              0.829083,
              0.0569741,
              0,
              0.341581,
              0.82404,
              0.0531736,
              0,
              0.358294,
              0.818968,
              0.049665,
              0,
              0.37529,
              0.813496,
              0.0463856,
              0,
              0.392573,
              0.807533,
              0.0433217,
              0,
              0.410148,
              0.80099,
              0.0404402,
              0,
              0.428019,
              0.793891,
              0.0377578,
              0,
              0.446192,
              0.786281,
              0.0352616,
              0,
              0.464676,
              0.778773,
              0.0329577,
              0,
              0.483478,
              0.770737,
              0.030808,
              0,
              0.502608,
              0.762094,
              0.0287964,
              0,
              0.522079,
              0.752898,
              0.0269254,
              0,
              0.541905,
              0.743306,
              0.0251926,
              0,
              0.5621,
              0.733416,
              0.023595,
              0,
              0.582684,
              0.723742,
              0.0221155,
              0,
              0.603677,
              0.713542,
              0.0207435,
              0,
              0.625106,
              0.702755,
              0.019434,
              0,
              0.646998,
              0.691484,
              0.0182046,
              0,
              0.66939,
              0.680531,
              0.0170771,
              0,
              0.692324,
              0.66953,
              0.0160339,
              0,
              0.715849,
              0.658126,
              0.0150677,
              0,
              0.740028,
              0.646933,
              0.0141551,
              0,
              0.764937,
              0.636107,
              0.0133179,
              0,
              0.790673,
              0.625271,
              0.0125284,
              0,
              0.817358,
              0.615225,
              0.0117937,
              0,
              0.84515,
              0.605678,
              0.0111181,
              0,
              0.874244,
              0.59583,
              0.0104759,
              0,
              0.904828,
              0.585704,
              0.00986672,
              0,
              0.936508,
              0.575413,
              0.00929712,
              0,
              0.968254,
              0.565373,
              0.00876713,
              0,
              1,
              1,
              0.214058,
              0,
              0,
              0.999999,
              0.214058,
              0,
              0,
              0.999994,
              0.214055,
              0,
              0,
              0.999966,
              0.214039,
              0,
              259642e-9,
              0.999893,
              0.213998,
              0,
              0.00200075,
              0.999737,
              0.21391,
              0,
              0.00527775,
              0.999449,
              0.213745,
              0,
              0.00983959,
              0.99896,
              0.213458,
              0,
              0.0154755,
              0.9979,
              0.212855,
              0,
              0.0220249,
              0.994278,
              0.210779,
              0,
              0.0293654,
              0.992254,
              0.20926,
              0,
              0.0374021,
              0.98881,
              0.206908,
              0,
              0.0460604,
              0.984715,
              0.204009,
              0,
              0.0552802,
              0.979738,
              0.200471,
              0,
              0.0650127,
              0.972884,
              0.195813,
              0,
              0.0752175,
              0.965996,
              0.190856,
              0,
              0.0858612,
              0.957974,
              0.185077,
              0,
              0.0969155,
              0.949155,
              0.17868,
              0,
              0.108356,
              0.939288,
              0.171513,
              0,
              0.120163,
              0.928996,
              0.163838,
              0,
              0.132319,
              0.919563,
              0.156246,
              0,
              0.144808,
              0.910004,
              0.148359,
              0,
              0.157618,
              0.900791,
              0.140417,
              0,
              0.170737,
              0.892135,
              0.132569,
              0,
              0.184155,
              0.883803,
              0.124741,
              0,
              0.197866,
              0.876034,
              0.117091,
              0,
              0.211861,
              0.869219,
              0.109835,
              0,
              0.226134,
              0.863062,
              0.102859,
              0,
              0.240682,
              0.857795,
              0.0962928,
              0,
              0.255499,
              0.853009,
              0.0900725,
              0,
              0.270583,
              0.848603,
              0.0842101,
              0,
              0.285931,
              0.844335,
              0.0786527,
              0,
              0.301542,
              0.840208,
              0.0734397,
              0,
              0.317415,
              0.836035,
              0.0685334,
              0,
              0.33355,
              0.83172,
              0.0639275,
              0,
              0.349948,
              0.827135,
              0.0595909,
              0,
              0.36661,
              0.822797,
              0.0556204,
              0,
              0.383539,
              0.818387,
              0.0519394,
              0,
              0.400738,
              0.813565,
              0.0485317,
              0,
              0.41821,
              0.808142,
              0.0453138,
              0,
              0.435961,
              0.802212,
              0.0423354,
              0,
              0.453997,
              0.79573,
              0.0395553,
              0,
              0.472324,
              0.788741,
              0.036988,
              0,
              0.490951,
              0.781093,
              0.0345688,
              0,
              0.509887,
              0.773597,
              0.0323297,
              0,
              0.529144,
              0.765622,
              0.0302719,
              0,
              0.548735,
              0.757083,
              0.0283477,
              0,
              0.568674,
              0.747992,
              0.0265562,
              0,
              0.588979,
              0.738591,
              0.0248844,
              0,
              0.609671,
              0.728719,
              0.0233342,
              0,
              0.630773,
              0.719146,
              0.0219081,
              0,
              0.652314,
              0.709165,
              0.0205711,
              0,
              0.674328,
              0.69875,
              0.0193248,
              0,
              0.696854,
              0.687884,
              0.0181582,
              0,
              0.719942,
              0.676818,
              0.0170746,
              0,
              0.743651,
              0.666247,
              0.0160718,
              0,
              0.768057,
              0.655284,
              0.0151262,
              0,
              0.793253,
              0.64401,
              0.0142561,
              0,
              0.819363,
              0.633353,
              0.0134327,
              0,
              0.846547,
              0.622674,
              0.012653,
              0,
              0.875017,
              0.612265,
              0.0119354,
              0,
              0.905021,
              0.602455,
              0.0112533,
              0,
              0.936508,
              0.593147,
              0.0106234,
              0,
              0.968254,
              0.583592,
              0.0100213,
              0,
              1,
              1,
              0.25717,
              0,
              0,
              1,
              0.25717,
              0,
              0,
              0.999992,
              0.257164,
              0,
              0,
              0.999958,
              0.257135,
              0,
              641715e-9,
              0.999864,
              0.25706,
              0,
              0.00305314,
              0.999666,
              0.256897,
              0,
              0.00700975,
              0.999302,
              0.256596,
              0,
              0.0122194,
              0.998663,
              0.25607,
              0,
              0.0184622,
              0.995607,
              0.254123,
              0,
              0.0255773,
              0.993094,
              0.252081,
              0,
              0.0334439,
              0.9907,
              0.249867,
              0,
              0.0419696,
              0.98594,
              0.246118,
              0,
              0.0510823,
              0.981214,
              0.242049,
              0,
              0.0607242,
              0.974966,
              0.236869,
              0,
              0.0708486,
              0.967589,
              0.230724,
              0,
              0.081417,
              0.95915,
              0.223635,
              0,
              0.0923974,
              0.950257,
              0.21596,
              0,
              0.103763,
              0.940165,
              0.207296,
              0,
              0.115491,
              0.929396,
              0.197901,
              0,
              0.127562,
              0.919288,
              0.188437,
              0,
              0.13996,
              0.909428,
              0.178762,
              0,
              0.15267,
              0.900105,
              0.169072,
              0,
              0.165679,
              0.891418,
              0.159478,
              0,
              0.178979,
              0.883347,
              0.15002,
              0,
              0.192558,
              0.875992,
              0.140813,
              0,
              0.20641,
              0.869466,
              0.13196,
              0,
              0.220529,
              0.863699,
              0.123501,
              0,
              0.234907,
              0.858553,
              0.115436,
              0,
              0.249542,
              0.854379,
              0.107901,
              0,
              0.264428,
              0.850894,
              0.10088,
              0,
              0.279564,
              0.847632,
              0.0942296,
              0,
              0.294947,
              0.844571,
              0.0879861,
              0,
              0.310575,
              0.84163,
              0.0821534,
              0,
              0.326448,
              0.838542,
              0.0766409,
              0,
              0.342566,
              0.835412,
              0.0715322,
              0,
              0.358929,
              0.831899,
              0.0666883,
              0,
              0.37554,
              0.828177,
              0.0622175,
              0,
              0.392399,
              0.82416,
              0.0580452,
              0,
              0.409511,
              0.820393,
              0.054267,
              0,
              0.426878,
              0.816068,
              0.0507172,
              0,
              0.444506,
              0.811201,
              0.0474041,
              0,
              0.4624,
              0.805785,
              0.0443174,
              0,
              0.480566,
              0.799878,
              0.0414562,
              0,
              0.499013,
              0.793469,
              0.0388147,
              0,
              0.517749,
              0.786473,
              0.0363453,
              0,
              0.536785,
              0.778874,
              0.0340225,
              0,
              0.556134,
              0.771277,
              0.0318599,
              0,
              0.575809,
              0.763426,
              0.0298859,
              0,
              0.595827,
              0.755044,
              0.0280357,
              0,
              0.616207,
              0.746161,
              0.0262979,
              0,
              0.636973,
              0.737124,
              0.0247295,
              0,
              0.65815,
              0.72761,
              0.0232514,
              0,
              0.679772,
              0.717822,
              0.0218755,
              0,
              0.701876,
              0.708279,
              0.0205942,
              0,
              0.724509,
              0.698333,
              0.0193947,
              0,
              0.74773,
              0.68802,
              0.0182717,
              0,
              0.771609,
              0.677321,
              0.0172044,
              0,
              0.79624,
              0.666504,
              0.0162122,
              0,
              0.821743,
              0.656184,
              0.0152924,
              0,
              0.84828,
              0.64556,
              0.0144326,
              0,
              0.876069,
              0.634636,
              0.0136157,
              0,
              0.905404,
              0.624124,
              0.0128612,
              0,
              0.936508,
              0.613914,
              0.0121435,
              0,
              0.968254,
              0.603589,
              0.0114887,
              0,
              1,
              1,
              0.307946,
              0,
              0,
              0.999999,
              0.307945,
              0,
              0,
              0.999988,
              0.307934,
              0,
              204479e-10,
              0.999944,
              0.307886,
              0,
              0.00127833,
              0.999824,
              0.307756,
              0,
              0.00445047,
              0.999565,
              0.30748,
              0,
              0.00914673,
              0.999085,
              0.306966,
              0,
              0.0150498,
              0.998103,
              0.306004,
              0,
              0.0219367,
              0.994249,
              0.303028,
              0,
              0.0296485,
              0.991807,
              0.300435,
              0,
              0.038068,
              0.987773,
              0.296554,
              0,
              0.0471062,
              0.982673,
              0.2916,
              0,
              0.0566942,
              0.976623,
              0.285641,
              0,
              0.0667768,
              0.968757,
              0.27815,
              0,
              0.0773099,
              0.959849,
              0.269529,
              0,
              0.088257,
              0.950663,
              0.260248,
              0,
              0.0995879,
              0.940129,
              0.249704,
              0,
              0.111277,
              0.92895,
              0.238291,
              0,
              0.123304,
              0.917996,
              0.226501,
              0,
              0.13565,
              0.907813,
              0.214669,
              0,
              0.148299,
              0.898305,
              0.202835,
              0,
              0.161237,
              0.889626,
              0.191158,
              0,
              0.174455,
              0.88175,
              0.179695,
              0,
              0.187941,
              0.874715,
              0.168548,
              0,
              0.201687,
              0.868746,
              0.15792,
              0,
              0.215687,
              0.863703,
              0.147807,
              0,
              0.229933,
              0.859315,
              0.138149,
              0,
              0.24442,
              0.855538,
              0.128993,
              0,
              0.259145,
              0.852428,
              0.120414,
              0,
              0.274103,
              0.850168,
              0.112498,
              0,
              0.289293,
              0.848132,
              0.105054,
              0,
              0.304711,
              0.846291,
              0.0981087,
              0,
              0.320357,
              0.844431,
              0.0915942,
              0,
              0.33623,
              0.842493,
              0.0855056,
              0,
              0.35233,
              0.840368,
              0.0798204,
              0,
              0.368658,
              0.83798,
              0.0745097,
              0,
              0.385214,
              0.83523,
              0.0695424,
              0,
              0.402002,
              0.832091,
              0.0649092,
              0,
              0.419023,
              0.828667,
              0.0606291,
              0,
              0.436282,
              0.824805,
              0.0566523,
              0,
              0.453782,
              0.820988,
              0.0530229,
              0,
              0.471529,
              0.816635,
              0.0496364,
              0,
              0.489528,
              0.811725,
              0.0464658,
              0,
              0.507788,
              0.806316,
              0.0435082,
              0,
              0.526317,
              0.800469,
              0.0407873,
              0,
              0.545124,
              0.794107,
              0.038255,
              0,
              0.564221,
              0.787218,
              0.0358825,
              0,
              0.583621,
              0.779872,
              0.0336785,
              0,
              0.603341,
              0.772097,
              0.0316379,
              0,
              0.623397,
              0.764484,
              0.0297379,
              0,
              0.643812,
              0.756428,
              0.0279581,
              0,
              0.664611,
              0.748022,
              0.0263153,
              0,
              0.685824,
              0.739268,
              0.0247799,
              0,
              0.707488,
              0.73024,
              0.0233385,
              0,
              0.729646,
              0.720893,
              0.0220035,
              0,
              0.752354,
              0.71119,
              0.0207555,
              0,
              0.77568,
              0.701791,
              0.0195843,
              0,
              0.799715,
              0.692184,
              0.0184891,
              0,
              0.824574,
              0.682258,
              0.0174541,
              0,
              0.850417,
              0.67206,
              0.0164873,
              0,
              0.877466,
              0.661717,
              0.0155959,
              0,
              0.90604,
              0.651462,
              0.0147519,
              0,
              0.936528,
              0.641467,
              0.0139727,
              0,
              0.968254,
              0.631229,
              0.0132363,
              0,
              1,
              1,
              0.367573,
              0,
              0,
              0.999999,
              0.367571,
              0,
              0,
              0.999984,
              0.367553,
              0,
              183382e-9,
              0.999925,
              0.367473,
              0,
              0.00225254,
              0.999759,
              0.367259,
              0,
              0.00628165,
              0.99941,
              0.366801,
              0,
              0.0117858,
              0.998739,
              0.365946,
              0,
              0.0184359,
              0.995529,
              0.363191,
              0,
              0.0260114,
              0.992875,
              0.360171,
              0,
              0.0343581,
              0.989135,
              0.355981,
              0,
              0.0433637,
              0.984166,
              0.350401,
              0,
              0.0529438,
              0.977871,
              0.343348,
              0,
              0.0630334,
              0.96951,
              0.334341,
              0,
              0.0735805,
              0.959964,
              0.323862,
              0,
              0.0845437,
              0.950162,
              0.312521,
              0,
              0.095889,
              0.938882,
              0.299577,
              0,
              0.107588,
              0.926992,
              0.285573,
              0,
              0.119617,
              0.915589,
              0.271212,
              0,
              0.131957,
              0.904791,
              0.256611,
              0,
              0.144591,
              0.895177,
              0.242224,
              0,
              0.157503,
              0.886403,
              0.227952,
              0,
              0.170682,
              0.878957,
              0.214192,
              0,
              0.184117,
              0.872418,
              0.200795,
              0,
              0.197799,
              0.867029,
              0.188015,
              0,
              0.21172,
              0.862835,
              0.175975,
              0,
              0.225873,
              0.859411,
              0.164526,
              0,
              0.240253,
              0.856655,
              0.153693,
              0,
              0.254854,
              0.854519,
              0.14352,
              0,
              0.269673,
              0.852828,
              0.13397,
              0,
              0.284707,
              0.851412,
              0.124984,
              0,
              0.299953,
              0.850609,
              0.116748,
              0,
              0.315408,
              0.849855,
              0.10905,
              0,
              0.331073,
              0.849017,
              0.101839,
              0,
              0.346946,
              0.848079,
              0.0951359,
              0,
              0.363028,
              0.846911,
              0.0888774,
              0,
              0.379318,
              0.845445,
              0.0830375,
              0,
              0.395818,
              0.84362,
              0.0775844,
              0,
              0.41253,
              0.841411,
              0.0725054,
              0,
              0.429457,
              0.838768,
              0.0677691,
              0,
              0.446602,
              0.835801,
              0.0634016,
              0,
              0.463968,
              0.832341,
              0.0593095,
              0,
              0.481561,
              0.828424,
              0.0555121,
              0,
              0.499386,
              0.824312,
              0.052024,
              0,
              0.51745,
              0.819918,
              0.0487865,
              0,
              0.535761,
              0.815072,
              0.0457801,
              0,
              0.554328,
              0.809863,
              0.0430184,
              0,
              0.573162,
              0.804164,
              0.0404245,
              0,
              0.592275,
              0.798034,
              0.0380146,
              0,
              0.611681,
              0.791436,
              0.0357436,
              0,
              0.631398,
              0.784498,
              0.0336475,
              0,
              0.651445,
              0.777125,
              0.0316666,
              0,
              0.671845,
              0.769365,
              0.0298122,
              0,
              0.692628,
              0.761579,
              0.0281001,
              0,
              0.713827,
              0.753746,
              0.0265049,
              0,
              0.735484,
              0.745573,
              0.0250067,
              0,
              0.75765,
              0.737083,
              0.0236026,
              0,
              0.78039,
              0.728545,
              0.0223302,
              0,
              0.803789,
              0.719691,
              0.0211243,
              0,
              0.82796,
              0.710569,
              0.0199983,
              0,
              0.853056,
              0.701216,
              0.0189569,
              0,
              0.879298,
              0.692094,
              0.0179702,
              0,
              0.907014,
              0.682909,
              0.0170418,
              0,
              0.936691,
              0.673509,
              0.0161732,
              0,
              0.968254,
              0.663863,
              0.0153406,
              0,
              1,
              1,
              0.437395,
              0,
              0,
              0.999998,
              0.437394,
              0,
              0,
              0.99998,
              0.437363,
              0,
              616704e-9,
              0.999891,
              0.437232,
              0,
              0.00367925,
              0.999656,
              0.436877,
              0,
              0.00867446,
              0.999148,
              0.436121,
              0,
              0.0150679,
              0.997959,
              0.434564,
              0,
              0.022531,
              0.993464,
              0.430134,
              0,
              0.0308507,
              0.990606,
              0.426077,
              0,
              0.0398805,
              0.985027,
              0.419397,
              0,
              0.0495148,
              0.978491,
              0.41118,
              0,
              0.0596749,
              0.969643,
              0.40048,
              0,
              0.0703001,
              0.959189,
              0.38769,
              0,
              0.0813427,
              0.948223,
              0.373575,
              0,
              0.0927641,
              0.935955,
              0.357622,
              0,
              0.104533,
              0.923237,
              0.34043,
              0,
              0.116624,
              0.911074,
              0.322735,
              0,
              0.129015,
              0.899724,
              0.30479,
              0,
              0.141687,
              0.890189,
              0.287392,
              0,
              0.154626,
              0.881796,
              0.270248,
              0,
              0.167818,
              0.874781,
              0.253659,
              0,
              0.181252,
              0.869166,
              0.237786,
              0,
              0.194918,
              0.864725,
              0.222618,
              0,
              0.208807,
              0.861565,
              0.208356,
              0,
              0.222913,
              0.859284,
              0.194867,
              0,
              0.237229,
              0.857677,
              0.18212,
              0,
              0.25175,
              0.856714,
              0.17018,
              0,
              0.266473,
              0.856155,
              0.158969,
              0,
              0.281392,
              0.8558,
              0.148413,
              0,
              0.296505,
              0.855672,
              0.138578,
              0,
              0.311811,
              0.855538,
              0.129345,
              0,
              0.327306,
              0.855689,
              0.120861,
              0,
              0.342991,
              0.855767,
              0.112969,
              0,
              0.358864,
              0.855618,
              0.105593,
              0,
              0.374925,
              0.85525,
              0.0987451,
              0,
              0.391176,
              0.854583,
              0.0923727,
              0,
              0.407616,
              0.853534,
              0.0864143,
              0,
              0.424249,
              0.852061,
              0.0808338,
              0,
              0.441076,
              0.850253,
              0.0756771,
              0,
              0.4581,
              0.848004,
              0.0708612,
              0,
              0.475324,
              0.845333,
              0.0663784,
              0,
              0.492754,
              0.842376,
              0.0622631,
              0,
              0.510394,
              0.838956,
              0.0584112,
              0,
              0.528251,
              0.835121,
              0.0548328,
              0,
              0.546331,
              0.830842,
              0.0514838,
              0,
              0.564644,
              0.826212,
              0.048355,
              0,
              0.583198,
              0.821522,
              0.0454714,
              0,
              0.602005,
              0.816551,
              0.0428263,
              0,
              0.621078,
              0.811211,
              0.0403612,
              0,
              0.640434,
              0.805479,
              0.038039,
              0,
              0.660089,
              0.799409,
              0.0358739,
              0,
              0.680066,
              0.79306,
              0.0338727,
              0,
              0.70039,
              0.786395,
              0.0319985,
              0,
              0.721094,
              0.779416,
              0.030241,
              0,
              0.742215,
              0.77214,
              0.0285951,
              0,
              0.7638,
              0.764636,
              0.0270747,
              0,
              0.785912,
              0.756836,
              0.0256354,
              0,
              0.808628,
              0.749315,
              0.0243027,
              0,
              0.832055,
              0.741561,
              0.0230497,
              0,
              0.856338,
              0.733589,
              0.0218801,
              0,
              0.88169,
              0.725479,
              0.020784,
              0,
              0.908441,
              0.717255,
              0.0197702,
              0,
              0.937125,
              0.708829,
              0.0188168,
              0,
              0.968254,
              0.700191,
              0.0179113,
              0,
              1,
              1,
              0.518937,
              0,
              0,
              0.999998,
              0.518933,
              0,
              0,
              0.999967,
              0.518883,
              0,
              0.00147741,
              0.999832,
              0.51866,
              0,
              0.00573221,
              0.999466,
              0.518057,
              0,
              0.011826,
              0.998644,
              0.516752,
              0,
              0.0192116,
              0.994458,
              0.512347,
              0,
              0.027573,
              0.991223,
              0.507675,
              0,
              0.0367099,
              0.985515,
              0.500188,
              0,
              0.046487,
              0.978308,
              0.490408,
              0,
              0.0568071,
              0.968359,
              0.477357,
              0,
              0.0675984,
              0.95682,
              0.461752,
              0,
              0.0788059,
              0.943929,
              0.443796,
              0,
              0.090386,
              0.930224,
              0.423893,
              0,
              0.102304,
              0.916514,
              0.402682,
              0,
              0.114532,
              0.903653,
              0.380914,
              0,
              0.127047,
              0.892315,
              0.359212,
              0,
              0.139828,
              0.882942,
              0.338102,
              0,
              0.152861,
              0.875438,
              0.31773,
              0,
              0.16613,
              0.869642,
              0.298186,
              0,
              0.179624,
              0.865304,
              0.279491,
              0,
              0.193332,
              0.862382,
              0.261804,
              0,
              0.207247,
              0.860666,
              0.245146,
              0,
              0.22136,
              0.859788,
              0.229406,
              0,
              0.235666,
              0.859608,
              0.214605,
              0,
              0.250158,
              0.859912,
              0.200691,
              0,
              0.264832,
              0.86053,
              0.187623,
              0,
              0.279684,
              0.861368,
              0.17539,
              0,
              0.294711,
              0.862237,
              0.163901,
              0,
              0.309911,
              0.863127,
              0.153175,
              0,
              0.32528,
              0.863923,
              0.143147,
              0,
              0.340819,
              0.864567,
              0.133781,
              0,
              0.356524,
              0.865013,
              0.125042,
              0,
              0.372397,
              0.86539,
              0.116952,
              0,
              0.388438,
              0.865591,
              0.109476,
              0,
              0.404645,
              0.865517,
              0.102542,
              0,
              0.421022,
              0.865084,
              0.0960688,
              0,
              0.437569,
              0.864309,
              0.0900499,
              0,
              0.454287,
              0.863151,
              0.0844328,
              0,
              0.471181,
              0.861649,
              0.0792218,
              0,
              0.488253,
              0.859742,
              0.0743482,
              0,
              0.505507,
              0.857446,
              0.0697963,
              0,
              0.522947,
              0.854757,
              0.0655364,
              0,
              0.54058,
              0.851783,
              0.061608,
              0,
              0.558412,
              0.848516,
              0.0579701,
              0,
              0.576449,
              0.844897,
              0.0545742,
              0,
              0.594701,
              0.840956,
              0.0514167,
              0,
              0.613178,
              0.836676,
              0.0484598,
              0,
              0.631892,
              0.832075,
              0.0456934,
              0,
              0.650856,
              0.827191,
              0.0431178,
              0,
              0.670088,
              0.822295,
              0.0407718,
              0,
              0.689606,
              0.817294,
              0.0386032,
              0,
              0.709434,
              0.812013,
              0.0365675,
              0,
              0.7296,
              0.806465,
              0.0346547,
              0,
              0.750138,
              0.800691,
              0.0328717,
              0,
              0.771093,
              0.794709,
              0.031211,
              0,
              0.792519,
              0.788493,
              0.0296504,
              0,
              0.814488,
              0.782049,
              0.0281782,
              0,
              0.837097,
              0.775403,
              0.0267965,
              0,
              0.860481,
              0.76857,
              0.0255002,
              0,
              0.884842,
              0.761536,
              0.0242759,
              0,
              0.910494,
              0.754303,
              0.0231142,
              0,
              0.937985,
              0.74692,
              0.0220305,
              0,
              0.968254,
              0.739745,
              0.0210192,
              0,
              1,
              1,
              0.613914,
              0,
              0,
              0.999996,
              0.613907,
              0,
              963597e-10,
              0.999942,
              0.613814,
              0,
              0.00301247,
              0.999704,
              0.613407,
              0,
              0.00870385,
              0.999046,
              0.612302,
              0,
              0.0160714,
              0.995516,
              0.608266,
              0,
              0.0245899,
              0.991726,
              0.602863,
              0,
              0.0339681,
              0.985157,
              0.593956,
              0,
              0.0440254,
              0.97642,
              0.581748,
              0,
              0.0546409,
              0.964404,
              0.565183,
              0,
              0.0657284,
              0.950601,
              0.545273,
              0,
              0.0772246,
              0.935158,
              0.522129,
              0,
              0.0890812,
              0.919364,
              0.496782,
              0,
              0.10126,
              0.904754,
              0.470571,
              0,
              0.113731,
              0.89176,
              0.444037,
              0,
              0.126469,
              0.881492,
              0.418322,
              0,
              0.139454,
              0.873656,
              0.393522,
              0,
              0.15267,
              0.868053,
              0.369795,
              0,
              0.166101,
              0.864336,
              0.347171,
              0,
              0.179736,
              0.862259,
              0.325737,
              0,
              0.193565,
              0.861556,
              0.305532,
              0,
              0.207578,
              0.861776,
              0.286416,
              0,
              0.221769,
              0.862661,
              0.268355,
              0,
              0.23613,
              0.864015,
              0.251334,
              0,
              0.250656,
              0.865711,
              0.235352,
              0,
              0.265343,
              0.867519,
              0.220302,
              0,
              0.280187,
              0.869351,
              0.206161,
              0,
              0.295183,
              0.871144,
              0.192908,
              0,
              0.31033,
              0.872839,
              0.180505,
              0,
              0.325624,
              0.874307,
              0.168848,
              0,
              0.341065,
              0.875667,
              0.158021,
              0,
              0.35665,
              0.876758,
              0.147877,
              0,
              0.37238,
              0.87764,
              0.138441,
              0,
              0.388253,
              0.878237,
              0.129627,
              0,
              0.404269,
              0.878563,
              0.121415,
              0,
              0.42043,
              0.878572,
              0.113741,
              0,
              0.436735,
              0.87842,
              0.106652,
              0,
              0.453187,
              0.878057,
              0.100097,
              0,
              0.469786,
              0.877413,
              0.0940128,
              0,
              0.486536,
              0.87646,
              0.0883462,
              0,
              0.503439,
              0.875233,
              0.0830924,
              0,
              0.520498,
              0.8737,
              0.0781975,
              0,
              0.537717,
              0.871873,
              0.07364,
              0,
              0.555102,
              0.86978,
              0.0694103,
              0,
              0.572657,
              0.867405,
              0.0654696,
              0,
              0.59039,
              0.864751,
              0.0617914,
              0,
              0.608307,
              0.861818,
              0.0583491,
              0,
              0.626419,
              0.858645,
              0.0551443,
              0,
              0.644733,
              0.855307,
              0.0521894,
              0,
              0.663264,
              0.851736,
              0.0494334,
              0,
              0.682025,
              0.847927,
              0.0468504,
              0,
              0.701032,
              0.843888,
              0.0444261,
              0,
              0.720308,
              0.839629,
              0.0421497,
              0,
              0.739875,
              0.835158,
              0.0400082,
              0,
              0.759764,
              0.830509,
              0.0380076,
              0,
              0.780014,
              0.825714,
              0.0361488,
              0,
              0.800673,
              0.820729,
              0.0343956,
              0,
              0.821803,
              0.815751,
              0.0327781,
              0,
              0.843492,
              0.810752,
              0.031275,
              0,
              0.86586,
              0.805587,
              0.0298542,
              0,
              0.889087,
              0.800317,
              0.0285397,
              0,
              0.913466,
              0.79489,
              0.0272948,
              0,
              0.93952,
              0.789314,
              0.0261139,
              0,
              0.96835,
              0.783593,
              0.0249938,
              0,
              1,
              1,
              0.724258,
              0,
              0,
              0.999992,
              0.724243,
              0,
              726889e-9,
              0.99987,
              0.724044,
              0,
              0.00569574,
              0.999336,
              0.72317,
              0,
              0.0131702,
              0.996271,
              0.719432,
              0,
              0.0220738,
              0.991159,
              0.712576,
              0,
              0.0319405,
              0.982465,
              0.700927,
              0,
              0.0425202,
              0.97049,
              0.684297,
              0,
              0.0536599,
              0.953973,
              0.661244,
              0,
              0.065258,
              0.935546,
              0.633804,
              0,
              0.0772427,
              0.916596,
              0.603071,
              0,
              0.0895616,
              0.899353,
              0.57105,
              0,
              0.102175,
              0.885216,
              0.539206,
              0,
              0.11505,
              0.875076,
              0.508714,
              0,
              0.128164,
              0.868334,
              0.479571,
              0,
              0.141495,
              0.864414,
              0.451796,
              0,
              0.155026,
              0.862678,
              0.425328,
              0,
              0.168745,
              0.862835,
              0.400352,
              0,
              0.182639,
              0.864067,
              0.376532,
              0,
              0.196699,
              0.866086,
              0.35391,
              0,
              0.210915,
              0.868557,
              0.332424,
              0,
              0.225282,
              0.871271,
              0.312053,
              0,
              0.239792,
              0.874058,
              0.292764,
              0,
              0.25444,
              0.8768,
              0.27453,
              0,
              0.269223,
              0.87939,
              0.257297,
              0,
              0.284135,
              0.8819,
              0.24114,
              0,
              0.299174,
              0.884187,
              0.225934,
              0,
              0.314337,
              0.886262,
              0.211669,
              0,
              0.329622,
              0.888119,
              0.198311,
              0,
              0.345026,
              0.889709,
              0.185783,
              0,
              0.360549,
              0.891054,
              0.174063,
              0,
              0.376189,
              0.892196,
              0.163143,
              0,
              0.391946,
              0.893101,
              0.152952,
              0,
              0.407819,
              0.893803,
              0.143475,
              0,
              0.423808,
              0.894277,
              0.134647,
              0,
              0.439914,
              0.894532,
              0.126434,
              0,
              0.456137,
              0.894576,
              0.1188,
              0,
              0.472479,
              0.894393,
              0.111694,
              0,
              0.48894,
              0.893976,
              0.105069,
              0,
              0.505523,
              0.893346,
              0.0989077,
              0,
              0.52223,
              0.892502,
              0.0931724,
              0,
              0.539064,
              0.891441,
              0.0878276,
              0,
              0.556028,
              0.890276,
              0.082903,
              0,
              0.573125,
              0.888972,
              0.0783505,
              0,
              0.590361,
              0.887469,
              0.0741083,
              0,
              0.607741,
              0.885785,
              0.0701633,
              0,
              0.62527,
              0.883914,
              0.0664835,
              0,
              0.642957,
              0.881872,
              0.0630567,
              0,
              0.660809,
              0.879651,
              0.0598527,
              0,
              0.678836,
              0.877267,
              0.0568615,
              0,
              0.69705,
              0.874717,
              0.05406,
              0,
              0.715465,
              0.872012,
              0.0514378,
              0,
              0.734098,
              0.869157,
              0.0489805,
              0,
              0.752968,
              0.866155,
              0.0466727,
              0,
              0.772101,
              0.863014,
              0.0445056,
              0,
              0.791529,
              0.859748,
              0.0424733,
              0,
              0.81129,
              0.856416,
              0.0405957,
              0,
              0.831438,
              0.852958,
              0.0388273,
              0,
              0.852044,
              0.849382,
              0.0371619,
              0,
              0.87321,
              0.845694,
              0.0355959,
              0,
              0.89509,
              0.841893,
              0.0341155,
              0,
              0.917932,
              0.837981,
              0.0327141,
              0,
              0.942204,
              0.833963,
              0.0313856,
              0,
              0.968981,
              0.829847,
              0.0301275,
              0,
              1,
              1,
              0.85214,
              0,
              0,
              0.999969,
              0.852095,
              0,
              0.00279627,
              0.999483,
              0.851408,
              0,
              0.0107635,
              0.994545,
              0.84579,
              0,
              0.0206454,
              0.986188,
              0.835231,
              0,
              0.0315756,
              0.969847,
              0.814687,
              0,
              0.0432021,
              0.945951,
              0.783735,
              0,
              0.0553396,
              0.91917,
              0.746074,
              0,
              0.0678766,
              0.895488,
              0.706938,
              0,
              0.0807395,
              0.878232,
              0.669534,
              0,
              0.0938767,
              0.868252,
              0.635168,
              0,
              0.10725,
              0.863873,
              0.603069,
              0,
              0.120832,
              0.863369,
              0.572514,
              0,
              0.134598,
              0.86545,
              0.543169,
              0,
              0.148533,
              0.868803,
              0.514578,
              0,
              0.16262,
              0.872794,
              0.486762,
              0,
              0.176849,
              0.87702,
              0.459811,
              0,
              0.19121,
              0.881054,
              0.433654,
              0,
              0.205694,
              0.884974,
              0.408574,
              0,
              0.220294,
              0.888587,
              0.384525,
              0,
              0.235005,
              0.891877,
              0.36156,
              0,
              0.24982,
              0.894793,
              0.339661,
              0,
              0.264737,
              0.89743,
              0.318913,
              0,
              0.279751,
              0.899796,
              0.299302,
              0,
              0.294859,
              0.901943,
              0.280843,
              0,
              0.310058,
              0.903858,
              0.263481,
              0,
              0.325346,
              0.905574,
              0.247197,
              0,
              0.340721,
              0.907069,
              0.231915,
              0,
              0.356181,
              0.908379,
              0.217614,
              0,
              0.371725,
              0.90952,
              0.20425,
              0,
              0.387353,
              0.910483,
              0.191758,
              0,
              0.403063,
              0.91128,
              0.180092,
              0,
              0.418854,
              0.911936,
              0.169222,
              0,
              0.434727,
              0.912454,
              0.159098,
              0,
              0.450682,
              0.912835,
              0.149668,
              0,
              0.466718,
              0.913078,
              0.140884,
              0,
              0.482837,
              0.913192,
              0.132709,
              0,
              0.499038,
              0.913175,
              0.125095,
              0,
              0.515324,
              0.91304,
              0.118012,
              0,
              0.531695,
              0.912781,
              0.111417,
              0,
              0.548153,
              0.91241,
              0.105281,
              0,
              0.5647,
              0.911924,
              0.0995691,
              0,
              0.581338,
              0.911331,
              0.0942531,
              0,
              0.59807,
              0.910637,
              0.0893076,
              0,
              0.6149,
              0.90984,
              0.0846998,
              0,
              0.63183,
              0.908941,
              0.0804044,
              0,
              0.648865,
              0.907944,
              0.0763984,
              0,
              0.666011,
              0.906857,
              0.0726638,
              0,
              0.683273,
              0.90568,
              0.0691783,
              0,
              0.700659,
              0.904416,
              0.0659222,
              0,
              0.718176,
              0.903067,
              0.0628782,
              0,
              0.735834,
              0.901637,
              0.0600307,
              0,
              0.753646,
              0.900128,
              0.0573647,
              0,
              0.771625,
              0.898544,
              0.0548668,
              0,
              0.78979,
              0.89689,
              0.052527,
              0,
              0.808162,
              0.895165,
              0.0503306,
              0,
              0.826771,
              0.893371,
              0.0482668,
              0,
              0.845654,
              0.891572,
              0.0463605,
              0,
              0.864863,
              0.889763,
              0.0445998,
              0,
              0.884472,
              0.887894,
              0.0429451,
              0,
              0.904592,
              0.885967,
              0.0413884,
              0,
              0.925407,
              0.883984,
              0.0399225,
              0,
              0.947271,
              0.881945,
              0.0385405,
              0,
              0.97105,
              0.879854,
              0.0372362,
              0,
              1,
              0.999804,
              0.995833,
              0,
              0,
              0.938155,
              0.933611,
              0,
              0.0158731,
              0.864755,
              0.854311,
              0,
              0.0317461,
              0.888594,
              0.865264,
              0,
              0.0476191,
              0.905575,
              0.863922,
              0,
              0.0634921,
              0.915125,
              0.850558,
              0,
              0.0793651,
              0.920665,
              0.829254,
              0,
              0.0952381,
              0.924073,
              0.802578,
              0,
              0.111111,
              0.926304,
              0.772211,
              0,
              0.126984,
              0.927829,
              0.739366,
              0,
              0.142857,
              0.928924,
              0.705033,
              0,
              0.15873,
              0.92973,
              0.670019,
              0,
              0.174603,
              0.930339,
              0.634993,
              0,
              0.190476,
              0.930811,
              0.600485,
              0,
              0.206349,
              0.931191,
              0.566897,
              0,
              0.222222,
              0.93149,
              0.534485,
              0,
              0.238095,
              0.931737,
              0.503429,
              0,
              0.253968,
              0.931939,
              0.473811,
              0,
              0.269841,
              0.932108,
              0.445668,
              0,
              0.285714,
              0.93225,
              0.418993,
              0,
              0.301587,
              0.932371,
              0.393762,
              0,
              0.31746,
              0.932474,
              0.369939,
              0,
              0.333333,
              0.932562,
              0.347479,
              0,
              0.349206,
              0.932638,
              0.326336,
              0,
              0.365079,
              0.932703,
              0.306462,
              0,
              0.380952,
              0.93276,
              0.287805,
              0,
              0.396825,
              0.932809,
              0.270313,
              0,
              0.412698,
              0.932851,
              0.253933,
              0,
              0.428571,
              0.932887,
              0.23861,
              0,
              0.444444,
              0.932917,
              0.224289,
              0,
              0.460317,
              0.932943,
              0.210917,
              0,
              0.47619,
              0.932965,
              0.19844,
              0,
              0.492063,
              0.932982,
              0.186807,
              0,
              0.507937,
              0.932995,
              0.175966,
              0,
              0.52381,
              0.933005,
              0.165869,
              0,
              0.539683,
              0.933011,
              0.156468,
              0,
              0.555556,
              0.933013,
              0.147719,
              0,
              0.571429,
              0.933013,
              0.139579,
              0,
              0.587302,
              0.93301,
              0.132007,
              0,
              0.603175,
              0.933004,
              0.124965,
              0,
              0.619048,
              0.932994,
              0.118416,
              0,
              0.634921,
              0.932982,
              0.112326,
              0,
              0.650794,
              0.932968,
              0.106663,
              0,
              0.666667,
              0.93295,
              0.101397,
              0,
              0.68254,
              0.932931,
              0.0964993,
              0,
              0.698413,
              0.932908,
              0.0919438,
              0,
              0.714286,
              0.932883,
              0.0877057,
              0,
              0.730159,
              0.932856,
              0.0837623,
              0,
              0.746032,
              0.932827,
              0.0800921,
              0,
              0.761905,
              0.932796,
              0.0766754,
              0,
              0.777778,
              0.932762,
              0.0734936,
              0,
              0.793651,
              0.932727,
              0.0705296,
              0,
              0.809524,
              0.932689,
              0.0677676,
              0,
              0.825397,
              0.93265,
              0.0651929,
              0,
              0.84127,
              0.932609,
              0.0627917,
              0,
              0.857143,
              0.932565,
              0.0605515,
              0,
              0.873016,
              0.932521,
              0.0584606,
              0,
              0.888889,
              0.932474,
              0.0565082,
              0,
              0.904762,
              0.932427,
              0.0546841,
              0,
              0.920635,
              0.932377,
              0.0529793,
              0,
              0.936508,
              0.932326,
              0.0513851,
              0,
              0.952381,
              0.932274,
              0.0498936,
              0,
              0.968254,
              0.93222,
              0.0484975,
              0,
              0.984127,
              0.932164,
              0.0471899,
              0,
              1,
            ],
            n = new p['o'](
              new Float32Array(e),
              64,
              64,
              p['tb'],
              p['w'],
              p['Ob'],
              p['l'],
              p['l'],
              p['N'],
              p['eb'],
              1
            ),
            i = new p['o'](
              new Float32Array(t),
              64,
              64,
              p['tb'],
              p['w'],
              p['Ob'],
              p['l'],
              p['l'],
              p['N'],
              p['eb'],
              1
            );
          (p['Qb'].LTC_1 = n), (p['Qb'].LTC_2 = i);
          var r = { ltc_1: { value: null }, ltc_2: { value: null } };
          Object.assign(p['Cb'].standard.uniforms, r),
            Object.assign(p['Cb'].physical.uniforms, r);
        },
      };
    function M(e, t) {
      (this.light = e), (this.color = t);
      var n = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0, 1, 1, 0],
        i = new p['i']();
      i.setAttribute('position', new p['v'](n, 3)), i.computeBoundingSphere();
      var r = new p['J']({ fog: !1 });
      p['I'].call(this, i, r), (this.type = 'RectAreaLightHelper');
      var a = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, -1, 0],
        o = new p['i']();
      o.setAttribute('position', new p['v'](a, 3)),
        o.computeBoundingSphere(),
        this.add(new p['Z'](o, new p['ab']({ side: p['c'], fog: !1 }))),
        this.update();
    }
    (M.prototype = Object.create(p['I'].prototype)),
      (M.prototype.constructor = M),
      (M.prototype.update = function () {
        if (
          (this.scale.set(0.5 * this.light.width, 0.5 * this.light.height, 1),
          void 0 !== this.color)
        )
          this.material.color.set(this.color),
            this.children[0].material.color.set(this.color);
        else {
          this.material.color
            .copy(this.light.color)
            .multiplyScalar(this.light.intensity);
          var e = this.material.color,
            t = Math.max(e.r, e.g, e.b);
          t > 1 && e.multiplyScalar(1 / t),
            this.children[0].material.color.copy(this.material.color);
        }
      }),
      (M.prototype.dispose = function () {
        this.geometry.dispose(),
          this.material.dispose(),
          this.children[0].geometry.dispose(),
          this.children[0].material.dispose();
      });
    var v = (function () {
        function e(e) {
          p['S'].call(this, e),
            (this.dracoLoader = null),
            (this.ddsLoader = null),
            (this.textureCache = new Map());
        }
        function t() {
          var e = {};
          return {
            get: function (t) {
              return e[t];
            },
            add: function (t, n) {
              e[t] = n;
            },
            remove: function (t) {
              delete e[t];
            },
            removeAll: function () {
              e = {};
            },
          };
        }
        e.prototype = Object.assign(Object.create(p['S'].prototype), {
          constructor: e,
          load: function (e, t, n, i) {
            var r,
              a = this;
            (r =
              '' !== this.resourcePath
                ? this.resourcePath
                : '' !== this.path
                ? this.path
                : p['T'].extractUrlBase(e)),
              a.manager.itemStart(e);
            var o = function (t) {
                i ? i(t) : void 0, a.manager.itemError(e), a.manager.itemEnd(e);
              },
              s = new p['u'](a.manager);
            s.setPath(this.path),
              s.setResponseType('arraybuffer'),
              'use-credentials' === a.crossOrigin && s.setWithCredentials(!0),
              s.load(
                e,
                function (n) {
                  try {
                    a.parse(
                      n,
                      r,
                      function (n) {
                        t(n), a.manager.itemEnd(e);
                      },
                      o
                    );
                  } catch (e) {
                    o(e);
                  }
                },
                n,
                o
              );
          },
          setDRACOLoader: function (e) {
            return (this.dracoLoader = e), this;
          },
          setDDSLoader: function (e) {
            return (this.ddsLoader = e), this;
          },
          parse: function (e, t, u, l) {
            var f,
              _ = {};
            if ('string' === typeof e) f = e;
            else {
              var M = p['T'].decodeText(new Uint8Array(e, 0, 4));
              if (M === c) {
                try {
                  _[n.KHR_BINARY_GLTF] = new d(e);
                } catch (e) {
                  return l && l(e), void 0;
                }
                f = _[n.KHR_BINARY_GLTF].content;
              } else f = p['T'].decodeText(new Uint8Array(e));
            }
            var y = JSON.parse(f);
            if (void 0 === y.asset || y.asset.version[0] < 2)
              return (
                l &&
                  l(
                    new Error(
                      'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.'
                    )
                  ),
                void 0
              );
            if (y.extensionsUsed)
              for (var b = 0; b < y.extensionsUsed.length; ++b) {
                var w = y.extensionsUsed[b],
                  A = y.extensionsRequired || [];
                switch (w) {
                  case n.KHR_LIGHTS_PUNCTUAL:
                    _[w] = new a(y);
                    break;
                  case n.KHR_MATERIALS_CLEARCOAT:
                    _[w] = new s();
                    break;
                  case n.KHR_MATERIALS_UNLIT:
                    _[w] = new o();
                    break;
                  case n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:
                    _[w] = new v();
                    break;
                  case n.KHR_DRACO_MESH_COMPRESSION:
                    _[w] = new h(y, this.dracoLoader);
                    break;
                  case n.MSFT_TEXTURE_DDS:
                    _[w] = new i(this.ddsLoader);
                    break;
                  case n.KHR_TEXTURE_TRANSFORM:
                    _[w] = new m();
                    break;
                  case n.KHR_MESH_QUANTIZATION:
                    _[w] = new g();
                    break;
                  case n.VCTR_LIGHTS:
                    _[w] = new r(y);
                    break;
                  default:
                    A.indexOf(w) >= 0 && void 0;
                }
              }
            var x = new B(y, _, {
              path: t || this.resourcePath || '',
              crossOrigin: this.crossOrigin,
              manager: this.manager,
              textureCache: this.textureCache,
            });
            x.parse(u, l);
          },
        });
        var n = {
          KHR_BINARY_GLTF: 'KHR_binary_glTF',
          KHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',
          KHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',
          KHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',
          KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:
            'KHR_materials_pbrSpecularGlossiness',
          KHR_MATERIALS_UNLIT: 'KHR_materials_unlit',
          KHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',
          KHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',
          MSFT_TEXTURE_DDS: 'MSFT_texture_dds',
          VCTR_LIGHTS: 'VCTR_lights',
        };
        function i(e) {
          if (!e)
            throw new Error(
              'THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader'
            );
          (this.name = n.MSFT_TEXTURE_DDS), (this.ddsLoader = e);
        }
        function r(e) {
          this.name = n.VCTR_LIGHTS;
          var t = (e.extensions && e.extensions[n.VCTR_LIGHTS]) || {};
          this.lightDefs = t.lights || [];
        }
        function a(e) {
          this.name = n.KHR_LIGHTS_PUNCTUAL;
          var t = (e.extensions && e.extensions[n.KHR_LIGHTS_PUNCTUAL]) || {};
          this.lightDefs = t.lights || [];
        }
        function o() {
          this.name = n.KHR_MATERIALS_UNLIT;
        }
        function s() {
          this.name = n.KHR_MATERIALS_CLEARCOAT;
        }
        (r.prototype.loadLight = function (e) {
          var t,
            n = this.lightDefs[e],
            i = new p['n'](16777215);
          void 0 !== n.color && i.fromArray(n.color);
          var r = void 0 !== n.range ? n.range : 0;
          switch (n.type) {
            case 'rectangle':
              _.init(),
                (t = new p['yb'](
                  i,
                  n.intensity,
                  n.rectangle.size.x / 1e3,
                  n.rectangle.size.y / 1e3
                ));
              var a = new M(t);
              t.add(a);
              break;
            case 'tube':
              (t = new p['nb'](i)), (t.distance = r);
              break;
            case 'hemisphere':
              (t = new p['B'](
                n.hemisphere.colorUp,
                n.hemisphere.colorDown,
                n.intensity
              )),
                (t.visible = !1);
              break;
            default:
              throw new Error(
                'THREE.GLTFLoader: Unexpected light type, "' + n.type + '".'
              );
          }
          return (
            t.position.set(0, 0, 0),
            (t.decay = 2),
            void 0 !== n.intensity && (t.intensity = n.intensity),
            (t.name = n.name || 'light_' + e),
            Promise.resolve(t)
          );
        }),
          (a.prototype.loadLight = function (e) {
            var t,
              n = this.lightDefs[e],
              i = new p['n'](16777215);
            void 0 !== n.color && i.fromArray(n.color);
            var r = void 0 !== n.range ? n.range : 0;
            switch (n.type) {
              case 'directional':
                (t = new p['q'](i)),
                  t.target.position.set(0, 0, -1),
                  t.add(t.target);
                break;
              case 'point':
                (t = new p['nb'](i)), (t.distance = r);
                break;
              case 'spot':
                (t = new p['Ib'](i)),
                  (t.distance = r),
                  (n.spot = n.spot || {}),
                  (n.spot.innerConeAngle =
                    void 0 !== n.spot.innerConeAngle
                      ? n.spot.innerConeAngle
                      : 0),
                  (n.spot.outerConeAngle =
                    void 0 !== n.spot.outerConeAngle
                      ? n.spot.outerConeAngle
                      : Math.PI / 4),
                  (t.angle = n.spot.outerConeAngle),
                  (t.penumbra =
                    1 - n.spot.innerConeAngle / n.spot.outerConeAngle),
                  t.target.position.set(0, 0, -1),
                  t.add(t.target);
                break;
              default:
                throw new Error(
                  'THREE.GLTFLoader: Unexpected light type, "' + n.type + '".'
                );
            }
            return (
              t.position.set(0, 0, 0),
              (t.decay = 2),
              void 0 !== n.intensity && (t.intensity = n.intensity),
              (t.name = n.name || 'light_' + e),
              Promise.resolve(t)
            );
          }),
          (o.prototype.getMaterialType = function () {
            return p['ab'];
          }),
          (o.prototype.extendParams = function (e, t, n) {
            var i = [];
            (e.color = new p['n'](1, 1, 1)), (e.opacity = 1);
            var r = t.pbrMetallicRoughness;
            if (r) {
              if (Array.isArray(r.baseColorFactor)) {
                var a = r.baseColorFactor;
                e.color.fromArray(a), (e.opacity = a[3]);
              }
              void 0 !== r.baseColorTexture &&
                i.push(n.assignTexture(e, 'map', r.baseColorTexture));
            }
            return Promise.all(i);
          }),
          (s.prototype.getMaterialType = function () {
            return p['bb'];
          }),
          (s.prototype.extendParams = function (e, t, n) {
            var i = [],
              r = t.extensions[this.name];
            if (
              (void 0 !== r.clearcoatFactor &&
                (e.clearcoat = r.clearcoatFactor),
              void 0 !== r.clearcoatTexture &&
                i.push(n.assignTexture(e, 'clearcoatMap', r.clearcoatTexture)),
              void 0 !== r.clearcoatRoughnessFactor &&
                (e.clearcoatRoughness = r.clearcoatRoughnessFactor),
              void 0 !== r.clearcoatRoughnessTexture &&
                i.push(
                  n.assignTexture(
                    e,
                    'clearcoatRoughnessMap',
                    r.clearcoatRoughnessTexture
                  )
                ),
              void 0 !== r.clearcoatNormalTexture &&
                (i.push(
                  n.assignTexture(
                    e,
                    'clearcoatNormalMap',
                    r.clearcoatNormalTexture
                  )
                ),
                void 0 !== r.clearcoatNormalTexture.scale))
            ) {
              var a = r.clearcoatNormalTexture.scale;
              e.clearcoatNormalScale = new p['Sb'](a, a);
            }
            return Promise.all(i);
          });
        var c = 'glTF',
          u = 12,
          l = { JSON: 1313821514, BIN: 5130562 };
        function d(e) {
          (this.name = n.KHR_BINARY_GLTF),
            (this.content = null),
            (this.body = null);
          var t = new DataView(e, 0, u);
          if (
            ((this.header = {
              magic: p['T'].decodeText(new Uint8Array(e.slice(0, 4))),
              version: t.getUint32(4, !0),
              length: t.getUint32(8, !0),
            }),
            this.header.magic !== c)
          )
            throw new Error(
              'THREE.GLTFLoader: Unsupported glTF-Binary header.'
            );
          if (this.header.version < 2)
            throw new Error('THREE.GLTFLoader: Legacy binary file detected.');
          var i = new DataView(e, u),
            r = 0;
          while (r < i.byteLength) {
            var a = i.getUint32(r, !0);
            r += 4;
            var o = i.getUint32(r, !0);
            if (((r += 4), o === l.JSON)) {
              var s = new Uint8Array(e, u + r, a);
              this.content = p['T'].decodeText(s);
            } else if (o === l.BIN) {
              var d = u + r;
              this.body = e.slice(d, d + a);
            }
            r += a;
          }
          if (null === this.content)
            throw new Error('THREE.GLTFLoader: JSON content not found.');
        }
        function h(e, t) {
          if (!t)
            throw new Error(
              'THREE.GLTFLoader: No DRACOLoader instance provided.'
            );
          (this.name = n.KHR_DRACO_MESH_COMPRESSION),
            (this.json = e),
            (this.dracoLoader = t),
            this.dracoLoader.preload();
        }
        function m() {
          this.name = n.KHR_TEXTURE_TRANSFORM;
        }
        function f(e) {
          p['cb'].call(this), (this.isGLTFSpecularGlossinessMaterial = !0);
          var t = [
              '#ifdef USE_SPECULARMAP',
              '\tuniform sampler2D specularMap;',
              '#endif',
            ].join('\n'),
            n = [
              '#ifdef USE_GLOSSINESSMAP',
              '\tuniform sampler2D glossinessMap;',
              '#endif',
            ].join('\n'),
            i = [
              'vec3 specularFactor = specular;',
              '#ifdef USE_SPECULARMAP',
              '\tvec4 texelSpecular = texture2D( specularMap, vUv );',
              '\ttexelSpecular = sRGBToLinear( texelSpecular );',
              '\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',
              '\tspecularFactor *= texelSpecular.rgb;',
              '#endif',
            ].join('\n'),
            r = [
              'float glossinessFactor = glossiness;',
              '#ifdef USE_GLOSSINESSMAP',
              '\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',
              '\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',
              '\tglossinessFactor *= texelGlossiness.a;',
              '#endif',
            ].join('\n'),
            a = [
              'PhysicalMaterial material;',
              'material.diffuseColor = diffuseColor.rgb;',
              'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );',
              'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );',
              'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.',
              'material.specularRoughness += geometryRoughness;',
              'material.specularRoughness = min( material.specularRoughness, 1.0 );',
              'material.specularColor = specularFactor.rgb;',
            ].join('\n'),
            o = {
              specular: { value: new p['n']().setHex(16777215) },
              glossiness: { value: 1 },
              specularMap: { value: null },
              glossinessMap: { value: null },
            };
          (this._extraUniforms = o),
            (this.onBeforeCompile = function (e) {
              for (var s in o) e.uniforms[s] = o[s];
              (e.fragmentShader = e.fragmentShader.replace(
                'uniform float roughness;',
                'uniform vec3 specular;'
              )),
                (e.fragmentShader = e.fragmentShader.replace(
                  'uniform float metalness;',
                  'uniform float glossiness;'
                )),
                (e.fragmentShader = e.fragmentShader.replace(
                  '#include <roughnessmap_pars_fragment>',
                  t
                )),
                (e.fragmentShader = e.fragmentShader.replace(
                  '#include <metalnessmap_pars_fragment>',
                  n
                )),
                (e.fragmentShader = e.fragmentShader.replace(
                  '#include <roughnessmap_fragment>',
                  i
                )),
                (e.fragmentShader = e.fragmentShader.replace(
                  '#include <metalnessmap_fragment>',
                  r
                )),
                (e.fragmentShader = e.fragmentShader.replace(
                  '#include <lights_physical_fragment>',
                  a
                ));
            }),
            Object.defineProperties(this, {
              specular: {
                get: function () {
                  return o.specular.value;
                },
                set: function (e) {
                  o.specular.value = e;
                },
              },
              specularMap: {
                get: function () {
                  return o.specularMap.value;
                },
                set: function (e) {
                  o.specularMap.value = e;
                },
              },
              glossiness: {
                get: function () {
                  return o.glossiness.value;
                },
                set: function (e) {
                  o.glossiness.value = e;
                },
              },
              glossinessMap: {
                get: function () {
                  return o.glossinessMap.value;
                },
                set: function (e) {
                  (o.glossinessMap.value = e),
                    e
                      ? ((this.defines.USE_GLOSSINESSMAP = ''),
                        (this.defines.USE_ROUGHNESSMAP = ''))
                      : (delete this.defines.USE_ROUGHNESSMAP,
                        delete this.defines.USE_GLOSSINESSMAP);
                },
              },
            }),
            delete this.metalness,
            delete this.roughness,
            delete this.metalnessMap,
            delete this.roughnessMap,
            this.setValues(e);
        }
        function v() {
          return {
            name: n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,
            specularGlossinessParams: [
              'color',
              'map',
              'lightMap',
              'lightMapIntensity',
              'aoMap',
              'aoMapIntensity',
              'emissive',
              'emissiveIntensity',
              'emissiveMap',
              'bumpMap',
              'bumpScale',
              'normalMap',
              'normalMapType',
              'displacementMap',
              'displacementScale',
              'displacementBias',
              'specularMap',
              'specular',
              'glossinessMap',
              'glossiness',
              'alphaMap',
              'envMap',
              'envMapIntensity',
              'refractionRatio',
            ],
            getMaterialType: function () {
              return f;
            },
            extendParams: function (e, t, n) {
              var i = t.extensions[this.name];
              (e.color = new p['n'](1, 1, 1)), (e.opacity = 1);
              var r = [];
              if (Array.isArray(i.diffuseFactor)) {
                var a = i.diffuseFactor;
                e.color.fromArray(a), (e.opacity = a[3]);
              }
              if (
                (void 0 !== i.diffuseTexture &&
                  r.push(n.assignTexture(e, 'map', i.diffuseTexture)),
                (e.emissive = new p['n'](0, 0, 0)),
                (e.glossiness =
                  void 0 !== i.glossinessFactor ? i.glossinessFactor : 1),
                (e.specular = new p['n'](1, 1, 1)),
                Array.isArray(i.specularFactor) &&
                  e.specular.fromArray(i.specularFactor),
                void 0 !== i.specularGlossinessTexture)
              ) {
                var o = i.specularGlossinessTexture;
                r.push(n.assignTexture(e, 'glossinessMap', o)),
                  r.push(n.assignTexture(e, 'specularMap', o));
              }
              return Promise.all(r);
            },
            createMaterial: function (e) {
              var t = new f(e);
              return (
                (t.fog = !0),
                (t.color = e.color),
                (t.map = void 0 === e.map ? null : e.map),
                (t.lightMap = null),
                (t.lightMapIntensity = 1),
                (t.aoMap = void 0 === e.aoMap ? null : e.aoMap),
                (t.aoMapIntensity = 1),
                (t.emissive = e.emissive),
                (t.emissiveIntensity = 1),
                (t.emissiveMap =
                  void 0 === e.emissiveMap ? null : e.emissiveMap),
                (t.bumpMap = void 0 === e.bumpMap ? null : e.bumpMap),
                (t.bumpScale = 1),
                (t.normalMap = void 0 === e.normalMap ? null : e.normalMap),
                (t.normalMapType = p['Kb']),
                e.normalScale && (t.normalScale = e.normalScale),
                (t.displacementMap = null),
                (t.displacementScale = 1),
                (t.displacementBias = 0),
                (t.specularMap =
                  void 0 === e.specularMap ? null : e.specularMap),
                (t.specular = e.specular),
                (t.glossinessMap =
                  void 0 === e.glossinessMap ? null : e.glossinessMap),
                (t.glossiness = e.glossiness),
                (t.alphaMap = null),
                (t.envMap = void 0 === e.envMap ? null : e.envMap),
                (t.envMapIntensity = 1),
                (t.refractionRatio = 0.98),
                t
              );
            },
          };
        }
        function g() {
          this.name = n.KHR_MESH_QUANTIZATION;
        }
        function y(e, t, n, i) {
          p['E'].call(this, e, t, n, i);
        }
        (h.prototype.decodePrimitive = function (e, t) {
          var n = this.json,
            i = this.dracoLoader,
            r = e.extensions[this.name].bufferView,
            a = e.extensions[this.name].attributes,
            o = {},
            s = {},
            c = {};
          for (var u in a) {
            var l = T[u] || u.toLowerCase();
            o[l] = a[u];
          }
          for (u in e.attributes) {
            l = T[u] || u.toLowerCase();
            if (void 0 !== a[u]) {
              var d = n.accessors[e.attributes[u]],
                h = w[d.componentType];
              (c[l] = h), (s[l] = !0 === d.normalized);
            }
          }
          return t.getDependency('bufferView', r).then(function (e) {
            return new Promise(function (t) {
              i.decodeDracoFile(
                e,
                function (e) {
                  for (var n in e.attributes) {
                    var i = e.attributes[n],
                      r = s[n];
                    void 0 !== r && (i.normalized = r);
                  }
                  t(e);
                },
                o,
                c
              );
            });
          });
        }),
          (m.prototype.extendTexture = function (e, t) {
            return (
              (e = e.clone()),
              void 0 !== t.offset && e.offset.fromArray(t.offset),
              void 0 !== t.rotation && (e.rotation = t.rotation),
              void 0 !== t.scale && e.repeat.fromArray(t.scale),
              t.texCoord,
              (e.needsUpdate = !0),
              e
            );
          }),
          (f.prototype = Object.create(p['cb'].prototype)),
          (f.prototype.constructor = f),
          (f.prototype.copy = function (e) {
            return (
              p['cb'].prototype.copy.call(this, e),
              (this.specularMap = e.specularMap),
              this.specular.copy(e.specular),
              (this.glossinessMap = e.glossinessMap),
              (this.glossiness = e.glossiness),
              delete this.metalness,
              delete this.roughness,
              delete this.metalnessMap,
              delete this.roughnessMap,
              this
            );
          }),
          (y.prototype = Object.create(p['E'].prototype)),
          (y.prototype.constructor = y),
          (y.prototype.copySampleValue_ = function (e) {
            for (
              var t = this.resultBuffer,
                n = this.sampleValues,
                i = this.valueSize,
                r = e * i * 3 + i,
                a = 0;
              a !== i;
              a++
            )
              t[a] = n[r + a];
            return t;
          }),
          (y.prototype.beforeStart_ = y.prototype.copySampleValue_),
          (y.prototype.afterEnd_ = y.prototype.copySampleValue_),
          (y.prototype.interpolate_ = function (e, t, n, i) {
            for (
              var r = this.resultBuffer,
                a = this.sampleValues,
                o = this.valueSize,
                s = 2 * o,
                c = 3 * o,
                u = i - t,
                l = (n - t) / u,
                d = l * l,
                h = d * l,
                p = e * c,
                m = p - c,
                f = -2 * h + 3 * d,
                _ = h - d,
                M = 1 - f,
                v = _ - d + l,
                g = 0;
              g !== o;
              g++
            ) {
              var y = a[m + g + o],
                b = a[m + g + s] * u,
                w = a[p + g + o],
                A = a[p + g] * u;
              r[g] = M * y + v * b + f * w + _ * A;
            }
            return r;
          });
        var b = {
            FLOAT: 5126,
            FLOAT_MAT3: 35675,
            FLOAT_MAT4: 35676,
            FLOAT_VEC2: 35664,
            FLOAT_VEC3: 35665,
            FLOAT_VEC4: 35666,
            LINEAR: 9729,
            REPEAT: 10497,
            SAMPLER_2D: 35678,
            POINTS: 0,
            LINES: 1,
            LINE_LOOP: 2,
            LINE_STRIP: 3,
            TRIANGLES: 4,
            TRIANGLE_STRIP: 5,
            TRIANGLE_FAN: 6,
            UNSIGNED_BYTE: 5121,
            UNSIGNED_SHORT: 5123,
          },
          w = {
            5120: Int8Array,
            5121: Uint8Array,
            5122: Int16Array,
            5123: Uint16Array,
            5125: Uint32Array,
            5126: Float32Array,
          },
          A = {
            9728: p['eb'],
            9729: p['N'],
            9984: p['gb'],
            9985: p['Q'],
            9986: p['fb'],
            9987: p['P'],
          },
          x = { 33071: p['l'], 33648: p['db'], 10497: p['Ab'] },
          L = {
            SCALAR: 1,
            VEC2: 2,
            VEC3: 3,
            VEC4: 4,
            MAT2: 4,
            MAT3: 9,
            MAT4: 16,
          },
          T = {
            POSITION: 'position',
            NORMAL: 'normal',
            TANGENT: 'tangent',
            TEXCOORD_0: 'uv',
            TEXCOORD_1: 'uv2',
            COLOR_0: 'color',
            WEIGHTS_0: 'skinWeight',
            JOINTS_0: 'skinIndex',
          },
          z = {
            scale: 'scale',
            translation: 'position',
            rotation: 'quaternion',
            weights: 'morphTargetInfluences',
          },
          S = { CUBICSPLINE: void 0, LINEAR: p['G'], STEP: p['F'] },
          O = { OPAQUE: 'OPAQUE', MASK: 'MASK', BLEND: 'BLEND' },
          E = { 'image/png': p['tb'], 'image/jpeg': p['wb'] };
        function k(e, t) {
          return 'string' !== typeof e || '' === e
            ? ''
            : (/^https?:\/\//i.test(t) &&
                /^\//.test(e) &&
                (t = t.replace(/(^https?:\/\/[^\/]+).*/i, '$1')),
              /^(https?:)?\/\//i.test(e) ||
              /^data:.*,.*$/i.test(e) ||
              /^blob:.*$/i.test(e)
                ? e
                : t + e);
        }
        function C(e) {
          return (
            void 0 === e['DefaultMaterial'] &&
              (e['DefaultMaterial'] = new p['cb']({
                color: 16777215,
                emissive: 0,
                metalness: 1,
                roughness: 1,
                transparent: !1,
                depthTest: !0,
                side: p['x'],
              })),
            e['DefaultMaterial']
          );
        }
        function D(e, t, n) {
          for (var i in n.extensions)
            void 0 === e[i] &&
              ((t.userData.gltfExtensions = t.userData.gltfExtensions || {}),
              (t.userData.gltfExtensions[i] = n.extensions[i]));
        }
        function N(e, t) {
          void 0 !== t.extras &&
            ('object' === typeof t.extras
              ? Object.assign(e.userData, t.extras)
              : void 0);
        }
        function P(e, t, n) {
          for (var i = !1, r = !1, a = 0, o = t.length; a < o; a++) {
            var s = t[a];
            if (
              (void 0 !== s.POSITION && (i = !0),
              void 0 !== s.NORMAL && (r = !0),
              i && r)
            )
              break;
          }
          if (!i && !r) return Promise.resolve(e);
          var c = [],
            u = [];
          for (a = 0, o = t.length; a < o; a++) {
            s = t[a];
            if (i) {
              var l =
                void 0 !== s.POSITION
                  ? n.getDependency('accessor', s.POSITION)
                  : e.attributes.position;
              c.push(l);
            }
            if (r) {
              l =
                void 0 !== s.NORMAL
                  ? n.getDependency('accessor', s.NORMAL)
                  : e.attributes.normal;
              u.push(l);
            }
          }
          return Promise.all([Promise.all(c), Promise.all(u)]).then(function (
            t
          ) {
            var n = t[0],
              a = t[1];
            return (
              i && (e.morphAttributes.position = n),
              r && (e.morphAttributes.normal = a),
              (e.morphTargetsRelative = !0),
              e
            );
          });
        }
        function j(e, t) {
          if ((e.updateMorphTargets(), void 0 !== t.weights))
            for (var n = 0, i = t.weights.length; n < i; n++)
              e.morphTargetInfluences[n] = t.weights[n];
          if (t.extras && Array.isArray(t.extras.targetNames)) {
            var r = t.extras.targetNames;
            if (e.morphTargetInfluences.length === r.length) {
              e.morphTargetDictionary = {};
              for (n = 0, i = r.length; n < i; n++)
                e.morphTargetDictionary[r[n]] = n;
            } else void 0;
          }
        }
        function Y(e) {
          var t,
            i = e.extensions && e.extensions[n.KHR_DRACO_MESH_COMPRESSION];
          return (
            (t = i
              ? 'draco:' +
                i.bufferView +
                ':' +
                i.indices +
                ':' +
                R(i.attributes)
              : e.indices + ':' + R(e.attributes) + ':' + e.mode),
            t
          );
        }
        function R(e) {
          for (
            var t = '', n = Object.keys(e).sort(), i = 0, r = n.length;
            i < r;
            i++
          )
            t += n[i] + ':' + e[n[i]] + ';';
          return t;
        }
        function B(e, n, i) {
          (this.json = e || {}),
            (this.extensions = n || {}),
            (this.options = i || {}),
            (this.cache = new t()),
            (this.primitiveCache = {}),
            (this.textureLoader = new p['Lb'](this.options.manager)),
            this.textureLoader.setCrossOrigin(this.options.crossOrigin),
            (this.fileLoader = new p['u'](this.options.manager)),
            this.fileLoader.setResponseType('arraybuffer'),
            'use-credentials' === this.options.crossOrigin &&
              this.fileLoader.setWithCredentials(!0);
        }
        function W(e, t, n) {
          var i = t.attributes,
            r = new p['e']();
          if (void 0 !== i.POSITION) {
            var a = n.json.accessors[i.POSITION],
              o = a.min,
              s = a.max;
            if (void 0 === o || void 0 === s) return void 0, void 0;
            r.set(new p['Tb'](o[0], o[1], o[2]), new p['Tb'](s[0], s[1], s[2]));
            var c = t.targets;
            if (void 0 !== c) {
              for (
                var u = new p['Tb'](), l = new p['Tb'](), d = 0, h = c.length;
                d < h;
                d++
              ) {
                var m = c[d];
                if (void 0 !== m.POSITION) {
                  (a = n.json.accessors[m.POSITION]), (o = a.min), (s = a.max);
                  void 0 !== o && void 0 !== s
                    ? (l.setX(Math.max(Math.abs(o[0]), Math.abs(s[0]))),
                      l.setY(Math.max(Math.abs(o[1]), Math.abs(s[1]))),
                      l.setZ(Math.max(Math.abs(o[2]), Math.abs(s[2]))),
                      u.max(l))
                    : void 0;
                }
              }
              r.expandByVector(u);
            }
            e.boundingBox = r;
            var f = new p['Gb']();
            r.getCenter(f.center),
              (f.radius = r.min.distanceTo(r.max) / 2),
              (e.boundingSphere = f);
          }
        }
        function I(e, t, n) {
          var i = t.attributes,
            r = [];
          function a(t, i) {
            return n.getDependency('accessor', t).then(function (t) {
              e.setAttribute(i, t);
            });
          }
          for (var o in i) {
            var s = T[o] || o.toLowerCase();
            s in e.attributes || r.push(a(i[o], s));
          }
          if (void 0 !== t.indices && !e.index) {
            var c = n.getDependency('accessor', t.indices).then(function (t) {
              e.setIndex(t);
            });
            r.push(c);
          }
          return (
            N(e, t),
            W(e, t, n),
            Promise.all(r).then(function () {
              return void 0 !== t.targets ? P(e, t.targets, n) : e;
            })
          );
        }
        function q(e, t) {
          var n = e.getIndex();
          if (null === n) {
            var i = [],
              r = e.getAttribute('position');
            if (void 0 === r) return void 0, e;
            for (var a = 0; a < r.count; a++) i.push(a);
            e.setIndex(i), (n = e.getIndex());
          }
          var o = n.count - 2,
            s = [];
          if (t === p['Mb'])
            for (a = 1; a <= o; a++)
              s.push(n.getX(0)), s.push(n.getX(a)), s.push(n.getX(a + 1));
          else
            for (a = 0; a < o; a++)
              a % 2 === 0
                ? (s.push(n.getX(a)),
                  s.push(n.getX(a + 1)),
                  s.push(n.getX(a + 2)))
                : (s.push(n.getX(a + 2)),
                  s.push(n.getX(a + 1)),
                  s.push(n.getX(a)));
          s.length / 3 !== o && void 0;
          var c = e.clone();
          return c.setIndex(s), c;
        }
        return (
          (B.prototype.parse = function (e, t) {
            var n = this,
              i = this.json,
              r = this.extensions;
            this.cache.removeAll(),
              this.markDefs(),
              Promise.all([
                this.getDependencies('scene'),
                this.getDependencies('animation'),
                this.getDependencies('camera'),
              ])
                .then(function (t) {
                  var a = {
                    scene: t[0][i.scene || 0],
                    scenes: t[0],
                    animations: t[1],
                    cameras: t[2],
                    asset: i.asset,
                    parser: n,
                    userData: {},
                  };
                  D(r, a, i), N(a, i), e(a);
                })
                .catch(t);
          }),
          (B.prototype.markDefs = function () {
            for (
              var e = this.json.nodes || [],
                t = this.json.skins || [],
                n = this.json.meshes || [],
                i = {},
                r = {},
                a = 0,
                o = t.length;
              a < o;
              a++
            )
              for (var s = t[a].joints, c = 0, u = s.length; c < u; c++)
                e[s[c]].isBone = !0;
            for (var l = 0, d = e.length; l < d; l++) {
              var h = e[l];
              void 0 !== h.mesh &&
                (void 0 === i[h.mesh] && (i[h.mesh] = r[h.mesh] = 0),
                i[h.mesh]++,
                void 0 !== h.skin && (n[h.mesh].isSkinnedMesh = !0));
            }
            (this.json.meshReferences = i), (this.json.meshUses = r);
          }),
          (B.prototype.getDependency = function (e, t) {
            var i = e + ':' + t,
              r = this.cache.get(i);
            if (!r) {
              switch (e) {
                case 'scene':
                  r = this.loadScene(t);
                  break;
                case 'node':
                  r = this.loadNode(t);
                  break;
                case 'mesh':
                  r = this.loadMesh(t);
                  break;
                case 'accessor':
                  r = this.loadAccessor(t);
                  break;
                case 'bufferView':
                  r = this.loadBufferView(t);
                  break;
                case 'buffer':
                  r = this.loadBuffer(t);
                  break;
                case 'material':
                  r = this.loadMaterial(t);
                  break;
                case 'texture':
                  r = this.loadTexture(t);
                  break;
                case 'skin':
                  r = this.loadSkin(t);
                  break;
                case 'animation':
                  r = this.loadAnimation(t);
                  break;
                case 'camera':
                  r = this.loadCamera(t);
                  break;
                case 'light':
                  r = this.extensions[n.KHR_LIGHTS_PUNCTUAL].loadLight(t);
                  break;
                case 'vctr_light':
                  r = this.extensions[n.VCTR_LIGHTS].loadLight(t);
                  break;
                default:
                  throw new Error('Unknown type: ' + e);
              }
              this.cache.add(i, r);
            }
            return r;
          }),
          (B.prototype.getDependencies = function (e) {
            var t = this.cache.get(e);
            if (!t) {
              var n = this,
                i = this.json[e + ('mesh' === e ? 'es' : 's')] || [];
              (t = Promise.all(
                i.map(function (t, i) {
                  return n.getDependency(e, i);
                })
              )),
                this.cache.add(e, t);
            }
            return t;
          }),
          (B.prototype.loadBuffer = function (e) {
            var t = this.json.buffers[e],
              i = this.fileLoader;
            if (t.type && 'arraybuffer' !== t.type)
              throw new Error(
                'THREE.GLTFLoader: ' + t.type + ' buffer type is not supported.'
              );
            if (void 0 === t.uri && 0 === e)
              return Promise.resolve(this.extensions[n.KHR_BINARY_GLTF].body);
            var r = this.options;
            return new Promise(function (e, n) {
              i.load(k(t.uri, r.path), e, void 0, function () {
                n(
                  new Error(
                    'THREE.GLTFLoader: Failed to load buffer "' + t.uri + '".'
                  )
                );
              });
            });
          }),
          (B.prototype.loadBufferView = function (e) {
            var t = this.json.bufferViews[e];
            return this.getDependency('buffer', t.buffer).then(function (e) {
              var n = t.byteLength || 0,
                i = t.byteOffset || 0;
              return e.slice(i, i + n);
            });
          }),
          (B.prototype.loadAccessor = function (e) {
            var t = this,
              n = this.json,
              i = this.json.accessors[e];
            if (void 0 === i.bufferView && void 0 === i.sparse)
              return Promise.resolve(null);
            var r = [];
            return (
              void 0 !== i.bufferView
                ? r.push(this.getDependency('bufferView', i.bufferView))
                : r.push(null),
              void 0 !== i.sparse &&
                (r.push(
                  this.getDependency('bufferView', i.sparse.indices.bufferView)
                ),
                r.push(
                  this.getDependency('bufferView', i.sparse.values.bufferView)
                )),
              Promise.all(r).then(function (e) {
                var r,
                  a,
                  o = e[0],
                  s = L[i.type],
                  c = w[i.componentType],
                  u = c.BYTES_PER_ELEMENT,
                  l = u * s,
                  d = i.byteOffset || 0,
                  h =
                    void 0 !== i.bufferView
                      ? n.bufferViews[i.bufferView].byteStride
                      : void 0,
                  m = !0 === i.normalized;
                if (h && h !== l) {
                  var f = Math.floor(d / h),
                    _ =
                      'InterleavedBuffer:' +
                      i.bufferView +
                      ':' +
                      i.componentType +
                      ':' +
                      f +
                      ':' +
                      i.count,
                    M = t.cache.get(_);
                  M ||
                    ((r = new c(o, f * h, (i.count * h) / u)),
                    (M = new p['C'](r, h / u)),
                    t.cache.add(_, M)),
                    (a = new p['D'](M, s, (d % h) / u, m));
                } else (r = null === o ? new c(i.count * s) : new c(o, d, i.count * s)), (a = new p['h'](r, s, m));
                if (void 0 !== i.sparse) {
                  var v = L.SCALAR,
                    g = w[i.sparse.indices.componentType],
                    y = i.sparse.indices.byteOffset || 0,
                    b = i.sparse.values.byteOffset || 0,
                    A = new g(e[1], y, i.sparse.count * v),
                    x = new c(e[2], b, i.sparse.count * s);
                  null !== o &&
                    (a = new p['h'](a.array.slice(), a.itemSize, a.normalized));
                  for (var T = 0, z = A.length; T < z; T++) {
                    var S = A[T];
                    if (
                      (a.setX(S, x[T * s]),
                      s >= 2 && a.setY(S, x[T * s + 1]),
                      s >= 3 && a.setZ(S, x[T * s + 2]),
                      s >= 4 && a.setW(S, x[T * s + 3]),
                      s >= 5)
                    )
                      throw new Error(
                        'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.'
                      );
                  }
                }
                return a;
              })
            );
          }),
          (B.prototype.loadTexture = function (e) {
            var t,
              i = this,
              r = this.json,
              a = this.options,
              o = this.textureLoader,
              s = self.URL || self.webkitURL,
              c = r.textures[e],
              u = c.extensions || {};
            t = u[n.MSFT_TEXTURE_DDS]
              ? r.images[u[n.MSFT_TEXTURE_DDS].source]
              : r.images[c.source];
            var l = t.uri,
              d = !1;
            return (
              void 0 !== t.bufferView &&
                (l = i
                  .getDependency('bufferView', t.bufferView)
                  .then(function (e) {
                    d = !0;
                    var n = new Blob([e], { type: t.mimeType });
                    return (l = s.createObjectURL(n)), l;
                  })),
              Promise.resolve(l)
                .then(function (e) {
                  var t = a.manager.getHandler(e);
                  return (
                    t ||
                      (t = u[n.MSFT_TEXTURE_DDS]
                        ? i.extensions[n.MSFT_TEXTURE_DDS].ddsLoader
                        : o),
                    new Promise(function (n, i) {
                      t.load(k(e, a.path), n, void 0, i);
                    })
                  );
                })
                .then(function (e) {
                  !0 === d && s.revokeObjectURL(l),
                    (e.flipY = !1),
                    c.name && (e.name = c.name),
                    t.mimeType in E && (e.format = E[t.mimeType]);
                  var n = r.samplers || {},
                    i = n[c.sampler] || {};
                  return (
                    (e.magFilter = A[i.magFilter] || p['N']),
                    (e.minFilter = A[i.minFilter] || p['P']),
                    (e.wrapS = x[i.wrapS] || p['Ab']),
                    (e.wrapT = x[i.wrapT] || p['Ab']),
                    e
                  );
                })
            );
          }),
          (B.prototype.assignTexture = function (e, t, i) {
            var r = this,
              a = this.options.textureCache;
            return this.getDependency('texture', i.index).then(function (o) {
              if (a.get(i.index)) e[t] = a.get(i.index);
              else {
                switch (t) {
                  case 'aoMap':
                  case 'emissiveMap':
                  case 'metalnessMap':
                  case 'normalMap':
                  case 'roughnessMap':
                    o.format = p['wb'];
                    break;
                }
                if (
                  (void 0 === i.texCoord ||
                    0 == i.texCoord ||
                    ('aoMap' === t && 1 == i.texCoord) ||
                    void 0,
                  r.extensions[n.KHR_TEXTURE_TRANSFORM])
                ) {
                  var s =
                    void 0 !== i.extensions
                      ? i.extensions[n.KHR_TEXTURE_TRANSFORM]
                      : void 0;
                  s &&
                    (o = r.extensions[n.KHR_TEXTURE_TRANSFORM].extendTexture(
                      o,
                      s
                    ));
                }
                a.set(i.index, o), (e[t] = o);
              }
            });
          }),
          (B.prototype.assignFinalMaterial = function (e) {
            var t = e.geometry,
              n = e.material,
              i = void 0 !== t.attributes.tangent,
              r = void 0 !== t.attributes.color,
              a = void 0 === t.attributes.normal,
              o = !0 === e.isSkinnedMesh,
              s = Object.keys(t.morphAttributes).length > 0,
              c = s && void 0 !== t.morphAttributes.normal;
            if (e.isPoints) {
              var u = 'PointsMaterial:' + n.uuid,
                l = this.cache.get(u);
              l ||
                ((l = new p['pb']()),
                p['W'].prototype.copy.call(l, n),
                l.color.copy(n.color),
                (l.map = n.map),
                (l.sizeAttenuation = !1),
                this.cache.add(u, l)),
                (n = l);
            } else if (e.isLine) {
              u = 'LineBasicMaterial:' + n.uuid;
              var d = this.cache.get(u);
              d ||
                ((d = new p['J']()),
                p['W'].prototype.copy.call(d, n),
                d.color.copy(n.color),
                this.cache.add(u, d)),
                (n = d);
            }
            if (i || r || a || o || s) {
              u = 'ClonedMaterial:' + n.uuid + ':';
              n.isGLTFSpecularGlossinessMaterial &&
                (u += 'specular-glossiness:'),
                o && (u += 'skinning:'),
                i && (u += 'vertex-tangents:'),
                r && (u += 'vertex-colors:'),
                a && (u += 'flat-shading:'),
                s && (u += 'morph-targets:'),
                c && (u += 'morph-normals:');
              var h = this.cache.get(u);
              h ||
                ((h = n.clone()),
                o && (h.skinning = !0),
                i && (h.vertexTangents = !0),
                r && (h.vertexColors = !0),
                a && (h.flatShading = !0),
                s && (h.morphTargets = !0),
                c && (h.morphNormals = !0),
                this.cache.add(u, h)),
                (n = h);
            }
            n.aoMap &&
              void 0 === t.attributes.uv2 &&
              void 0 !== t.attributes.uv &&
              t.setAttribute('uv2', t.attributes.uv),
              n.normalScale && !i && (n.normalScale.y = -n.normalScale.y),
              n.clearcoatNormalScale &&
                !i &&
                (n.clearcoatNormalScale.y = -n.clearcoatNormalScale.y),
              (e.material = n);
          }),
          (B.prototype.loadMaterial = function (e) {
            var t,
              i = this,
              r = this.json,
              a = this.extensions,
              o = r.materials[e],
              s = {},
              c = o.extensions || {},
              u = [];
            if (c[n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {
              var l = a[n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];
              (t = l.getMaterialType()), u.push(l.extendParams(s, o, i));
            } else if (c[n.KHR_MATERIALS_UNLIT]) {
              var d = a[n.KHR_MATERIALS_UNLIT];
              (t = d.getMaterialType()), u.push(d.extendParams(s, o, i));
            } else {
              t = p['cb'];
              var h = o.pbrMetallicRoughness || {};
              if (
                ((s.color = new p['n'](1, 1, 1)),
                (s.opacity = 1),
                Array.isArray(h.baseColorFactor))
              ) {
                var m = h.baseColorFactor;
                s.color.fromArray(m), (s.opacity = m[3]);
              }
              void 0 !== h.baseColorTexture &&
                u.push(i.assignTexture(s, 'map', h.baseColorTexture)),
                (s.metalness =
                  void 0 !== h.metallicFactor ? h.metallicFactor : 1),
                (s.roughness =
                  void 0 !== h.roughnessFactor ? h.roughnessFactor : 1),
                void 0 !== h.metallicRoughnessTexture &&
                  (u.push(
                    i.assignTexture(
                      s,
                      'metalnessMap',
                      h.metallicRoughnessTexture
                    )
                  ),
                  u.push(
                    i.assignTexture(
                      s,
                      'roughnessMap',
                      h.metallicRoughnessTexture
                    )
                  ));
            }
            !0 === o.doubleSided && (s.side = p['r']);
            var _ = o.alphaMode || O.OPAQUE;
            _ === O.BLEND
              ? ((s.transparent = !0), (s.depthWrite = !0))
              : ((s.transparent = !1),
                _ === O.MASK &&
                  (s.alphaTest =
                    void 0 !== o.alphaCutoff ? o.alphaCutoff : 0.5)),
              void 0 !== o.normalTexture &&
                t !== p['ab'] &&
                (u.push(i.assignTexture(s, 'normalMap', o.normalTexture)),
                (s.normalScale = new p['Sb'](1, 1)),
                void 0 !== o.normalTexture.scale &&
                  s.normalScale.set(
                    o.normalTexture.scale,
                    o.normalTexture.scale
                  ));
            let M = void 0,
              v = void 0,
              g = void 0;
            if (
              (void 0 !== o.occlusionTexture &&
                t !== p['ab'] &&
                (u.push(i.assignTexture(s, 'aoMap', o.occlusionTexture)),
                void 0 !== o.occlusionTexture.strength &&
                  (s.aoMapIntensity = o.occlusionTexture.strength),
                void 0 !== o.occlusionTexture.texCoord &&
                  (M = o.occlusionTexture.texCoord)),
              void 0 !== o.lightmapTexture &&
                t !== p['ab'] &&
                (u.push(i.assignTexture(s, 'lightMap', o.lightmapTexture)),
                void 0 !== o.lightmapTexture.strength &&
                  (s.lightMapIntensity = o.lightmapTexture.strength),
                void 0 !== o.lightmapTexture.environmentBaked &&
                  (v = o.lightmapTexture.environmentBaked),
                void 0 !== o.lightmapTexture.srgb &&
                  (g = o.lightmapTexture.srgb)),
              void 0 !== o.emissiveFactor &&
                t !== p['ab'] &&
                (s.emissive = new p['n']().fromArray(o.emissiveFactor)),
              void 0 !== o.emissiveTexture &&
                t !== p['ab'] &&
                u.push(i.assignTexture(s, 'emissiveMap', o.emissiveTexture)),
              c[n.KHR_MATERIALS_CLEARCOAT])
            ) {
              var y = a[n.KHR_MATERIALS_CLEARCOAT];
              (t = y.getMaterialType()),
                u.push(y.extendParams(s, { extensions: c }, i));
            }
            return Promise.all(u).then(function () {
              var e;
              return (
                (e =
                  t === f
                    ? a[n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(
                        s
                      )
                    : new t(s)),
                o.name && (e.name = o.name),
                e.map && (e.map.encoding = p['Yb']),
                e.emissiveMap && (e.emissiveMap.encoding = p['Yb']),
                N(e, o),
                o.extensions && D(a, e, o),
                e.aoMap && void 0 !== M && (e.aoMap.texCoord = M),
                e.lightMap && void 0 !== v && (e.lightMap.environmentBaked = v),
                e.lightMap &&
                  (e.lightMap.encoding = void 0 !== g ? p['Yb'] : p['M']),
                e
              );
            });
          }),
          (B.prototype.loadGeometries = function (e) {
            var t = this,
              i = this.extensions,
              r = this.primitiveCache;
            function a(e) {
              return i[n.KHR_DRACO_MESH_COMPRESSION]
                .decodePrimitive(e, t)
                .then(function (n) {
                  return I(n, e, t);
                });
            }
            for (var o = [], s = 0, c = e.length; s < c; s++) {
              var u,
                l = e[s],
                d = Y(l),
                h = r[d];
              if (h) o.push(h.promise);
              else
                (u =
                  l.extensions && l.extensions[n.KHR_DRACO_MESH_COMPRESSION]
                    ? a(l)
                    : I(new p['i'](), l, t)),
                  (r[d] = { primitive: l, promise: u }),
                  o.push(u);
            }
            return Promise.all(o);
          }),
          (B.prototype.loadMesh = function (e) {
            for (
              var t = this,
                n = this.json,
                i = n.meshes[e],
                r = i.primitives,
                a = [],
                o = 0,
                s = r.length;
              o < s;
              o++
            ) {
              var c =
                void 0 === r[o].material
                  ? C(this.cache)
                  : this.getDependency('material', r[o].material);
              a.push(c);
            }
            return (
              a.push(t.loadGeometries(r)),
              Promise.all(a).then(function (n) {
                for (
                  var a = n.slice(0, n.length - 1),
                    o = n[n.length - 1],
                    s = [],
                    c = 0,
                    u = o.length;
                  c < u;
                  c++
                ) {
                  var l,
                    d = o[c],
                    h = r[c],
                    m = a[c];
                  if (
                    h.mode === b.TRIANGLES ||
                    h.mode === b.TRIANGLE_STRIP ||
                    h.mode === b.TRIANGLE_FAN ||
                    void 0 === h.mode
                  )
                    (l =
                      !0 === i.isSkinnedMesh
                        ? new p['Fb'](d, m)
                        : new p['Z'](d, m)),
                      !0 !== l.isSkinnedMesh ||
                        l.geometry.attributes.skinWeight.normalized ||
                        l.normalizeSkinWeights(),
                      h.mode === b.TRIANGLE_STRIP
                        ? (l.geometry = q(l.geometry, p['Nb']))
                        : h.mode === b.TRIANGLE_FAN &&
                          (l.geometry = q(l.geometry, p['Mb']));
                  else if (h.mode === b.LINES) l = new p['L'](d, m);
                  else if (h.mode === b.LINE_STRIP) l = new p['I'](d, m);
                  else if (h.mode === b.LINE_LOOP) l = new p['K'](d, m);
                  else {
                    if (h.mode !== b.POINTS)
                      throw new Error(
                        'THREE.GLTFLoader: Primitive mode unsupported: ' +
                          h.mode
                      );
                    l = new p['ob'](d, m);
                  }
                  Object.keys(l.geometry.morphAttributes).length > 0 && j(l, i),
                    (l.name = i.name || 'mesh_' + e),
                    o.length > 1 && (l.name += '_' + c),
                    N(l, i),
                    t.assignFinalMaterial(l),
                    s.push(l);
                }
                if (1 === s.length) return s[0];
                var f = new p['z']();
                for (c = 0, u = s.length; c < u; c++) f.add(s[c]);
                return f;
              })
            );
          }),
          (B.prototype.loadCamera = function (e) {
            var t,
              n = this.json.cameras[e],
              i = n[n.type];
            return i
              ? ('perspective' === n.type
                  ? (t = new p['mb'](
                      p['X'].radToDeg(i.yfov),
                      i.aspectRatio || 1,
                      i.znear || 1,
                      i.zfar || 2e6
                    ))
                  : 'orthographic' === n.type &&
                    (t = new p['lb'](
                      -i.xmag,
                      i.xmag,
                      i.ymag,
                      -i.ymag,
                      i.znear,
                      i.zfar
                    )),
                n.name && (t.name = n.name),
                N(t, n),
                Promise.resolve(t))
              : (void 0, void 0);
          }),
          (B.prototype.loadSkin = function (e) {
            var t = this.json.skins[e],
              n = { joints: t.joints };
            return void 0 === t.inverseBindMatrices
              ? Promise.resolve(n)
              : this.getDependency('accessor', t.inverseBindMatrices).then(
                  function (e) {
                    return (n.inverseBindMatrices = e), n;
                  }
                );
          }),
          (B.prototype.loadAnimation = function (e) {
            for (
              var t = this.json,
                n = t.animations[e],
                i = [],
                r = [],
                a = [],
                o = [],
                s = [],
                c = 0,
                u = n.channels.length;
              c < u;
              c++
            ) {
              var l = n.channels[c],
                d = n.samplers[l.sampler],
                h = l.target,
                m = void 0 !== h.node ? h.node : h.id,
                f = void 0 !== n.parameters ? n.parameters[d.input] : d.input,
                _ = void 0 !== n.parameters ? n.parameters[d.output] : d.output;
              i.push(this.getDependency('node', m)),
                r.push(this.getDependency('accessor', f)),
                a.push(this.getDependency('accessor', _)),
                o.push(d),
                s.push(h);
            }
            return Promise.all([
              Promise.all(i),
              Promise.all(r),
              Promise.all(a),
              Promise.all(o),
              Promise.all(s),
            ]).then(function (t) {
              for (
                var i = t[0],
                  r = t[1],
                  a = t[2],
                  o = t[3],
                  s = t[4],
                  c = [],
                  u = 0,
                  l = i.length;
                u < l;
                u++
              ) {
                var d = i[u],
                  h = r[u],
                  m = a[u],
                  f = o[u],
                  _ = s[u];
                if (void 0 !== d) {
                  var M;
                  switch (
                    (d.updateMatrix(), (d.matrixAutoUpdate = !0), z[_.path])
                  ) {
                    case z.weights:
                      M = p['jb'];
                      break;
                    case z.rotation:
                      M = p['sb'];
                      break;
                    case z.position:
                    case z.scale:
                    default:
                      M = p['Ub'];
                      break;
                  }
                  var v = d.name ? d.name : d.uuid,
                    g =
                      void 0 !== f.interpolation ? S[f.interpolation] : p['G'],
                    b = [];
                  z[_.path] === z.weights
                    ? d.traverse(function (e) {
                        !0 === e.isMesh &&
                          e.morphTargetInfluences &&
                          b.push(e.name ? e.name : e.uuid);
                      })
                    : b.push(v);
                  var w = m.array;
                  if (m.normalized) {
                    var A;
                    if (w.constructor === Int8Array) A = 1 / 127;
                    else if (w.constructor === Uint8Array) A = 1 / 255;
                    else if (w.constructor == Int16Array) A = 1 / 32767;
                    else {
                      if (w.constructor !== Uint16Array)
                        throw new Error(
                          'THREE.GLTFLoader: Unsupported output accessor component type.'
                        );
                      A = 1 / 65535;
                    }
                    for (
                      var x = new Float32Array(w.length), L = 0, T = w.length;
                      L < T;
                      L++
                    )
                      x[L] = w[L] * A;
                    w = x;
                  }
                  for (L = 0, T = b.length; L < T; L++) {
                    var O = new M(b[L] + '.' + z[_.path], h.array, w, g);
                    'CUBICSPLINE' === f.interpolation &&
                      ((O.createInterpolant = function e(t) {
                        return new y(
                          this.times,
                          this.values,
                          this.getValueSize() / 3,
                          t
                        );
                      }),
                      (O.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = !0)),
                      c.push(O);
                  }
                }
              }
              var E = n.name ? n.name : 'animation_' + e;
              return new p['a'](E, void 0, c);
            });
          }),
          (B.prototype.loadNode = function (e) {
            var t = this.json,
              i = this.extensions,
              r = this,
              a = t.meshReferences,
              o = t.meshUses,
              s = t.nodes[e];
            return (function () {
              var e = [];
              return (
                void 0 !== s.mesh &&
                  e.push(
                    r.getDependency('mesh', s.mesh).then(function (e) {
                      var t;
                      if (a[s.mesh] > 1) {
                        var n = o[s.mesh]++;
                        (t = e.clone()), (t.name += '_instance_' + n);
                      } else t = e;
                      return (
                        void 0 !== s.weights &&
                          t.traverse(function (e) {
                            if (e.isMesh)
                              for (var t = 0, n = s.weights.length; t < n; t++)
                                e.morphTargetInfluences[t] = s.weights[t];
                          }),
                        t
                      );
                    })
                  ),
                void 0 !== s.camera &&
                  e.push(r.getDependency('camera', s.camera)),
                s.extensions &&
                  s.extensions[n.KHR_LIGHTS_PUNCTUAL] &&
                  void 0 !== s.extensions[n.KHR_LIGHTS_PUNCTUAL].light &&
                  e.push(
                    r.getDependency(
                      'light',
                      s.extensions[n.KHR_LIGHTS_PUNCTUAL].light
                    )
                  ),
                s.extensions &&
                  s.extensions[n.VCTR_LIGHTS] &&
                  void 0 !== s.extensions[n.VCTR_LIGHTS].light &&
                  e.push(
                    r.getDependency(
                      'vctr_light',
                      s.extensions[n.VCTR_LIGHTS].light
                    )
                  ),
                Promise.all(e)
              );
            })().then(function (e) {
              var t;
              if (
                ((t =
                  !0 === s.isBone
                    ? new p['d']()
                    : e.length > 1
                    ? new p['z']()
                    : 1 === e.length
                    ? e[0]
                    : new p['kb']()),
                t !== e[0])
              )
                for (var n = 0, r = e.length; n < r; n++) t.add(e[n]);
              if (
                (s.name &&
                  ((t.userData.name = s.name),
                  (t.name = p['qb'].sanitizeNodeName(s.name))),
                N(t, s),
                s.extensions && D(i, t, s),
                void 0 !== s.matrix)
              ) {
                var a = new p['Y']();
                a.fromArray(s.matrix), t.applyMatrix4(a);
              } else void 0 !== s.translation && t.position.fromArray(s.translation), void 0 !== s.rotation && t.quaternion.fromArray(s.rotation), void 0 !== s.scale && t.scale.fromArray(s.scale);
              return t;
            });
          }),
          (B.prototype.loadScene = (function () {
            function e(t, n, i, r) {
              var a = i.nodes[t];
              return r
                .getDependency('node', t)
                .then(function (e) {
                  return void 0 === a.skin
                    ? e
                    : r
                        .getDependency('skin', a.skin)
                        .then(function (e) {
                          t = e;
                          for (
                            var n = [], i = 0, a = t.joints.length;
                            i < a;
                            i++
                          )
                            n.push(r.getDependency('node', t.joints[i]));
                          return Promise.all(n);
                        })
                        .then(function (n) {
                          return (
                            e.traverse(function (e) {
                              if (e.isMesh) {
                                for (
                                  var i = [], r = [], a = 0, o = n.length;
                                  a < o;
                                  a++
                                ) {
                                  var s = n[a];
                                  if (s) {
                                    i.push(s);
                                    var c = new p['Y']();
                                    void 0 !== t.inverseBindMatrices &&
                                      c.fromArray(
                                        t.inverseBindMatrices.array,
                                        16 * a
                                      ),
                                      r.push(c);
                                  } else void 0;
                                }
                                e.bind(new p['Eb'](i, r), e.matrixWorld);
                              }
                            }),
                            e
                          );
                        });
                  var t;
                })
                .then(function (t) {
                  n.add(t);
                  var o = [];
                  if (a.children)
                    for (var s = a.children, c = 0, u = s.length; c < u; c++) {
                      var l = s[c];
                      o.push(e(l, t, i, r));
                    }
                  return Promise.all(o);
                });
            }
            return function t(n) {
              var i = this.json,
                r = this.extensions,
                a = this.json.scenes[n],
                o = this,
                s = new p['z']();
              a.name && (s.name = a.name), N(s, a), a.extensions && D(r, s, a);
              for (
                var c = a.nodes || [], u = [], l = 0, d = c.length;
                l < d;
                l++
              )
                u.push(e(c[l], s, i, o));
              return Promise.all(u).then(function () {
                return s;
              });
            };
          })()),
          e
        );
      })(),
      g = function (e, t) {
        void 0 === t && void 0,
          document,
          (this.object = e),
          (this.domElement = t),
          (this.enabled = !0),
          (this.target = new p['Tb']()),
          (this.minDistance = 0),
          (this.maxDistance = 1 / 0),
          (this.minZoom = 0),
          (this.maxZoom = 1 / 0),
          (this.minPolarAngle = 0),
          (this.maxPolarAngle = Math.PI),
          (this.minAzimuthAngle = -1 / 0),
          (this.maxAzimuthAngle = 1 / 0),
          (this.enableDamping = !1),
          (this.dampingFactor = 0.05),
          (this.enableZoom = !0),
          (this.enableZoomWithCtrl = !1),
          (this.zoomSpeed = 1),
          (this.enableRotate = !0),
          (this.enableRotateX = !0),
          (this.enableRotateY = !0),
          (this.rotateSpeed = 1),
          (this.enablePan = !0),
          (this.enablePanX = !0),
          (this.enablePanY = !0),
          (this.panSpeed = 1),
          (this.screenSpacePanning = !1),
          (this.keyPanSpeed = 7),
          (this.autoRotate = !1),
          (this.autoRotateSpeed = 2),
          (this.enableKeys = !1),
          (this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 }),
          (this.mouseButtons = {
            LEFT: p['V'].ROTATE,
            MIDDLE: p['V'].DOLLY,
            RIGHT: p['V'].PAN,
          }),
          (this.touches = { ONE: p['Jb'].ROTATE, TWO: p['Jb'].DOLLY_PAN }),
          (this.target0 = this.target.clone()),
          (this.position0 = this.object.position.clone()),
          (this.zoom0 = this.object.zoom),
          (this.getPolarAngle = function () {
            return l.phi;
          }),
          (this.getAzimuthalAngle = function () {
            return l.theta;
          }),
          (this.saveState = function () {
            n.target0.copy(n.target),
              n.position0.copy(n.object.position),
              (n.zoom0 = n.object.zoom);
          }),
          (this.saveStateExternal = function () {
            return {
              target: n.target,
              position: n.object.position,
              zoom: (n.zoom0 = n.object.zoom),
            };
          }),
          (this.reset = function () {
            n.target.copy(n.target0),
              n.object.position.copy(n.position0),
              (n.object.zoom = n.zoom0),
              n.object.updateProjectionMatrix(),
              n.dispatchEvent(i),
              n.update(),
              (c = s.NONE);
          }),
          (this.resetExternal = function (e) {
            n.target.copy(e.target),
              n.object.position.copy(e.position),
              (n.object.zoom = e.zoom),
              n.object.updateProjectionMatrix(),
              n.dispatchEvent(i),
              n.update(),
              (e = s.NONE);
          }),
          (this.update = (function () {
            var t = new p['Tb'](),
              r = new p['rb']().setFromUnitVectors(e.up, new p['Tb'](0, 1, 0)),
              a = r.clone().inverse(),
              o = new p['Tb'](),
              _ = new p['rb']();
            return function e() {
              var p = n.object.position;
              return (
                t.copy(p).sub(n.target),
                t.applyQuaternion(r),
                l.setFromVector3(t),
                n.autoRotate && c === s.NONE && this.rotateLeft(L()),
                n.enableDamping
                  ? ((l.theta += d.theta * n.dampingFactor),
                    (l.phi += d.phi * n.dampingFactor))
                  : ((l.theta += d.theta), (l.phi += d.phi)),
                (l.theta = Math.max(
                  n.minAzimuthAngle,
                  Math.min(n.maxAzimuthAngle, l.theta)
                )),
                (l.phi = Math.max(
                  n.minPolarAngle,
                  Math.min(n.maxPolarAngle, l.phi)
                )),
                l.makeSafe(),
                (l.radius *= h),
                (l.radius = Math.max(
                  n.minDistance,
                  Math.min(n.maxDistance, l.radius)
                )),
                !0 === n.enableDamping
                  ? n.target.addScaledVector(m, n.dampingFactor)
                  : n.target.add(m),
                t.setFromSpherical(l),
                t.applyQuaternion(a),
                p.copy(n.target).add(t),
                n.object.lookAt(n.target),
                !0 === n.enableDamping
                  ? ((d.theta *= 1 - n.dampingFactor),
                    (d.phi *= 1 - n.dampingFactor),
                    m.multiplyScalar(1 - n.dampingFactor))
                  : (d.set(0, 0, 0), m.set(0, 0, 0)),
                (h = 1),
                !!(
                  f ||
                  o.distanceToSquared(n.object.position) > u ||
                  8 * (1 - _.dot(n.object.quaternion)) > u ||
                  Math.abs(d.radius) > u ||
                  Math.abs(d.phi) > u ||
                  Math.abs(d.theta) > u ||
                  Math.abs(m.x) > u ||
                  Math.abs(m.y) > u ||
                  Math.abs(m.z) > u
                ) &&
                  (n.dispatchEvent(i),
                  o.copy(n.object.position),
                  _.copy(n.object.quaternion),
                  (f = !1),
                  !0)
              );
            };
          })()),
          (this.dispose = function () {
            n.domElement.removeEventListener('contextmenu', te, !1),
              n.domElement.removeEventListener('mousedown', V, !1),
              n.domElement.removeEventListener('wheel', Z, !1),
              n.domElement.removeEventListener('touchstart', Q, !1),
              n.domElement.removeEventListener('touchend', ee, !1),
              n.domElement.removeEventListener('touchmove', $, !1),
              document.removeEventListener('mousemove', G, !1),
              document.removeEventListener('mouseup', J, !1),
              n.domElement.removeEventListener('keydown', K, !1);
          });
        var n = this,
          i = { type: 'change' },
          r = { type: 'start' },
          a = { type: 'end' },
          o = { type: 'panEnd' },
          s = {
            NONE: -1,
            ROTATE: 0,
            DOLLY: 1,
            PAN: 2,
            TOUCH_ROTATE: 3,
            TOUCH_PAN: 4,
            TOUCH_DOLLY_PAN: 5,
            TOUCH_DOLLY_ROTATE: 6,
          },
          c = s.NONE,
          u = 1e-6,
          l = new p['Hb'](),
          d = new p['Hb'](),
          h = 1,
          m = new p['Tb'](),
          f = !1,
          _ = new p['Sb'](),
          M = new p['Sb'](),
          v = new p['Sb'](),
          g = new p['Sb'](),
          y = new p['Sb'](),
          b = new p['Sb'](),
          w = new p['Sb'](),
          A = new p['Sb'](),
          x = new p['Sb']();
        function L() {
          return ((2 * Math.PI) / 60 / 60) * n.autoRotateSpeed;
        }
        function T() {
          return Math.pow(0.95, n.zoomSpeed);
        }
        function z(e) {
          _.set(e.clientX, e.clientY);
        }
        function S(e) {
          w.set(e.clientX, e.clientY);
        }
        function O(e) {
          g.set(e.clientX, e.clientY);
        }
        function E(e) {
          M.set(e.clientX, e.clientY),
            v.subVectors(M, _).multiplyScalar(n.rotateSpeed);
          var t = n.domElement;
          n.enableRotateX && n.rotateLeft((2 * Math.PI * v.x) / t.clientHeight),
            n.enableRotateY && n.rotateUp((2 * Math.PI * v.y) / t.clientHeight),
            _.copy(M),
            n.update();
        }
        function k(e) {
          A.set(e.clientX, e.clientY),
            x.subVectors(A, w),
            x.y > 0 ? n.dollyOut(T()) : x.y < 0 && n.dollyIn(T()),
            w.copy(A),
            n.update();
        }
        function C(e) {
          y.set(e.clientX, e.clientY),
            b.subVectors(y, g).multiplyScalar(n.panSpeed),
            n.pan(b.x, b.y),
            g.copy(y),
            n.update();
        }
        function D() {
          c == s.PAN && n.dispatchEvent(o);
        }
        function N(e) {
          e.deltaY < 0 ? n.dollyIn(T()) : e.deltaY > 0 && n.dollyOut(T()),
            n.update();
        }
        function P(e) {
          var t = !1;
          switch (e.keyCode) {
            case n.keys.UP:
              n.pan(0, n.keyPanSpeed), (t = !0);
              break;
            case n.keys.BOTTOM:
              n.pan(0, -n.keyPanSpeed), (t = !0);
              break;
            case n.keys.LEFT:
              n.pan(n.keyPanSpeed, 0), (t = !0);
              break;
            case n.keys.RIGHT:
              n.pan(-n.keyPanSpeed, 0), (t = !0);
              break;
          }
          t && (e.preventDefault(), n.update());
        }
        function j(e) {
          if (1 == e.touches.length)
            _.set(e.touches[0].pageX, e.touches[0].pageY);
          else {
            var t = 0.5 * (e.touches[0].pageX + e.touches[1].pageX),
              n = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);
            _.set(t, n);
          }
        }
        function Y(e) {
          if (1 == e.touches.length)
            g.set(e.touches[0].pageX, e.touches[0].pageY);
          else {
            var t = 0.5 * (e.touches[0].pageX + e.touches[1].pageX),
              n = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);
            g.set(t, n);
          }
        }
        function R(e) {
          var t = e.touches[0].pageX - e.touches[1].pageX,
            n = e.touches[0].pageY - e.touches[1].pageY,
            i = Math.sqrt(t * t + n * n);
          w.set(0, i);
        }
        function B(e) {
          n.enableZoom && R(e), n.enablePan && Y(e);
        }
        function W(e) {
          n.enableZoom && R(e), n.enableRotate && j(e);
        }
        function I(e) {
          if (1 == e.touches.length)
            M.set(e.touches[0].pageX, e.touches[0].pageY);
          else {
            var t = 0.5 * (e.touches[0].pageX + e.touches[1].pageX),
              i = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);
            M.set(t, i);
          }
          v.subVectors(M, _).multiplyScalar(n.rotateSpeed);
          var r = n.domElement;
          n.enableRotateX && n.rotateLeft((2 * Math.PI * v.x) / r.clientHeight),
            n.enableRotateY && n.rotateUp((2 * Math.PI * v.y) / r.clientHeight),
            _.copy(M);
        }
        function q(e) {
          if (1 == e.touches.length)
            y.set(e.touches[0].pageX, e.touches[0].pageY);
          else {
            var t = 0.5 * (e.touches[0].pageX + e.touches[1].pageX),
              i = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);
            y.set(t, i);
          }
          b.subVectors(y, g).multiplyScalar(n.panSpeed),
            n.pan(b.x, b.y),
            g.copy(y);
        }
        function H(e) {
          var t = e.touches[0].pageX - e.touches[1].pageX,
            i = e.touches[0].pageY - e.touches[1].pageY,
            r = Math.sqrt(t * t + i * i);
          A.set(0, r),
            x.set(0, Math.pow(A.y / w.y, n.zoomSpeed)),
            n.dollyOut(x.y),
            w.copy(A);
        }
        function F(e) {
          n.enableZoom && H(e), n.enablePan && q(e);
        }
        function U(e) {
          n.enableZoom && H(e), n.enableRotate && I(e);
        }
        function X() {}
        function V(e) {
          if (!1 !== n.enabled) {
            var t;
            switch (
              (e.preventDefault(),
              n.domElement.focus ? n.domElement.focus() : window.focus(),
              e.button)
            ) {
              case 0:
                t = n.mouseButtons.LEFT;
                break;
              case 1:
                t = n.mouseButtons.MIDDLE;
                break;
              case 2:
                t = n.mouseButtons.RIGHT;
                break;
              default:
                t = -1;
            }
            switch (t) {
              case p['V'].DOLLY:
                if (!1 === n.enableZoom) return;
                S(e), (c = s.DOLLY);
                break;
              case p['V'].ROTATE:
                if (!1 === n.enableRotate) return;
                z(e), (c = s.ROTATE);
                break;
              case p['V'].PAN:
                if (e.ctrlKey || e.metaKey || e.shiftKey) {
                  if (!1 === n.enableRotate) return;
                  z(e), (c = s.ROTATE);
                } else {
                  if (!1 === n.enablePan) return;
                  O(e), (c = s.PAN);
                }
                break;
              default:
                c = s.NONE;
            }
            c !== s.NONE &&
              (document.addEventListener('mousemove', G, !1),
              document.addEventListener('mouseup', J, !1),
              n.dispatchEvent(r));
          }
        }
        function G(e) {
          if (!1 !== n.enabled)
            switch ((e.preventDefault(), c)) {
              case s.ROTATE:
                if (!1 === n.enableRotate) return;
                E(e);
                break;
              case s.DOLLY:
                if (!1 === n.enableZoom) return;
                k(e);
                break;
              case s.PAN:
                if (!1 === n.enablePan) return;
                C(e);
                break;
            }
        }
        function J(e) {
          !1 !== n.enabled &&
            (D(e),
            document.removeEventListener('mousemove', G, !1),
            document.removeEventListener('mouseup', J, !1),
            n.dispatchEvent(a),
            (c = s.NONE));
        }
        function Z(e) {
          !1 === n.enabled ||
            !1 === n.enableZoom ||
            (c !== s.NONE && c !== s.ROTATE) ||
            (!0 === n.enableZoomWithCtrl &&
              !1 === e.ctrlKey &&
              !1 === e.metaKey) ||
            (e.preventDefault(),
            e.stopPropagation(),
            n.dispatchEvent(r),
            N(e),
            n.dispatchEvent(a));
        }
        function K(e) {
          !1 !== n.enabled && !1 !== n.enableKeys && !1 !== n.enablePan && P(e);
        }
        function Q(e) {
          if (!1 !== n.enabled) {
            switch ((e.preventDefault(), e.touches.length)) {
              case 1:
                switch (n.touches.ONE) {
                  case p['Jb'].ROTATE:
                    if (!1 === n.enableRotate) return;
                    j(e), (c = s.TOUCH_ROTATE);
                    break;
                  case p['Jb'].PAN:
                    if (!1 === n.enablePan) return;
                    Y(e), (c = s.TOUCH_PAN);
                    break;
                  default:
                    c = s.NONE;
                }
                break;
              case 2:
                switch (n.touches.TWO) {
                  case p['Jb'].DOLLY_PAN:
                    if (!1 === n.enableZoom && !1 === n.enablePan) return;
                    B(e), (c = s.TOUCH_DOLLY_PAN);
                    break;
                  case p['Jb'].DOLLY_ROTATE:
                    if (!1 === n.enableZoom && !1 === n.enableRotate) return;
                    W(e), (c = s.TOUCH_DOLLY_ROTATE);
                    break;
                  default:
                    c = s.NONE;
                }
                break;
              default:
                c = s.NONE;
            }
            c !== s.NONE && n.dispatchEvent(r);
          }
        }
        function $(e) {
          if (!1 !== n.enabled)
            switch ((e.preventDefault(), e.stopPropagation(), c)) {
              case s.TOUCH_ROTATE:
                if (!1 === n.enableRotate) return;
                I(e), n.update();
                break;
              case s.TOUCH_PAN:
                if (!1 === n.enablePan) return;
                q(e), n.update();
                break;
              case s.TOUCH_DOLLY_PAN:
                if (!1 === n.enableZoom && !1 === n.enablePan) return;
                F(e), n.update();
                break;
              case s.TOUCH_DOLLY_ROTATE:
                if (!1 === n.enableZoom && !1 === n.enableRotate) return;
                U(e), n.update();
                break;
              default:
                c = s.NONE;
            }
        }
        function ee(e) {
          !1 !== n.enabled && (X(e), n.dispatchEvent(a), (c = s.NONE));
        }
        function te(e) {
          !1 !== n.enabled && e.preventDefault();
        }
        (n.rotateLeft = function (e) {
          d.theta -= e;
        }),
          (n.rotateUp = function (e) {
            d.phi -= e;
          }),
          (n.panLeft = (function () {
            var e = new p['Tb']();
            return function t(n, i) {
              e.setFromMatrixColumn(i, 0), e.multiplyScalar(-n), m.add(e);
            };
          })()),
          (n.panUp = (function () {
            var e = new p['Tb']();
            return function t(i, r) {
              !0 === n.screenSpacePanning
                ? e.setFromMatrixColumn(r, 1)
                : (e.setFromMatrixColumn(r, 0), e.crossVectors(n.object.up, e)),
                e.multiplyScalar(i),
                m.add(e);
            };
          })()),
          (n.pan = (function () {
            var e = new p['Tb']();
            return function t(i, r) {
              var a =
                n.domElement === document ? n.domElement.body : n.domElement;
              if (n.object.isPerspectiveCamera) {
                var o = n.object.position;
                e.copy(o).sub(n.target);
                var s = e.length();
                (s *= Math.tan(((n.object.fov / 2) * Math.PI) / 180)),
                  n.enablePanX &&
                    n.panLeft((2 * i * s) / a.clientHeight, n.object.matrix),
                  n.enablePanY &&
                    n.panUp((2 * r * s) / a.clientHeight, n.object.matrix);
              } else
                n.object.isOrthographicCamera
                  ? (n.enablePanX &&
                      n.panLeft(
                        (i * (n.object.right - n.object.left)) /
                          n.object.zoom /
                          a.clientWidth,
                        n.object.matrix
                      ),
                    n.enablePanY &&
                      n.panUp(
                        (r * (n.object.top - n.object.bottom)) /
                          n.object.zoom /
                          a.clientHeight,
                        n.object.matrix
                      ))
                  : (void 0, (n.enablePan = !1));
            };
          })()),
          (n.dollyOut = function (e) {
            n.object.isPerspectiveCamera
              ? (h /= e)
              : n.object.isOrthographicCamera
              ? ((n.object.zoom = Math.max(
                  n.minZoom,
                  Math.min(n.maxZoom, n.object.zoom * e)
                )),
                n.object.updateProjectionMatrix(),
                (f = !0))
              : (void 0, (n.enableZoom = !1));
          }),
          (n.dollyIn = function (e) {
            n.object.isPerspectiveCamera
              ? (h *= e)
              : n.object.isOrthographicCamera
              ? ((n.object.zoom = Math.max(
                  n.minZoom,
                  Math.min(n.maxZoom, n.object.zoom / e)
                )),
                n.object.updateProjectionMatrix(),
                (f = !0))
              : (void 0, (n.enableZoom = !1));
          }),
          n.domElement.addEventListener('contextmenu', te, !1),
          n.domElement.addEventListener('mousedown', V, !1),
          n.domElement.addEventListener('wheel', Z, !1),
          n.domElement.addEventListener('touchstart', Q, !1),
          n.domElement.addEventListener('touchend', ee, !1),
          n.domElement.addEventListener('touchmove', $, !1),
          n.domElement.addEventListener('keydown', K, !1),
          -1 === n.domElement.tabIndex && (n.domElement.tabIndex = 0),
          this.update();
      };
    (g.prototype = Object.create(p['t'].prototype)),
      (g.prototype.constructor = g);
    var y = function (e, t) {
      g.call(this, e, t),
        (this.mouseButtons.LEFT = p['V'].PAN),
        (this.mouseButtons.RIGHT = p['V'].ROTATE),
        (this.touches.ONE = p['Jb'].PAN),
        (this.touches.TWO = p['Jb'].DOLLY_ROTATE);
    };
    (y.prototype = Object.create(p['t'].prototype)),
      (y.prototype.constructor = y);
    var b = n('./src/_common_/utils/hdr/hdrLoader.ts');
    class w {
      constructor(e, t, n, i, r) {
        (this.ANIMATION_DONE_THRESHOLD = 0.999),
          (this.animationDuration = 1.5),
          (this.endCb = () => {}),
          (this.animationClock = new p['m']()),
          this.animationClock.start(),
          (this.camera = e),
          (this.positionStart = e.position.clone()),
          (this.positionEnd = t.clone()),
          (this.targetStart = n),
          (this.targetEnd = i),
          r && (this.endCb = r);
      }
      setAnimationDurationDuration(e) {
        this.animationDuration = e;
      }
      frame() {
        const e = this.animationClock.getElapsedTime() / this.animationDuration,
          t = this.easeOut(e);
        if (e <= 1 && t <= this.ANIMATION_DONE_THRESHOLD) {
          this.camera.position.lerpVectors(
            this.positionStart,
            this.positionEnd,
            t
          );
          const e = new p['Tb']().lerpVectors(
            this.targetStart,
            this.targetEnd,
            t
          );
          return this.camera.lookAt(e), !0;
        }
        return setTimeout(() => this.endCb(), 10), !1;
      }
      easeOut(e) {
        return 1 - --e * e * e * e;
      }
    }
    var A = n('./src/core/scripts/core.ts');
    const x = 'www',
      L = !1,
      T = 'v1',
      z = new Map([
        ['default', p['Pb']],
        ['linear', p['R']],
        ['reinhard', p['zb']],
        ['uncharted2', p['Pb']],
        ['cineon', p['k']],
        ['notone', p['ib']],
      ]);
    var S, O;
    (function (e) {
      (e['NONE'] = 'none'),
        (e['SUPERIOR'] = 'superior'),
        (e['INFERIOR'] = 'inferior');
    })(S || (S = {})),
      (function (e) {
        (e['LOCAL'] = 'local'),
          (e['TEST'] = 'test'),
          (e['STAGE'] = 'stage'),
          (e['PROD'] = 'prod');
      })(O || (O = {}));
    class E {
      constructor() {
        (this.envMode = null),
          (this.version = ''),
          (this.builder = ''),
          (this.stats = 0),
          (this.model = ''),
          (this.autoplay = 1),
          (this.autoLoad = 1),
          (this.loadGlb = 0),
          (this.showPreloader = 1),
          (this.showPlaceholder = 1),
          (this.turntable = 0),
          (this.mouseFollow = 0),
          (this.showInteractionPrompt = 1),
          (this.showGesturePrompts = 1),
          (this.gestureHandling = S.INFERIOR),
          (this.rotate = 1),
          (this.rotateX = 1),
          (this.rotateY = 1),
          (this.pan = 1),
          (this.panX = 1),
          (this.panY = 1),
          (this.zoom = 1),
          (this.zoomIn = 100),
          (this.zoomOut = 1 / 0),
          (this.minAzimuth = -1 / 0),
          (this.maxAzimuth = 1 / 0),
          (this.minPolar = 0),
          (this.maxPolar = 360),
          (this.env = 'studio3'),
          (this.tonemap = 'default'),
          (this.exposure = 1),
          (this.gamma = 2.2),
          (this.baseColorGammaCorrection = 0),
          (this.arIcon = ''),
          (this.arX = 20),
          (this.arY = 20),
          (this.noAr = 0),
          (this.arAndroid = null),
          (this.arApple = null),
          (this.qrBackLink = 0),
          (this.template = !1);
      }
    }
    function k(e) {
      const t = new E(),
        n = {};
      return (
        e.length &&
          e
            .substr(1)
            .split('&')
            .map((e) => {
              const i = e.split('=')[0],
                r = e.split('=')[1];
              if (Object.keys(t).indexOf(i) >= 0 && r.length > 0) {
                const e = {},
                  a = isNaN(Number(r)) ? r : Number(r);
                (e[i] = a), Object.assign(t, e), (n[i] = a);
              }
            }),
        D(t, n),
        t
      );
    }
    const C = (e) => {
        const t = new E(),
          n = {},
          i = (t) => {
            const n = e.getAttribute(t);
            return null === n || 0 === n.length
              ? null
              : isNaN(Number(n))
              ? n
              : Number(n);
          };
        return (
          Object.getOwnPropertyNames(t).forEach((e) => {
            const t = i(e);
            null !== t && (n[e] = t);
          }),
          Object.assign(t, n),
          D(t, n),
          t
        );
      },
      D = (e, t) => {
        e.gestureHandling === S.NONE &&
          ((e.rotate = void 0 !== t.rotate ? Number(t.rotate) : 0),
          (e.pan = void 0 !== t.pan ? Number(t.pan) : 0),
          (e.zoom = void 0 !== t.zoom ? Number(t.zoom) : 0));
      },
      N = [
        `#define PHYSICAL`,
        `uniform vec3 diffuse;`,
        `uniform vec3 emissive;`,
        `uniform float roughness;`,
        `uniform float metalness;`,
        `uniform float opacity;`,
        `#ifndef STANDARD`,
        `    uniform float clearCoat;`,
        `    uniform float clearCoatRoughness;`,
        `#endif`,
        `varying vec3 vViewPosition;`,
        `#ifndef FLAT_SHADED`,
        `    varying vec3 vNormal;`,
        `    #ifdef USE_TANGENT`,
        `        varying vec3 vTangent;`,
        `        varying vec3 vBitangent;`,
        `    #endif`,
        `#endif`,
        `#include <common>`,
        `#include <packing>`,
        `#include <dithering_pars_fragment>`,
        `#include <color_pars_fragment>`,
        `#include <uv_pars_fragment>`,
        `#include <uv2_pars_fragment>`,
        `#include <map_pars_fragment>`,
        `#include <alphamap_pars_fragment>`,
        `#include <aomap_pars_fragment>`,
        `#include <lightmap_pars_fragment>`,
        `#include <emissivemap_pars_fragment>`,
        `#include <bsdfs>`,
        `#include <cube_uv_reflection_fragment>`,
        `#include <envmap_common_pars_fragment>`,
        `#include <envmap_physical_pars_fragment>`,
        `#include <fog_pars_fragment>`,
        `#include <lights_pars_begin>`,
        `#include <lights_physical_pars_fragment>`,
        `#include <shadowmap_pars_fragment>`,
        `#include <bumpmap_pars_fragment>`,
        `#include <normalmap_pars_fragment>`,
        `#include <roughnessmap_pars_fragment>`,
        `#include <metalnessmap_pars_fragment>`,
        `#include <logdepthbuf_pars_fragment>`,
        `#include <clipping_planes_pars_fragment>`,
        `void main() {`,
        `    #include <clipping_planes_fragment>`,
        `    vec4 diffuseColor = vec4( diffuse, opacity );`,
        `    ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );`,
        `    vec3 totalEmissiveRadiance = emissive;`,
        `    #include <logdepthbuf_fragment>`,
        `    #include <map_fragment>`,
        `    #include <color_fragment>`,
        `    #include <alphamap_fragment>`,
        `    #include <alphatest_fragment>`,
        `    #include <roughnessmap_fragment>`,
        `    #include <metalnessmap_fragment>`,
        `    #include <normal_fragment_begin>`,
        `    #include <normal_fragment_maps>`,
        `    #include <emissivemap_fragment>`,
        `    #include <lights_physical_fragment>`,
        `    #include <lights_fragment_begin>`,
        `    #include <lights_fragment_maps>`,
        `    #include <lights_fragment_end>`,
        `    #include <aomap_fragment>`,
        `    vec3 outgoingLight = reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;`,
        `    #ifndef USE_LIGHTMAP`,
        `        outgoingLight += reflectedLight.directDiffuse;`,
        `    #endif`,
        `    gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,
        `    #include <tonemapping_fragment>`,
        `    #include <encodings_fragment>`,
        `    #include <fog_fragment>`,
        `    #include <premultiplied_alpha_fragment>`,
        `    #include <dithering_fragment>`,
        `}`,
      ].join('\n');
    var P =
      (void 0 && (void 0).__awaiter) ||
      function (e, t, n, i) {
        function r(e) {
          return e instanceof n
            ? e
            : new n(function (t) {
                t(e);
              });
        }
        return new (n || (n = Promise))(function (n, a) {
          function o(e) {
            try {
              c(i.next(e));
            } catch (e) {
              a(e);
            }
          }
          function s(e) {
            try {
              c(i['throw'](e));
            } catch (e) {
              a(e);
            }
          }
          function c(e) {
            e.done ? n(e.value) : r(e.value).then(o, s);
          }
          c((i = i.apply(e, t || [])).next());
        });
      };
    class j {
      constructor(e, t, n, i) {
        (this.isReady = !1),
          (this.needsUpdate = !1),
          (this.stats = f()),
          (this.renderedLastFrame = !0),
          (this.autoUpdateAnimation = !1),
          (this.autoUpdateLast = 0),
          (this.autoUpdateRate = 100),
          (this.autoUpdateVideoTexture = null),
          (this.orbitControls = null),
          (this.orbitControlsTargets = new Map()),
          (this.cameraAnimator = null),
          (this.autoRotating = !1),
          (this.autoRotateDelayOnUpdate = 3e3),
          (this.TARGET_UPDATE_RAYS_SPREAD_X = 0.2),
          (this.TARGET_UPDATE_RAYS_SPREAD_Y = 0.2),
          (this.TARGET_UPDATE_RAYS_AMOUNT_X = 4),
          (this.TARGET_UPDATE_RAYS_AMOUNT_Y = 4),
          (this.ocUpdateStartCb = () => {
            this.orbitControlsTargets.set(
              this.camera.uuid,
              this.orbitControls.target.clone()
            ),
              this.autoRotating &&
                ((this.autoRotating = !1),
                (this.orbitControls.autoRotate = !1)),
              this.core.annotationsManager.isEnabled() &&
                this.core.annotationsManager.closeAll();
          }),
          (this.ocUpdateEndCb = () => {
            this.params.turntable &&
              setTimeout(() => {
                (this.autoRotating = !0), (this.orbitControls.autoRotate = !0);
              }, this.autoRotateDelayOnUpdate);
          }),
          (this.handleOCPanEnd = () => {
            this.tryTargetUpdate(
              this.TARGET_UPDATE_RAYS_SPREAD_X,
              this.TARGET_UPDATE_RAYS_SPREAD_Y,
              this.TARGET_UPDATE_RAYS_AMOUNT_X,
              this.TARGET_UPDATE_RAYS_AMOUNT_Y
            );
          }),
          (this.params = e),
          (this.paths = t),
          (this.canvasElem = n),
          (this.documentRoot = i),
          this.params.stats && document.body.appendChild(this.stats.dom);
      }
      init() {
        return P(this, void 0, void 0, function* () {
          void 0;
          try {
            (this.renderer = new p['Xb']({
              alpha: !0,
              antialias: !0,
              canvas: this.canvasElem,
            })),
              (this.renderer.outputEncoding = p['y']),
              (this.renderer.gammaFactor = this.params.gamma),
              (this.renderer.toneMappingExposure = this.params.exposure),
              (this.renderer.toneMapping = z.get(this.params.tonemap)),
              this.renderer.setClearColor(16777215, 0),
              this.renderer.setPixelRatio(window.devicePixelRatio);
            const e = new v(),
              t = `${this.paths.modelUrl}.gltf`,
              n = `${this.paths.modelUrlGlb}.glb`;
            let i = this.params.loadGlb ? n : t,
              r = yield Object(c['a'])(i);
            if (!r) {
              const e = () => {
                throw Error('Project not found');
              };
              this.params.loadGlb
                ? ((r = yield Object(c['a'])(t)), r ? (i = t) : e())
                : e();
            }
            const a = yield this.loadModel(e, i);
            'none' !== this.params.env &&
              (yield this.loadEnvTexture(
                `${this.paths.envLoResFolder}${this.params.env}.zip`
              ),
              this.loadEnvTexture(
                `${this.paths.envFolder}${this.params.env}.zip`
              )),
              (this.scene = new p['Bb']()),
              this.scene.add(a.scene),
              (this.sceneBoundingBox = new p['e']().setFromObject(this.scene)),
              (this.core = new A['Core'](
                this.renderer,
                this.scene,
                this.canvasElem,
                this.documentRoot
              )),
              this.core.sigNeedsUpdate.connect(() => (this.needsUpdate = !0)),
              this.core.sigAutoUpdateVideoTexture.connect(
                (e) => (this.autoUpdateVideoTexture = e)
              ),
              this.core.sigSetVectaryMaterialProps.connect((e) =>
                this.setVectaryMaterialProperties(e)
              ),
              this.core.sigSwitchView.connect(([e, t]) =>
                this.switchView(e, t)
              ),
              this.core.sigSwitchViewAsync.connect(([e, t]) =>
                this.switchViewAsync(e, t)
              ),
              this.core.sigFocusOnPoint.connect(([e, t]) =>
                this.focusOnPoint(e, t)
              ),
              this.core.sigMoveView.connect((e) => this.moveView(e)),
              this.core.sigRotateView.connect((e) => this.rotateView(e)),
              this.core.sigZoomView.connect((e) => this.zoomView(e)),
              this.core.sigGetViewState.connect((e) => this.getViewState(e)),
              this.core.sigApplyViewState.connect((e) =>
                this.applyViewState(e)
              ),
              this.core.sigPlay.connect(([e, t, n]) => this.play(e, t, n)),
              this.core.initSceneStructure(a.scene),
              (this.clock = new p['m']()),
              (this.mixer = new p['b'](this.scene)),
              (this.animations = a.animations),
              this.core.allMeshes.forEach((e) => {
                const t = e.material;
                this.setVectaryMaterialProperties(t);
              }),
              this.core.allCameras.forEach((e) =>
                this.orbitControlsTargets.set(
                  e.uuid,
                  this.calculateLookAtTarget(e)
                )
              ),
              (this.camera = this.core.allCameras[
                this.core.allCameras.length - 1
              ]),
              (this.autoRotating = !!this.params.turntable),
              this.setOrbitControls(),
              this.addCustomEvents(this.core.allMeshes),
              this.onWindowResize(),
              this.renderLoop();
          } catch (e) {
            return Promise.reject(e);
          }
        });
      }
      dispose() {
        this.orbitControls.dispose(), this.renderer.dispose();
      }
      onWindowResize() {
        if (this.camera instanceof p['mb'])
          (this.camera.aspect =
            this.canvasElem.clientWidth / this.canvasElem.clientHeight),
            this.camera.updateProjectionMatrix();
        else if (this.camera instanceof p['lb']) {
          let e = this.canvasElem.clientWidth / this.canvasElem.clientHeight;
          (this.camera.left = this.camera.bottom * e),
            (this.camera.right = this.camera.top * e),
            this.camera.updateProjectionMatrix();
        }
        this.renderer && this.renderer.setPixelRatio(window.devicePixelRatio),
          this.renderer &&
            this.renderer.setSize(
              this.canvasElem.clientWidth,
              this.canvasElem.clientHeight,
              !1
            ),
          (this.needsUpdate = !0);
      }
      setVectaryMaterialProperties(e) {
        this.params.baseColorGammaCorrection &&
          e.color.convertLinearToGamma(2.2),
          (e.envMap = this.envTextureHDR),
          (e.envMapIntensity = 0.92);
        const t = new Map();
        t.set('ENV_MAP_DIFFUSE_MULTIPLIER', '1.0'),
          t.set('AOMAP_UV_CHANNEL', 'vUv2'),
          e.lightMap &&
            !0 === e.lightMap.environmentBaked &&
            t.set('ENV_MAP_DIFFUSE_MULTIPLIER', '0.0'),
          e.aoMap && 0 === e.aoMap.texCoord && t.set('AOMAP_UV_CHANNEL', 'vUv'),
          (e.onBeforeCompile = (e) => {
            let n = '';
            for (let [e, i] of t) n += '#define ' + e + ' ' + i + ' \n';
            e.fragmentShader = n + N;
          }),
          (e.needsUpdate = !0);
      }
      renderLoop() {
        if (
          ((this.renderedLastFrame = !1),
          window.requestAnimationFrame(this.renderLoop.bind(this)),
          this.autoUpdateAnimation
            ? (this.mixer.update(this.clock.getDelta()),
              this.renderer.render(this.scene, this.camera),
              (this.renderedLastFrame = !0))
            : this.cameraAnimator
            ? (this.cameraAnimator.frame() ||
                (this.setOrbitControls(), (this.cameraAnimator = null)),
              this.renderer.render(this.scene, this.camera),
              (this.renderedLastFrame = !0))
            : this.autoRotating
            ? (this.orbitControls.update(),
              this.renderer.render(this.scene, this.camera),
              (this.renderedLastFrame = !0))
            : this.needsUpdate &&
              (this.orbitControls.update() || (this.needsUpdate = !1),
              this.renderer.render(this.scene, this.camera),
              (this.renderedLastFrame = !0)),
          this.autoUpdateVideoTexture &&
            this.autoUpdateVideoTexture.videoElem.readyState >=
              this.autoUpdateVideoTexture.videoElem.HAVE_CURRENT_DATA)
        ) {
          const e = Date.now();
          e - this.autoUpdateLast > this.autoUpdateRate &&
            ((this.autoUpdateLast = e), (this.needsUpdate = !0));
        }
        this.core.annotationsManager.isEnabled() &&
          this.core.annotationsManager.updateAll(this.camera),
          this.params.stats && this.stats.update();
      }
      loadModel(e, t) {
        return new Promise((n, i) => {
          e.load(
            t,
            (e) => n(e),
            (e) => {},
            (e) => i(e)
          );
        });
      }
      loadEnvTexture(e) {
        return P(this, void 0, void 0, function* () {
          return new Promise((t, n) =>
            P(this, void 0, void 0, function* () {
              yield Object(b['a'])(e, this.renderer)
                .then((e) => {
                  (this.envTextureHDR = e), t();
                })
                .catch((e) => n(e));
            })
          );
        });
      }
      tryTargetUpdate(e, t, n, i) {
        const r = new Array(n * i);
        var a = 0 - e / 2,
          o = 0 - t / 2,
          s = 0;
        for (a; a <= e / 2; a += e / (n - 1)) {
          for (o; o <= t / 2; o += t / (i - 1)) r[s] = new p['Sb'](a, o);
          o = 0 - t / 2;
        }
        var c = 0,
          u = 0;
        if (
          (r.forEach((e) => {
            const t = new p['xb']();
            t.setFromCamera(e, this.camera);
            const n = t.intersectObjects(this.core.allMeshes);
            n.length > 0 && ((c += n[0].distance), u++);
          }),
          u > 0)
        ) {
          const e = c / u;
          var l = new p['Tb']()
            .subVectors(
              this.orbitControls.target,
              this.orbitControls.object.position
            )
            .normalize()
            .multiplyScalar(e);
          (this.orbitControls.target = new p['Tb']().addVectors(
            this.orbitControls.object.position,
            l
          )),
            this.orbitControls.update();
        }
      }
      disposeOrbitControls() {
        null !== this.orbitControls &&
          (this.orbitControls.removeEventListener(
            'start',
            this.ocUpdateStartCb
          ),
          this.orbitControls.removeEventListener('end', this.ocUpdateEndCb),
          this.orbitControls.removeEventListener('panEnd', this.handleOCPanEnd),
          this.orbitControls.dispose(),
          (this.orbitControls = null));
      }
      setOrbitControls() {
        this.disposeOrbitControls(),
          (this.orbitControls = new g(this.camera, this.canvasElem)),
          (this.orbitControls.enableDamping = !0),
          (this.orbitControls.dampingFactor = 0.12),
          (this.orbitControls.screenSpacePanning = !0),
          (this.orbitControls.target = this.orbitControlsTargets
            .get(this.camera.uuid)
            .clone()),
          this.orbitControls.addEventListener('start', this.ocUpdateStartCb),
          this.orbitControls.addEventListener('end', this.ocUpdateEndCb),
          this.orbitControls.addEventListener('panEnd', this.handleOCPanEnd),
          (this.orbitControls.minAzimuthAngle =
            (this.params.minAzimuth * Math.PI) / 180),
          (this.orbitControls.maxAzimuthAngle =
            (this.params.maxAzimuth * Math.PI) / 180),
          (this.orbitControls.minPolarAngle =
            (this.params.minPolar * Math.PI) / 180),
          (this.orbitControls.maxPolarAngle =
            (this.params.maxPolar * Math.PI) / 180),
          this.params.zoomIn > 100 && (this.params.zoomIn = 110),
          this.params.zoomOut < 0 && (this.params.zoomOut = 100),
          (this.orbitControls.minDistance =
            Math.abs(100 - this.params.zoomIn) / 100),
          (this.orbitControls.maxDistance = (this.params.zoomOut + 100) / 100),
          (this.orbitControls.minZoom =
            Math.abs(100 - this.params.zoomIn) / 100),
          (this.orbitControls.maxZoom = (this.params.zoomOut + 100) / 100),
          this.autoRotating &&
            ((this.orbitControls.autoRotate = !0),
            (this.orbitControls.autoRotateSpeed = -this.params.turntable)),
          (this.orbitControls.enableRotate = 1 === this.params.rotate),
          0 === this.params.rotateX && (this.orbitControls.enableRotateX = !1),
          0 === this.params.rotateY && (this.orbitControls.enableRotateY = !1),
          (this.orbitControls.enablePan = 1 === this.params.pan),
          0 === this.params.panX && (this.orbitControls.enablePanX = !1),
          0 === this.params.panY && (this.orbitControls.enablePanY = !1),
          1 === this.params.zoom
            ? ((this.orbitControls.enableZoom = !0),
              this.params.gestureHandling === S.INFERIOR
                ? (this.orbitControls.enableZoomWithCtrl = !0)
                : (this.orbitControls.enableZoomWithCtrl = !1))
            : ((this.orbitControls.enableZoom = !1),
              (this.params.showGesturePrompts = 0)),
          this.orbitControls.update(),
          (this.needsUpdate = !0);
      }
      calculateLookAtTarget(e) {
        const t = new p['Tb'](0, 0, -1);
        return (
          t.applyQuaternion(e.quaternion),
          t.multiplyScalar(e.userData.targetDistance),
          t.add(e.position),
          t
        );
      }
      addCustomEvents(e) {
        const t = (e) => {
          let t = e.clone();
          return function (e) {
            return (
              !t.equals(e.matrixWorld) && ((t = e.matrixWorld.clone()), !0)
            );
          };
        };
        e.forEach((e) => {
          const n = t(e.matrixWorld);
          e.onBeforeRender = () => {
            n(e) && e.dispatchEvent({ type: 'transition' });
          };
        });
      }
      focusOnPoint(e, t) {
        const n = this.canvasElem.getBoundingClientRect(),
          i = new p['Sb']((e / n.width) * 2 - 1, (-t / n.height) * 2 + 1),
          r = new p['xb']();
        r.setFromCamera(i, this.camera);
        const a = r.intersectObjects(this.core.allGroupsAndMeshes);
        if (a.length > 0) {
          var o = new p['Tb']();
          this.sceneBoundingBox.getSize(o);
          var s = Math.sqrt(
              Math.pow(o.x, 2) + Math.pow(o.y, 2) + Math.pow(o.z, 2)
            ),
            c = 0.4 * s;
          const e = new p['Tb']().subVectors(this.camera.position, a[0].point);
          e.length() < c && (c = e.length()), e.normalize().multiplyScalar(c);
          const t = new p['Tb']().addVectors(a[0].point, e);
          (this.cameraAnimator = new w(
            this.camera,
            t,
            this.orbitControlsTargets.get(this.camera.uuid).clone(),
            a[0].point
          )),
            this.cameraAnimator.setAnimationDurationDuration(0.8),
            this.orbitControls.reset(),
            this.orbitControls.dispose(),
            this.orbitControlsTargets.set(this.camera.uuid, a[0].point);
        }
      }
      switchView(e, t) {
        const n = this.core.allCameras.find((t) => t.name === e);
        n
          ? ((this.cameraAnimator = new w(
              this.camera,
              n.position,
              this.orbitControlsTargets.get(this.camera.uuid).clone(),
              this.orbitControlsTargets.get(n.uuid).clone()
            )),
            this.orbitControls.reset(),
            this.orbitControls.dispose(),
            this.orbitControlsTargets.set(
              this.camera.uuid,
              this.orbitControlsTargets.get(n.uuid)
            ),
            this.onWindowResize(),
            t(!0))
          : t(!1);
      }
      switchViewAsync(e, t) {
        t(
          new Promise((t, n) => {
            const i = this.core.allCameras.find((t) => t.name === e);
            i
              ? ((this.cameraAnimator = new w(
                  this.camera,
                  i.position,
                  this.orbitControlsTargets.get(this.camera.uuid).clone(),
                  this.orbitControlsTargets.get(i.uuid).clone(),
                  () => t(!0)
                )),
                this.orbitControls.reset(),
                this.orbitControls.dispose(),
                this.orbitControlsTargets.set(
                  this.camera.uuid,
                  this.orbitControlsTargets.get(i.uuid)
                ),
                this.onWindowResize())
              : t(!1);
          })
        );
      }
      rotateView(e) {
        this.orbitControls.rotateLeft(e[0]),
          this.orbitControls.rotateUp(e[1]),
          this.orbitControls.update(),
          (this.needsUpdate = !0);
      }
      moveView(e) {
        this.orbitControls.panLeft(e[0], this.orbitControls.object.matrix),
          this.orbitControls.panUp(e[1], this.orbitControls.object.matrix),
          (this.orbitControls.screenSpacePanning = !1),
          this.orbitControls.panUp(e[2], this.orbitControls.object.matrix),
          (this.orbitControls.screenSpacePanning = !0),
          this.orbitControls.update(),
          (this.needsUpdate = !0);
      }
      zoomView(e) {
        this.orbitControls.dollyIn(e),
          this.orbitControls.update(),
          (this.needsUpdate = !0);
      }
      getViewState(e) {
        e(
          new Promise((e, t) =>
            P(this, void 0, void 0, function* () {
              const t = yield this.orbitControls.saveStateExternal();
              e({
                target: t.target.toArray(),
                position: t.position.toArray(),
                zoom: t.zoom,
              });
            })
          )
        );
      }
      applyViewState(e) {
        const t = {
          target: new p['Tb'](e.target[0], e.target[1], e.target[2]),
          position: new p['Tb'](e.position[0], e.position[1], e.position[2]),
          zoom: e.zoom,
        };
        this.orbitControls.resetExternal(t), (this.needsUpdate = !0);
      }
      play(e, t, n) {
        const i = this.animations[e];
        if (i) {
          const e = this.mixer.clipAction(i);
          (e.clampWhenFinished = !0),
            (e.paused = !1),
            e.setLoop(p['U'], 0),
            (e.timeScale = t),
            e.play(),
            this.clock.start(),
            (this.autoUpdateAnimation = !0),
            this.mixer.addEventListener('finished', (e) => {
              (this.autoUpdateAnimation = !1), this.clock.stop();
            }),
            n(!0);
        }
        n(!1);
      }
      didRenderLastFrame() {
        return this.renderedLastFrame;
      }
    }
    var Y,
      R = n('./src/_common_/components/qr_code/qr_code.ts'),
      B =
        (void 0 && (void 0).__awaiter) ||
        function (e, t, n, i) {
          function r(e) {
            return e instanceof n
              ? e
              : new n(function (t) {
                  t(e);
                });
          }
          return new (n || (n = Promise))(function (n, a) {
            function o(e) {
              try {
                c(i.next(e));
              } catch (e) {
                a(e);
              }
            }
            function s(e) {
              try {
                c(i['throw'](e));
              } catch (e) {
                a(e);
              }
            }
            function c(e) {
              e.done ? n(e.value) : r(e.value).then(o, s);
            }
            c((i = i.apply(e, t || [])).next());
          });
        };
    (function (e) {
      (e['AR'] = 'ar'),
        (e['WATERMARK'] = 'watermark'),
        (e['EDIT'] = 'edit'),
        (e['FORK'] = 'fork');
    })(Y || (Y = {}));
    class W {
      constructor(e) {
        (this.showGesturePromptsRemoveDelay = 1e3),
          (this.documentRoot = e),
          this.addBaseHtmlCss(a, r),
          (this.contentRoot = e.querySelector('.vctr-viewer-content')),
          (this.canvasElem = e.querySelector('#mainCanvas')),
          (this.autoplayElem = e.querySelector('.play')),
          (this.preloaderElem = e.querySelector('.preloader')),
          (this.gesturesPromptElem = e.querySelector('.gesturesPrompt')),
          (this.thumbnailElem = this.documentRoot.querySelector('.thumb')),
          (this.thumbnailImgElem = this.thumbnailElem.children[0]),
          (this.errorElem = this.documentRoot.querySelector('.errorMessage')),
          (this.interactionPromptElem = e.querySelector(
            '.interactiveIndicator'
          )),
          (this.arButton = this.documentRoot.querySelector(`.${Y.AR}`)),
          this.setCanvasMode();
      }
      addBaseHtmlCss(e, t) {
        this.documentRoot.innerHTML
          ? (this.documentRoot.innerHTML = `<style>${e}</style>${t}`)
          : (this.documentRoot.body.innerHTML = `<style>${e}</style>${t}`);
      }
      setCanvasMode() {
        this.canvasElem.clientWidth < this.canvasElem.clientHeight
          ? (this.canvasElem.parentElement.className =
              'vctr-viewer-content portrait')
          : this.canvasElem.clientWidth === this.canvasElem.clientHeight
          ? (this.canvasElem.parentElement.className =
              'vctr-viewer-content square')
          : (this.canvasElem.parentElement.className =
              'vctr-viewer-content landscape');
      }
      showPreloader() {
        (this.preloaderElem.style.display = ''),
          this.preloaderElem.classList.add('active'),
          this.preloaderElem.classList.add('progress-load');
      }
      hidePreloader() {
        this.preloaderElem.classList.remove('active'),
          (this.preloaderElem.style.display = 'none');
      }
      setActiveCanvas(e) {
        this.canvasElem.classList.toggle('active', e);
      }
      initInferiorGesturesPrompt() {
        void 0;
        const e = Object(s['c'])()
            ? 'Two fingers + Pinch'
            : Object(s['b'])()
            ? 'Cmd + Scroll'
            : 'Ctrl + Scroll',
          t = this.gesturesPromptElem;
        function n(e, n) {
          const i = 1e3,
            r = n;
          let a = null;
          return function n(o) {
            o.composedPath().find((e) => e === r) &&
              (clearTimeout(a),
              (a = null),
              t.classList.add('active'),
              (a = self.setTimeout(() => {
                t.classList.add('fadeOut'),
                  self.setTimeout(() => {
                    clearTimeout(a),
                      (a = null),
                      t.classList.remove('fadeOut'),
                      t.classList.remove('active');
                  }, i);
              }, e)));
          };
        }
        if (
          ((t.innerHTML = `Use <strong>${e}</strong> to zoom`),
          Object(s['c'])())
        )
          this.gesturesPromptElem.classList.remove('active');
        else {
          const e = n(this.showGesturePromptsRemoveDelay, this.canvasElem);
          this.documentRoot.addEventListener('wheel', e);
        }
      }
      initInteractionPrompt() {
        void 0,
          this.interactionPromptElem.classList.add('active'),
          this.interactionPromptElem.classList.add('wiggle'),
          this.interactionPromptElem.classList.add('visible');
      }
      getInteractionPrompt() {
        return this.interactionPromptElem;
      }
      prepareLinkAndActivate(e, t, n) {
        const i = this.documentRoot.querySelector(`.${e}`);
        i && i instanceof HTMLAnchorElement
          ? (void 0,
            i.classList.add('active'),
            (i.href = t),
            n && i.addEventListener('click', n))
          : void 0;
      }
      setAndroidLink(e, t) {
        (this.arButton.href = e),
          this.AndroidUrl || this.arButton.addEventListener('click', t),
          (this.AndroidUrl = e);
      }
      setAppleLink(e, t) {
        (this.arButton.href = e),
          this.AppleUrl || this.arButton.addEventListener('click', t),
          (this.AppleUrl = e);
      }
      setQRCode(e) {
        this.QRUrl ||
          this.arButton.addEventListener('click', (e) => {
            e.preventDefault(), this.openQRCode();
          }),
          (this.QRUrl = e);
      }
      openQRCode() {
        return (
          this.modalElem && this.modalElem.remove(),
          !!this.QRUrl &&
            ((this.modalElem = new R['a'](this.QRUrl, !0).element()),
            this.contentRoot.appendChild(this.modalElem),
            !0)
        );
      }
      triggerARClick() {
        return this.arButton.click(), !0;
      }
      setCustomARIcon(e) {
        const t = this.arButton.querySelector('img'),
          n = this.arButton.querySelector('svg');
        e.arIcon &&
          ((t.src = e.arIcon),
          (n.style.display = 'none'),
          t.classList.add('active')),
          e.arX && (this.arButton.style.right = `${e.arX}px`),
          e.arY && (this.arButton.style.top = `${e.arY}px`),
          e.noAr || this.arButton.classList.add('active');
      }
      setPlaceholder(e, t) {
        t &&
          (this.thumbnailImgElem.addEventListener('onerror', (e) => {
            this.thumbnailElem.style.display = 'none';
          }),
          (this.thumbnailImgElem.src = t)),
          e
            ? this.thumbnailElem.classList.add('active')
            : this.thumbnailElem.classList.remove('active');
      }
      initAutoplayDelay() {
        return B(this, void 0, void 0, function* () {
          return new Promise((e, t) => {
            this.autoplayElem.classList.add('active'),
              this.autoplayElem.addEventListener(
                'click',
                () => {
                  this.autoplayElem.classList.remove('active'), e();
                },
                { once: !0 }
              );
          });
        });
      }
      setCanvasWidth(e) {
        e.toString().includes('pct')
          ? (this.canvasElem.parentElement.style.width = `${
              e.split('pct')[0]
            }%`)
          : (this.canvasElem.parentElement.style.width = `${e}px`);
      }
      setCanvasHeight(e) {
        e.toString().includes('pct')
          ? (this.canvasElem.parentElement.style.height = `${
              e.split('pct')[0]
            }%`)
          : (this.canvasElem.parentElement.style.height = `${e}px`);
      }
      showErrorMessage(e, t = !1) {
        t ? (this.errorElem.innerHTML = e) : (this.errorElem.innerText = e),
          this.interactionPromptElem.remove(),
          this.errorElem.classList.add('active'),
          this.hidePreloader(),
          this.setPlaceholder(!0),
          this.setActiveCanvas(!1),
          this.documentRoot
            .querySelector(`.${Y.AR}`)
            .classList.remove('active'),
          this.documentRoot
            .querySelector(`.${Y.EDIT}`)
            .classList.remove('active'),
          this.documentRoot
            .querySelector(`.${Y.EDIT}`)
            .classList.remove('active'),
          this.documentRoot
            .querySelector(`.${Y.WATERMARK}`)
            .classList.remove('active');
      }
    }
    var I = n('./src/_common_/types.ts');
    class q {
      constructor(e) {
        this.cloud = e;
      }
    }
    var H;
    (function (e) {
      (e['TEST'] = 'test'), (e['STAGE'] = 'stage'), (e['PROD'] = 'www');
    })(H || (H = {}));
    const F = (e, t, n) => {
        let i = '';
        return (
          n &&
            (i += Object.values(H).includes(n)
              ? `https://${n}.vectary.com`
              : `${n}`),
          (i += e),
          fetch(i, t)
        );
      },
      U = (e = 'GET', t) => {
        const n = {
          method: e,
          mode: 'cors',
          cache: 'no-cache',
          credentials: 'same-origin',
          headers:
            t && ('string' === typeof t || t instanceof String)
              ? { 'Content-Type': 'application/json' }
              : {},
          redirect: 'follow',
          referrer: 'no-referrer',
        };
        return t && (n.body = t), n;
      };
    function X(e) {
      return e.status >= 400
        ? Promise.reject(e.status)
        : Promise.resolve(e.json());
    }
    function V(e) {
      return e.status >= 400
        ? Promise.reject(e.json())
        : Promise.resolve(e.json());
    }
    void 0 && (void 0).__awaiter;
    var G, J, Z;
    (function (e) {
      (e['success'] = 'success'),
        (e['fail'] = 'fail'),
        (e['impossible'] = 'impossible');
    })(G || (G = {})),
      (function (e) {
        (e['team'] = 'team'),
          (e['seat'] = 'seat'),
          (e['folder'] = 'folder'),
          (e['model'] = 'model'),
          (e['user'] = 'user'),
          (e['counter'] = 'counter'),
          (e['event'] = 'event'),
          (e['questionnaire'] = 'questionnaire');
      })(J || (J = {})),
      (function (e) {
        (e['createWithEmail'] = 'createWithEmail'),
          (e['createWithFacebook'] = 'createWithFacebook'),
          (e['createWithGoogle'] = 'createWithGoogle'),
          (e['loginWithEmail'] = 'loginWithEmail'),
          (e['loginWithFacebook'] = 'loginWithFacebook'),
          (e['loginWithGoogle'] = 'loginWithGoogle'),
          (e['move'] = 'move'),
          (e['copy'] = 'copy'),
          (e['undelete'] = 'undelete'),
          (e['harddelete'] = 'harddelete'),
          (e['publish'] = 'publish'),
          (e['update'] = 'update'),
          (e['create'] = 'create'),
          (e['delete'] = 'delete'),
          (e['updatePersonal'] = 'updatePersonal'),
          (e['updatePicture'] = 'updatePicture'),
          (e['updateEmail'] = 'updateEmail'),
          (e['updatePassword'] = 'updatePassword'),
          (e['updateGdpr'] = 'updateGdpr'),
          (e['updateQuestionnaire'] = 'updateQuestionnaire'),
          (e['updateRole'] = 'updateRole'),
          (e['unsubscribe'] = 'unsubscribe'),
          (e['subscribe'] = 'subscribe'),
          (e['verify'] = 'verify'),
          (e['verificationResend'] = 'verificationResend'),
          (e['passwordReset'] = 'passwordReset'),
          (e['passwordResetRequest'] = 'passwordResetRequest'),
          (e['changedAutoViewsLimit'] = 'changedAutoViewsLimit'),
          (e['addEmailIdentity'] = 'addEmailIdentity'),
          (e['updatePlan'] = 'updatePlan'),
          (e['signup'] = 'signup'),
          (e['updateTou'] = 'updateTou'),
          (e['loginGDPR'] = 'loginGDPR'),
          (e['logout'] = 'logout'),
          (e['dripBounce'] = 'dripBounce'),
          (e['dripUserAdded'] = 'dripUserAdded'),
          (e['dripUserReactivated'] = 'dripUserReactivated'),
          (e['dripUserDeactivated'] = 'dripUserDeactivated'),
          (e['dripUserRemoved'] = 'dripUserRemoved'),
          (e['dripDeliverable'] = 'dripDeliverable'),
          (e['dripUndeliverable'] = 'dripUndeliverable'),
          (e['planCheckout'] = 'planCheckout'),
          (e['planUpgrade'] = 'planUpgrade'),
          (e['planUpdate'] = 'planUpdate'),
          (e['planCreate'] = 'planCreate'),
          (e['planCancel'] = 'planCancel'),
          (e['planPaymentSucceeded'] = 'planPaymentSucceeded'),
          (e['planPaymentRefunded'] = 'planPaymentRefunded'),
          (e['planPaymentFailed'] = 'planPaymentFailed'),
          (e['supportRequest'] = 'supportRequest'),
          (e['import'] = 'import'),
          (e['export'] = 'export'),
          (e['embed'] = 'embed'),
          (e['rendererChanged'] = 'renderer_changed'),
          (e['rendererStarted'] = 'renderer_pt_started'),
          (e['rendererStoped'] = 'renderer_pt_stopped'),
          (e['oauthTokenCreate'] = 'oauthTokenCreate'),
          (e['oauthTokenDelete'] = 'oauthTokenDelete'),
          (e['openedViewer'] = 'openedViewer'),
          (e['hardMailSent'] = 'hardMailSent'),
          (e['softMailSent'] = 'softMailSent'),
          (e['limit_autoUp'] = 'limit_autoUp'),
          (e['limit_increased'] = 'limit_increased'),
          (e['limit_lowered'] = 'limit_lowered'),
          (e['unhandled'] = 'unhandled');
      })(Z || (Z = {}));
    void 0 && (void 0).__awaiter;
    void 0 && (void 0).__awaiter;
    var K, Q;
    (function (e) {
      (e['active'] = 'active'),
        (e['trialing'] = 'trialing'),
        (e['pastDue'] = 'past_due'),
        (e['deleted'] = 'deleted');
    })(K || (K = {})),
      (function (e) {
        (e['subscriptionCreated'] = 'subscription_created'),
          (e['subscriptionUpdated'] = 'subscription_updated'),
          (e['subscriptionCancelled'] = 'subscription_cancelled'),
          (e['subscriptionPaymentSucceeded'] =
            'subscription_payment_succeeded'),
          (e['subscriptionPaymentFailed'] = 'subscription_payment_failed'),
          (e['subscriptionPaymentRefunded'] = 'subscription_payment_refunded'),
          (e['paymentRefunded'] = 'payment_refunded'),
          (e['highRiskTransactionUpdated'] = 'high_risk_transaction_updated'),
          (e['highRiskTransactionCreated'] = 'high_risk_transaction_created'),
          (e['disputeCreated'] = 'payment_dispute_created'),
          (e['disputeClosed'] = 'payment_dispute_closed');
      })(Q || (Q = {}));
    var $, ee, te, ne, ie, re, ae, oe;
    n('../../../node_modules/moment-timezone/index.js');
    (function (e) {
      (e['MONTH'] = 'month'), (e['YEAR'] = 'year');
    })($ || ($ = {})),
      (function (e) {
        (e['LITE'] = 'lite'), (e['PREMIUM'] = 'premium');
      })(ee || (ee = {})),
      (function (e) {
        (e['PROJECT'] = 'project'),
          (e['TRAFFIC'] = 'traffic'),
          (e['TEAM'] = 'team'),
          (e['SEAT_VIEW'] = 'seat:view'),
          (e['SEAT_EDIT'] = 'seat:edit'),
          (e['EXPORT'] = 'export'),
          (e['COUPON'] = 'coupon'),
          (e['VIEWS'] = 'views');
      })(te || (te = {})),
      (function (e) {
        (e['PERCENTAGE'] = 'percentage'), (e['FIXED'] = 'fixed');
      })(ne || (ne = {})),
      (function (e) {
        (e['UNSET'] = 'unset'),
          (e['ACTIVE'] = 'active'),
          (e['INACTIVE'] = 'inactive'),
          (e['DELETED'] = 'deleted');
      })(ie || (ie = {})),
      (function (e) {
        (e['none'] = 'none'),
          (e['obsolete'] = 'obsolete'),
          (e['current'] = 'current');
      })(re || (re = {})),
      (function (e) {
        (e['free'] = 'free'),
          (e['pending'] = 'pending'),
          (e['confirmed'] = 'confirmed'),
          (e['cancelled'] = 'cancelled');
      })(ae || (ae = {})),
      (function (e) {
        (e['PRICING'] = 'pricing'),
          (e['COME_BACK'] = 'comeBack'),
          (e['CREATE_TEAM'] = 'createTeam'),
          (e['REACTIVATE_TEAM'] = 'reactivateTeam'),
          (e['LOCKED_MODEL'] = 'lockedModel'),
          (e['TOO_MANY_MODELS'] = 'tooManyModels'),
          (e['MORE_VIEWS'] = 'moreViews'),
          (e['UPGRADE'] = 'upgrade'),
          (e['UPGRADE_YEARLY_LITE'] = 'upgradeYearlyLite'),
          (e['UPGRADE_YEARLY_PREMIUM'] = 'upgradeYearlyPremium'),
          (e['UPGRADE_MONTHLY_PREMIUM'] = 'upgradeMonthlyPremium'),
          (e['PROMO'] = 'promo'),
          (e['THREE_D_EXPORT'] = '3DExport'),
          (e['IMAGE_EXPORT'] = 'imageExport'),
          (e['SHARE'] = 'share'),
          (e['COMMENTS'] = 'comments'),
          (e['LOCKED_MODE'] = 'lockedMode'),
          (e['SALE_BANNER'] = 'saleBanner'),
          (e['SALE_POPUP'] = 'salePopup');
      })(oe || (oe = {}));
    void 0 && (void 0).__awaiter;
    void 0 && (void 0).__awaiter;
    var se, ce, ue, le;
    (function (e) {
      (e['READY'] = 'READY'),
        (e['RUNNING'] = 'RUNNING'),
        (e['DONE'] = 'DONE'),
        (e['ERROR'] = 'ERROR');
    })(se || (se = {})),
      (function (e) {
        (e['save'] = 'saveProject'),
          (e['publish'] = 'publishProject'),
          (e['copy'] = 'copyProject'),
          (e['copyBatch'] = 'copyProjects'),
          (e['delete'] = 'deleteProject'),
          (e['deleteBatch'] = 'deleteProjects'),
          (e['change_owners'] = 'changeOwners');
      })(ce || (ce = {})),
      (function (e) {
        (e['THUMB_CUSTOM'] = 'customThumbnail'),
          (e['RENDER'] = 'render'),
          (e['EMBED'] = 'embed'),
          (e['EMBED_ANDROID'] = 'embed_android'),
          (e['EMBED_APPLE'] = 'embed_apple'),
          (e['USDZ'] = 'usdz'),
          (e['IMPORT'] = 'import');
      })(ue || (ue = {})),
      (function (e) {
        (e['PROCESSED'] = 'processed'),
          (e['SAVED'] = 'saved'),
          (e['FAILED'] = 'failed');
      })(le || (le = {}));
    var de =
      (void 0 && (void 0).__awaiter) ||
      function (e, t, n, i) {
        function r(e) {
          return e instanceof n
            ? e
            : new n(function (t) {
                t(e);
              });
        }
        return new (n || (n = Promise))(function (n, a) {
          function o(e) {
            try {
              c(i.next(e));
            } catch (e) {
              a(e);
            }
          }
          function s(e) {
            try {
              c(i['throw'](e));
            } catch (e) {
              a(e);
            }
          }
          function c(e) {
            e.done ? n(e.value) : r(e.value).then(o, s);
          }
          c((i = i.apply(e, t || [])).next());
        });
      };
    const he = '/api/vctr-repo/v2',
      pe = (e, t) =>
        de(void 0, void 0, void 0, function* () {
          return F(`${he}/project/${e}`, U(), t)
            .then((e) => X(e))
            .catch((e) => {
              void 0;
            });
        });
    void 0 && (void 0).__awaiter;
    var me =
      (void 0 && (void 0).__awaiter) ||
      function (e, t, n, i) {
        function r(e) {
          return e instanceof n
            ? e
            : new n(function (t) {
                t(e);
              });
        }
        return new (n || (n = Promise))(function (n, a) {
          function o(e) {
            try {
              c(i.next(e));
            } catch (e) {
              a(e);
            }
          }
          function s(e) {
            try {
              c(i['throw'](e));
            } catch (e) {
              a(e);
            }
          }
          function c(e) {
            e.done ? n(e.value) : r(e.value).then(o, s);
          }
          c((i = i.apply(e, t || [])).next());
        });
      };
    const fe = '/api/vctr-team/v1',
      _e = (e, t) =>
        me(void 0, void 0, void 0, function* () {
          return F(`${fe}/team/${e}`, U(), t)
            .then((e) => X(e))
            .catch((e) => {
              void 0;
            });
        });
    var Me;
    (function (e) {
      (e['OWNER'] = 'owner'),
        (e['EDIT'] = 'edit'),
        (e['VIEW'] = 'view'),
        (e['PAYMENTS'] = 'payments'),
        (e['NEW_MODEL'] = 'newModel');
    })(Me || (Me = {}));
    void 0 && (void 0).__awaiter;
    var ve =
      (void 0 && (void 0).__awaiter) ||
      function (e, t, n, i) {
        function r(e) {
          return e instanceof n
            ? e
            : new n(function (t) {
                t(e);
              });
        }
        return new (n || (n = Promise))(function (n, a) {
          function o(e) {
            try {
              c(i.next(e));
            } catch (e) {
              a(e);
            }
          }
          function s(e) {
            try {
              c(i['throw'](e));
            } catch (e) {
              a(e);
            }
          }
          function c(e) {
            e.done ? n(e.value) : r(e.value).then(o, s);
          }
          c((i = i.apply(e, t || [])).next());
        });
      };
    const ge = '/api/vctr-user/v1',
      ye = '/api/auth',
      be = (e) =>
        ve(void 0, void 0, void 0, function* () {
          return F(`${ge}/user`, U('GET'), e).then((e) => X(e));
        }),
      we = (e, t, n) =>
        ve(void 0, void 0, void 0, function* () {
          return F(
            `${ge}/user/${e}/questionnaire/professions`,
            U('PUT', JSON.stringify(t)),
            n
          )
            .then((e) => X(e))
            .catch((e) => {
              throw (void 0, e);
            });
        }),
      Ae = (e, t, n) =>
        ve(void 0, void 0, void 0, function* () {
          return F(
            `${ge}/user/${e}/questionnaire/welcome`,
            U('PUT', JSON.stringify(t)),
            n
          )
            .then((e) => X(e))
            .catch((e) => {
              throw (void 0, e);
            });
        }),
      xe = (e, t) =>
        ve(void 0, void 0, void 0, function* () {
          return F(
            `${ge}/user/${e}/questionnaire/paymentCN`,
            U('PUT', JSON.stringify({ paymentCN: !0 })),
            t
          )
            .then((e) => X(e))
            .catch((e) => {
              throw (void 0, e);
            });
        }),
      Le = (e, t, n) =>
        ve(void 0, void 0, void 0, function* () {
          return F(
            `${ge}/user/${e}/questionnaire/cancellationReasonText`,
            U('PUT', JSON.stringify(t)),
            n
          )
            .then((e) => X(e))
            .catch((e) => {
              throw (void 0, e);
            });
        }),
      Te = (e, t) =>
        ve(void 0, void 0, void 0, function* () {
          return F(`${ge}/user/${e}`, U(), t)
            .then((e) => X(e))
            .catch((e) => {
              void 0;
            });
        }),
      ze = (e, t) =>
        ve(void 0, void 0, void 0, function* () {
          return F(`${ge}/users?uuids=${e.join(',')}`, U(), t)
            .then((e) => X(e))
            .catch((e) => (void 0, []));
        }),
      Se = (e, t) =>
        ve(void 0, void 0, void 0, function* () {
          return F(
            `${ge}/search?email=${e}&results=100&page=0`,
            U(),
            t
          ).then((e) => X(e));
        }),
      Oe = (e, t) =>
        ve(void 0, void 0, void 0, function* () {
          return F(`${ge}/user/${e}`, U(), t)
            .then((e) => X(e))
            .catch((e) => {
              void 0;
            });
        }),
      Ee = (e, t) =>
        ve(void 0, void 0, void 0, function* () {
          const n = yield pe(e, t);
          if (n) {
            const e = F(`${ge}/user/${n.ownerId}`, U(), t)
              .then((e) => X(e))
              .catch((e) =>
                ve(void 0, void 0, void 0, function* () {
                  void 0;
                  const e = yield _e(n.ownerId, t);
                  return Te(e.teamOwnerId);
                })
              );
            return e;
          }
        }),
      ke = (e, t, n, i) =>
        ve(void 0, void 0, void 0, function* () {
          const r = Object.keys(e).map((t) => `${t}=${e[t]}`);
          return F(
            `${ge}/search/payments${
              r.length ? `?${r.join('&')}&` : '?'
            }results=${t}&page=${n}`,
            U(),
            i
          ).then((e) => X(e));
        }),
      Ce = (e, t) =>
        ve(void 0, void 0, void 0, function* () {
          return F(
            `${ge}/forgotten-password`,
            U('POST', JSON.stringify({ email: e })),
            t
          ).then((e) => X(e));
        }),
      De = (e, t, n) =>
        ve(void 0, void 0, void 0, function* () {
          return F(`${ge}/user/${e.uuid}/gdpr`, U('POST', JSON.stringify(t)), n)
            .then((e) => X(e))
            .catch((e) => {
              throw (void 0, e);
            });
        }),
      Ne = (e, t, n) =>
        ve(void 0, void 0, void 0, function* () {
          return F(
            `${ge}/user/${e.uuid}/fill-email`,
            U('PUT', JSON.stringify(t)),
            n
          )
            .then((e) => X(e))
            .catch((e) => {
              throw (void 0, e);
            });
        }),
      Pe = (e, t) =>
        ve(void 0, void 0, void 0, function* () {
          return F(`${ge}/paddle/checkout`, U('POST', JSON.stringify(e)), t)
            .then((e) => X(e))
            .catch((e) => {
              throw (void 0, e);
            });
        }),
      je = (e, t) =>
        ve(void 0, void 0, void 0, function* () {
          const n = [];
          return (
            void 0 !== e.deleted && n.push(`deleted=${e.deleted}`),
            void 0 !== e.granularity && n.push(`granularity=${e.granularity}`),
            F(`${ge}/stats?${n.join('&')}`, U('GET'), t)
              .then((e) => X(e))
              .catch((e) => {
                throw (void 0, e);
              })
          );
        }),
      Ye = (e, t, n) =>
        ve(void 0, void 0, void 0, function* () {
          return F(
            `${ye}/user/${e.uuid}/props/email`,
            U('PUT', JSON.stringify(t)),
            n
          )
            .then((e) => X(e))
            .catch((e) => {
              throw (void 0, e);
            });
        }),
      Re = (e, t, n) =>
        ve(void 0, void 0, void 0, function* () {
          return F(
            `${ye}/user/${e.uuid}/props/password`,
            U('PUT', JSON.stringify(t)),
            n
          )
            .then((e) => X(e))
            .catch((e) => {
              throw (void 0, e);
            });
        }),
      Be = (e, t, n) =>
        ve(void 0, void 0, void 0, function* () {
          return F(`${ye}/reset-password/${e}`, U('POST', JSON.stringify(t)), n)
            .then((e) => X(e))
            .catch((e) => {
              throw (void 0, e);
            });
        }),
      We = (e) =>
        ve(void 0, void 0, void 0, function* () {
          return F(`${ye}/logout`, U(), e).then((e) => X(e));
        }),
      Ie = (e, t) =>
        ve(void 0, void 0, void 0, function* () {
          return F(`${ye}/user/${e.uuid}/deactivate`, U('POST'), t)
            .then((e) => X(e))
            .catch((e) => {
              throw (void 0, e);
            });
        }),
      qe = (e, t, n) =>
        ve(void 0, void 0, void 0, function* () {
          return F(
            `${ge}/user/${e}/props/additional_views_limit?auto_views_limit=${t}`,
            U('PUT'),
            n
          )
            .then((e) => X(e))
            .catch((e) => {
              throw (void 0, e);
            });
        }),
      He = (e, t, n) =>
        ve(void 0, void 0, void 0, function* () {
          return F(`${ge}/user/${e}/drip`, U('POST', JSON.stringify(t)), n)
            .then((e) => X(e))
            .catch((e) => {
              throw (void 0, e);
            });
        }),
      Fe = (e, t, n) =>
        ve(void 0, void 0, void 0, function* () {
          return F(`${ge}/user/${e}/props`, U('PUT', JSON.stringify(t)), n)
            .then((e) => X(e))
            .catch((e) => {
              throw (void 0, e);
            });
        }),
      Ue = (e, t, n, i, r) =>
        ve(void 0, void 0, void 0, function* () {
          const a = { teamId: n, quantity: i };
          return F(
            `${ge}/user/${e}/modifier/${t.id}`,
            U('POST', JSON.stringify(a)),
            r
          )
            .then((e) => X(e))
            .catch((e) => {
              throw (void 0, e);
            });
        }),
      Xe = (e, t, n) =>
        ve(void 0, void 0, void 0, function* () {
          return F(`${ge}/user/${e}/plan/${t}`, U('PUT'), n).then((e) =>
            V(e).catch((e) =>
              ve(void 0, void 0, void 0, function* () {
                throw yield e;
              })
            )
          );
        }),
      Ve = (e, t) =>
        ve(void 0, void 0, void 0, function* () {
          return F(`${ge}/user/${e}/oauth_token`, U('GET'), t).then((e) =>
            V(e).catch((e) =>
              ve(void 0, void 0, void 0, function* () {
                throw yield e;
              })
            )
          );
        }),
      Ge = (e, t) =>
        ve(void 0, void 0, void 0, function* () {
          return F(`${ge}/user/${e}/oauth_token`, U('POST'), t).then((e) =>
            V(e).catch((e) =>
              ve(void 0, void 0, void 0, function* () {
                throw yield e;
              })
            )
          );
        }),
      Je = (e, t) =>
        ve(void 0, void 0, void 0, function* () {
          return F(`${ge}/user/${e}/oauth_token`, U('DELETE'), t).then((e) =>
            V(e).catch((e) =>
              ve(void 0, void 0, void 0, function* () {
                throw yield e;
              })
            )
          );
        }),
      Ze = (e, t) =>
        ve(void 0, void 0, void 0, function* () {
          return F(`${ge}/user/${e}/additionalInfo`, U('GET'), t)
            .then((e) => V(e))
            .catch((e) => (void 0, null));
        });
    class Ke extends q {
      getCurrentUser() {
        return ve(this, void 0, void 0, function* () {
          return be(this.cloud);
        });
      }
      putProfessions(e, t) {
        return ve(this, void 0, void 0, function* () {
          return we(e, t, this.cloud);
        });
      }
      putWelcome(e, t) {
        return ve(this, void 0, void 0, function* () {
          return Ae(e, t, this.cloud);
        });
      }
      putChinaPayments(e) {
        return ve(this, void 0, void 0, function* () {
          return xe(e, this.cloud);
        });
      }
      putCancellationReasonText(e, t) {
        return ve(this, void 0, void 0, function* () {
          return Le(e, t, this.cloud);
        });
      }
      getUser(e) {
        return ve(this, void 0, void 0, function* () {
          return Te(e, this.cloud);
        });
      }
      getUsers(e) {
        return ve(this, void 0, void 0, function* () {
          return ze(e, this.cloud);
        });
      }
      getUserByEmail(e) {
        return ve(this, void 0, void 0, function* () {
          return Se(e, this.cloud);
        });
      }
      getUserById(e) {
        return ve(this, void 0, void 0, function* () {
          return Oe(e, this.cloud);
        });
      }
      getUserByProjectId(e) {
        return ve(this, void 0, void 0, function* () {
          return Ee(e, this.cloud);
        });
      }
      getUsersByPayments(e, t, n) {
        return ve(this, void 0, void 0, function* () {
          return ke(e, t, n, this.cloud);
        });
      }
      forgotPass(e) {
        return ve(this, void 0, void 0, function* () {
          return Ce(e, this.cloud);
        });
      }
      sendGDPR(e, t) {
        return ve(this, void 0, void 0, function* () {
          return De(e, t, this.cloud);
        });
      }
      fillEmail(e, t) {
        return ve(this, void 0, void 0, function* () {
          return Ne(e, t, this.cloud);
        });
      }
      sendCheckoutData(e) {
        return ve(this, void 0, void 0, function* () {
          return Pe(e, this.cloud);
        });
      }
      stats(e) {
        return ve(this, void 0, void 0, function* () {
          return je(e, this.cloud);
        });
      }
      changeEmail(e, t) {
        return ve(this, void 0, void 0, function* () {
          return Ye(e, t, this.cloud);
        });
      }
      changePassword(e, t) {
        return ve(this, void 0, void 0, function* () {
          return Re(e, t, this.cloud);
        });
      }
      resetPassword(e, t) {
        return ve(this, void 0, void 0, function* () {
          return Be(e, t, this.cloud);
        });
      }
      logout() {
        return ve(this, void 0, void 0, function* () {
          return We(this.cloud);
        });
      }
      deactivate(e) {
        return ve(this, void 0, void 0, function* () {
          return Ie(e, this.cloud);
        });
      }
      changeAdditionalViewsLimit(e, t) {
        return ve(this, void 0, void 0, function* () {
          return qe(e, t, this.cloud);
        });
      }
      drip(e, t) {
        return ve(this, void 0, void 0, function* () {
          return He(e, t, this.cloud);
        });
      }
      props(e, t) {
        return ve(this, void 0, void 0, function* () {
          return Fe(e, t, this.cloud);
        });
      }
      postModifier(e, t, n, i) {
        return ve(this, void 0, void 0, function* () {
          return Ue(e, t, n, i, this.cloud);
        });
      }
      upgradeUserSubscrition(e, t) {
        return ve(this, void 0, void 0, function* () {
          return Xe(e, t, this.cloud);
        });
      }
      getToken(e) {
        return ve(this, void 0, void 0, function* () {
          return Ve(e, this.cloud);
        });
      }
      createToken(e) {
        return ve(this, void 0, void 0, function* () {
          return Ge(e, this.cloud);
        });
      }
      deleteToken(e) {
        return ve(this, void 0, void 0, function* () {
          return Je(e, this.cloud);
        });
      }
      getAdditionalInfo(e) {
        return ve(this, void 0, void 0, function* () {
          return Ze(e, this.cloud);
        });
      }
    }
    const Qe = 'UNKNOWN';
    $.MONTH;
    const $e = 'UNKNOWN';
    $.MONTH;
    var et =
      (void 0 && (void 0).__awaiter) ||
      function (e, t, n, i) {
        function r(e) {
          return e instanceof n
            ? e
            : new n(function (t) {
                t(e);
              });
        }
        return new (n || (n = Promise))(function (n, a) {
          function o(e) {
            try {
              c(i.next(e));
            } catch (e) {
              a(e);
            }
          }
          function s(e) {
            try {
              c(i['throw'](e));
            } catch (e) {
              a(e);
            }
          }
          function c(e) {
            e.done ? n(e.value) : r(e.value).then(o, s);
          }
          c((i = i.apply(e, t || [])).next());
        });
      };
    class tt {
      constructor(e) {
        (this.viewer = e),
          window.addEventListener('message', (e) =>
            et(this, void 0, void 0, function* () {
              if (!e.data.id) return;
              const t = e.data;
              let n;
              try {
                n = t.data ? JSON.parse(t.data) : void 0;
              } catch (n) {
                return (
                  void 0,
                  (t.event = I['a'].ERROR),
                  (t.data = n),
                  e.source.postMessage(t, '*'),
                  void 0
                );
              }
              const i = (e) => {
                try {
                  return JSON.stringify(e);
                } catch (e) {
                  return void 0, (t.event = I['a'].ERROR), (t.data = e), e;
                }
              };
              try {
                switch (t.event) {
                  case I['a'].READY:
                    t.data = (
                      !this.viewer.params.autoLoad ||
                      this.viewer.renderer.isReady
                    ).toString();
                    break;
                  case I['a'].LOAD:
                    t.data = (yield this.viewer.load()).toString();
                    break;
                  case I['a'].SWITCH_VIEW:
                    t.data = this.viewer.renderer.core
                      .switchView(n.name)
                      .toString();
                    break;
                  case I['a'].SWITCH_VIEW_ASYNC:
                    t.data = (yield this.viewer.renderer.core.switchViewsAsync(
                      n.name
                    )).toString();
                    break;
                  case I['a'].MOVE_VIEW:
                    t.data = this.viewer.renderer.core
                      .moveView(n.position)
                      .toString();
                    break;
                  case I['a'].ROTATE_VIEW:
                    t.data = this.viewer.renderer.core
                      .rotateView(n.rotation)
                      .toString();
                    break;
                  case I['a'].ZOOM_VIEW:
                    t.data = this.viewer.renderer.core
                      .zoomView(n.zoom)
                      .toString();
                    break;
                  case I['a'].GET_VISIBILITY:
                    t.data = this.viewer.renderer.core
                      .getVisibility(n.name)
                      .toString();
                    break;
                  case I['a'].SET_VISIBILITY:
                    t.data = this.viewer.renderer.core
                      .setVisibility(n.names, n.visible, n.isExclusive)
                      .toString();
                    break;
                  case I['a'].GET_OBJECTS:
                    t.data = i(this.viewer.renderer.core.getObjects());
                    break;
                  case I['a'].GET_MESHES:
                    t.data = i(this.viewer.renderer.core.getMeshes());
                    break;
                  case I['a'].GET_OBJECTS_BY_NAME:
                    t.data = i(
                      this.viewer.renderer.core.getObjectsByName(n.name)
                    );
                    break;
                  case I['a'].GET_OBJECT_BY_NAME:
                    t.data = i(
                      this.viewer.renderer.core.getObjectByName(n.name)
                    );
                    break;
                  case I['a'].GET_MESHES_BY_NAME:
                    t.data = i(
                      this.viewer.renderer.core.getMeshesByName(n.name)
                    );
                    break;
                  case I['a'].GET_MESH_BY_NAME:
                    t.data = i(this.viewer.renderer.core.getMeshByName(n.name));
                    break;
                  case I['a'].GET_MATERIALS:
                    t.data = i(this.viewer.renderer.core.getMaterials());
                    break;
                  case I['a'].SET_MATERIAL:
                    t.data = this.viewer.renderer.core
                      .setMaterial(n.objectName, n.materialName)
                      .toString();
                    break;
                  case I['a'].GET_MATERIALS_BY_NAME:
                    t.data = i(
                      this.viewer.renderer.core.getMaterialsByName(n.name)
                    );
                    break;
                  case I['a'].GET_MATERIAL_BY_NAME:
                    t.data = i(
                      this.viewer.renderer.core.getMaterialByName(n.name)
                    );
                    break;
                  case I['a'].GET_MATERIAL_PROPS:
                    t.data = i(
                      this.viewer.renderer.core.getMaterialProperties(n.name)
                    );
                    break;
                  case I['a'].CREATE_MATERIAL:
                    t.data = i(
                      yield this.viewer.renderer.core.createMaterial(
                        n.material,
                        n.cloneFromMatName
                      )
                    );
                    break;
                  case I['a'].UPDATE_MATERIAL:
                    t.data = i(
                      yield this.viewer.renderer.core.updateMaterial(
                        n.name,
                        n.props,
                        n.withPrefetch
                      )
                    );
                    break;
                  case I['a'].GET_HIT_OBJECTS:
                    t.data = i(
                      this.viewer.renderer.core.getHitObjects(n.firstHitOnly)
                    );
                    break;
                  case I['a'].GET_2D_COORDINATES:
                    t.data = i(
                      this.viewer.renderer.core.get2DCoordinates(n.name)
                    );
                    break;
                  case I['a'].GET_CAMERAS:
                    t.data = i(this.viewer.renderer.core.getCameras());
                    break;
                  case I['a'].GET_CAMERAS_BY_NAME:
                    t.data = i(
                      this.viewer.renderer.core.getCamerasByName(n.name)
                    );
                    break;
                  case I['a'].GET_CAMERA_BY_NAME:
                    t.data = i(
                      this.viewer.renderer.core.getCameraByName(n.name)
                    );
                    break;
                  case I['a'].GET_BACKGROUND:
                    t.data = i(this.viewer.renderer.core.getBackground());
                    break;
                  case I['a'].SET_BACKGROUND:
                    t.data = i(
                      yield this.viewer.renderer.core.setBackground(
                        n.background
                      )
                    );
                    break;
                  case I['a'].ENABLE_ANNOTATIONS:
                    t.data = this.viewer.renderer.core
                      .enableAnnotations(n.enable)
                      .toString();
                    break;
                  case I['a'].GET_ANNOTATIONS:
                    t.data = i(this.viewer.renderer.core.getAnnotations());
                    break;
                  case I['a'].GET_ANNOTATION_BY_ID:
                    t.data = i(
                      this.viewer.renderer.core.getAnnotationById(n.id)
                    );
                    break;
                  case I['a'].ADD_ANNOTATION:
                    t.data = i(
                      this.viewer.renderer.core.addAnnotation(n.annotationConf)
                    );
                    break;
                  case I['a'].REMOVE_ANNOTATION_BY_ID:
                    t.data = this.viewer.renderer.core
                      .removeAnnotationById(n.id)
                      .toString();
                    break;
                  case I['a'].EXPAND_ANNOTATIONS_BY_ID:
                    t.data = this.viewer.renderer.core
                      .expandAnnotationsById(n.id, n.expand, n.isExclusive)
                      .toString();
                    break;
                  case I['a'].GET_POSITION:
                    t.data = i(this.viewer.renderer.core.getPosition(n.name));
                    break;
                  case I['a'].SET_POSITION_REL:
                    t.data = i(
                      this.viewer.renderer.core.setPositionRelative(
                        n.name,
                        n.position
                      )
                    );
                    break;
                  case I['a'].SET_POSITION_ABS:
                    t.data = i(
                      this.viewer.renderer.core.setPositionAbsolute(
                        n.name,
                        n.position
                      )
                    );
                    break;
                  case I['a'].GET_ROTATION:
                    t.data = i(this.viewer.renderer.core.getRotation(n.name));
                    break;
                  case I['a'].SET_ROTATION_REL:
                    t.data = i(
                      this.viewer.renderer.core.setRotationRelative(
                        n.name,
                        n.rotation,
                        n.order
                      )
                    );
                    break;
                  case I['a'].SET_ROTATION_ABS:
                    t.data = i(
                      this.viewer.renderer.core.setRotationAbsolute(
                        n.name,
                        n.rotation,
                        n.order
                      )
                    );
                    break;
                  case I['a'].GET_SCALE:
                    t.data = i(this.viewer.renderer.core.getScale(n.name));
                    break;
                  case I['a'].SET_SCALE_REL:
                    t.data = i(
                      this.viewer.renderer.core.setScaleRelative(
                        n.name,
                        n.scale
                      )
                    );
                    break;
                  case I['a'].SET_SCALE_ABS:
                    t.data = i(
                      this.viewer.renderer.core.setScaleAbsolute(
                        n.name,
                        n.scale
                      )
                    );
                    break;
                  case I['a'].HIGHLIGHT_MESHES_BY_NAME:
                    t.data = this.viewer.renderer.core
                      .highlightMeshesByName(
                        n.names,
                        n.color,
                        n.intensity,
                        n.isExclusive
                      )
                      .toString();
                    break;
                  case I['a'].UNHIGHLIGHT_MESHES_BY_NAME:
                    t.data = this.viewer.renderer.core
                      .unhighlightMeshesByName(n.names)
                      .toString();
                    break;
                  case I['a'].TAKE_SCREENSHOT:
                    t.data = this.viewer.renderer.core
                      .takeScreenshot(n.scale, n.scissor)
                      .toString();
                    break;
                  case I['a'].GET_VIEW_STATE:
                    t.data = i(yield this.viewer.renderer.core.getViewState());
                    break;
                  case I['a'].APPLY_VIEW_STATE:
                    t.data = this.viewer.renderer.core
                      .applyViewState(n.state)
                      .toString();
                    break;
                  case I['a'].GET_EXPOSURE:
                    t.data = i(this.viewer.renderer.core.getExposure());
                    break;
                  case I['a'].SET_EXPOSURE:
                    t.data = i(
                      this.viewer.renderer.core.setExposure(n.exposure)
                    );
                    break;
                  case I['a'].GET_FOV:
                    t.data = i(this.viewer.renderer.core.getFOV());
                    break;
                  case I['a'].SET_FOV:
                    t.data = i(this.viewer.renderer.core.setFOV(n.fov));
                    break;
                  case I['a'].SEND_EVENT:
                    t.data = i(
                      this.viewer.renderer.core.sendEvent(
                        n.event,
                        n.x,
                        n.y,
                        n.maxX,
                        n.maxY
                      )
                    );
                    break;
                  case I['a'].PLAY:
                    t.data = i(
                      this.viewer.renderer.core.play(n.animIds, n.timeScale)
                    );
                    break;
                  case I['a'].SET_UUID_AR:
                    t.data = this.viewer.setUUIDAr(n.uuid).toString();
                    break;
                  case I['a'].TRIGGER_AR_CLICK:
                    t.data = this.viewer.ui.triggerARClick().toString();
                    break;
                  case I['a'].GET_CURRENT_USER:
                    try {
                      t.data = i(yield Ke.getCurrentUser(x));
                    } catch (e) {
                      t.data = null;
                    }
                    break;
                  case I['a'].DID_RENDER_LAST_FRAME:
                    t.data = i(this.viewer.renderer.didRenderLastFrame());
                    break;
                  default:
                    (t.event = I['a'].ERROR),
                      (t.data = `Unknown event type "${t.event}" received`);
                }
                e.source.postMessage(t, '*');
              } catch (e) {
                void 0;
              }
            })
          );
      }
    }
    function nt(e) {
      const t = it(e.envMode),
        n = L ? `pro/viewer` : `viewer`,
        i = `${t}/${n}`,
        r = `#Intent;scheme=https;package=com.google.ar.core;action=android.intent.action.VIEW;end;`,
        a = e.arAndroid
          ? `intent://arvr.google.com/scene-viewer/1.0?mode=ar_only&file=${e.arAndroid}${r}`
          : `intent://arvr.google.com/scene-viewer/1.0?mode=ar_only&file=${t}/${n}/data/${e.model}/android/${e.model}.glb${r}`,
        o = e.arApple ? e.arApple : `${i}/data/${e.model}/usdz/${e.model}.usdz`;
      return {
        basePath: t,
        model: e.model,
        modelUrl: `${i}/data/${e.model}/gltf/${e.model}`,
        modelUrlGlb: `${i}/data/${e.model}/android/${e.model}`,
        thumbnail: `${i}/data/${e.model}/gltf/${e.model}.viewerthumb.png`,
        getFromStoragePath: `${i}/data/${e.model}/storage`,
        postToStoragePath: `${t}/api/vctr-static/v2/${n}/unzip`,
        envFolder: `${i}/data/env/`,
        envLoResFolder: `${i}/data/env/lores/`,
        androidFile: `${i}/data/${e.model}/android/${e.model}.glb`,
        androidLink: a,
        usdzFile: `${i}/data/${e.model}/usdz/${e.model}.usdz`,
        usdzLink: o,
        viewerArLink: `${i}-ar/${T}/?model=${e.model}${
          e.qrBackLink ? `&backLink=${window.location}` : ``
        }`,
        editLink: `${t}/engine/?model=${e.model}&utm_source=Viewer_Embed&utm_medium=Viewer_Edit&utm_campaign=Viewer`,
        forkLink: `${t}/engine/?template=${e.model}&utm_source=Viewer_Embed&utm_medium=Viewer_Fork&utm_campaign=Viewer`,
        watermarkLink: `https://www.vectary.com/?utm_source=Viewer_Embed&utm_medium=Viewer_Watermark&utm_campaign=Viewer`,
      };
    }
    function it(e) {
      const t = `${window.location.protocol}//${window.location.host}`;
      switch (e) {
        case O.LOCAL:
          return 'http://localhost:8002';
        case O.TEST:
          return 'https://test.vectary.com';
        case O.STAGE:
          return 'https://stage.vectary.com';
        case O.PROD:
          return 'https://www.vectary.com';
        default:
          return t.indexOf('vectary.com') > -1 ? t : 'https://www.vectary.com';
      }
    }
    var rt =
      (void 0 && (void 0).__awaiter) ||
      function (e, t, n, i) {
        function r(e) {
          return e instanceof n
            ? e
            : new n(function (t) {
                t(e);
              });
        }
        return new (n || (n = Promise))(function (n, a) {
          function o(e) {
            try {
              c(i.next(e));
            } catch (e) {
              a(e);
            }
          }
          function s(e) {
            try {
              c(i['throw'](e));
            } catch (e) {
              a(e);
            }
          }
          function c(e) {
            e.done ? n(e.value) : r(e.value).then(o, s);
          }
          c((i = i.apply(e, t || [])).next());
        });
      };
    const at = (e, t, n, i) =>
      rt(void 0, void 0, void 0, function* () {
        return new Promise((r, a) =>
          rt(void 0, void 0, void 0, function* () {
            const s = (e = !1) => {
              i({
                state: 'succ',
                errMsg: '',
                result: { permission: o['b'].ALLOWED, canEdit: e },
              }),
                r();
            };
            let c;
            L || (c = setTimeout(() => s(), 5e3)),
              yield e
                .postCount(t.model, 'gltf')
                .then((e) => {
                  404 === e.responseStatus
                    ? (i({
                        state: 'err',
                        errMsg: 'Project not found',
                        result: null,
                      }),
                      a())
                    : (i({ state: 'succ', errMsg: '', result: e }),
                      e.permission === o['b'].DENIED ? a() : r());
                })
                .catch((e) => {
                  n.envMode === O.LOCAL
                    ? (void 0, s(!0))
                    : L
                    ? (i({
                        state: 'err',
                        errMsg:
                          "There was an error, we can't display the model. Please contact us.",
                        result: null,
                      }),
                      a())
                    : s();
                })
                .finally(() => c && clearTimeout(c));
          })
        );
      });
    var ot =
      (void 0 && (void 0).__awaiter) ||
      function (e, t, n, i) {
        function r(e) {
          return e instanceof n
            ? e
            : new n(function (t) {
                t(e);
              });
        }
        return new (n || (n = Promise))(function (n, a) {
          function o(e) {
            try {
              c(i.next(e));
            } catch (e) {
              a(e);
            }
          }
          function s(e) {
            try {
              c(i['throw'](e));
            } catch (e) {
              a(e);
            }
          }
          function c(e) {
            e.done ? n(e.value) : r(e.value).then(o, s);
          }
          c((i = i.apply(e, t || [])).next());
        });
      };
    class st {
      constructor(e, t) {
        const n = t ? C(t) : k(window.location.search);
        !t && new tt(this),
          (this.documentRoot = e),
          (this.params = n),
          (this.paths = nt(n)),
          (this.ui = new W(e)),
          (this.renderer = new j(
            this.params,
            this.paths,
            this.ui.canvasElem,
            this.ui.documentRoot
          )),
          l.getInstance().setHTMLElements(this.ui.canvasElem, e),
          this.bindCoreUISignals(this.renderer, this.ui),
          (this.counterApi = new o['a']()),
          this.preload();
      }
      preload() {
        return ot(this, void 0, void 0, function* () {
          if (!this.params.model.length)
            return (
              this.ui.showErrorMessage('Model parameter is mandatory.'),
              Promise.resolve()
            );
          this.params.showPlaceholder &&
            this.ui.setPlaceholder(!0, this.paths.thumbnail),
            this.params.autoplay ||
              (yield new Promise((e, t) =>
                ot(this, void 0, void 0, function* () {
                  yield this.ui.initAutoplayDelay(), e();
                })
              )),
            this.params.showPreloader && this.ui.showPreloader();
          try {
            yield at(this.counterApi, this.paths, this.params, (e) =>
              this.processCounterResult(e)
            );
          } catch (e) {
            return Promise.resolve();
          }
          this.addArButton(),
            (!this.params.autoLoad && this.params.autoplay) || this.load();
        });
      }
      load() {
        return ot(this, void 0, void 0, function* () {
          return new Promise((e, t) => {
            this.renderer
              .init()
              .then(() =>
                ot(this, void 0, void 0, function* () {
                  (this.renderer.isReady = !0),
                    this.params.gestureHandling === S.INFERIOR &&
                      1 === this.params.showGesturePrompts &&
                      this.ui.initInferiorGesturesPrompt(),
                    this.handleMouseFollow();
                })
              )
              .catch((t) => {
                this.ui.showErrorMessage(`Init failed because: ${t}`),
                  e('Init failed');
              })
              .finally(() => {
                this.loadPhaseFinished(), e('Init finished');
              });
          });
        });
      }
      setUUIDAr(e) {
        try {
          (this.params.model = e),
            (this.paths = nt(this.params)),
            this.addArButton();
        } catch (e) {
          return void 0, !1;
        }
        return !0;
      }
      loadPhaseFinished() {
        this.ui.hidePreloader(),
          this.ui.setPlaceholder(!1),
          this.ui.setActiveCanvas(!0);
      }
      bindCoreUISignals(e, t) {
        const n = l.getInstance();
        n.sigResize.connect(() => {
          t.setCanvasMode(), e.onWindowResize();
        }),
          n.sigCanvasScroll.connect(() => (e.needsUpdate = !0)),
          n.sigCanvasWheel.connect(() => (e.needsUpdate = !0)),
          n.sigCanvasTouchMove.connect((e) => i(e)),
          n.sigCanvasTouchStart.connect((e) => i(e)),
          n.sigCanvasDoubleTap.connect((e) => o(e)),
          n.sigCanvasMouseMove.connect((e) => r(e)),
          n.sigCanvasDragOver.connect((e) => r(e)),
          n.sigCanvasDoubleClick.connect((e) => a(e));
        const i = (t) => {
            const n = t.changedTouches[t.changedTouches.length - 1];
            (e.core.lastPointerPosition = s(n.clientX, n.clientY)),
              (e.needsUpdate = !0);
          },
          r = (t) => {
            (e.core.lastPointerPosition = s(t.clientX, t.clientY)),
              (e.needsUpdate = !0);
          },
          a = (t) => {
            e.core.focusOnPoint([
              e.core.lastPointerPosition.x,
              e.core.lastPointerPosition.y,
            ]);
          },
          o = (t) => {
            const n = t.changedTouches[t.changedTouches.length - 1],
              i = s(n.clientX, n.clientY);
            e.core.focusOnPoint([i.x, i.y]);
          };
        function s(e, n) {
          const i = { x: 0, y: 0 },
            r = t.canvasElem.getBoundingClientRect();
          return (i.x = e - r.left), (i.y = n - r.top), i;
        }
      }
      processCounterResult(e) {
        return 'err' === e.state
          ? (this.ui.showErrorMessage(e.errMsg), void 0)
          : e.result.permission === o['b'].DENIED
          ? (this.showViewDeniedError(e.result), void 0)
          : (e.result.permission === o['b'].WATERMARK &&
              this.ui.prepareLinkAndActivate(
                Y.WATERMARK,
                this.paths.watermarkLink
              ),
            e.result.canEdit
              ? this.ui.prepareLinkAndActivate(Y.EDIT, this.paths.editLink)
              : this.params.template &&
                this.ui.prepareLinkAndActivate(Y.FORK, this.paths.forkLink),
            void 0);
      }
      showViewDeniedError(e) {
        this.ui.setPlaceholder(!0, this.paths.thumbnail);
        const t = e.canEdit
          ? `\n                Monthly web views limit has been exceeded\n                <a href="https://www.vectary.com/contact?utm_source=Viewer_Embed&utm_medium=Viewer_Premium_Exceeded&utm_campaign=Viewer" target="_blank">\n                    Contact Vectary support\n                </a>\n            `
          : `\n                We can't display the 3D model right now (Out of views)\n            `;
        this.ui.showErrorMessage(`${t}`, !0);
      }
      addArButton() {
        return ot(this, void 0, void 0, function* () {
          let e;
          const t = Object(s['a'])();
          'android' === t && 'none' !== this.params.arAndroid
            ? ((e = yield Object(c['a'])(this.paths.androidFile)),
              e &&
                this.ui.setAndroidLink(this.paths.androidLink, () =>
                  this.countCallback('android')
                ))
            : 'apple' === t && 'none' !== this.params.arApple
            ? ((e = yield Object(c['a'])(this.paths.usdzFile)),
              e &&
                this.ui.setAppleLink(this.paths.usdzLink, () =>
                  this.countCallback('usdz')
                ))
            : ((e = yield Object(c['a'])(this.paths.usdzFile)),
              e && this.ui.setQRCode(this.paths.viewerArLink)),
            this.ui.setCustomARIcon({
              arIcon: this.params.arIcon,
              arX: this.params.arX,
              arY: this.params.arY,
              noAr: e ? this.params.noAr : 1,
            });
        });
      }
      countCallback(e) {
        this.counterApi.postCount(this.paths.model, e),
          this.ui.showPreloader(),
          setTimeout(() => this.ui.hidePreloader(), 4e3);
      }
      handleMouseFollow() {
        if (
          !this.params.turntable &&
          (this.params.mouseFollow &&
            h.startMouseFollowEasingAnimation(
              this.renderer.rotateView.bind(this.renderer),
              this.ui.canvasElem,
              this.params.mouseFollow,
              !1
            ),
          this.params.showInteractionPrompt)
        ) {
          const e = this.ui.getInteractionPrompt(),
            t = () => {
              h.interactionPromptAnimation(
                this.renderer.rotateView.bind(this.renderer),
                this.renderer.orbitControls
              );
            },
            n = () => {
              clearTimeout(i),
                e.removeEventListener('animationstart', t, !1),
                e.removeEventListener('animationiteration', t, !1),
                e.remove(),
                l.getInstance().sigRootUserActive.disconnect(n),
                h.startMouseFollowEasingAnimation(
                  this.renderer.rotateView.bind(this.renderer),
                  this.ui.canvasElem,
                  this.params.mouseFollow ? this.params.mouseFollow : 0.05,
                  !0
                );
            },
            i = setTimeout(() => {
              this.ui.initInteractionPrompt(),
                e.addEventListener('animationstart', t, !1),
                e.addEventListener('animationiteration', t, !1);
            }, 3e3);
          l.getInstance().sigRootUserActive.connect(n);
        }
      }
    }
    var ct =
      (void 0 && (void 0).__awaiter) ||
      function (e, t, n, i) {
        function r(e) {
          return e instanceof n
            ? e
            : new n(function (t) {
                t(e);
              });
        }
        return new (n || (n = Promise))(function (n, a) {
          function o(e) {
            try {
              c(i.next(e));
            } catch (e) {
              a(e);
            }
          }
          function s(e) {
            try {
              c(i['throw'](e));
            } catch (e) {
              a(e);
            }
          }
          function c(e) {
            e.done ? n(e.value) : r(e.value).then(o, s);
          }
          c((i = i.apply(e, t || [])).next());
        });
      };
    class ut extends HTMLElement {
      constructor() {
        super();
      }
      connectedCallback() {
        const e = document.createElement('div');
        e.setAttribute('style', 'display:inline;'),
          this.attachShadow({ mode: 'open' }),
          this.shadowRoot.appendChild(e),
          (this.viewer = new st(this.shadowRoot, this));
      }
      disconnectedCallback() {
        this.viewer.renderer && this.viewer.renderer.dispose();
      }
      isReady() {
        var e;
        return (
          !this.viewer.params.autoLoad ||
          (null === (e = this.viewer.renderer) || void 0 === e
            ? void 0
            : e.isReady)
        );
      }
      load() {
        return ct(this, void 0, void 0, function* () {
          return this.viewer.load();
        });
      }
      getObjects() {
        return this.viewer.renderer.core.getObjects();
      }
      getHitObjects(e) {
        return this.viewer.renderer.core.getHitObjects(e);
      }
      get2DCoordinates(e) {
        return this.viewer.renderer.core.get2DCoordinates(e);
      }
      getObjectsByName(e) {
        return this.viewer.renderer.core.getObjectsByName(e);
      }
      getObjectByName(e) {
        return this.viewer.renderer.core.getObjectByName(e);
      }
      getMeshes() {
        return this.viewer.renderer.core.getMeshes();
      }
      getMeshesByName(e) {
        return this.viewer.renderer.core.getMeshesByName(e);
      }
      getMeshByName(e) {
        return this.viewer.renderer.core.getMeshByName(e);
      }
      getVisibility(e) {
        return this.viewer.renderer.core.getVisibility(e);
      }
      setVisibility(e, t, n) {
        return this.viewer.renderer.core.setVisibility(e, t, n);
      }
      getPosition(e) {
        return this.viewer.renderer.core.getPosition(e);
      }
      setPositionRelative(e, t) {
        return this.viewer.renderer.core.setPositionRelative(e, t);
      }
      setPositionAbsolute(e, t) {
        return this.viewer.renderer.core.setPositionAbsolute(e, t);
      }
      getRotation(e) {
        return this.viewer.renderer.core.getRotation(e);
      }
      setRotationRelative(e, t, n) {
        return this.viewer.renderer.core.setRotationRelative(e, t, n);
      }
      setRotationAbsolute(e, t, n) {
        return this.viewer.renderer.core.setRotationAbsolute(e, t, n);
      }
      getScale(e) {
        return this.viewer.renderer.core.getScale(e);
      }
      setScaleRelative(e, t) {
        return this.viewer.renderer.core.setScaleRelative(e, t);
      }
      setScaleAbsolute(e, t) {
        return this.viewer.renderer.core.setScaleAbsolute(e, t);
      }
      getMaterials() {
        return this.viewer.renderer.core.getMaterials();
      }
      getMaterialsByName(e) {
        return this.viewer.renderer.core.getMaterialsByName(e);
      }
      getMaterialByName(e) {
        return this.viewer.renderer.core.getMaterialByName(e);
      }
      getMaterialProperties(e) {
        return this.viewer.renderer.core.getMaterialProperties(e);
      }
      createMaterial(e, t) {
        return this.viewer.renderer.core.createMaterial(e, t);
      }
      updateMaterial(e, t, n) {
        return this.viewer.renderer.core.updateMaterial(e, t, n);
      }
      setMaterial(e, t) {
        return this.viewer.renderer.core.setMaterial(e, t);
      }
      getBackground() {
        return this.viewer.renderer.core.getBackground();
      }
      setBackground(e) {
        return this.viewer.renderer.core.setBackground(e);
      }
      getExposure() {
        return this.viewer.renderer.core.getExposure();
      }
      setExposure(e) {
        return this.viewer.renderer.core.setExposure(e);
      }
      getCameras() {
        return this.viewer.renderer.core.getCameras();
      }
      getCamerasByName(e) {
        return this.viewer.renderer.core.getCamerasByName(e);
      }
      getCameraByName(e) {
        return this.viewer.renderer.core.getCameraByName(e);
      }
      switchView(e) {
        return this.viewer.renderer.core.switchView(e);
      }
      switchViewAsync(e) {
        return this.viewer.renderer.core.switchViewsAsync(e);
      }
      moveView(e) {
        return this.viewer.renderer.core.moveView(e);
      }
      rotateView(e) {
        return this.viewer.renderer.core.rotateView(e);
      }
      zoomView(e) {
        return this.viewer.renderer.core.zoomView(e);
      }
      getFOV() {
        return this.viewer.renderer.core.getFOV();
      }
      setFOV(e) {
        return this.viewer.renderer.core.setFOV(e);
      }
      getViewState() {
        return this.viewer.renderer.core.getViewState();
      }
      applyViewState(e) {
        return this.viewer.renderer.core.applyViewState(e);
      }
      takeScreenshot(e = 1, t) {
        return this.viewer.renderer.core.takeScreenshot(e, t);
      }
      enableAnnotations(e = !0) {
        return this.viewer.renderer.core.enableAnnotations(e);
      }
      getAnnotations() {
        return this.viewer.renderer.core.getAnnotations();
      }
      getAnnotationById(e) {
        return this.viewer.renderer.core.getAnnotationById(e);
      }
      addAnnotation(e) {
        return this.viewer.renderer.core.addAnnotation(e);
      }
      removeAnnotationById(e) {
        return this.viewer.renderer.core.removeAnnotationById(e);
      }
      expandAnnotationsById(e, t, n) {
        return this.viewer.renderer.core.expandAnnotationsById(e, t, n);
      }
      highlightMeshesByName(e, t, n, i) {
        return this.viewer.renderer.core.highlightMeshesByName(e, t, n, i);
      }
      unhighlightMeshesByName(e) {
        return this.viewer.renderer.core.unhighlightMeshesByName(e);
      }
      play(e, t) {
        return this.viewer.renderer.core.play(e, t);
      }
      setUUIDAr(e) {
        return this.viewer.setUUIDAr(e);
      }
      triggerARClick() {
        return this.viewer.ui.triggerARClick();
      }
      getCurrentUser() {
        return 'unsupported operation';
      }
      didRenderLastFrame() {
        return this.viewer.renderer.didRenderLastFrame();
      }
      sendEvent(e, t, n, i, r) {
        return this.viewer.renderer.core.sendEvent(e, t, n, i, r);
      }
    }
    function lt() {
      i, document.getElementsByTagName('vctr-viewer').length > 0 ? ht() : dt();
    }
    function dt() {
      (document.body.innerHTML = `<style>${a}</style>${r}`), new st(document);
    }
    function ht() {
      try {
        customElements.define('vctr-viewer', ut);
      } catch (e) {
        throw (
          `${e.message}: This browser does not support webComponents by default\n` +
          `You need to add '<script src="https://unpkg.com/@webcomponents/webcomponentsjs@2.4.2/webcomponents-loader.js"><\/script>' to the head of the document`
        );
      }
    }
    lt();
  },
  0: function (e, t) {},
  1: function (e, t) {},
});
