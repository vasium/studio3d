{"version":3,"sources":["Components/Configurator.js","App.js","serviceWorker.js","index.js"],"names":["Configurator","theModel","LOADER","document","getElementById","TRAY","DRAG_NOTICE","canvas","querySelector","activeOption","loaded","colors","texture","size","shininess","color","scene","THREE","background","fog","renderer","antialias","shadowMap","enabled","setPixelRatio","window","devicePixelRatio","body","appendChild","domElement","camera","innerWidth","innerHeight","position","z","x","INITIAL_MTL","INITIAL_MAP","childID","mtl","initColor","parent","type","traverse","o","isMesh","name","includes","material","nameID","GLTFLoader","load","gltf","castShadow","receiveShadow","scale","set","rotation","y","Math","PI","object","add","remove","undefined","error","console","hemiLight","dirLight","shadow","mapSize","controls","OrbitControls","maxPolarAngle","minPolarAngle","enableDamping","enablePan","dampingFactor","autoRotate","autoRotateSpeed","animate","update","render","requestAnimationFrame","width","height","canvasPixelWidth","canvasPixelHeight","needResize","setSize","resizeRendererToDisplaySize","aspect","clientWidth","clientHeight","updateProjectionMatrix","initRotate","classList","entries","i","swatch","createElement","style","backgroundImage","setAttribute","append","buildColors","options","querySelectorAll","addEventListener","selectOption","e","option","target","dataset","gltfExporter","GLTFExporter","parse","result","ArrayBuffer","filename","save","Blob","log","output","JSON","stringify","trs","onlyVisible","truncateDrawRange","binary","forcePowerOfTwoTextures","maxTextureSize","exportGLTF","swatches","selectSwatch","new_mtl","parseInt","key","txt","repeat","wrapS","wrapT","map","difference","slider","sliderItems","wrapper","items","posInitial","posFinal","posX1","posX2","dragStart","event","offsetLeft","offsetWidth","touches","clientX","onmouseup","dragEnd","onmousemove","dragAction","left","getElementsByClassName","onmousedown","slide","link","blob","URL","createObjectURL","finalBlob","href","encodeURIComponent","click","display","App","className","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.bd8fb494.chunk.js","sourcesContent":["import React from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { GLTFExporter } from 'three/examples/jsm/exporters/GLTFExporter.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\nfunction Configurator() {\n  // === THREE.JS CODE START ===\n  const LOADER = document.getElementById('js-loader');\n  const TRAY = document.getElementById('js-tray-slide');\n  const DRAG_NOTICE = document.getElementById('js-drag-notice');\n  const MODEL_PATH = 'chair_maya.glb';\n  const BACKGROUND_COLOR = 0xf1f1f1;\n  const canvas = document.querySelector('#c');\n  const gltfModel = 'chair.gltf';\n\n  var theModel;\n  var activeOption = 'Metal';\n  var loaded = false;\n\n  const colors = [\n    {\n      texture: 'img/wood_.jpg',\n      size: [2, 2, 2],\n      shininess: 60,\n    },\n    {\n      texture: 'img/leather_Base_color.jpg',\n      size: [1, 1, 1],\n      shininess: 60,\n    },\n\n    {\n      texture: 'img/fabric_.jpg',\n      size: [4, 4, 4],\n      shininess: 0,\n    },\n\n    {\n      texture: 'img/pattern_.jpg',\n      size: [8, 8, 8],\n      shininess: 10,\n    },\n\n    {\n      texture: 'img/denim_.jpg',\n      size: [3, 3, 3],\n      shininess: 0,\n    },\n\n    {\n      texture: 'img/quilt_.jpg',\n      size: [6, 6, 6],\n      shininess: 0,\n    },\n\n    {\n      color: '131417',\n    },\n\n    {\n      color: '374047',\n    },\n\n    {\n      color: '5f6e78',\n    },\n\n    {\n      color: '7f8a93',\n    },\n\n    {\n      color: '97a1a7',\n    },\n\n    {\n      color: 'acb4b9',\n    },\n\n    {\n      color: 'DF9998',\n    },\n\n    {\n      color: '7C6862',\n    },\n\n    {\n      color: 'A3AB84',\n    },\n\n    {\n      color: 'D6CCB1',\n    },\n\n    {\n      color: 'F8D5C4',\n    },\n\n    {\n      color: 'A3AE99',\n    },\n\n    {\n      color: 'EFF2F2',\n    },\n\n    {\n      color: 'B0C5C1',\n    },\n\n    {\n      color: '8B8C8C',\n    },\n\n    {\n      color: '565F59',\n    },\n\n    {\n      color: 'CB304A',\n    },\n\n    {\n      color: 'FED7C8',\n    },\n\n    {\n      color: 'C7BDBD',\n    },\n\n    {\n      color: '3DCBBE',\n    },\n\n    {\n      color: '264B4F',\n    },\n\n    {\n      color: '389389',\n    },\n\n    {\n      color: '85BEAE',\n    },\n\n    {\n      color: 'F2DABA',\n    },\n\n    {\n      color: 'F2A97F',\n    },\n\n    {\n      color: 'D85F52',\n    },\n\n    {\n      color: 'D92E37',\n    },\n\n    {\n      color: 'FC9736',\n    },\n\n    {\n      color: 'F7BD69',\n    },\n\n    {\n      color: 'A4D09C',\n    },\n\n    {\n      color: '4C8A67',\n    },\n\n    {\n      color: '25608A',\n    },\n\n    {\n      color: '75C8C6',\n    },\n\n    {\n      color: 'F5E4B7',\n    },\n\n    {\n      color: 'E69041',\n    },\n\n    {\n      color: 'E56013',\n    },\n\n    {\n      color: '11101D',\n    },\n\n    {\n      color: '630609',\n    },\n\n    {\n      color: 'C9240E',\n    },\n\n    {\n      color: 'EC4B17',\n    },\n\n    {\n      color: '281A1C',\n    },\n\n    {\n      color: '4F556F',\n    },\n\n    {\n      color: '64739B',\n    },\n\n    {\n      color: 'CDBAC7',\n    },\n\n    {\n      color: '946F43',\n    },\n\n    {\n      color: '66533C',\n    },\n\n    {\n      color: '173A2F',\n    },\n\n    {\n      color: '153944',\n    },\n\n    {\n      color: '27548D',\n    },\n\n    {\n      color: '438AAC',\n    },\n  ];\n\n  // Init the scene\n  const scene = new THREE.Scene();\n\n  // Set background\n  scene.background = new THREE.Color(BACKGROUND_COLOR);\n  scene.fog = new THREE.Fog(BACKGROUND_COLOR, 20, 100);\n\n  // Init the renderer\n  const renderer = new THREE.WebGLRenderer({ canvas, antialias: true });\n\n  renderer.shadowMap.enabled = true;\n  renderer.setPixelRatio(window.devicePixelRatio);\n\n  var cameraFar = 5;\n\n  document.body.appendChild(renderer.domElement);\n\n  // Add a camerra\n  var camera = new THREE.PerspectiveCamera(\n    50,\n    window.innerWidth / window.innerHeight,\n    0.1,\n    1000\n  );\n  camera.position.z = cameraFar;\n  camera.position.x = 0;\n\n  // Initial material\n  const INITIAL_MTL = new THREE.MeshPhongMaterial({\n    color: 0xf1f1f1,\n    shininess: 10,\n  });\n\n  const INITIAL_MAP = [\n    { childID: 'Metal', mtl: INITIAL_MTL },\n    { childID: 'Pillow', mtl: INITIAL_MTL },\n    { childID: 'Wood', mtl: INITIAL_MTL },\n  ];\n\n  // Init the object loader\n  var loader = new GLTFLoader();\n\n  loader.load(\n    MODEL_PATH,\n    function (gltf) {\n      theModel = gltf.scene;\n\n      theModel.traverse((o) => {\n        if (o.isMesh) {\n          o.castShadow = true;\n          o.receiveShadow = true;\n        }\n      });\n\n      // Set the models initial scale\n      theModel.scale.set(3, 3, 3);\n      theModel.rotation.y = Math.PI;\n\n      // Offset the y position a bit\n      theModel.position.y = -1;\n\n      // Set initial textures\n      for (let object of INITIAL_MAP) {\n        initColor(theModel, object.childID, object.mtl);\n      }\n\n      // Add the model to the scene\n      scene.add(theModel);\n\n      // Remove the loader\n      LOADER.remove();\n    },\n    undefined,\n    function (error) {\n      console.error(error);\n    }\n  );\n\n  // Function - Add the textures to the models\n  function initColor(parent, type, mtl) {\n    parent.traverse((o) => {\n      if (o.isMesh) {\n        if (o.name.includes(type)) {\n          o.material = mtl;\n          o.nameID = type; // Set a new property to identify this object\n        }\n      }\n    });\n  }\n\n  // Add lights\n  var hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.61);\n  hemiLight.position.set(0, 50, 0);\n  // Add hemisphere light to scene\n  scene.add(hemiLight);\n\n  var dirLight = new THREE.DirectionalLight(0xffffff, 0.54);\n  dirLight.position.set(-8, 12, 8);\n  dirLight.castShadow = true;\n  dirLight.shadow.mapSize = new THREE.Vector2(4096, 4096);\n  // Add directional Light to scene\n  scene.add(dirLight);\n\n  // // Floor\n  // var floorGeometry = new THREE.PlaneGeometry(5000, 5000, 1, 1);\n  // var floorMaterial = new THREE.MeshPhongMaterial({\n  //   color: 0xeeeeee,\n  //   shininess: 0,\n  // });\n\n  // var floor = new THREE.Mesh(floorGeometry, floorMaterial);\n  // floor.rotation.x = -0.5 * Math.PI;\n  // floor.receiveShadow = true;\n  // floor.position.y = -1;\n  // scene.add(floor);\n\n  // Add controls\n  var controls = new OrbitControls(camera, renderer.domElement);\n  controls.maxPolarAngle = Math.PI / 2;\n  controls.minPolarAngle = Math.PI / 3;\n  controls.enableDamping = true;\n  controls.enablePan = false;\n  controls.dampingFactor = 0.1;\n  controls.autoRotate = false; // Toggle this if you'd like the chair to automatically rotate\n  controls.autoRotateSpeed = 0.2; // 30\n\n  function animate() {\n    controls.update();\n    renderer.render(scene, camera);\n    requestAnimationFrame(animate);\n\n    if (resizeRendererToDisplaySize(renderer)) {\n      const canvas = renderer.domElement;\n      camera.aspect = canvas.clientWidth / canvas.clientHeight;\n      camera.updateProjectionMatrix();\n    }\n\n    if (theModel != null && loaded == false) {\n      initialRotation();\n      DRAG_NOTICE.classList.add('start');\n    }\n  }\n\n  animate();\n\n  // Function - New resizing method\n  function resizeRendererToDisplaySize(renderer) {\n    const canvas = renderer.domElement;\n    var width = window.innerWidth;\n    var height = window.innerHeight;\n    var canvasPixelWidth = canvas.width / window.devicePixelRatio;\n    var canvasPixelHeight = canvas.height / window.devicePixelRatio;\n\n    const needResize =\n      canvasPixelWidth !== width || canvasPixelHeight !== height;\n    if (needResize) {\n      renderer.setSize(width, height, false);\n    }\n    return needResize;\n  }\n\n  // Function - Build Colors\n\n  function buildColors(colors) {\n    for (let [i, color] of colors.entries()) {\n      let swatch = document.createElement('div');\n      swatch.classList.add('tray__swatch');\n\n      if (color.texture) {\n        swatch.style.backgroundImage = 'url(' + color.texture + ')';\n      } else {\n        swatch.style.background = '#' + color.color;\n      }\n\n      swatch.setAttribute('data-key', i);\n      TRAY.append(swatch);\n    }\n  }\n\n  buildColors(colors);\n\n  // Select Option\n  const options = document.querySelectorAll('.option');\n\n  for (const option of options) {\n    option.addEventListener('click', selectOption);\n  }\n\n  function selectOption(e) {\n    // console.log(e);\n    let option = e.target;\n    activeOption = e.target.dataset.option;\n    if (activeOption == 'Export') {\n      exportGLTF();\n    } else {\n      for (const otherOption of options) {\n        otherOption.classList.remove('--is-active');\n      }\n      option.classList.add('--is-active');\n    }\n  }\n\n  // Swatches\n  const swatches = document.querySelectorAll('.tray__swatch');\n\n  for (const swatch of swatches) {\n    swatch.addEventListener('click', selectSwatch);\n  }\n\n  function selectSwatch(e) {\n    let color = colors[parseInt(e.target.dataset.key)];\n    let new_mtl;\n\n    if (color.texture) {\n      let txt = new THREE.TextureLoader().load(color.texture);\n\n      txt.repeat.set(color.size[0], color.size[1], color.size[2]);\n      txt.wrapS = THREE.RepeatWrapping;\n      txt.wrapT = THREE.RepeatWrapping;\n\n      new_mtl = new THREE.MeshPhongMaterial({\n        map: txt,\n        shininess: color.shininess ? color.shininess : 10,\n      });\n    } else {\n      new_mtl = new THREE.MeshPhongMaterial({\n        color: parseInt('0x' + color.color),\n        shininess: color.shininess ? color.shininess : 10,\n      });\n    }\n\n    setMaterial(theModel, activeOption, new_mtl);\n  }\n\n  function setMaterial(parent, type, mtl) {\n    parent.traverse((o) => {\n      if (o.isMesh && o.nameID != null) {\n        if (o.nameID == type) {\n          o.material = mtl;\n        }\n      }\n    });\n  }\n\n  // Function - Opening rotate\n  let initRotate = 0;\n\n  function initialRotation() {\n    initRotate++;\n    if (initRotate <= 120) {\n      theModel.rotation.y += Math.PI / 60;\n    } else {\n      loaded = true;\n    }\n  }\n\n  // Slider\n  var slider = document.getElementById('js-tray'),\n    sliderItems = document.getElementById('js-tray-slide'),\n    difference;\n\n  function slide(wrapper, items) {\n    var posX1 = 0,\n      posX2 = 0,\n      posInitial,\n      threshold = 20,\n      posFinal,\n      slides = items.getElementsByClassName('tray__swatch');\n\n    // Mouse events\n    items.onmousedown = dragStart;\n\n    // Touch events\n    items.addEventListener('touchstart', dragStart);\n    items.addEventListener('touchend', dragEnd);\n    items.addEventListener('touchmove', dragAction);\n\n    function dragStart(e) {\n      e = e || window.event;\n      posInitial = items.offsetLeft;\n      difference = sliderItems.offsetWidth - slider.offsetWidth;\n      difference = difference * -1;\n\n      if (e.type == 'touchstart') {\n        posX1 = e.touches[0].clientX;\n      } else {\n        posX1 = e.clientX;\n        document.onmouseup = dragEnd;\n        document.onmousemove = dragAction;\n      }\n    }\n\n    function dragAction(e) {\n      e = e || window.event;\n\n      if (e.type == 'touchmove') {\n        posX2 = posX1 - e.touches[0].clientX;\n        posX1 = e.touches[0].clientX;\n      } else {\n        posX2 = posX1 - e.clientX;\n        posX1 = e.clientX;\n      }\n\n      if (\n        items.offsetLeft - posX2 <= 0 &&\n        items.offsetLeft - posX2 >= difference\n      ) {\n        items.style.left = items.offsetLeft - posX2 + 'px';\n      }\n    }\n\n    function dragEnd(e) {\n      posFinal = items.offsetLeft;\n      if (posFinal - posInitial < -threshold) {\n      } else if (posFinal - posInitial > threshold) {\n      } else {\n        items.style.left = posInitial + 'px';\n      }\n\n      document.onmouseup = null;\n      document.onmousemove = null;\n    }\n  }\n\n  slide(slider, sliderItems);\n\n  // document\n  //   .getElementById('export_object')\n  //   .addEventListener('click', function () {\n  //     exportGLTF();\n  //   });\n\n  // const exportLink = document.getElementById('Export');\n  // const exportBlob = new Blob(['Hello', 'Download'], { type: 'text/plain' });\n  // // exportLink.href = URL.createObjectURL(exportBlob);\n  // console.log('Hi' + exportLink);\n  // console.log(exportBlob);\n\n  function exportGLTF() {\n    var gltfExporter = new GLTFExporter();\n\n    var options = {\n      trs: true,\n      onlyVisible: true,\n      truncateDrawRange: true,\n      binary: true,\n      forcePowerOfTwoTextures: true,\n      maxTextureSize: 4096 || Infinity, // To prevent NaN value\n    };\n\n    gltfExporter.parse(\n      // loadedModel,\n      scene,\n      function (result) {\n        if (result instanceof ArrayBuffer) {\n          saveArrayBuffer(result, 'scene.glb');\n        } else {\n          var obj = { name: 'John', age: 30, city: 'New York' };\n          console.log('result: ' + result + obj.name);\n          var output = JSON.stringify(result, null, 2);\n          // console.log(scene);\n          // console.log('output: ' + output);\n\n          // saveString(output, 'scene.gltf');\n          save(new Blob([output], { type: 'text/plain' }), 'scene.gltf');\n\n          //          // your axios call here\n          //    localStorage.setItem(\"pageData\", \"Data Retrieved from axios request\")\n          //    // route to new page by changing window.location\n          //    window.open(newPageUrl, \"_blank\") //to open new page\n\n          // <a href=\"intent://arvr.google.com/scene-viewer/1.0?\n          // file=https://raw.githubusercontent.com/KhronosGroup/glTF-Sample-Models/master/2.0/Avocado/glTF/Avocado.gltf\n          // #Intent;scheme=https;package=com.google.android.googlequicksearchbox;action=android.intent.action.VIEW;S.browser_fallback_url=https://developers.google.com/ar;end;\">Avocado</a>\n        }\n      },\n      options\n    );\n  }\n  var link = document.createElement('a');\n  link.style.display = 'none';\n  document.body.appendChild(link);\n\n  // document.body.appendChild(link); // Firefox workaround, see #6594\n\n  function save(blob, filename) {\n    // link.href = URL.createObjectURL(blob);\n    // link.download = filename;\n    // link.click();\n\n    var theBLob = URL.createObjectURL(blob);\n    var finalBlob = URL.createObjectURL(blob) + '.gltf';\n\n    link.href =\n      'intent://arvr.google.com/scene-viewer/1.1?file=' +\n      encodeURIComponent(finalBlob) +\n      '&mode=ar_only#Intent;scheme=https;package=com.google.ar.core;action=android.intent.action.VIEW;end';\n\n    link.click();\n\n    // link.href = URL.createObjectURL(blob);\n    // link.href = 'https://www.google.com';\n    // link.href =\n    //   'intent://arvr.google.com/scene-viewer/1.1?file=' +\n    //   encodedUrl +\n    //   '&mode=ar_only#Intent;scheme=https;package=com.google.ar.core;action=android.intent.action.VIEW;end';\n\n    // console.log('blob: ' + blob);\n    // var theBLob = URL.createObjectURL(blob);\n    // var loadedBlob = fetch(theBLob);\n    // var savedFileUrl = theBLob + filename;\n    // console.log('savedFileUrl: ' + savedFileUrl);\n\n    // var encodedUrl = encodeURIComponent(savedFileUrl);\n\n    // console.log('encodedUrl: ' + encodedUrl);\n\n    // link.href = theBLob;\n    // // 'intent://arvr.google.com/scene-viewer/1.1?file=' +\n    // // encodedUrl +\n    // // '&mode=ar_only#Intent;scheme=https;package=com.google.ar.core;action=android.intent.action.VIEW;end;';\n\n    // // link.download = filename;\n    // console.log('link: ' + link);\n    // console.log('link.hreff: ' + link.href);\n\n    // // var url = 'http://localhost/' + encodeURIComponent(link.download);\n    // // console.log(url);\n\n    // link.click();\n\n    // // URL.revokeObjectURL( url ); breaks Firefox...\n  }\n\n  // function saveString(text, filename) {\n  //   save(new Blob([text], { type: 'text/plain' }), filename);\n  // }\n\n  function saveArrayBuffer(buffer, filename) {\n    save(new Blob([buffer], { type: 'application/octet-stream' }), filename);\n  }\n\n  // === THREE.JS EXAMPLE CODE END ===\n\n  return <div>{/* <h1>Heloooooo</h1> */}</div>;\n}\n\nexport default Configurator;\n\n// intent://arvr.google.com/scene-viewer/1.1?file=blob%3Ahttp%3A%2F%2Flocalhost%3A3000%2F06e8406a-c76e-4247-8277-2006104c93e0scene.gltf&mode=ar_only#Intent;scheme=https;package=com.google.ar.core;action=android.intent.action.VIEW;end\n// intent://arvr.google.com/scene-viewer/1.1?file=blob:http://localhost:3000/5d96356e-295a-49c6-87b9-e314a5a92653&mode=ar_only#Intent;scheme=https;package=com.google.ar.core;action=android.intent.action.VIEW;end\n","import React from 'react';\nimport './App.css';\nimport Configurator from './Components/Configurator';\nimport Home from './Components/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Home /> */}\n      <Configurator />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}